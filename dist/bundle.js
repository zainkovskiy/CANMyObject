(()=>{"use strict";var __webpack_modules__={804:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(294);\nvar react_namespaceObject = /*#__PURE__*/__webpack_require__.t(react, 2);\n// EXTERNAL MODULE: ./node_modules/react-dom/client.js\nvar client = __webpack_require__(745);\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i["return"] != null) _i["return"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\nfunction _nonIterableRest() {\n  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nfunction extends_extends() {\n  extends_extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return extends_extends.apply(this, arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/clsx/dist/clsx.m.js\nfunction toVal(mix) {\n\tvar k, y, str=\'\';\n\n\tif (typeof mix === \'string\' || typeof mix === \'number\') {\n\t\tstr += mix;\n\t} else if (typeof mix === \'object\') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += \' \');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += \' \');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/* harmony default export */ function clsx_m() {\n\tvar i=0, tmp, x, str=\'\';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += \' \');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/resolveProps.js\n\n\n/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param {object} defaultProps\n * @param {object} props\n * @returns {object} resolved props\n */\nfunction resolveProps(defaultProps, props) {\n  const output = extends_extends({}, props);\n\n  Object.keys(defaultProps).forEach(propName => {\n    if (output[propName] === undefined) {\n      output[propName] = defaultProps[propName];\n    }\n  });\n  return output;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/composeClasses/composeClasses.js\nfunction composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can\'t be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n\n        acc.push(getUtilityClass(key));\n      }\n\n      return acc;\n    }, []).join(\' \');\n  });\n  return output;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/formatMuiErrorMessage.js\n/**\n * WARNING: Don\'t import this directly.\n * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.\n * @param {number} code\n */\nfunction formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe iff we\'re concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n\n  /* eslint-disable prefer-template */\n  let url = \'https://mui.com/production-error/?code=\' + code;\n\n  for (let i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += \'&args[]=\' + encodeURIComponent(arguments[i]);\n  }\n\n  return \'Minified MUI error #\' + code + \'; visit \' + url + \' for the full message.\';\n  /* eslint-enable prefer-template */\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/colorManipulator.js\n\n\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value, min = 0, max = 1) {\n  if (false) {}\n\n  return Math.min(Math.max(min, value), max);\n}\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\n\n\nfunction hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, \'g\');\n  let colors = color.match(re);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n\n  return colors ? `rgb${colors.length === 4 ? \'a\' : \'\'}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(\', \')})` : \'\';\n}\n\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\n\n\nfunction decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n\n  if (color.charAt(0) === \'#\') {\n    return decomposeColor(hexToRgb(color));\n  }\n\n  const marker = color.indexOf(\'(\');\n  const type = color.substring(0, marker);\n\n  if ([\'rgb\', \'rgba\', \'hsl\', \'hsla\', \'color\'].indexOf(type) === -1) {\n    throw new Error( false ? 0 : formatMuiErrorMessage(9, color));\n  }\n\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n\n  if (type === \'color\') {\n    values = values.split(\' \');\n    colorSpace = values.shift();\n\n    if (values.length === 4 && values[3].charAt(0) === \'/\') {\n      values[3] = values[3].slice(1);\n    }\n\n    if ([\'srgb\', \'display-p3\', \'a98-rgb\', \'prophoto-rgb\', \'rec-2020\'].indexOf(colorSpace) === -1) {\n      throw new Error( false ? 0 : formatMuiErrorMessage(10, colorSpace));\n    }\n  } else {\n    values = values.split(\',\');\n  }\n\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\n\nconst colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf(\'hsl\') !== -1 && idx !== 0 ? `${val}%` : val).join(\' \');\n};\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: \'rgb\', \'rgba\', \'hsl\', \'hsla\', \'color\'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\n\nfunction recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n\n  if (type.indexOf(\'rgb\') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf(\'hsl\') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n\n  if (type.indexOf(\'color\') !== -1) {\n    values = `${colorSpace} ${values.join(\' \')}`;\n  } else {\n    values = `${values.join(\', \')}`;\n  }\n\n  return `${type}(${values})`;\n}\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\n\nfunction rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf(\'#\') === 0) {\n    return color;\n  }\n\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join(\'\')}`;\n}\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\n\nfunction hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\n  let type = \'rgb\';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n\n  if (color.type === \'hsla\') {\n    type += \'a\';\n    rgb.push(values[3]);\n  }\n\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\n\nfunction getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === \'hsl\' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== \'color\') {\n      val /= 255; // normalized\n    }\n\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  }); // Truncate at 3 digits\n\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\n\nfunction getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nfunction alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n\n  if (color.type === \'rgb\' || color.type === \'hsl\') {\n    color.type += \'a\';\n  }\n\n  if (color.type === \'color\') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nfunction darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf(\'hsl\') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf(\'rgb\') !== -1 || color.type.indexOf(\'color\') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nfunction lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf(\'hsl\') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf(\'rgb\') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf(\'color\') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nfunction emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\n;// CONCATENATED MODULE: ./node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js\nfunction memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ const emotion_memoize_browser_esm = (memoize);\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js\n\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */emotion_memoize_browser_esm(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\n/* harmony default export */ const emotion_is_prop_valid_browser_esm = (isPropValid);\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js\n/*\n\nBased off glamor\'s StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from \'@emotion/sheet\'\n\nlet styleSheet = new StyleSheet({ key: \'\', container: document.head })\n\nstyleSheet.insert(\'#box { border: 1px solid red; }\')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement(\'style\');\n  tag.setAttribute(\'data-emotion\', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute(\'nonce\', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(\'\'));\n  tag.setAttribute(\'data-s\', \'\');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? "production" === \'production\' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it\'s used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it\'s 65000 in speedy mode\n    // it\'s 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (false) { var isImportRule; }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won\'t be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (false) {}\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode && tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    if (false) {}\n  };\n\n  return StyleSheet;\n}();\n\n\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Utility.js\n/**\n * @param {number}\n * @return {number}\n */\nvar abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nvar Utility_from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nvar Utility_assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nfunction hash (value, length) {\n\treturn (((((((length << 2) ^ Utility_charat(value, 0)) << 2) ^ Utility_charat(value, 1)) << 2) ^ Utility_charat(value, 2)) << 2) ^ Utility_charat(value, 3)\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nfunction trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nfunction match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nfunction replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nfunction indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nfunction Utility_charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nfunction Utility_substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nfunction Utility_strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nfunction Utility_sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nfunction Utility_append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nfunction Utility_combine (array, callback) {\n\treturn array.map(callback).join(\'\')\n}\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Tokenizer.js\n\n\nvar line = 1\nvar column = 1\nvar Tokenizer_length = 0\nvar position = 0\nvar character = 0\nvar characters = \'\'\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nfunction node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: \'\'}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nfunction copy (root, props) {\n\treturn Utility_assign(node(\'\', null, null, \'\', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nfunction Tokenizer_char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nfunction prev () {\n\tcharacter = position > 0 ? Utility_charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nfunction next () {\n\tcharacter = position < Tokenizer_length ? Utility_charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nfunction peek () {\n\treturn Utility_charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nfunction caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nfunction slice (begin, end) {\n\treturn Utility_substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nfunction token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// " \' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nfunction alloc (value) {\n\treturn line = column = 1, Tokenizer_length = Utility_strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nfunction dealloc (value) {\n\treturn characters = \'\', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nfunction delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nfunction Tokenizer_tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nfunction whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? \'\' : \' \'\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nfunction tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nfunction escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nfunction delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) " \'\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// " \'\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nfunction commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn \'/*\' + slice(index, position - 1) + \'*\' + Utility_from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nfunction identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Enum.js\nvar MS = \'-ms-\'\nvar MOZ = \'-moz-\'\nvar WEBKIT = \'-webkit-\'\n\nvar COMMENT = \'comm\'\nvar Enum_RULESET = \'rule\'\nvar DECLARATION = \'decl\'\n\nvar PAGE = \'@page\'\nvar MEDIA = \'@media\'\nvar IMPORT = \'@import\'\nvar CHARSET = \'@charset\'\nvar VIEWPORT = \'@viewport\'\nvar SUPPORTS = \'@supports\'\nvar DOCUMENT = \'@document\'\nvar NAMESPACE = \'@namespace\'\nvar KEYFRAMES = \'@keyframes\'\nvar FONT_FACE = \'@font-face\'\nvar COUNTER_STYLE = \'@counter-style\'\nvar FONT_FEATURE_VALUES = \'@font-feature-values\'\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Serializer.js\n\n\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nfunction serialize (children, callback) {\n\tvar output = \'\'\n\tvar length = Utility_sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || \'\'\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nfunction stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return \'\'\n\t\tcase KEYFRAMES: return element.return = element.value + \'{\' + serialize(element.children, callback) + \'}\'\n\t\tcase Enum_RULESET: element.value = element.props.join(\',\')\n\t}\n\n\treturn Utility_strlen(children = serialize(element.children, callback)) ? element.return = element.value + \'{\' + children + \'}\' : \'\'\n}\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Prefixer.js\n\n\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {string}\n */\nfunction prefix (value, length) {\n\tswitch (hash(value, length)) {\n\t\t// color-adjust\n\t\tcase 5103:\n\t\t\treturn WEBKIT + \'print-\' + value + value\n\t\t// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\t\tcase 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:\n\t\t// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\t\tcase 5572: case 6356: case 5844: case 3191: case 6645: case 3005:\n\t\t// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\t\tcase 6391: case 5879: case 5623: case 6135: case 4599: case 4855:\n\t\t// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\t\tcase 4215: case 6389: case 5109: case 5365: case 5621: case 3829:\n\t\t\treturn WEBKIT + value + value\n\t\t// appearance, user-select, transform, hyphens, text-size-adjust\n\t\tcase 5349: case 4246: case 4810: case 6968: case 2756:\n\t\t\treturn WEBKIT + value + MOZ + value + MS + value + value\n\t\t// flex, flex-direction\n\t\tcase 6828: case 4268:\n\t\t\treturn WEBKIT + value + MS + value + value\n\t\t// order\n\t\tcase 6165:\n\t\t\treturn WEBKIT + value + MS + \'flex-\' + value + value\n\t\t// align-items\n\t\tcase 5187:\n\t\t\treturn WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + \'box-$1$2\' + MS + \'flex-$1$2\') + value\n\t\t// align-self\n\t\tcase 5443:\n\t\t\treturn WEBKIT + value + MS + \'flex-item-\' + replace(value, /flex-|-self/, \'\') + value\n\t\t// align-content\n\t\tcase 4675:\n\t\t\treturn WEBKIT + value + MS + \'flex-line-pack\' + replace(value, /align-content|flex-|-self/, \'\') + value\n\t\t// flex-shrink\n\t\tcase 5548:\n\t\t\treturn WEBKIT + value + MS + replace(value, \'shrink\', \'negative\') + value\n\t\t// flex-basis\n\t\tcase 5292:\n\t\t\treturn WEBKIT + value + MS + replace(value, \'basis\', \'preferred-size\') + value\n\t\t// flex-grow\n\t\tcase 6060:\n\t\t\treturn WEBKIT + \'box-\' + replace(value, \'-grow\', \'\') + WEBKIT + value + MS + replace(value, \'grow\', \'positive\') + value\n\t\t// transition\n\t\tcase 4554:\n\t\t\treturn WEBKIT + replace(value, /([^-])(transform)/g, \'$1\' + WEBKIT + \'$2\') + value\n\t\t// cursor\n\t\tcase 6187:\n\t\t\treturn replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + \'$1\'), /(image-set)/, WEBKIT + \'$1\'), value, \'\') + value\n\t\t// background, background-image\n\t\tcase 5495: case 3959:\n\t\t\treturn replace(value, /(image-set\\([^]*)/, WEBKIT + \'$1\' + \'$`$1\')\n\t\t// justify-content\n\t\tcase 4968:\n\t\t\treturn replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + \'box-pack:$3\' + MS + \'flex-pack:$3\'), /s.+-b[^;]+/, \'justify\') + WEBKIT + value + value\n\t\t// (margin|padding)-inline-(start|end)\n\t\tcase 4095: case 3583: case 4068: case 2532:\n\t\t\treturn replace(value, /(.+)-inline(.+)/, WEBKIT + \'$1$2\') + value\n\t\t// (min|max)?(width|height|inline-size|block-size)\n\t\tcase 8116: case 7059: case 5753: case 5535:\n\t\tcase 5445: case 5701: case 4933: case 4677:\n\t\tcase 5533: case 5789: case 5021: case 4765:\n\t\t\t// stretch, max-content, min-content, fill-available\n\t\t\tif (Utility_strlen(value) - 1 - length > 6)\n\t\t\t\tswitch (Utility_charat(value, length + 1)) {\n\t\t\t\t\t// (m)ax-content, (m)in-content\n\t\t\t\t\tcase 109:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (Utility_charat(value, length + 4) !== 45)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t// (f)ill-available, (f)it-content\n\t\t\t\t\tcase 102:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, \'$1\' + WEBKIT + \'$2-$3\' + \'$1\' + MOZ + (Utility_charat(value, length + 3) == 108 ? \'$3\' : \'$2-$3\')) + value\n\t\t\t\t\t// (s)tretch\n\t\t\t\t\tcase 115:\n\t\t\t\t\t\treturn ~indexof(value, \'stretch\') ? prefix(replace(value, \'stretch\', \'fill-available\'), length) + value : value\n\t\t\t\t}\n\t\t\tbreak\n\t\t// position: sticky\n\t\tcase 4949:\n\t\t\t// (s)ticky?\n\t\t\tif (Utility_charat(value, length + 1) !== 115)\n\t\t\t\tbreak\n\t\t// display: (flex|inline-flex)\n\t\tcase 6444:\n\t\t\tswitch (Utility_charat(value, Utility_strlen(value) - 3 - (~indexof(value, \'!important\') && 10))) {\n\t\t\t\t// stic(k)y\n\t\t\t\tcase 107:\n\t\t\t\t\treturn replace(value, \':\', \':\' + WEBKIT) + value\n\t\t\t\t// (inline-)?fl(e)x\n\t\t\t\tcase 101:\n\t\t\t\t\treturn replace(value, /(.+:)([^;!]+)(;|!.+)?/, \'$1\' + WEBKIT + (Utility_charat(value, 14) === 45 ? \'inline-\' : \'\') + \'box$3\' + \'$1\' + WEBKIT + \'$2$3\' + \'$1\' + MS + \'$2box$3\') + value\n\t\t\t}\n\t\t\tbreak\n\t\t// writing-mode\n\t\tcase 5936:\n\t\t\tswitch (Utility_charat(value, length + 11)) {\n\t\t\t\t// vertical-l(r)\n\t\t\t\tcase 114:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, \'tb\') + value\n\t\t\t\t// vertical-r(l)\n\t\t\t\tcase 108:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, \'tb-rl\') + value\n\t\t\t\t// horizontal(-)tb\n\t\t\t\tcase 45:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, \'lr\') + value\n\t\t\t}\n\n\t\t\treturn WEBKIT + value + MS + value + value\n\t}\n\n\treturn value\n}\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Middleware.js\n\n\n\n\n\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nfunction middleware (collection) {\n\tvar length = Utility_sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = \'\'\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || \'\'\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nfunction rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nfunction prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length)\n\t\t\t\t\tbreak\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, \'@\', \'@\' + WEBKIT)})], callback)\n\t\t\t\tcase Enum_RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn Utility_combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase \':read-only\': case \':read-write\':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, \':\' + MOZ + \'$1\')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase \'::placeholder\':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, \':\' + WEBKIT + \'input-$1\')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, \':\' + MOZ + \'$1\')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + \'input-$1\')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn \'\'\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nfunction namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === \'global\')\n\t\t\t\t\t\t\t\tchildren[index] = \'\', children[++index] = \'\\f\' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? \'\' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? \'\' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Parser.js\n\n\n\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nfunction compile (value) {\n\treturn dealloc(parse(\'\', null, null, null, [\'\'], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nfunction parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = \'\'\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && characters.charCodeAt(length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), \'&\', \'&\\f\'), \'&\\f\') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// " \' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tUtility_append(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += \'/\'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = Utility_strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0 && (Utility_strlen(characters) - length))\n\t\t\t\t\t\t\tUtility_append(property > 32 ? declaration(characters + \';\', rule, parent, length - 1) : declaration(replace(characters, \' \', \'\') + \';\', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += \';\'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tUtility_append(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && Utility_append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [\'\'], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = \'\', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + Utility_strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += Utility_from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += \'\\f\', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (Utility_strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = Utility_strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && Utility_strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nfunction ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : [\'\']\n\tvar size = Utility_sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = Utility_substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + \' \' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? Enum_RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nfunction comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, Utility_from(Tokenizer_char()), Utility_substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nfunction declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, Utility_substr(value, 0, length), Utility_substr(value, length + 1, -1), length)\n}\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js\n\n\n\n\n\nvar last = function last(arr) {\n  return arr.length ? arr[arr.length - 1] : null;\n}; // based on https://github.com/thysultan/stylis.js/blob/e6843c373ebcbbfade25ebcc23f540ed8508da0a/src/Tokenizer.js#L239-L244\n\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we\'ve started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don\'t account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it\'s very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? \'&\\f\' : \'\';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += Utility_from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== \'rule\' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== \'rule\') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === \'decl\') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element["return"] = \'\';\n      element.value = \'\';\n    }\n  }\n};\nvar ignoreFlag = \'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason\';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return !!element && element.type === \'comm\' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== \'rule\') return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses && cache.compat !== true) {\n      var prevElement = index > 0 ? children[index - 1] : null;\n\n      if (prevElement && isIgnoringComment(last(prevElement.children))) {\n        return;\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error("The pseudo class \\"" + unsafePseudoClass + "\\" is potentially unsafe when doing server-side rendering. Try changing it to \\"" + unsafePseudoClass.split(\'-child\')[0] + "-of-type\\".");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don\'t get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = \'\';\n  element.value = \'\';\n  element["return"] = \'\';\n  element.children = \'\';\n  element.props = \'\';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error("`@import` rules can\'t be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error("`@import` rules can\'t be after other rules. Please put your `@import` rules before your other rules.");\n    nullifyElement(element);\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (false) {}\n\n  if ( key === \'css\') {\n    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React\'s hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute(\'data-emotion\');\n\n      if (dataEmotionAttribute.indexOf(\' \') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute(\'data-s\', \'\');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (false) {}\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don\'t have a space in them which\n    // means that the style elements we\'re looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll("style[data-emotion^=\\"" + key + " \\"]"), function (node) {\n      var attrib = node.getAttribute("data-emotion").split(\' \'); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (false) {}\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify,  false ? 0 : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (false) {}\n\n      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\n/* harmony default export */ const emotion_cache_browser_esm = (createCache);\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/hash/dist/hash.browser.esm.js\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // \'m\' and \'r\' are mixing constants generated offline.\n  // They\'re not really \'magic\', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\n/* harmony default export */ const hash_browser_esm = (murmur2);\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n/* harmony default export */ const unitless_browser_esm = (unitlessKeys);\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js\n\n\n\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content\'s property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\"content: \'\\\\00d7\';\\" should become \\"content: \'\\\\\\\\00d7\';\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object\'s key (can happen when in example you pass unexported component as computed key).";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== \'boolean\';\n};\n\nvar processStyleName = /* #__PURE__ */emotion_memoize_browser_esm(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, \'-$&\').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case \'animation\':\n    case \'animationName\':\n      {\n        if (typeof value === \'string\') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless_browser_esm[key] !== 1 && !isCustomProperty(key) && typeof value === \'number\' && value !== 0) {\n    return value + \'px\';\n  }\n\n  return value;\n};\n\nif (false) { var hyphenatedCache, hyphenPattern, msPattern, oldProcessStyleValue, contentValues, contentValuePattern; }\n\nvar noComponentSelectorMessage = (/* unused pure expression or super */ null && (\'Component selectors can only be used in conjunction with \' + \'@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware \' + \'compiler transform.\'));\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return \'\';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (false) {}\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case \'boolean\':\n      {\n        return \'\';\n      }\n\n    case \'object\':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + ";";\n\n          if (false) {}\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case \'function\':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (false) {}\n\n        break;\n      }\n\n    case \'string\':\n      if (false) { var replaced, matched; }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = \'\';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== \'object\') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + "{" + registered[value] + "}";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";\n        }\n      } else {\n        if (_key === \'NO_COMPONENT_SELECTOR\' && "production" !== \'production\') {}\n\n        if (Array.isArray(value) && typeof value[0] === \'string\' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case \'animation\':\n            case \'animationName\':\n              {\n                string += processStyleName(_key) + ":" + interpolated + ";";\n                break;\n              }\n\n            default:\n              {\n                if (false) {}\n\n                string += _key + "{" + interpolated + "}";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (false) {} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar emotion_serialize_browser_esm_serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === \'object\' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = \'\';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (false) {}\n\n    styles += strings[0];\n  } // we start at 1 since we\'ve already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (false) {}\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (false) {} // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = \'\';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += \'-\' + // $FlowFixMe we know it\'s not null\n    match[1];\n  }\n\n  var name = hash_browser_esm(styles) + identifierName;\n\n  if (false) {}\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\n\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/react/dist/emotion-element-cbed451f.browser.esm.js\n\n\n\n\n\n\n\n\n\nvar emotion_element_cbed451f_browser_esm_hasOwnProperty = {}.hasOwnProperty;\n\nvar EmotionCacheContext = /* #__PURE__ */(0,react.createContext)( // we\'re doing this to avoid preconstruct\'s dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it\'s also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== \'undefined\' ? /* #__PURE__ */emotion_cache_browser_esm({\n  key: \'css\'\n}) : null);\n\nif (false) {}\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar emotion_element_cbed451f_browser_esm_withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return /*#__PURE__*/(0,react.forwardRef)(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = (0,react.useContext)(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nvar emotion_element_cbed451f_browser_esm_ThemeContext = /* #__PURE__ */(0,react.createContext)({});\n\nif (false) {}\n\nvar useTheme = function useTheme() {\n  return useContext(emotion_element_cbed451f_browser_esm_ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === \'function\') {\n    var mergedTheme = theme(outerTheme);\n\n    if (false) {}\n\n    return mergedTheme;\n  }\n\n  if (false) {}\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */(/* unused pure expression or super */ null && (weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n})));\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = useContext(emotion_element_cbed451f_browser_esm_ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/createElement(emotion_element_cbed451f_browser_esm_ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || \'Component\';\n\n  var render = function render(props, ref) {\n    var theme = useContext(emotion_element_cbed451f_browser_esm_ThemeContext);\n    return /*#__PURE__*/createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = /*#__PURE__*/forwardRef(render);\n  WithTheme.displayName = "WithTheme(" + componentName + ")";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar getLastPart = function getLastPart(functionName) {\n  // The match may be something like \'Object.createEmotionProps\' or\n  // \'Loader.prototype.render\'\n  var parts = functionName.split(\'.\');\n  return parts[parts.length - 1];\n};\n\nvar getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {\n  // V8\n  var match = /^\\s+at\\s+([A-Za-z0-9$.]+)\\s/.exec(line);\n  if (match) return getLastPart(match[1]); // Safari / Firefox\n\n  match = /^([A-Za-z0-9$.]+)@/.exec(line);\n  if (match) return getLastPart(match[1]);\n  return undefined;\n};\n\nvar internalReactFunctionNames = /* #__PURE__ */new Set([\'renderWithHooks\', \'processChild\', \'finishClassComponent\', \'renderToString\']); // These identifiers come from error stacks, so they have to be valid JS\n// identifiers, thus we only need to replace what is a valid character for JS,\n// but not for CSS.\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, \'-\');\n};\n\nvar getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {\n  if (!stackTrace) return undefined;\n  var lines = stackTrace.split(\'\\n\');\n\n  for (var i = 0; i < lines.length; i++) {\n    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just "Error"\n\n    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit\n\n    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an\n    // uppercase letter\n\n    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);\n  }\n\n  return undefined;\n};\n\nvar useInsertionEffect = react_namespaceObject[\'useInsertion\' + \'Effect\'] ? react_namespaceObject[\'useInsertion\' + \'Effect\'] : function useInsertionEffect(create) {\n  create();\n};\nfunction emotion_element_cbed451f_browser_esm_useInsertionEffectMaybe(create) {\n\n  useInsertionEffect(create);\n}\n\nvar typePropName = \'__EMOTION_TYPE_PLEASE_DO_NOT_USE__\';\nvar labelPropName = \'__EMOTION_LABEL_PLEASE_DO_NOT_USE__\';\nvar emotion_element_cbed451f_browser_esm_createEmotionProps = function createEmotionProps(type, props) {\n  if (false) {}\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (emotion_element_cbed451f_browser_esm_hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when\n  // the label hasn\'t already been computed\n\n  if (false) { var label; }\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = emotion_element_cbed451f_browser_esm_useInsertionEffectMaybe(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar emotion_element_cbed451f_browser_esm_Emotion = /* #__PURE__ */(/* unused pure expression or super */ null && (emotion_element_cbed451f_browser_esm_withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === \'string\' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = \'\';\n\n  if (typeof props.className === \'string\') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + " ";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, useContext(emotion_element_cbed451f_browser_esm_ThemeContext));\n\n  if (false) { var labelFromStack; }\n\n  className += cache.key + "-" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (emotion_element_cbed451f_browser_esm_hasOwnProperty.call(props, key) && key !== \'css\' && key !== typePropName && ( true || 0)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === \'string\'\n  }), /*#__PURE__*/createElement(WrappedComponent, newProps));\n})));\n\nif (false) {}\n\n\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js\nvar isBrowser = "object" !== \'undefined\';\nfunction emotion_utils_browser_esm_getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = \'\';\n  classNames.split(\' \').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + ";");\n    } else {\n      rawClassName += className + " ";\n    }\n  });\n  return rawClassName;\n}\nvar emotion_utils_browser_esm_registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + "-" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it\'s a string tag, we know it won\'t\n  // so we don\'t have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we\'re in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar emotion_utils_browser_esm_insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  emotion_utils_browser_esm_registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + "-" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? "." + className : \'\', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\n\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js\n\n\n\n\n\n\n\n\nvar testOmitPropsOnStringTag = emotion_is_prop_valid_browser_esm;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== \'theme\';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === \'string\' && // 96 is one less than the char code\n  // for "a" so this is checking that\n  // it\'s a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== \'function\' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar emotion_styled_base_browser_esm_useInsertionEffect = react_namespaceObject[\'useInsertion\' + \'Effect\'] ? react_namespaceObject[\'useInsertion\' + \'Effect\'] : function useInsertionEffect(create) {\n  create();\n};\nfunction emotion_styled_base_browser_esm_useInsertionEffectMaybe(create) {\n\n  emotion_styled_base_browser_esm_useInsertionEffect(create);\n}\n\nvar emotion_styled_base_browser_esm_ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content\'s property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\"content: \'\\\\00d7\';\\" should become \\"content: \'\\\\\\\\00d7\';\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";\n\nvar emotion_styled_base_browser_esm_Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  emotion_utils_browser_esm_registerStyles(cache, serialized, isStringTag);\n  var rules = emotion_styled_base_browser_esm_useInsertionEffectMaybe(function () {\n    return emotion_utils_browser_esm_insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (false) {}\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp(\'as\');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push("label:" + identifierName + ";");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (false) {}\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (false) {}\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = emotion_element_cbed451f_browser_esm_withEmotionCache(function (props, cache, ref) {\n      var FinalTag = shouldUseAs && props.as || baseTag;\n      var className = \'\';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = (0,react.useContext)(emotion_element_cbed451f_browser_esm_ThemeContext);\n      }\n\n      if (typeof props.className === \'string\') {\n        className = emotion_utils_browser_esm_getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + " ";\n      }\n\n      var serialized = emotion_serialize_browser_esm_serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      className += cache.key + "-" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += " " + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === \'as\') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      return /*#__PURE__*/(0,react.createElement)(react.Fragment, null, /*#__PURE__*/(0,react.createElement)(emotion_styled_base_browser_esm_Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof FinalTag === \'string\'\n      }), /*#__PURE__*/(0,react.createElement)(FinalTag, newProps));\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : "Styled(" + (typeof baseTag === \'string\' ? baseTag : baseTag.displayName || baseTag.name || \'Component\') + ")";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, \'toString\', {\n      value: function value() {\n        if (targetClassName === undefined && "production" !== \'production\') {} // $FlowFixMe: coerce undefined to string\n\n\n        return "." + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, extends_extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\n/* harmony default export */ const emotion_styled_base_browser_esm = (createStyled);\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js\n\n\n\n\n\n\n\n\nvar tags = [\'a\', \'abbr\', \'address\', \'area\', \'article\', \'aside\', \'audio\', \'b\', \'base\', \'bdi\', \'bdo\', \'big\', \'blockquote\', \'body\', \'br\', \'button\', \'canvas\', \'caption\', \'cite\', \'code\', \'col\', \'colgroup\', \'data\', \'datalist\', \'dd\', \'del\', \'details\', \'dfn\', \'dialog\', \'div\', \'dl\', \'dt\', \'em\', \'embed\', \'fieldset\', \'figcaption\', \'figure\', \'footer\', \'form\', \'h1\', \'h2\', \'h3\', \'h4\', \'h5\', \'h6\', \'head\', \'header\', \'hgroup\', \'hr\', \'html\', \'i\', \'iframe\', \'img\', \'input\', \'ins\', \'kbd\', \'keygen\', \'label\', \'legend\', \'li\', \'link\', \'main\', \'map\', \'mark\', \'marquee\', \'menu\', \'menuitem\', \'meta\', \'meter\', \'nav\', \'noscript\', \'object\', \'ol\', \'optgroup\', \'option\', \'output\', \'p\', \'param\', \'picture\', \'pre\', \'progress\', \'q\', \'rp\', \'rt\', \'ruby\', \'s\', \'samp\', \'script\', \'section\', \'select\', \'small\', \'source\', \'span\', \'strong\', \'style\', \'sub\', \'summary\', \'sup\', \'table\', \'tbody\', \'td\', \'textarea\', \'tfoot\', \'th\', \'thead\', \'time\', \'title\', \'tr\', \'track\', \'u\', \'ul\', \'var\', \'video\', \'wbr\', // SVG\n\'circle\', \'clipPath\', \'defs\', \'ellipse\', \'foreignObject\', \'g\', \'image\', \'line\', \'linearGradient\', \'mask\', \'path\', \'pattern\', \'polygon\', \'polyline\', \'radialGradient\', \'rect\', \'stop\', \'svg\', \'text\', \'tspan\'];\n\nvar newStyled = emotion_styled_base_browser_esm.bind();\ntags.forEach(function (tagName) {\n  // $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type\n  newStyled[tagName] = newStyled(tagName);\n});\n\n/* harmony default export */ const emotion_styled_browser_esm = (newStyled);\n\n;// CONCATENATED MODULE: ./node_modules/@mui/styled-engine/index.js\n/** @license MUI v5.8.0\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction styled(tag, options) {\n  const stylesFactory = emotion_styled_browser_esm(tag, options);\n\n  if (false) {}\n\n  return stylesFactory;\n}\n\n\n\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/deepmerge.js\n\nfunction isPlainObject(item) {\n  return item !== null && typeof item === \'object\' && item.constructor === Object;\n}\nfunction deepmerge_deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? extends_extends({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === \'__proto__\') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge_deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createBreakpoints.js\n\n\nconst _excluded = ["values", "unit", "step"];\n// Sorted ASC by size. That\'s important.\n// It can\'t be configured as it\'s used statically for propTypes.\nconst breakpointKeys = (/* unused pure expression or super */ null && ([\'xs\', \'sm\', \'md\', \'lg\', \'xl\']));\n\nconst sortBreakpointsValues = values => {\n  const breakpointsAsArray = Object.keys(values).map(key => ({\n    key,\n    val: values[key]\n  })) || []; // Sort in ascending order\n\n  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);\n  return breakpointsAsArray.reduce((acc, obj) => {\n    return extends_extends({}, acc, {\n      [obj.key]: obj.val\n    });\n  }, {});\n}; // Keep in mind that @media is inclusive by the CSS specification.\n\n\nfunction createBreakpoints(breakpoints) {\n  const {\n    // The breakpoint **start** at this value.\n    // For instance with the first breakpoint xs: [xs, sm).\n    values = {\n      xs: 0,\n      // phone\n      sm: 600,\n      // tablet\n      md: 900,\n      // small laptop\n      lg: 1200,\n      // desktop\n      xl: 1536 // large screen\n\n    },\n    unit = \'px\',\n    step = 5\n  } = breakpoints,\n        other = _objectWithoutPropertiesLoose(breakpoints, _excluded);\n\n  const sortedValues = sortBreakpointsValues(values);\n  const keys = Object.keys(sortedValues);\n\n  function up(key) {\n    const value = typeof values[key] === \'number\' ? values[key] : key;\n    return `@media (min-width:${value}${unit})`;\n  }\n\n  function down(key) {\n    const value = typeof values[key] === \'number\' ? values[key] : key;\n    return `@media (max-width:${value - step / 100}${unit})`;\n  }\n\n  function between(start, end) {\n    const endIndex = keys.indexOf(end);\n    return `@media (min-width:${typeof values[start] === \'number\' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === \'number\' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\n  }\n\n  function only(key) {\n    if (keys.indexOf(key) + 1 < keys.length) {\n      return between(key, keys[keys.indexOf(key) + 1]);\n    }\n\n    return up(key);\n  }\n\n  function not(key) {\n    // handle first and last key separately, for better readability\n    const keyIndex = keys.indexOf(key);\n\n    if (keyIndex === 0) {\n      return up(keys[1]);\n    }\n\n    if (keyIndex === keys.length - 1) {\n      return down(keys[keyIndex]);\n    }\n\n    return between(key, keys[keys.indexOf(key) + 1]).replace(\'@media\', \'@media not all and\');\n  }\n\n  return extends_extends({\n    keys,\n    values: sortedValues,\n    up,\n    down,\n    between,\n    only,\n    not,\n    unit\n  }, other);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/shape.js\nconst shape = {\n  borderRadius: 4\n};\n/* harmony default export */ const createTheme_shape = (shape);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/breakpoints.js\n\n\n\n // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nconst values = {\n  xs: 0,\n  // phone\n  sm: 600,\n  // tablet\n  md: 900,\n  // small laptop\n  lg: 1200,\n  // desktop\n  xl: 1536 // large screen\n\n};\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That\'s important.\n  // It can\'t be configured as it\'s used statically for propTypes.\n  keys: [\'xs\', \'sm\', \'md\', \'lg\', \'xl\'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nfunction handleBreakpoints(props, propValue, styleFromPropValue) {\n  const theme = props.theme || {};\n\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (typeof propValue === \'object\') {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      // key is breakpoint\n      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {\n        const mediaKey = themeBreakpoints.up(breakpoint);\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n      } else {\n        const cssKey = breakpoint;\n        acc[cssKey] = propValue[cssKey];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  const output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  const newStyleFunction = props => {\n    const theme = props.theme || {};\n    const base = styleFunction(props);\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes =  false ? 0 : {};\n  newStyleFunction.filterProps = [\'xs\', \'sm\', \'md\', \'lg\', \'xl\', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\n\nfunction createEmptyBreakpointObject(breakpointsInput = {}) {\n  var _breakpointsInput$key;\n\n  const breakpointsInOrder = breakpointsInput == null ? void 0 : (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {\n    const breakpointStyleKey = breakpointsInput.up(key);\n    acc[breakpointStyleKey] = {};\n    return acc;\n  }, {});\n  return breakpointsInOrder || {};\n}\nfunction removeUnusedBreakpoints(breakpointKeys, style) {\n  return breakpointKeys.reduce((acc, key) => {\n    const breakpointOutput = acc[key];\n    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;\n\n    if (isBreakpointUnused) {\n      delete acc[key];\n    }\n\n    return acc;\n  }, style);\n}\nfunction mergeBreakpointsInOrder(breakpointsInput, ...styles) {\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => deepmerge(prev, next), {});\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\n} // compute base for responsive values; e.g.,\n// [1,2,3] => {xs: true, sm: true, md: true}\n// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}\n\nfunction computeBreakpointsBase(breakpointValues, themeBreakpoints) {\n  // fixed value\n  if (typeof breakpointValues !== \'object\') {\n    return {};\n  }\n\n  const base = {};\n  const breakpointsKeys = Object.keys(themeBreakpoints);\n\n  if (Array.isArray(breakpointValues)) {\n    breakpointsKeys.forEach((breakpoint, i) => {\n      if (i < breakpointValues.length) {\n        base[breakpoint] = true;\n      }\n    });\n  } else {\n    breakpointsKeys.forEach(breakpoint => {\n      if (breakpointValues[breakpoint] != null) {\n        base[breakpoint] = true;\n      }\n    });\n  }\n\n  return base;\n}\nfunction resolveBreakpointValues({\n  values: breakpointValues,\n  breakpoints: themeBreakpoints,\n  base: customBase\n}) {\n  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);\n  const keys = Object.keys(base);\n\n  if (keys.length === 0) {\n    return breakpointValues;\n  }\n\n  let previous;\n  return keys.reduce((acc, breakpoint, i) => {\n    if (Array.isArray(breakpointValues)) {\n      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];\n      previous = i;\n    } else if (typeof breakpointValues === \'object\') {\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\n      previous = breakpoint;\n    } else {\n      acc[breakpoint] = breakpointValues;\n    }\n\n    return acc;\n  }, {});\n}\n/* harmony default export */ const esm_breakpoints = ((/* unused pure expression or super */ null && (breakpoints)));\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/capitalize.js\n\n// It should to be noted that this function isn\'t equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nfunction capitalize(string) {\n  if (typeof string !== \'string\') {\n    throw new Error( false ? 0 : formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/style.js\n\n\n\nfunction getPath(obj, path, checkVars = true) {\n  if (!path || typeof path !== \'string\') {\n    return null;\n  } // Check if CSS variables are used\n\n\n  if (obj && obj.vars && checkVars) {\n    const val = `vars.${path}`.split(\'.\').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\n\n    if (val != null) {\n      return val;\n    }\n  }\n\n  return path.split(\'.\').reduce((acc, item) => {\n    if (acc && acc[item] != null) {\n      return acc[item];\n    }\n\n    return null;\n  }, obj);\n}\n\nfunction getValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {\n  let value;\n\n  if (typeof themeMapping === \'function\') {\n    value = themeMapping(propValueFinal);\n  } else if (Array.isArray(themeMapping)) {\n    value = themeMapping[propValueFinal] || userValue;\n  } else {\n    value = getPath(themeMapping, propValueFinal) || userValue;\n  }\n\n  if (transform) {\n    value = transform(value);\n  }\n\n  return value;\n}\n\nfunction style(options) {\n  const {\n    prop,\n    cssProperty = options.prop,\n    themeKey,\n    transform\n  } = options;\n\n  const fn = props => {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    const propValue = props[prop];\n    const theme = props.theme;\n    const themeMapping = getPath(theme, themeKey) || {};\n\n    const styleFromPropValue = propValueFinal => {\n      let value = getValue(themeMapping, transform, propValueFinal);\n\n      if (propValueFinal === value && typeof propValueFinal === \'string\') {\n        // Haven\'t found value\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === \'default\' ? \'\' : capitalize(propValueFinal)}`, propValueFinal);\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return {\n        [cssProperty]: value\n      };\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes =  false ? 0 : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\n/* harmony default export */ const esm_style = (style);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/merge.js\n\n\nfunction merge_merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n\n  return deepmerge_deepmerge(acc, item, {\n    clone: false // No need to clone deep, it\'s way faster.\n\n  });\n}\n\n/* harmony default export */ const esm_merge = (merge_merge);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/memoize.js\nfunction memoize_memoize(fn) {\n  const cache = {};\n  return arg => {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n\n    return cache[arg];\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/spacing.js\n\n\n\n\n\nconst properties = {\n  m: \'margin\',\n  p: \'padding\'\n};\nconst directions = {\n  t: \'Top\',\n  r: \'Right\',\n  b: \'Bottom\',\n  l: \'Left\',\n  x: [\'Left\', \'Right\'],\n  y: [\'Top\', \'Bottom\']\n};\nconst aliases = {\n  marginX: \'mx\',\n  marginY: \'my\',\n  paddingX: \'px\',\n  paddingY: \'py\'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nconst getCssProperties = memoize_memoize(prop => {\n  // It\'s not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  const [a, b] = prop.split(\'\');\n  const property = properties[a];\n  const direction = directions[b] || \'\';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nconst marginKeys = [\'m\', \'mt\', \'mr\', \'mb\', \'ml\', \'mx\', \'my\', \'margin\', \'marginTop\', \'marginRight\', \'marginBottom\', \'marginLeft\', \'marginX\', \'marginY\', \'marginInline\', \'marginInlineStart\', \'marginInlineEnd\', \'marginBlock\', \'marginBlockStart\', \'marginBlockEnd\'];\nconst paddingKeys = [\'p\', \'pt\', \'pr\', \'pb\', \'pl\', \'px\', \'py\', \'padding\', \'paddingTop\', \'paddingRight\', \'paddingBottom\', \'paddingLeft\', \'paddingX\', \'paddingY\', \'paddingInline\', \'paddingInlineStart\', \'paddingInlineEnd\', \'paddingBlock\', \'paddingBlockStart\', \'paddingBlockEnd\'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nfunction createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  var _getPath;\n\n  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;\n\n  if (typeof themeSpacing === \'number\') {\n    return abs => {\n      if (typeof abs === \'string\') {\n        return abs;\n      }\n\n      if (false) {}\n\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === \'string\') {\n        return abs;\n      }\n\n      if (false) {}\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === \'function\') {\n    return themeSpacing;\n  }\n\n  if (false) {}\n\n  return () => undefined;\n}\nfunction createUnarySpacing(theme) {\n  return createUnaryUnit(theme, \'spacing\', 8, \'spacing\');\n}\nfunction spacing_getValue(transformer, propValue) {\n  if (typeof propValue === \'string\' || propValue == null) {\n    return propValue;\n  }\n\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === \'number\') {\n    return -transformed;\n  }\n\n  return `-${transformed}`;\n}\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = spacing_getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\n\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it\'s doesn\'t worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\n\nfunction spacing_style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(esm_merge, {});\n}\n\nfunction margin(props) {\n  return spacing_style(props, marginKeys);\n}\nmargin.propTypes =  false ? 0 : {};\nmargin.filterProps = marginKeys;\nfunction padding(props) {\n  return spacing_style(props, paddingKeys);\n}\npadding.propTypes =  false ? 0 : {};\npadding.filterProps = paddingKeys;\n\nfunction spacing(props) {\n  return spacing_style(props, spacingKeys);\n}\n\nspacing.propTypes =  false ? 0 : {};\nspacing.filterProps = spacingKeys;\n/* harmony default export */ const esm_spacing = (spacing);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createSpacing.js\n\n\n/* tslint:enable:unified-signatures */\nfunction createSpacing(spacingInput = 8) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons, can align to a 4dp grid.\n  // https://material.io/design/layout/understanding-layout.html#usage\n\n\n  const transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n\n  const spacing = (...argsInput) => {\n    if (false) {}\n\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === \'number\' ? `${output}px` : output;\n    }).join(\' \');\n  };\n\n  spacing.mui = true;\n  return spacing;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js\n\n\nconst createTheme_excluded = ["breakpoints", "palette", "spacing", "shape"];\n\n\n\n\n\nfunction createTheme(options = {}, ...args) {\n  const {\n    breakpoints: breakpointsInput = {},\n    palette: paletteInput = {},\n    spacing: spacingInput,\n    shape: shapeInput = {}\n  } = options,\n        other = _objectWithoutPropertiesLoose(options, createTheme_excluded);\n\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge_deepmerge({\n    breakpoints,\n    direction: \'ltr\',\n    components: {},\n    // Inject component definitions.\n    palette: extends_extends({\n      mode: \'light\'\n    }, paletteInput),\n    spacing,\n    shape: extends_extends({}, createTheme_shape, shapeInput)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge_deepmerge(acc, argument), muiTheme);\n  return muiTheme;\n}\n\n/* harmony default export */ const createTheme_createTheme = (createTheme);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/propsToClassKey.js\n\nconst propsToClassKey_excluded = ["variant"];\n\n\nfunction isEmpty(string) {\n  return string.length === 0;\n}\n/**\n * Generates string classKey based on the properties provided. It starts with the\n * variant if defined, and then it appends all other properties in alphabetical order.\n * @param {object} props - the properties for which the classKey should be created.\n */\n\n\nfunction propsToClassKey(props) {\n  const {\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, propsToClassKey_excluded);\n\n  let classKey = variant || \'\';\n  Object.keys(other).sort().forEach(key => {\n    if (key === \'color\') {\n      classKey += isEmpty(classKey) ? props[key] : capitalize(props[key]);\n    } else {\n      classKey += `${isEmpty(classKey) ? key : capitalize(key)}${capitalize(props[key].toString())}`;\n    }\n  });\n  return classKey;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/compose.js\n\n\nfunction compose(...styles) {\n  const handlers = styles.reduce((acc, style) => {\n    style.filterProps.forEach(prop => {\n      acc[prop] = style;\n    });\n    return acc;\n  }, {});\n\n  const fn = props => {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (handlers[prop]) {\n        return esm_merge(acc, handlers[prop](props));\n      }\n\n      return acc;\n    }, {});\n  };\n\n  fn.propTypes =  false ? 0 : {};\n  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);\n  return fn;\n}\n\n/* harmony default export */ const esm_compose = (compose);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/borders.js\n\n\n\n\n\n\nfunction getBorder(value) {\n  if (typeof value !== \'number\') {\n    return value;\n  }\n\n  return `${value}px solid`;\n}\n\nconst border = esm_style({\n  prop: \'border\',\n  themeKey: \'borders\',\n  transform: getBorder\n});\nconst borderTop = esm_style({\n  prop: \'borderTop\',\n  themeKey: \'borders\',\n  transform: getBorder\n});\nconst borderRight = esm_style({\n  prop: \'borderRight\',\n  themeKey: \'borders\',\n  transform: getBorder\n});\nconst borderBottom = esm_style({\n  prop: \'borderBottom\',\n  themeKey: \'borders\',\n  transform: getBorder\n});\nconst borderLeft = esm_style({\n  prop: \'borderLeft\',\n  themeKey: \'borders\',\n  transform: getBorder\n});\nconst borderColor = esm_style({\n  prop: \'borderColor\',\n  themeKey: \'palette\'\n});\nconst borderTopColor = esm_style({\n  prop: \'borderTopColor\',\n  themeKey: \'palette\'\n});\nconst borderRightColor = esm_style({\n  prop: \'borderRightColor\',\n  themeKey: \'palette\'\n});\nconst borderBottomColor = esm_style({\n  prop: \'borderBottomColor\',\n  themeKey: \'palette\'\n});\nconst borderLeftColor = esm_style({\n  prop: \'borderLeftColor\',\n  themeKey: \'palette\'\n});\nconst borderRadius = props => {\n  if (props.borderRadius !== undefined && props.borderRadius !== null) {\n    const transformer = createUnaryUnit(props.theme, \'shape.borderRadius\', 4, \'borderRadius\');\n\n    const styleFromPropValue = propValue => ({\n      borderRadius: spacing_getValue(transformer, propValue)\n    });\n\n    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);\n  }\n\n  return null;\n};\nborderRadius.propTypes =  false ? 0 : {};\nborderRadius.filterProps = [\'borderRadius\'];\nconst borders = esm_compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);\n/* harmony default export */ const esm_borders = (borders);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/display.js\n\n\nconst displayPrint = esm_style({\n  prop: \'displayPrint\',\n  cssProperty: false,\n  transform: value => ({\n    \'@media print\': {\n      display: value\n    }\n  })\n});\nconst displayRaw = esm_style({\n  prop: \'display\'\n});\nconst overflow = esm_style({\n  prop: \'overflow\'\n});\nconst textOverflow = esm_style({\n  prop: \'textOverflow\'\n});\nconst visibility = esm_style({\n  prop: \'visibility\'\n});\nconst whiteSpace = esm_style({\n  prop: \'whiteSpace\'\n});\n/* harmony default export */ const display = (esm_compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/flexbox.js\n\n\nconst flexBasis = esm_style({\n  prop: \'flexBasis\'\n});\nconst flexDirection = esm_style({\n  prop: \'flexDirection\'\n});\nconst flexWrap = esm_style({\n  prop: \'flexWrap\'\n});\nconst justifyContent = esm_style({\n  prop: \'justifyContent\'\n});\nconst alignItems = esm_style({\n  prop: \'alignItems\'\n});\nconst alignContent = esm_style({\n  prop: \'alignContent\'\n});\nconst order = esm_style({\n  prop: \'order\'\n});\nconst flex = esm_style({\n  prop: \'flex\'\n});\nconst flexGrow = esm_style({\n  prop: \'flexGrow\'\n});\nconst flexShrink = esm_style({\n  prop: \'flexShrink\'\n});\nconst alignSelf = esm_style({\n  prop: \'alignSelf\'\n});\nconst justifyItems = esm_style({\n  prop: \'justifyItems\'\n});\nconst justifySelf = esm_style({\n  prop: \'justifySelf\'\n});\nconst flexbox = esm_compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);\n/* harmony default export */ const esm_flexbox = (flexbox);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/grid.js\n\n\n\n\n\nconst gap = props => {\n  if (props.gap !== undefined && props.gap !== null) {\n    const transformer = createUnaryUnit(props.theme, \'spacing\', 8, \'gap\');\n\n    const styleFromPropValue = propValue => ({\n      gap: spacing_getValue(transformer, propValue)\n    });\n\n    return handleBreakpoints(props, props.gap, styleFromPropValue);\n  }\n\n  return null;\n};\ngap.propTypes =  false ? 0 : {};\ngap.filterProps = [\'gap\'];\nconst columnGap = props => {\n  if (props.columnGap !== undefined && props.columnGap !== null) {\n    const transformer = createUnaryUnit(props.theme, \'spacing\', 8, \'columnGap\');\n\n    const styleFromPropValue = propValue => ({\n      columnGap: spacing_getValue(transformer, propValue)\n    });\n\n    return handleBreakpoints(props, props.columnGap, styleFromPropValue);\n  }\n\n  return null;\n};\ncolumnGap.propTypes =  false ? 0 : {};\ncolumnGap.filterProps = [\'columnGap\'];\nconst rowGap = props => {\n  if (props.rowGap !== undefined && props.rowGap !== null) {\n    const transformer = createUnaryUnit(props.theme, \'spacing\', 8, \'rowGap\');\n\n    const styleFromPropValue = propValue => ({\n      rowGap: spacing_getValue(transformer, propValue)\n    });\n\n    return handleBreakpoints(props, props.rowGap, styleFromPropValue);\n  }\n\n  return null;\n};\nrowGap.propTypes =  false ? 0 : {};\nrowGap.filterProps = [\'rowGap\'];\nconst gridColumn = esm_style({\n  prop: \'gridColumn\'\n});\nconst gridRow = esm_style({\n  prop: \'gridRow\'\n});\nconst gridAutoFlow = esm_style({\n  prop: \'gridAutoFlow\'\n});\nconst gridAutoColumns = esm_style({\n  prop: \'gridAutoColumns\'\n});\nconst gridAutoRows = esm_style({\n  prop: \'gridAutoRows\'\n});\nconst gridTemplateColumns = esm_style({\n  prop: \'gridTemplateColumns\'\n});\nconst gridTemplateRows = esm_style({\n  prop: \'gridTemplateRows\'\n});\nconst gridTemplateAreas = esm_style({\n  prop: \'gridTemplateAreas\'\n});\nconst gridArea = esm_style({\n  prop: \'gridArea\'\n});\nconst grid = esm_compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\n/* harmony default export */ const esm_grid = (grid);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/positions.js\n\n\nconst positions_position = esm_style({\n  prop: \'position\'\n});\nconst zIndex = esm_style({\n  prop: \'zIndex\',\n  themeKey: \'zIndex\'\n});\nconst positions_top = esm_style({\n  prop: \'top\'\n});\nconst right = esm_style({\n  prop: \'right\'\n});\nconst bottom = esm_style({\n  prop: \'bottom\'\n});\nconst left = esm_style({\n  prop: \'left\'\n});\n/* harmony default export */ const positions = (esm_compose(positions_position, zIndex, positions_top, right, bottom, left));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/palette.js\n\n\nconst color = esm_style({\n  prop: \'color\',\n  themeKey: \'palette\'\n});\nconst bgcolor = esm_style({\n  prop: \'bgcolor\',\n  cssProperty: \'backgroundColor\',\n  themeKey: \'palette\'\n});\nconst backgroundColor = esm_style({\n  prop: \'backgroundColor\',\n  themeKey: \'palette\'\n});\nconst palette = esm_compose(color, bgcolor, backgroundColor);\n/* harmony default export */ const esm_palette = (palette);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/shadows.js\n\nconst boxShadow = esm_style({\n  prop: \'boxShadow\',\n  themeKey: \'shadows\'\n});\n/* harmony default export */ const shadows = (boxShadow);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/sizing.js\n\n\n\n\nfunction transform(value) {\n  return value <= 1 && value !== 0 ? `${value * 100}%` : value;\n}\n\nconst width = esm_style({\n  prop: \'width\',\n  transform\n});\nconst maxWidth = props => {\n  if (props.maxWidth !== undefined && props.maxWidth !== null) {\n    const styleFromPropValue = propValue => {\n      var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;\n\n      const breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || values[propValue];\n      return {\n        maxWidth: breakpoint || transform(propValue)\n      };\n    };\n\n    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);\n  }\n\n  return null;\n};\nmaxWidth.filterProps = [\'maxWidth\'];\nconst minWidth = esm_style({\n  prop: \'minWidth\',\n  transform\n});\nconst height = esm_style({\n  prop: \'height\',\n  transform\n});\nconst maxHeight = esm_style({\n  prop: \'maxHeight\',\n  transform\n});\nconst minHeight = esm_style({\n  prop: \'minHeight\',\n  transform\n});\nconst sizeWidth = esm_style({\n  prop: \'size\',\n  cssProperty: \'width\',\n  transform\n});\nconst sizeHeight = esm_style({\n  prop: \'size\',\n  cssProperty: \'height\',\n  transform\n});\nconst boxSizing = esm_style({\n  prop: \'boxSizing\'\n});\nconst sizing = esm_compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\n/* harmony default export */ const esm_sizing = (sizing);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/typography.js\n\n\nconst fontFamily = esm_style({\n  prop: \'fontFamily\',\n  themeKey: \'typography\'\n});\nconst fontSize = esm_style({\n  prop: \'fontSize\',\n  themeKey: \'typography\'\n});\nconst fontStyle = esm_style({\n  prop: \'fontStyle\',\n  themeKey: \'typography\'\n});\nconst fontWeight = esm_style({\n  prop: \'fontWeight\',\n  themeKey: \'typography\'\n});\nconst letterSpacing = esm_style({\n  prop: \'letterSpacing\'\n});\nconst textTransform = esm_style({\n  prop: \'textTransform\'\n});\nconst lineHeight = esm_style({\n  prop: \'lineHeight\'\n});\nconst textAlign = esm_style({\n  prop: \'textAlign\'\n});\nconst typographyVariant = esm_style({\n  prop: \'typography\',\n  cssProperty: false,\n  themeKey: \'typography\'\n});\nconst typography = esm_compose(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign, textTransform);\n/* harmony default export */ const esm_typography = (typography);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/getThemeValue.js\n\n\n\n\n\n\n\n\n\n\nconst filterPropsMapping = {\n  borders: esm_borders.filterProps,\n  display: display.filterProps,\n  flexbox: esm_flexbox.filterProps,\n  grid: esm_grid.filterProps,\n  positions: positions.filterProps,\n  palette: esm_palette.filterProps,\n  shadows: shadows.filterProps,\n  sizing: esm_sizing.filterProps,\n  spacing: esm_spacing.filterProps,\n  typography: esm_typography.filterProps\n};\nconst getThemeValue_styleFunctionMapping = {\n  borders: esm_borders,\n  display: display,\n  flexbox: esm_flexbox,\n  grid: esm_grid,\n  positions: positions,\n  palette: esm_palette,\n  shadows: shadows,\n  sizing: esm_sizing,\n  spacing: esm_spacing,\n  typography: esm_typography\n};\nconst propToStyleFunction = Object.keys(filterPropsMapping).reduce((acc, styleFnName) => {\n  filterPropsMapping[styleFnName].forEach(propName => {\n    acc[propName] = getThemeValue_styleFunctionMapping[styleFnName];\n  });\n  return acc;\n}, {});\n\nfunction getThemeValue(prop, value, theme) {\n  const inputProps = {\n    [prop]: value,\n    theme\n  };\n  const styleFunction = propToStyleFunction[prop];\n  return styleFunction ? styleFunction(inputProps) : {\n    [prop]: value\n  };\n}\n\n/* harmony default export */ const esm_getThemeValue = ((/* unused pure expression or super */ null && (getThemeValue)));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js\n\n\n\n\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\n\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === \'function\' ? maybeFn(arg) : maybeFn;\n} // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nfunction unstable_createStyleFunctionSx(styleFunctionMapping = getThemeValue_styleFunctionMapping) {\n  const propToStyleFunction = Object.keys(styleFunctionMapping).reduce((acc, styleFnName) => {\n    styleFunctionMapping[styleFnName].filterProps.forEach(propName => {\n      acc[propName] = styleFunctionMapping[styleFnName];\n    });\n    return acc;\n  }, {});\n\n  function getThemeValue(prop, value, theme) {\n    const inputProps = {\n      [prop]: value,\n      theme\n    };\n    const styleFunction = propToStyleFunction[prop];\n    return styleFunction ? styleFunction(inputProps) : {\n      [prop]: value\n    };\n  }\n\n  function styleFunctionSx(props) {\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n\n\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n\n      if (typeof sxInput === \'function\') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== \'object\') {\n        // value\n        return sxInput;\n      }\n\n      if (!sxObject) {\n        return null;\n      }\n\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n\n        if (value !== null && value !== undefined) {\n          if (typeof value === \'object\') {\n            if (propToStyleFunction[styleKey]) {\n              css = esm_merge(css, getThemeValue(styleKey, value, theme));\n            } else {\n              const breakpointsValues = handleBreakpoints({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = esm_merge(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = esm_merge(css, getThemeValue(styleKey, value, theme));\n          }\n        }\n      });\n      return removeUnusedBreakpoints(breakpointsKeys, css);\n    }\n\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = [\'sx\'];\n/* harmony default export */ const styleFunctionSx_styleFunctionSx = (styleFunctionSx);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createStyled.js\n\n\nconst createStyled_excluded = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"],\n      _excluded2 = ["theme"],\n      _excluded3 = ["theme"];\n\n\n\n\n\n\nfunction createStyled_isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n\n  return null;\n};\n\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n\n  const variantsStyles = {};\n  variants.forEach(definition => {\n    const key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\n\nconst variantsResolver = (props, styles, theme, name) => {\n  var _theme$components, _theme$components$nam;\n\n  const {\n    ownerState = {}\n  } = props;\n  const variantsStyles = [];\n  const themeVariants = theme == null ? void 0 : (_theme$components = theme.components) == null ? void 0 : (_theme$components$nam = _theme$components[name]) == null ? void 0 : _theme$components$nam.variants;\n\n  if (themeVariants) {\n    themeVariants.forEach(themeVariant => {\n      let isMatch = true;\n      Object.keys(themeVariant.props).forEach(key => {\n        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n\n  return variantsStyles;\n}; // Update /system/styled/#api in case if this changes\n\n\nfunction shouldForwardProp(prop) {\n  return prop !== \'ownerState\' && prop !== \'theme\' && prop !== \'sx\' && prop !== \'as\';\n}\nconst systemDefaultTheme = createTheme_createTheme();\n\nconst lowercaseFirstLetter = string => {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\n\nfunction createStyled_createStyled(input = {}) {\n  const {\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp,\n    styleFunctionSx = styleFunctionSx_styleFunctionSx\n  } = input;\n  return (tag, inputOptions = {}) => {\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      overridesResolver\n    } = inputOptions,\n          options = _objectWithoutPropertiesLoose(inputOptions, createStyled_excluded); // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n\n\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : componentSlot && componentSlot !== \'Root\' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n\n    if (false) {}\n\n    let shouldForwardPropOption = shouldForwardProp;\n\n    if (componentSlot === \'Root\') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    }\n\n    const defaultStyledResolver = styled(tag, extends_extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n        // On the server Emotion doesn\'t use React.forwardRef for creating components, so the created\n        // component stays as a function. This condition makes sure that we do not interpolate functions\n        // which are basically components used as a selectors.\n        // eslint-disable-next-line no-underscore-dangle\n        return typeof stylesArg === \'function\' && stylesArg.__emotion_real !== stylesArg ? _ref => {\n          let {\n            theme: themeInput\n          } = _ref,\n              other = _objectWithoutPropertiesLoose(_ref, _excluded2);\n\n          return stylesArg(extends_extends({\n            theme: createStyled_isEmpty(themeInput) ? defaultTheme : themeInput\n          }, other));\n        } : stylesArg;\n      }) : [];\n      let transformedStyleArg = styleArg;\n\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = createStyled_isEmpty(props.theme) ? defaultTheme : props.theme;\n          const styleOverrides = getStyleOverrides(componentName, theme);\n\n          if (styleOverrides) {\n            const resolvedStyleOverrides = {};\n            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n              resolvedStyleOverrides[slotKey] = typeof slotStyle === \'function\' ? slotStyle(extends_extends({}, props, {\n                theme\n              })) : slotStyle;\n            });\n            return overridesResolver(props, resolvedStyleOverrides);\n          }\n\n          return null;\n        });\n      }\n\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = createStyled_isEmpty(props.theme) ? defaultTheme : props.theme;\n          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = createStyled_isEmpty(props.theme) ? defaultTheme : props.theme;\n          return styleFunctionSx(extends_extends({}, props, {\n            theme\n          }));\n        });\n      }\n\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill(\'\'); // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      } else if (typeof styleArg === \'function\' && // On the server Emotion doesn\'t use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      // eslint-disable-next-line no-underscore-dangle\n      styleArg.__emotion_real !== styleArg) {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = _ref2 => {\n          let {\n            theme: themeInput\n          } = _ref2,\n              other = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n\n          return styleArg(extends_extends({\n            theme: createStyled_isEmpty(themeInput) ? defaultTheme : themeInput\n          }, other));\n        };\n      }\n\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n\n      if (false) {}\n\n      return Component;\n    };\n\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n\n    return muiStyledResolver;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createMixins.js\n\nfunction createMixins(breakpoints, mixins) {\n  return extends_extends({\n    toolbar: {\n      minHeight: 56,\n      [breakpoints.up(\'xs\')]: {\n        \'@media (orientation: landscape)\': {\n          minHeight: 48\n        }\n      },\n      [breakpoints.up(\'sm\')]: {\n        minHeight: 64\n      }\n    }\n  }, mixins);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/common.js\nconst common = {\n  black: \'#000\',\n  white: \'#fff\'\n};\n/* harmony default export */ const colors_common = (common);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/grey.js\nconst grey = {\n  50: \'#fafafa\',\n  100: \'#f5f5f5\',\n  200: \'#eeeeee\',\n  300: \'#e0e0e0\',\n  400: \'#bdbdbd\',\n  500: \'#9e9e9e\',\n  600: \'#757575\',\n  700: \'#616161\',\n  800: \'#424242\',\n  900: \'#212121\',\n  A100: \'#f5f5f5\',\n  A200: \'#eeeeee\',\n  A400: \'#bdbdbd\',\n  A700: \'#616161\'\n};\n/* harmony default export */ const colors_grey = (grey);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/purple.js\nconst purple = {\n  50: \'#f3e5f5\',\n  100: \'#e1bee7\',\n  200: \'#ce93d8\',\n  300: \'#ba68c8\',\n  400: \'#ab47bc\',\n  500: \'#9c27b0\',\n  600: \'#8e24aa\',\n  700: \'#7b1fa2\',\n  800: \'#6a1b9a\',\n  900: \'#4a148c\',\n  A100: \'#ea80fc\',\n  A200: \'#e040fb\',\n  A400: \'#d500f9\',\n  A700: \'#aa00ff\'\n};\n/* harmony default export */ const colors_purple = (purple);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/red.js\nconst red = {\n  50: \'#ffebee\',\n  100: \'#ffcdd2\',\n  200: \'#ef9a9a\',\n  300: \'#e57373\',\n  400: \'#ef5350\',\n  500: \'#f44336\',\n  600: \'#e53935\',\n  700: \'#d32f2f\',\n  800: \'#c62828\',\n  900: \'#b71c1c\',\n  A100: \'#ff8a80\',\n  A200: \'#ff5252\',\n  A400: \'#ff1744\',\n  A700: \'#d50000\'\n};\n/* harmony default export */ const colors_red = (red);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/orange.js\nconst orange = {\n  50: \'#fff3e0\',\n  100: \'#ffe0b2\',\n  200: \'#ffcc80\',\n  300: \'#ffb74d\',\n  400: \'#ffa726\',\n  500: \'#ff9800\',\n  600: \'#fb8c00\',\n  700: \'#f57c00\',\n  800: \'#ef6c00\',\n  900: \'#e65100\',\n  A100: \'#ffd180\',\n  A200: \'#ffab40\',\n  A400: \'#ff9100\',\n  A700: \'#ff6d00\'\n};\n/* harmony default export */ const colors_orange = (orange);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/blue.js\nconst blue = {\n  50: \'#e3f2fd\',\n  100: \'#bbdefb\',\n  200: \'#90caf9\',\n  300: \'#64b5f6\',\n  400: \'#42a5f5\',\n  500: \'#2196f3\',\n  600: \'#1e88e5\',\n  700: \'#1976d2\',\n  800: \'#1565c0\',\n  900: \'#0d47a1\',\n  A100: \'#82b1ff\',\n  A200: \'#448aff\',\n  A400: \'#2979ff\',\n  A700: \'#2962ff\'\n};\n/* harmony default export */ const colors_blue = (blue);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/lightBlue.js\nconst lightBlue = {\n  50: \'#e1f5fe\',\n  100: \'#b3e5fc\',\n  200: \'#81d4fa\',\n  300: \'#4fc3f7\',\n  400: \'#29b6f6\',\n  500: \'#03a9f4\',\n  600: \'#039be5\',\n  700: \'#0288d1\',\n  800: \'#0277bd\',\n  900: \'#01579b\',\n  A100: \'#80d8ff\',\n  A200: \'#40c4ff\',\n  A400: \'#00b0ff\',\n  A700: \'#0091ea\'\n};\n/* harmony default export */ const colors_lightBlue = (lightBlue);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/green.js\nconst green = {\n  50: \'#e8f5e9\',\n  100: \'#c8e6c9\',\n  200: \'#a5d6a7\',\n  300: \'#81c784\',\n  400: \'#66bb6a\',\n  500: \'#4caf50\',\n  600: \'#43a047\',\n  700: \'#388e3c\',\n  800: \'#2e7d32\',\n  900: \'#1b5e20\',\n  A100: \'#b9f6ca\',\n  A200: \'#69f0ae\',\n  A400: \'#00e676\',\n  A700: \'#00c853\'\n};\n/* harmony default export */ const colors_green = (green);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createPalette.js\n\n\n\nconst createPalette_excluded = ["mode", "contrastThreshold", "tonalOffset"];\n\n\n\n\n\n\n\n\n\n\nconst light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: \'rgba(0, 0, 0, 0.87)\',\n    // Secondary text.\n    secondary: \'rgba(0, 0, 0, 0.6)\',\n    // Disabled text have even lower visual prominence.\n    disabled: \'rgba(0, 0, 0, 0.38)\'\n  },\n  // The color used to divide different elements.\n  divider: \'rgba(0, 0, 0, 0.12)\',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: colors_common.white,\n    default: colors_common.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: \'rgba(0, 0, 0, 0.54)\',\n    // The color of an hovered action.\n    hover: \'rgba(0, 0, 0, 0.04)\',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: \'rgba(0, 0, 0, 0.08)\',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: \'rgba(0, 0, 0, 0.26)\',\n    // The background color of a disabled action.\n    disabledBackground: \'rgba(0, 0, 0, 0.12)\',\n    disabledOpacity: 0.38,\n    focus: \'rgba(0, 0, 0, 0.12)\',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nconst dark = {\n  text: {\n    primary: colors_common.white,\n    secondary: \'rgba(255, 255, 255, 0.7)\',\n    disabled: \'rgba(255, 255, 255, 0.5)\',\n    icon: \'rgba(255, 255, 255, 0.5)\'\n  },\n  divider: \'rgba(255, 255, 255, 0.12)\',\n  background: {\n    paper: \'#121212\',\n    default: \'#121212\'\n  },\n  action: {\n    active: colors_common.white,\n    hover: \'rgba(255, 255, 255, 0.08)\',\n    hoverOpacity: 0.08,\n    selected: \'rgba(255, 255, 255, 0.16)\',\n    selectedOpacity: 0.16,\n    disabled: \'rgba(255, 255, 255, 0.3)\',\n    disabledBackground: \'rgba(255, 255, 255, 0.12)\',\n    disabledOpacity: 0.38,\n    focus: \'rgba(255, 255, 255, 0.12)\',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === \'light\') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === \'dark\') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\n\nfunction getDefaultPrimary(mode = \'light\') {\n  if (mode === \'dark\') {\n    return {\n      main: colors_blue[200],\n      light: colors_blue[50],\n      dark: colors_blue[400]\n    };\n  }\n\n  return {\n    main: colors_blue[700],\n    light: colors_blue[400],\n    dark: colors_blue[800]\n  };\n}\n\nfunction getDefaultSecondary(mode = \'light\') {\n  if (mode === \'dark\') {\n    return {\n      main: colors_purple[200],\n      light: colors_purple[50],\n      dark: colors_purple[400]\n    };\n  }\n\n  return {\n    main: colors_purple[500],\n    light: colors_purple[300],\n    dark: colors_purple[700]\n  };\n}\n\nfunction getDefaultError(mode = \'light\') {\n  if (mode === \'dark\') {\n    return {\n      main: colors_red[500],\n      light: colors_red[300],\n      dark: colors_red[700]\n    };\n  }\n\n  return {\n    main: colors_red[700],\n    light: colors_red[400],\n    dark: colors_red[800]\n  };\n}\n\nfunction getDefaultInfo(mode = \'light\') {\n  if (mode === \'dark\') {\n    return {\n      main: colors_lightBlue[400],\n      light: colors_lightBlue[300],\n      dark: colors_lightBlue[700]\n    };\n  }\n\n  return {\n    main: colors_lightBlue[700],\n    light: colors_lightBlue[500],\n    dark: colors_lightBlue[900]\n  };\n}\n\nfunction getDefaultSuccess(mode = \'light\') {\n  if (mode === \'dark\') {\n    return {\n      main: colors_green[400],\n      light: colors_green[300],\n      dark: colors_green[700]\n    };\n  }\n\n  return {\n    main: colors_green[800],\n    light: colors_green[500],\n    dark: colors_green[900]\n  };\n}\n\nfunction getDefaultWarning(mode = \'light\') {\n  if (mode === \'dark\') {\n    return {\n      main: colors_orange[400],\n      light: colors_orange[300],\n      dark: colors_orange[700]\n    };\n  }\n\n  return {\n    main: \'#ed6c02\',\n    // closest to orange[800] that pass 3:1.\n    light: colors_orange[500],\n    dark: colors_orange[900]\n  };\n}\n\nfunction createPalette(palette) {\n  const {\n    mode = \'light\',\n    contrastThreshold = 3,\n    tonalOffset = 0.2\n  } = palette,\n        other = _objectWithoutPropertiesLoose(palette, createPalette_excluded);\n\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n  function getContrastText(background) {\n    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (false) {}\n\n    return contrastText;\n  }\n\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = extends_extends({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (!color.hasOwnProperty(\'main\')) {\n      throw new Error( false ? 0 : formatMuiErrorMessage(11, name ? ` (${name})` : \'\', mainShade));\n    }\n\n    if (typeof color.main !== \'string\') {\n      throw new Error( false ? 0 : formatMuiErrorMessage(12, name ? ` (${name})` : \'\', JSON.stringify(color.main)));\n    }\n\n    addLightOrDark(color, \'light\', lightShade, tonalOffset);\n    addLightOrDark(color, \'dark\', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  const modes = {\n    dark,\n    light\n  };\n\n  if (false) {}\n\n  const paletteOutput = deepmerge_deepmerge(extends_extends({\n    // A collection of common colors.\n    common: extends_extends({}, colors_common),\n    // prevent mutable object.\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: \'primary\'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: \'secondary\',\n      mainShade: \'A400\',\n      lightShade: \'A200\',\n      darkShade: \'A700\'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: \'error\'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: \'warning\'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: \'info\'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: \'success\'\n    }),\n    // The grey colors.\n    grey: colors_grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color\'s luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTypography.js\n\n\nconst createTypography_excluded = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];\n\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst caseAllCaps = {\n  textTransform: \'uppercase\'\n};\nconst defaultFontFamily = \'"Roboto", "Helvetica", "Arial", sans-serif\';\n/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */\n\nfunction createTypography(palette, typography) {\n  const _ref = typeof typography === \'function\' ? typography(palette) : typography,\n        {\n    fontFamily = defaultFontFamily,\n    // The default font size of the Material Specification.\n    fontSize = 14,\n    // px\n    fontWeightLight = 300,\n    fontWeightRegular = 400,\n    fontWeightMedium = 500,\n    fontWeightBold = 700,\n    // Tell MUI what\'s the font-size on the html element.\n    // 16px is the default font-size used by browsers.\n    htmlFontSize = 16,\n    // Apply the CSS properties to all the variants.\n    allVariants,\n    pxToRem: pxToRem2\n  } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, createTypography_excluded);\n\n  if (false) {}\n\n  const coef = fontSize / 14;\n\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => extends_extends({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: `${round(letterSpacing / size)}em`\n  } : {}, casing, allVariants);\n\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return deepmerge_deepmerge(extends_extends({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/shadows.js\nconst shadowKeyUmbraOpacity = 0.2;\nconst shadowKeyPenumbraOpacity = 0.14;\nconst shadowAmbientShadowOpacity = 0.12;\n\nfunction createShadow(...px) {\n  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(\',\');\n} // Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\n\n\nconst shadows_shadows = [\'none\', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\n/* harmony default export */ const styles_shadows = (shadows_shadows);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTransitions.js\n\n\nconst createTransitions_excluded = ["duration", "easing", "delay"];\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nconst easing = {\n  // This is the most common easing curve.\n  easeInOut: \'cubic-bezier(0.4, 0, 0.2, 1)\',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: \'cubic-bezier(0.0, 0, 0.2, 1)\',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: \'cubic-bezier(0.4, 0, 1, 1)\',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: \'cubic-bezier(0.4, 0, 0.6, 1)\'\n}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nconst duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\n\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\n\nfunction getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n\n  const constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n\nfunction createTransitions(inputTransitions) {\n  const mergedEasing = extends_extends({}, easing, inputTransitions.easing);\n\n  const mergedDuration = extends_extends({}, duration, inputTransitions.duration);\n\n  const create = (props = [\'all\'], options = {}) => {\n    const {\n      duration: durationOption = mergedDuration.standard,\n      easing: easingOption = mergedEasing.easeInOut,\n      delay = 0\n    } = options,\n          other = _objectWithoutPropertiesLoose(options, createTransitions_excluded);\n\n    if (false) {}\n\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === \'string\' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === \'string\' ? delay : formatMs(delay)}`).join(\',\');\n  };\n\n  return extends_extends({\n    getAutoHeightDuration,\n    create\n  }, inputTransitions, {\n    easing: mergedEasing,\n    duration: mergedDuration\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/zIndex.js\n// We need to centralize the zIndex definitions as they work\n// like global values in the browser.\nconst zIndex_zIndex = {\n  mobileStepper: 1000,\n  fab: 1050,\n  speedDial: 1050,\n  appBar: 1100,\n  drawer: 1200,\n  modal: 1300,\n  snackbar: 1400,\n  tooltip: 1500\n};\n/* harmony default export */ const styles_zIndex = (zIndex_zIndex);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTheme.js\n\n\nconst styles_createTheme_excluded = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];\n\n\n\n\n\n\n\n\n\n\nfunction styles_createTheme_createTheme(options = {}, ...args) {\n  const {\n    mixins: mixinsInput = {},\n    palette: paletteInput = {},\n    transitions: transitionsInput = {},\n    typography: typographyInput = {}\n  } = options,\n        other = _objectWithoutPropertiesLoose(options, styles_createTheme_excluded);\n\n  const palette = createPalette(paletteInput);\n  const systemTheme = createTheme_createTheme(options);\n  let muiTheme = deepmerge_deepmerge(systemTheme, {\n    mixins: createMixins(systemTheme.breakpoints, mixinsInput),\n    palette,\n    // Don\'t use [...shadows] until you\'ve verified its transpiled code is not invoking the iterator protocol.\n    shadows: styles_shadows.slice(),\n    typography: createTypography(palette, typographyInput),\n    transitions: createTransitions(transitionsInput),\n    zIndex: extends_extends({}, styles_zIndex)\n  });\n  muiTheme = deepmerge_deepmerge(muiTheme, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge_deepmerge(acc, argument), muiTheme);\n\n  if (false) {}\n\n  return muiTheme;\n}\n\nlet warnedOnce = false;\nfunction createMuiTheme(...args) {\n  if (false) {}\n\n  return styles_createTheme_createTheme(...args);\n}\n/* harmony default export */ const styles_createTheme = (styles_createTheme_createTheme);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/defaultTheme.js\n\nconst defaultTheme = styles_createTheme();\n/* harmony default export */ const styles_defaultTheme = (defaultTheme);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/styled.js\n\n\nconst rootShouldForwardProp = prop => shouldForwardProp(prop) && prop !== \'classes\';\nconst slotShouldForwardProp = shouldForwardProp;\nconst styled_styled = createStyled_createStyled({\n  defaultTheme: styles_defaultTheme,\n  rootShouldForwardProp\n});\n/* harmony default export */ const styles_styled = (styled_styled);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/useThemeProps/getThemeProps.js\n\nfunction getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n\n  return resolveProps(theme.components[name].defaultProps, props);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/useTheme/ThemeContext.js\n\nconst ThemeContext_ThemeContext = /*#__PURE__*/react.createContext(null);\n\nif (false) {}\n\n/* harmony default export */ const useTheme_ThemeContext = (ThemeContext_ThemeContext);\n;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/useTheme/useTheme.js\n\n\nfunction useTheme_useTheme() {\n  const theme = react.useContext(useTheme_ThemeContext);\n\n  if (false) {}\n\n  return theme;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/useThemeWithoutDefault.js\n\n\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction useThemeWithoutDefault_useTheme(defaultTheme = null) {\n  const contextTheme = useTheme_useTheme();\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\n\n/* harmony default export */ const useThemeWithoutDefault = (useThemeWithoutDefault_useTheme);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/useTheme.js\n\n\nconst useTheme_systemDefaultTheme = createTheme_createTheme();\n\nfunction esm_useTheme_useTheme(defaultTheme = useTheme_systemDefaultTheme) {\n  return useThemeWithoutDefault(defaultTheme);\n}\n\n/* harmony default export */ const esm_useTheme = (esm_useTheme_useTheme);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/useThemeProps/useThemeProps.js\n\n\nfunction useThemeProps({\n  props,\n  name,\n  defaultTheme\n}) {\n  const theme = esm_useTheme(defaultTheme);\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/useThemeProps.js\n\n\nfunction useThemeProps_useThemeProps({\n  props,\n  name\n}) {\n  return useThemeProps({\n    props,\n    name,\n    defaultTheme: styles_defaultTheme\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/setRef.js\n/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nfunction setRef(ref, value) {\n  if (typeof ref === \'function\') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/useForkRef.js\n\n\nfunction useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return react.useMemo(() => {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return refValue => {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/useForkRef.js\n\n/* harmony default export */ const utils_useForkRef = (useForkRef);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/useEnhancedEffect.js\n\nconst useEnhancedEffect = typeof window !== \'undefined\' ? react.useLayoutEffect : react.useEffect;\n/* harmony default export */ const esm_useEnhancedEffect = (useEnhancedEffect);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/useEventCallback.js\n\n\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\n\nfunction useEventCallback(fn) {\n  const ref = react.useRef(fn);\n  esm_useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return react.useCallback((...args) => // @ts-expect-error hide `this`\n  // tslint:disable-next-line:ban-comma-operator\n  (0, ref.current)(...args), []);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/useEventCallback.js\n\n/* harmony default export */ const utils_useEventCallback = (useEventCallback);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/useIsFocusVisible.js\n// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\n\nlet hadKeyboardEvent = true;\nlet hadFocusVisibleRecently = false;\nlet hadFocusVisibleRecentlyTimeout;\nconst inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  \'datetime-local\': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @returns {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  const {\n    type,\n    tagName\n  } = node;\n\n  if (tagName === \'INPUT\' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === \'TEXTAREA\' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we\'re in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === \'hidden\') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener(\'keydown\', handleKeyDown, true);\n  doc.addEventListener(\'mousedown\', handlePointerDown, true);\n  doc.addEventListener(\'pointerdown\', handlePointerDown, true);\n  doc.addEventListener(\'touchstart\', handlePointerDown, true);\n  doc.addEventListener(\'visibilitychange\', handleVisibilityChange, true);\n}\n\nfunction teardown(doc) {\n  doc.removeEventListener(\'keydown\', handleKeyDown, true);\n  doc.removeEventListener(\'mousedown\', handlePointerDown, true);\n  doc.removeEventListener(\'pointerdown\', handlePointerDown, true);\n  doc.removeEventListener(\'touchstart\', handlePointerDown, true);\n  doc.removeEventListener(\'visibilitychange\', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  const {\n    target\n  } = event;\n\n  try {\n    return target.matches(\':focus-visible\');\n  } catch (error) {// Browsers not implementing :focus-visible will throw a SyntaxError.\n    // We use our own heuristic for those browsers.\n    // Rethrow might be better if it\'s not the expected error but do we really\n    // want to crash if focus-visible malfunctioned?\n  } // No need for validFocusTarget check. The user does that by attaching it to\n  // focusable events only.\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n\nfunction useIsFocusVisible() {\n  const ref = react.useCallback(node => {\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  const isFocusVisibleRef = react.useRef(false);\n  /**\n   * Should be called if a blur event is fired\n   */\n\n  function handleBlurVisible() {\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\n    // React wouldn\'t have time to trigger a re-render so `focusVisible` would be stale.\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\n    // This doesn\'t work in IE11 due to https://github.com/facebook/react/issues/3751\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\n    if (isFocusVisibleRef.current) {\n      // To detect a tab/window switch, we look for a blur event followed\n      // rapidly by a visibility change.\n      // If we don\'t see a visibility change within 100ms, it\'s probably a\n      // regular focus change.\n      hadFocusVisibleRecently = true;\n      window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {\n        hadFocusVisibleRecently = false;\n      }, 100);\n      isFocusVisibleRef.current = false;\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Should be called if a blur event is fired\n   */\n\n\n  function handleFocusVisible(event) {\n    if (isFocusVisible(event)) {\n      isFocusVisibleRef.current = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  return {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/useIsFocusVisible.js\n\n/* harmony default export */ const utils_useIsFocusVisible = (useIsFocusVisible);\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return self;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\n;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js\n\n/* harmony default export */ const TransitionGroupContext = (react.createContext(null));\n;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/ChildMapping.js\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nfunction getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && (0,react.isValidElement)(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) react.Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you\'re adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn\'t appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nfunction getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return (0,react.cloneElement)(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, \'appear\', props),\n      enter: getProp(child, \'enter\', props),\n      exit: getProp(child, \'exit\', props)\n    });\n  });\n}\nfunction getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!(0,react.isValidElement)(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = (0,react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log(\'entering\', key)\n      children[key] = (0,react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, \'exit\', nextProps),\n        enter: getProp(child, \'enter\', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log(\'leaving\', key)\n      children[key] = (0,react.cloneElement)(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && (0,react.isValidElement)(prevChild)) {\n      // item hasn\'t changed transition states\n      // copy over the last transition props;\n      // console.log(\'unchanged\', key)\n      children[key] = (0,react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, \'exit\', nextProps),\n        enter: getProp(child, \'enter\', nextProps)\n      });\n    }\n  });\n  return children;\n}\n;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js\n\n\n\n\n\n\n\n\n\nvar TransitionGroup_values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: \'div\',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = extends_extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);\n\n    var contextValue = this.state.contextValue;\n    var children = TransitionGroup_values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/react.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/react.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/react.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(react.Component);\n\nTransitionGroup.propTypes =  false ? 0 : {};\nTransitionGroup.defaultProps = defaultProps;\n/* harmony default export */ const esm_TransitionGroup = (TransitionGroup);\n// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(679);\n;// CONCATENATED MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\n\n\n\n\n\n\n\n\n\n\n\n\nvar pkg = {\n\tname: "@emotion/react",\n\tversion: "11.9.3",\n\tmain: "dist/emotion-react.cjs.js",\n\tmodule: "dist/emotion-react.esm.js",\n\tbrowser: {\n\t\t"./dist/emotion-react.cjs.js": "./dist/emotion-react.browser.cjs.js",\n\t\t"./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"\n\t},\n\ttypes: "types/index.d.ts",\n\tfiles: [\n\t\t"src",\n\t\t"dist",\n\t\t"jsx-runtime",\n\t\t"jsx-dev-runtime",\n\t\t"_isolated-hnrs",\n\t\t"types/*.d.ts",\n\t\t"macro.js",\n\t\t"macro.d.ts",\n\t\t"macro.js.flow"\n\t],\n\tsideEffects: false,\n\tauthor: "Emotion Contributors",\n\tlicense: "MIT",\n\tscripts: {\n\t\t"test:typescript": "dtslint types"\n\t},\n\tdependencies: {\n\t\t"@babel/runtime": "^7.13.10",\n\t\t"@emotion/babel-plugin": "^11.7.1",\n\t\t"@emotion/cache": "^11.9.3",\n\t\t"@emotion/serialize": "^1.0.4",\n\t\t"@emotion/utils": "^1.1.0",\n\t\t"@emotion/weak-memoize": "^0.2.5",\n\t\t"hoist-non-react-statics": "^3.3.1"\n\t},\n\tpeerDependencies: {\n\t\t"@babel/core": "^7.0.0",\n\t\treact: ">=16.8.0"\n\t},\n\tpeerDependenciesMeta: {\n\t\t"@babel/core": {\n\t\t\toptional: true\n\t\t},\n\t\t"@types/react": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t"@babel/core": "^7.13.10",\n\t\t"@definitelytyped/dtslint": "0.0.112",\n\t\t"@emotion/css": "11.9.0",\n\t\t"@emotion/css-prettifier": "1.0.1",\n\t\t"@emotion/server": "11.4.0",\n\t\t"@emotion/styled": "11.9.3",\n\t\t"html-tag-names": "^1.1.2",\n\t\treact: "16.14.0",\n\t\t"svg-tag-names": "^1.1.1",\n\t\ttypescript: "^4.5.5"\n\t},\n\trepository: "https://github.com/emotion-js/emotion/tree/main/packages/react",\n\tpublishConfig: {\n\t\taccess: "public"\n\t},\n\t"umd:main": "dist/emotion-react.umd.min.js",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t"./index.js",\n\t\t\t"./jsx-runtime.js",\n\t\t\t"./jsx-dev-runtime.js",\n\t\t\t"./_isolated-hnrs.js"\n\t\t],\n\t\tumdName: "emotionReact"\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, \'css\')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar emotion_react_browser_esm_useInsertionEffect = react_namespaceObject[\'useInsertion\' + \'Effect\'] ? react_namespaceObject[\'useInsertion\' + \'Effect\'] : react.useLayoutEffect;\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn\'t been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */emotion_element_cbed451f_browser_esm_withEmotionCache(function (props, cache) {\n  if (false) {}\n\n  var styles = props.styles;\n  var serialized = emotion_serialize_browser_esm_serializeStyles([styles], undefined, (0,react.useContext)(emotion_element_cbed451f_browser_esm_ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it\'s effectively like having two implementations and switching them out\n  // so it\'s not actually breaking anything\n\n\n  var sheetRef = (0,react.useRef)();\n  emotion_react_browser_esm_useInsertionEffect(function () {\n    var key = cache.key + "-global"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector("style[data-emotion=\\"" + key + " " + serialized.name + "\\"]");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won\'t be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute(\'data-emotion\', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  emotion_react_browser_esm_useInsertionEffect(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      emotion_utils_browser_esm_insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn\'t exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert("", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (false) {}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return emotion_serialize_browser_esm_serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = "animation-" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: "@keyframes " + name + "{" + insertable.styles + "}",\n    anim: 1,\n    toString: function toString() {\n      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = \'\';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case \'boolean\':\n        break;\n\n      case \'object\':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (false) {}\n\n            toAdd = \'\';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += \' \');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += \' \');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction emotion_react_browser_esm_merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar emotion_react_browser_esm_Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  var rules = useInsertionEffectMaybe(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      var res = insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */(/* unused pure expression or super */ null && (withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && "production" !== \'production\') {}\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + "-" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && "production" !== \'production\') {}\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return emotion_react_browser_esm_merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(emotion_react_browser_esm_Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n})));\n\nif (false) {}\n\nif (false) { var globalKey, globalContext, isJest, emotion_react_browser_esm_isBrowser; }\n\n\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(893);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/Ripple.js\n\n\n\n/**\n * @ignore - internal component.\n */\n\n\n\nfunction Ripple(props) {\n  const {\n    className,\n    classes,\n    pulsate = false,\n    rippleX,\n    rippleY,\n    rippleSize,\n    in: inProp,\n    onExited,\n    timeout\n  } = props;\n  const [leaving, setLeaving] = react.useState(false);\n  const rippleClassName = clsx_m(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  const rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  const childClassName = clsx_m(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n\n  if (!inProp && !leaving) {\n    setLeaving(true);\n  }\n\n  react.useEffect(() => {\n    if (!inProp && onExited != null) {\n      // react-transition-group#onExited\n      const timeoutId = setTimeout(onExited, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [onExited, inProp, timeout]);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n    className: rippleClassName,\n    style: rippleStyles,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n      className: childClassName\n    })\n  });\n}\n\n false ? 0 : void 0;\n/* harmony default export */ const ButtonBase_Ripple = (Ripple);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js\nconst defaultGenerator = componentName => componentName;\n\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n\n    generate(componentName) {\n      return generate(componentName);\n    },\n\n    reset() {\n      generate = defaultGenerator;\n    }\n\n  };\n};\n\nconst ClassNameGenerator = createClassNameGenerator();\n/* harmony default export */ const ClassNameGenerator_ClassNameGenerator = (ClassNameGenerator);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js\n\nconst globalStateClassesMapping = {\n  active: \'active\',\n  checked: \'checked\',\n  completed: \'completed\',\n  disabled: \'disabled\',\n  error: \'error\',\n  expanded: \'expanded\',\n  focused: \'focused\',\n  focusVisible: \'focusVisible\',\n  required: \'required\',\n  selected: \'selected\'\n};\nfunction generateUtilityClass_generateUtilityClass(componentName, slot, globalStatePrefix = \'Mui\') {\n  const globalStateClass = globalStateClassesMapping[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator_ClassNameGenerator.generate(componentName)}-${slot}`;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js\n\nfunction generateUtilityClasses(componentName, slots, globalStatePrefix = \'Mui\') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass_generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/touchRippleClasses.js\n\nfunction getTouchRippleUtilityClass(slot) {\n  return generateUtilityClass(\'MuiTouchRipple\', slot);\n}\nconst touchRippleClasses = generateUtilityClasses(\'MuiTouchRipple\', [\'root\', \'ripple\', \'rippleVisible\', \'ripplePulsate\', \'child\', \'childLeaving\', \'childPulsate\']);\n/* harmony default export */ const ButtonBase_touchRippleClasses = (touchRippleClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/TouchRipple.js\n\n\nconst TouchRipple_excluded = ["center", "classes", "className"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\n\n\n\n\n\n\n\n\n\n\nconst DURATION = 550;\nconst DELAY_RIPPLE = 80;\nconst enterKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n`));\nconst exitKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`));\nconst pulsateKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`));\nconst TouchRippleRoot = styles_styled(\'span\', {\n  name: \'MuiTouchRipple\',\n  slot: \'Root\'\n})({\n  overflow: \'hidden\',\n  pointerEvents: \'none\',\n  position: \'absolute\',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: \'inherit\'\n}); // This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\n\nconst TouchRippleRipple = styles_styled(ButtonBase_Ripple, {\n  name: \'MuiTouchRipple\',\n  slot: \'Ripple\'\n})(_t4 || (_t4 = _`\n  opacity: 0;\n  position: absolute;\n\n  &.${0} {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  &.${0} {\n    animation-duration: ${0}ms;\n  }\n\n  & .${0} {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .${0} {\n    opacity: 0;\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  & .${0} {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ${0};\n    animation-duration: 2500ms;\n    animation-timing-function: ${0};\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n`), ButtonBase_touchRippleClasses.rippleVisible, enterKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, ButtonBase_touchRippleClasses.ripplePulsate, ({\n  theme\n}) => theme.transitions.duration.shorter, ButtonBase_touchRippleClasses.child, ButtonBase_touchRippleClasses.childLeaving, exitKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, ButtonBase_touchRippleClasses.childPulsate, pulsateKeyframe, ({\n  theme\n}) => theme.transitions.easing.easeInOut);\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nconst TouchRipple = /*#__PURE__*/react.forwardRef(function TouchRipple(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiTouchRipple\'\n  });\n\n  const {\n    center: centerProp = false,\n    classes = {},\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, TouchRipple_excluded);\n\n  const [ripples, setRipples] = react.useState([]);\n  const nextKey = react.useRef(0);\n  const rippleCallback = react.useRef(null);\n  react.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  const ignoringMouseDown = react.useRef(false); // We use a timer in order to only show the ripples for touch "click" like events.\n  // We don\'t want to display the ripple for touch scroll events.\n\n  const startTimer = react.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  const startTimerCommit = react.useRef(null);\n  const container = react.useRef(null);\n  react.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  const startCommit = react.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/(0,jsx_runtime.jsx)(TouchRippleRipple, {\n      classes: {\n        ripple: clsx_m(classes.ripple, ButtonBase_touchRippleClasses.ripple),\n        rippleVisible: clsx_m(classes.rippleVisible, ButtonBase_touchRippleClasses.rippleVisible),\n        ripplePulsate: clsx_m(classes.ripplePulsate, ButtonBase_touchRippleClasses.ripplePulsate),\n        child: clsx_m(classes.child, ButtonBase_touchRippleClasses.child),\n        childLeaving: clsx_m(classes.childLeaving, ButtonBase_touchRippleClasses.childLeaving),\n        childPulsate: clsx_m(classes.childPulsate, ButtonBase_touchRippleClasses.childPulsate)\n      },\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    }, nextKey.current)]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = react.useCallback((event = {}, options = {}, cb) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n\n    } = options;\n\n    if ((event == null ? void 0 : event.type) === \'mousedown\' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if ((event == null ? void 0 : event.type) === \'touchstart\') {\n      ignoringMouseDown.current = true;\n    }\n\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n\n    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3); // For some reason the animation is broken on Mobile Chrome if the size is even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    } // Touche devices\n\n\n    if (event != null && event.touches) {\n      // check that this isn\'t another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = react.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = react.useCallback((event, cb) => {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if ((event == null ? void 0 : event.type) === \'touchend\' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  react.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(TouchRippleRoot, extends_extends({\n    className: clsx_m(classes.root, ButtonBase_touchRippleClasses.root, className),\n    ref: container\n  }, other, {\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(esm_TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const ButtonBase_TouchRipple = (TouchRipple);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/buttonBaseClasses.js\n\nfunction getButtonBaseUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiButtonBase\', slot);\n}\nconst buttonBaseClasses = generateUtilityClasses(\'MuiButtonBase\', [\'root\', \'disabled\', \'focusVisible\']);\n/* harmony default export */ const ButtonBase_buttonBaseClasses = (buttonBaseClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js\n\n\nconst ButtonBase_excluded = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\', disabled && \'disabled\', focusVisible && \'focusVisible\']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nconst ButtonBaseRoot = styles_styled(\'button\', {\n  name: \'MuiButtonBase\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: \'inline-flex\',\n  alignItems: \'center\',\n  justifyContent: \'center\',\n  position: \'relative\',\n  boxSizing: \'border-box\',\n  WebkitTapHighlightColor: \'transparent\',\n  backgroundColor: \'transparent\',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: \'pointer\',\n  userSelect: \'none\',\n  verticalAlign: \'middle\',\n  MozAppearance: \'none\',\n  // Reset\n  WebkitAppearance: \'none\',\n  // Reset\n  textDecoration: \'none\',\n  // So we take precedent over the style of a native <a /> element.\n  color: \'inherit\',\n  \'&::-moz-focus-inner\': {\n    borderStyle: \'none\' // Remove Firefox dotted outline.\n\n  },\n  [`&.${ButtonBase_buttonBaseClasses.disabled}`]: {\n    pointerEvents: \'none\',\n    // Disable link interactions\n    cursor: \'default\'\n  },\n  \'@media print\': {\n    colorAdjust: \'exact\'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/react.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiButtonBase\'\n  });\n\n  const {\n    action,\n    centerRipple = false,\n    children,\n    className,\n    component = \'button\',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    LinkComponent = \'a\',\n    onBlur,\n    onClick,\n    onContextMenu,\n    onDragLeave,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    tabIndex = 0,\n    TouchRippleProps,\n    touchRippleRef,\n    type\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, ButtonBase_excluded);\n\n  const buttonRef = react.useRef(null);\n  const rippleRef = react.useRef(null);\n  const handleRippleRef = utils_useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = utils_useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = react.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  react.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = react.useState(false);\n  react.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  react.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return utils_useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler(\'start\', onMouseDown);\n  const handleContextMenu = useRippleHandler(\'stop\', onContextMenu);\n  const handleDragLeave = useRippleHandler(\'stop\', onDragLeave);\n  const handleMouseUp = useRippleHandler(\'stop\', onMouseUp);\n  const handleMouseLeave = useRippleHandler(\'stop\', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler(\'start\', onTouchStart);\n  const handleTouchEnd = useRippleHandler(\'stop\', onTouchEnd);\n  const handleTouchMove = useRippleHandler(\'stop\', onTouchMove);\n  const handleBlur = useRippleHandler(\'stop\', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = utils_useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== \'button\' && !(button.tagName === \'A\' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = react.useRef(false);\n  const handleKeyDown = utils_useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === \' \') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === \' \') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === \'Enter\' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = utils_useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === \' \' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === \' \' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === \'button\' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === \'button\') {\n    buttonProps.type = type === undefined ? \'button\' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = \'button\';\n    }\n\n    if (disabled) {\n      buttonProps[\'aria-disabled\'] = disabled;\n    }\n  }\n\n  const handleOwnRef = utils_useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = utils_useForkRef(ref, handleOwnRef);\n\n  if (false) {}\n\n  const ownerState = extends_extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(ButtonBaseRoot, extends_extends({\n    as: ComponentProp,\n    className: clsx_m(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    (0,jsx_runtime.jsx)(ButtonBase_TouchRipple, extends_extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const ButtonBase_ButtonBase = (ButtonBase);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/capitalize.js\n\n/* harmony default export */ const utils_capitalize = (capitalize);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Button/buttonClasses.js\n\nfunction getButtonUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiButton\', slot);\n}\nconst buttonClasses = generateUtilityClasses(\'MuiButton\', [\'root\', \'text\', \'textInherit\', \'textPrimary\', \'textSecondary\', \'textSuccess\', \'textError\', \'textInfo\', \'textWarning\', \'outlined\', \'outlinedInherit\', \'outlinedPrimary\', \'outlinedSecondary\', \'outlinedSuccess\', \'outlinedError\', \'outlinedInfo\', \'outlinedWarning\', \'contained\', \'containedInherit\', \'containedPrimary\', \'containedSecondary\', \'containedSuccess\', \'containedError\', \'containedInfo\', \'containedWarning\', \'disableElevation\', \'focusVisible\', \'disabled\', \'colorInherit\', \'textSizeSmall\', \'textSizeMedium\', \'textSizeLarge\', \'outlinedSizeSmall\', \'outlinedSizeMedium\', \'outlinedSizeLarge\', \'containedSizeSmall\', \'containedSizeMedium\', \'containedSizeLarge\', \'sizeMedium\', \'sizeSmall\', \'sizeLarge\', \'fullWidth\', \'startIcon\', \'endIcon\', \'iconSizeSmall\', \'iconSizeMedium\', \'iconSizeLarge\']);\n/* harmony default export */ const Button_buttonClasses = (buttonClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonGroup/ButtonGroupContext.js\n\n\n/**\n * @ignore - internal component.\n */\nconst ButtonGroupContext = /*#__PURE__*/react.createContext({});\n\nif (false) {}\n\n/* harmony default export */ const ButtonGroup_ButtonGroupContext = (ButtonGroupContext);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Button/Button.js\n\n\nconst Button_excluded = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Button_useUtilityClasses = ownerState => {\n  const {\n    color,\n    disableElevation,\n    fullWidth,\n    size,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\', variant, `${variant}${utils_capitalize(color)}`, `size${utils_capitalize(size)}`, `${variant}Size${utils_capitalize(size)}`, color === \'inherit\' && \'colorInherit\', disableElevation && \'disableElevation\', fullWidth && \'fullWidth\'],\n    label: [\'label\'],\n    startIcon: [\'startIcon\', `iconSize${utils_capitalize(size)}`],\n    endIcon: [\'endIcon\', `iconSize${utils_capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getButtonUtilityClass, classes);\n  return extends_extends({}, classes, composedClasses);\n};\n\nconst commonIconStyles = ownerState => extends_extends({}, ownerState.size === \'small\' && {\n  \'& > *:nth-of-type(1)\': {\n    fontSize: 18\n  }\n}, ownerState.size === \'medium\' && {\n  \'& > *:nth-of-type(1)\': {\n    fontSize: 20\n  }\n}, ownerState.size === \'large\' && {\n  \'& > *:nth-of-type(1)\': {\n    fontSize: 22\n  }\n});\n\nconst ButtonRoot = styles_styled(ButtonBase_ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === \'classes\',\n  name: \'MuiButton\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${utils_capitalize(ownerState.color)}`], styles[`size${utils_capitalize(ownerState.size)}`], styles[`${ownerState.variant}Size${utils_capitalize(ownerState.size)}`], ownerState.color === \'inherit\' && styles.colorInherit, ownerState.disableElevation && styles.disableElevation, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$palette$getCon, _theme$palette;\n\n  return extends_extends({}, theme.typography.button, {\n    minWidth: 64,\n    padding: \'6px 16px\',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    transition: theme.transitions.create([\'background-color\', \'box-shadow\', \'border-color\', \'color\'], {\n      duration: theme.transitions.duration.short\n    }),\n    \'&:hover\': extends_extends({\n      textDecoration: \'none\',\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn\'t add specificity\n      \'@media (hover: none)\': {\n        backgroundColor: \'transparent\'\n      }\n    }, ownerState.variant === \'text\' && ownerState.color !== \'inherit\' && {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn\'t add specificity\n      \'@media (hover: none)\': {\n        backgroundColor: \'transparent\'\n      }\n    }, ownerState.variant === \'outlined\' && ownerState.color !== \'inherit\' && {\n      border: `1px solid ${(theme.vars || theme).palette[ownerState.color].main}`,\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn\'t add specificity\n      \'@media (hover: none)\': {\n        backgroundColor: \'transparent\'\n      }\n    }, ownerState.variant === \'contained\' && {\n      backgroundColor: (theme.vars || theme).palette.grey.A100,\n      boxShadow: (theme.vars || theme).shadows[4],\n      // Reset on touch devices, it doesn\'t add specificity\n      \'@media (hover: none)\': {\n        boxShadow: (theme.vars || theme).shadows[2],\n        backgroundColor: (theme.vars || theme).palette.grey[300]\n      }\n    }, ownerState.variant === \'contained\' && ownerState.color !== \'inherit\' && {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,\n      // Reset on touch devices, it doesn\'t add specificity\n      \'@media (hover: none)\': {\n        backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n      }\n    }),\n    \'&:active\': extends_extends({}, ownerState.variant === \'contained\' && {\n      boxShadow: (theme.vars || theme).shadows[8]\n    }),\n    [`&.${Button_buttonClasses.focusVisible}`]: extends_extends({}, ownerState.variant === \'contained\' && {\n      boxShadow: (theme.vars || theme).shadows[6]\n    }),\n    [`&.${Button_buttonClasses.disabled}`]: extends_extends({\n      color: (theme.vars || theme).palette.action.disabled\n    }, ownerState.variant === \'outlined\' && {\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    }, ownerState.variant === \'outlined\' && ownerState.color === \'secondary\' && {\n      border: `1px solid ${(theme.vars || theme).palette.action.disabled}`\n    }, ownerState.variant === \'contained\' && {\n      color: (theme.vars || theme).palette.action.disabled,\n      boxShadow: (theme.vars || theme).shadows[0],\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    })\n  }, ownerState.variant === \'text\' && {\n    padding: \'6px 8px\'\n  }, ownerState.variant === \'text\' && ownerState.color !== \'inherit\' && {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.variant === \'outlined\' && {\n    padding: \'5px 15px\',\n    border: \'1px solid currentColor\'\n  }, ownerState.variant === \'outlined\' && ownerState.color !== \'inherit\' && {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    border: theme.vars ? `1px solid rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : `1px solid ${alpha(theme.palette[ownerState.color].main, 0.5)}`\n  }, ownerState.variant === \'contained\' && {\n    color: theme.vars ? // this is safe because grey does not change between default light/dark mode\n    theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),\n    backgroundColor: (theme.vars || theme).palette.grey[300],\n    boxShadow: (theme.vars || theme).shadows[2]\n  }, ownerState.variant === \'contained\' && ownerState.color !== \'inherit\' && {\n    color: (theme.vars || theme).palette[ownerState.color].contrastText,\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.color === \'inherit\' && {\n    color: \'inherit\',\n    borderColor: \'currentColor\'\n  }, ownerState.size === \'small\' && ownerState.variant === \'text\' && {\n    padding: \'4px 5px\',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === \'large\' && ownerState.variant === \'text\' && {\n    padding: \'8px 11px\',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === \'small\' && ownerState.variant === \'outlined\' && {\n    padding: \'3px 9px\',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === \'large\' && ownerState.variant === \'outlined\' && {\n    padding: \'7px 21px\',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === \'small\' && ownerState.variant === \'contained\' && {\n    padding: \'4px 10px\',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === \'large\' && ownerState.variant === \'contained\' && {\n    padding: \'8px 22px\',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.fullWidth && {\n    width: \'100%\'\n  });\n}, ({\n  ownerState\n}) => ownerState.disableElevation && {\n  boxShadow: \'none\',\n  \'&:hover\': {\n    boxShadow: \'none\'\n  },\n  [`&.${Button_buttonClasses.focusVisible}`]: {\n    boxShadow: \'none\'\n  },\n  \'&:active\': {\n    boxShadow: \'none\'\n  },\n  [`&.${Button_buttonClasses.disabled}`]: {\n    boxShadow: \'none\'\n  }\n});\nconst ButtonStartIcon = styles_styled(\'span\', {\n  name: \'MuiButton\',\n  slot: \'StartIcon\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.startIcon, styles[`iconSize${utils_capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => extends_extends({\n  display: \'inherit\',\n  marginRight: 8,\n  marginLeft: -4\n}, ownerState.size === \'small\' && {\n  marginLeft: -2\n}, commonIconStyles(ownerState)));\nconst ButtonEndIcon = styles_styled(\'span\', {\n  name: \'MuiButton\',\n  slot: \'EndIcon\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.endIcon, styles[`iconSize${utils_capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => extends_extends({\n  display: \'inherit\',\n  marginRight: -4,\n  marginLeft: 8\n}, ownerState.size === \'small\' && {\n  marginRight: -2\n}, commonIconStyles(ownerState)));\nconst Button = /*#__PURE__*/react.forwardRef(function Button(inProps, ref) {\n  // props priority: `inProps` > `contextProps` > `themeDefaultProps`\n  const contextProps = react.useContext(ButtonGroup_ButtonGroupContext);\n  const resolvedProps = resolveProps(contextProps, inProps);\n  const props = useThemeProps_useThemeProps({\n    props: resolvedProps,\n    name: \'MuiButton\'\n  });\n\n  const {\n    children,\n    color = \'primary\',\n    component = \'button\',\n    className,\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    endIcon: endIconProp,\n    focusVisibleClassName,\n    fullWidth = false,\n    size = \'medium\',\n    startIcon: startIconProp,\n    type,\n    variant = \'text\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Button_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    fullWidth,\n    size,\n    type,\n    variant\n  });\n\n  const classes = Button_useUtilityClasses(ownerState);\n\n  const startIcon = startIconProp && /*#__PURE__*/(0,jsx_runtime.jsx)(ButtonStartIcon, {\n    className: classes.startIcon,\n    ownerState: ownerState,\n    children: startIconProp\n  });\n\n  const endIcon = endIconProp && /*#__PURE__*/(0,jsx_runtime.jsx)(ButtonEndIcon, {\n    className: classes.endIcon,\n    ownerState: ownerState,\n    children: endIconProp\n  });\n\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(ButtonRoot, extends_extends({\n    ownerState: ownerState,\n    className: clsx_m(className, contextProps.className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx_m(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other, {\n    classes: classes,\n    children: [startIcon, children, endIcon]\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const Button_Button = (Button);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/InputBase/utils.js\n// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including \'\') or number (including zero)\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nfunction isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== \'\' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== \'\');\n} // Determine if an Input is adorned on start.\n// It\'s corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nfunction isAdornedStart(obj) {\n  return obj.startAdornment;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/isMuiElement.js\n\nfunction isMuiElement(element, muiNames) {\n  return /*#__PURE__*/react.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/isMuiElement.js\n\n/* harmony default export */ const utils_isMuiElement = (isMuiElement);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/FormControlContext.js\n\n/**\n * @ignore - internal component.\n */\n\nconst FormControlContext = /*#__PURE__*/react.createContext();\n\nif (false) {}\n\n/* harmony default export */ const FormControl_FormControlContext = (FormControlContext);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/formControlClasses.js\n\nfunction getFormControlUtilityClasses(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiFormControl\', slot);\n}\nconst formControlClasses = generateUtilityClasses(\'MuiFormControl\', [\'root\', \'marginNone\', \'marginNormal\', \'marginDense\', \'fullWidth\', \'disabled\']);\n/* harmony default export */ const FormControl_formControlClasses = ((/* unused pure expression or super */ null && (formControlClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/FormControl.js\n\n\nconst FormControl_excluded = ["children", "className", "color", "component", "disabled", "error", "focused", "fullWidth", "hiddenLabel", "margin", "required", "size", "variant"];\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst FormControl_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: [\'root\', margin !== \'none\' && `margin${utils_capitalize(margin)}`, fullWidth && \'fullWidth\']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\n\nconst FormControlRoot = styles_styled(\'div\', {\n  name: \'MuiFormControl\',\n  slot: \'Root\',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return extends_extends({}, styles.root, styles[`margin${utils_capitalize(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(({\n  ownerState\n}) => extends_extends({\n  display: \'inline-flex\',\n  flexDirection: \'column\',\n  position: \'relative\',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: \'top\'\n}, ownerState.margin === \'normal\' && {\n  marginTop: 16,\n  marginBottom: 8\n}, ownerState.margin === \'dense\' && {\n  marginTop: 8,\n  marginBottom: 4\n}, ownerState.fullWidth && {\n  width: \'100%\'\n}));\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor="my-input">Email address</InputLabel>\n *   <Input id="my-input" aria-describedby="my-helper-text" />\n *   <FormHelperText id="my-helper-text">We\'ll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn\'t be shared.\n */\n\nconst FormControl = /*#__PURE__*/react.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiFormControl\'\n  });\n\n  const {\n    children,\n    className,\n    color = \'primary\',\n    component = \'div\',\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = \'none\',\n    required = false,\n    size = \'medium\',\n    variant = \'outlined\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, FormControl_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n\n  const classes = FormControl_useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = react.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n\n    if (children) {\n      react.Children.forEach(children, child => {\n        if (!utils_isMuiElement(child, [\'Input\', \'Select\'])) {\n          return;\n        }\n\n        const input = utils_isMuiElement(child, [\'Select\']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = react.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n\n    if (children) {\n      react.Children.forEach(children, child => {\n        if (!utils_isMuiElement(child, [\'Input\', \'Select\'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = react.useState(false);\n\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n\n  if (false) {}\n\n  const onFilled = react.useCallback(() => {\n    setFilled(true);\n  }, []);\n  const onEmpty = react.useCallback(() => {\n    setFilled(false);\n  }, []);\n  const childContext = {\n    adornedStart,\n    setAdornedStart,\n    color,\n    disabled,\n    error,\n    filled,\n    focused,\n    fullWidth,\n    hiddenLabel,\n    size,\n    onBlur: () => {\n      setFocused(false);\n    },\n    onEmpty,\n    onFilled,\n    onFocus: () => {\n      setFocused(true);\n    },\n    registerEffect,\n    required,\n    variant\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(FormControl_FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(FormControlRoot, extends_extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx_m(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const FormControl_FormControl = (FormControl);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/formControlState.js\nfunction formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === \'undefined\') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/useFormControl.js\n\n\nfunction useFormControl() {\n  return react.useContext(FormControl_FormControlContext);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/FormLabel/formLabelClasses.js\n\nfunction getFormLabelUtilityClasses(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiFormLabel\', slot);\n}\nconst formLabelClasses = generateUtilityClasses(\'MuiFormLabel\', [\'root\', \'colorSecondary\', \'focused\', \'disabled\', \'error\', \'filled\', \'required\', \'asterisk\']);\n/* harmony default export */ const FormLabel_formLabelClasses = (formLabelClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/FormLabel/FormLabel.js\n\n\nconst FormLabel_excluded = ["children", "className", "color", "component", "disabled", "error", "filled", "focused", "required"];\n\n\n\n\n\n\n\n\n\n\n\n\nconst FormLabel_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = ownerState;\n  const slots = {\n    root: [\'root\', `color${utils_capitalize(color)}`, disabled && \'disabled\', error && \'error\', filled && \'filled\', focused && \'focused\', required && \'required\'],\n    asterisk: [\'asterisk\', error && \'error\']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\n\nconst FormLabelRoot = styles_styled(\'label\', {\n  name: \'MuiFormLabel\',\n  slot: \'Root\',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return extends_extends({}, styles.root, ownerState.color === \'secondary\' && styles.colorSecondary, ownerState.filled && styles.filled);\n  }\n})(({\n  theme,\n  ownerState\n}) => extends_extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, theme.typography.body1, {\n  lineHeight: \'1.4375em\',\n  padding: 0,\n  position: \'relative\',\n  [`&.${FormLabel_formLabelClasses.focused}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${FormLabel_formLabelClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${FormLabel_formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst AsteriskComponent = styles_styled(\'span\', {\n  name: \'MuiFormLabel\',\n  slot: \'Asterisk\',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${FormLabel_formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/react.forwardRef(function FormLabel(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiFormLabel\'\n  });\n\n  const {\n    children,\n    className,\n    component = \'label\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, FormLabel_excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: [\'color\', \'required\', \'focused\', \'disabled\', \'error\', \'filled\']\n  });\n\n  const ownerState = extends_extends({}, props, {\n    color: fcs.color || \'primary\',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = FormLabel_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(FormLabelRoot, extends_extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx_m(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/(0,jsx_runtime.jsxs)(AsteriskComponent, {\n      ownerState: ownerState,\n      "aria-hidden": true,\n      className: classes.asterisk,\n      children: ["\\u2009", \'*\']\n    })]\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const FormLabel_FormLabel = (FormLabel);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/InputLabel/inputLabelClasses.js\n\nfunction getInputLabelUtilityClasses(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiInputLabel\', slot);\n}\nconst inputLabelClasses = generateUtilityClasses(\'MuiInputLabel\', [\'root\', \'focused\', \'disabled\', \'error\', \'required\', \'asterisk\', \'formControl\', \'sizeSmall\', \'shrink\', \'animated\', \'standard\', \'filled\', \'outlined\']);\n/* harmony default export */ const InputLabel_inputLabelClasses = ((/* unused pure expression or super */ null && (inputLabelClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/InputLabel/InputLabel.js\n\n\nconst InputLabel_excluded = ["disableAnimation", "margin", "shrink", "variant"];\n\n\n\n\n\n\n\n\n\n\n\nconst InputLabel_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    formControl,\n    size,\n    shrink,\n    disableAnimation,\n    variant,\n    required\n  } = ownerState;\n  const slots = {\n    root: [\'root\', formControl && \'formControl\', !disableAnimation && \'animated\', shrink && \'shrink\', size === \'small\' && \'sizeSmall\', variant],\n    asterisk: [required && \'asterisk\']\n  };\n  const composedClasses = composeClasses(slots, getInputLabelUtilityClasses, classes);\n  return extends_extends({}, classes, composedClasses);\n};\n\nconst InputLabelRoot = styles_styled(FormLabel_FormLabel, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === \'classes\',\n  name: \'MuiInputLabel\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${FormLabel_formLabelClasses.asterisk}`]: styles.asterisk\n    }, styles.root, ownerState.formControl && styles.formControl, ownerState.size === \'small\' && styles.sizeSmall, ownerState.shrink && styles.shrink, !ownerState.disableAnimation && styles.animated, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => extends_extends({\n  display: \'block\',\n  transformOrigin: \'top left\',\n  whiteSpace: \'nowrap\',\n  overflow: \'hidden\',\n  textOverflow: \'ellipsis\',\n  maxWidth: \'100%\'\n}, ownerState.formControl && {\n  position: \'absolute\',\n  left: 0,\n  top: 0,\n  // slight alteration to spec spacing to match visual spec result\n  transform: \'translate(0, 20px) scale(1)\'\n}, ownerState.size === \'small\' && {\n  // Compensation for the `Input.inputSizeSmall` style.\n  transform: \'translate(0, 17px) scale(1)\'\n}, ownerState.shrink && {\n  transform: \'translate(0, -1.5px) scale(0.75)\',\n  transformOrigin: \'top left\',\n  maxWidth: \'133%\'\n}, !ownerState.disableAnimation && {\n  transition: theme.transitions.create([\'color\', \'transform\', \'max-width\'], {\n    duration: theme.transitions.duration.shorter,\n    easing: theme.transitions.easing.easeOut\n  })\n}, ownerState.variant === \'filled\' && extends_extends({\n  // Chrome\'s autofill feature gives the input field a yellow background.\n  // Since the input field is behind the label in the HTML tree,\n  // the input field is drawn last and hides the label with an opaque background color.\n  // zIndex: 1 will raise the label above opaque background-colors of input.\n  zIndex: 1,\n  pointerEvents: \'none\',\n  transform: \'translate(12px, 16px) scale(1)\',\n  maxWidth: \'calc(100% - 24px)\'\n}, ownerState.size === \'small\' && {\n  transform: \'translate(12px, 13px) scale(1)\'\n}, ownerState.shrink && extends_extends({\n  userSelect: \'none\',\n  pointerEvents: \'auto\',\n  transform: \'translate(12px, 7px) scale(0.75)\',\n  maxWidth: \'calc(133% - 24px)\'\n}, ownerState.size === \'small\' && {\n  transform: \'translate(12px, 4px) scale(0.75)\'\n})), ownerState.variant === \'outlined\' && extends_extends({\n  // see comment above on filled.zIndex\n  zIndex: 1,\n  pointerEvents: \'none\',\n  transform: \'translate(14px, 16px) scale(1)\',\n  maxWidth: \'calc(100% - 24px)\'\n}, ownerState.size === \'small\' && {\n  transform: \'translate(14px, 9px) scale(1)\'\n}, ownerState.shrink && {\n  userSelect: \'none\',\n  pointerEvents: \'auto\',\n  maxWidth: \'calc(133% - 24px)\',\n  transform: \'translate(14px, -9px) scale(0.75)\'\n})));\nconst InputLabel = /*#__PURE__*/react.forwardRef(function InputLabel(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    name: \'MuiInputLabel\',\n    props: inProps\n  });\n\n  const {\n    disableAnimation = false,\n    shrink: shrinkProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, InputLabel_excluded);\n\n  const muiFormControl = useFormControl();\n  let shrink = shrinkProp;\n\n  if (typeof shrink === \'undefined\' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: [\'size\', \'variant\', \'required\']\n  });\n\n  const ownerState = extends_extends({}, props, {\n    disableAnimation,\n    formControl: muiFormControl,\n    shrink,\n    size: fcs.size,\n    variant: fcs.variant,\n    required: fcs.required\n  });\n\n  const classes = InputLabel_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputLabelRoot, extends_extends({\n    "data-shrink": shrink,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const InputLabel_InputLabel = (InputLabel);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/List/ListContext.js\n\n/**\n * @ignore - internal component.\n */\n\nconst ListContext = /*#__PURE__*/react.createContext({});\n\nif (false) {}\n\n/* harmony default export */ const List_ListContext = (ListContext);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js\n\n/* harmony default export */ const utils_useEnhancedEffect = (esm_useEnhancedEffect);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Divider/dividerClasses.js\n\nfunction getDividerUtilityClass(slot) {\n  return generateUtilityClass(\'MuiDivider\', slot);\n}\nconst dividerClasses = generateUtilityClasses(\'MuiDivider\', [\'root\', \'absolute\', \'fullWidth\', \'inset\', \'middle\', \'flexItem\', \'light\', \'vertical\', \'withChildren\', \'withChildrenVertical\', \'textAlignRight\', \'textAlignLeft\', \'wrapper\', \'wrapperVertical\']);\n/* harmony default export */ const Divider_dividerClasses = (dividerClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/ListItemIcon/listItemIconClasses.js\n\nfunction getListItemIconUtilityClass(slot) {\n  return generateUtilityClass(\'MuiListItemIcon\', slot);\n}\nconst listItemIconClasses = generateUtilityClasses(\'MuiListItemIcon\', [\'root\', \'alignItemsFlexStart\']);\n/* harmony default export */ const ListItemIcon_listItemIconClasses = (listItemIconClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/ListItemText/listItemTextClasses.js\n\nfunction getListItemTextUtilityClass(slot) {\n  return generateUtilityClass(\'MuiListItemText\', slot);\n}\nconst listItemTextClasses = generateUtilityClasses(\'MuiListItemText\', [\'root\', \'multiline\', \'dense\', \'inset\', \'primary\', \'secondary\']);\n/* harmony default export */ const ListItemText_listItemTextClasses = (listItemTextClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/MenuItem/menuItemClasses.js\n\nfunction getMenuItemUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiMenuItem\', slot);\n}\nconst menuItemClasses = generateUtilityClasses(\'MuiMenuItem\', [\'root\', \'focusVisible\', \'dense\', \'disabled\', \'divider\', \'gutters\', \'selected\']);\n/* harmony default export */ const MenuItem_menuItemClasses = (menuItemClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/MenuItem/MenuItem.js\n\n\nconst MenuItem_excluded = ["autoFocus", "component", "dense", "divider", "disableGutters", "focusVisibleClassName", "role", "tabIndex"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst MenuItem_useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\', dense && \'dense\', disabled && \'disabled\', !disableGutters && \'gutters\', divider && \'divider\', selected && \'selected\']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return extends_extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styles_styled(ButtonBase_ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === \'classes\',\n  name: \'MuiMenuItem\',\n  slot: \'Root\',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => extends_extends({}, theme.typography.body1, {\n  display: \'flex\',\n  justifyContent: \'flex-start\',\n  alignItems: \'center\',\n  position: \'relative\',\n  textDecoration: \'none\',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: \'border-box\',\n  whiteSpace: \'nowrap\'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: \'padding-box\'\n}, {\n  \'&:hover\': {\n    textDecoration: \'none\',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn\'t add specificity\n    \'@media (hover: none)\': {\n      backgroundColor: \'transparent\'\n    }\n  },\n  [`&.${MenuItem_menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${MenuItem_menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${MenuItem_menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn\'t add specificity\n    \'@media (hover: none)\': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${MenuItem_menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${MenuItem_menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${Divider_dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${Divider_dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${ListItemText_listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${ListItemText_listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${ListItemIcon_listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up(\'sm\')]: {\n    minHeight: \'auto\'\n  }\n}, ownerState.dense && extends_extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${ListItemIcon_listItemIconClasses.root} svg`]: {\n    fontSize: \'1.25rem\'\n  }\n})));\nconst MenuItem = /*#__PURE__*/react.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiMenuItem\'\n  });\n\n  const {\n    autoFocus = false,\n    component = \'li\',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = \'menuitem\',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, MenuItem_excluded);\n\n  const context = react.useContext(List_ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = react.useRef(null);\n  utils_useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (false) {}\n    }\n  }, [autoFocus]);\n\n  const ownerState = extends_extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = MenuItem_useUtilityClasses(props);\n  const handleRef = utils_useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(List_ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(MenuItemRoot, extends_extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx_m(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const MenuItem_MenuItem = (MenuItem);\n// EXTERNAL MODULE: ./node_modules/react-is/index.js\nvar react_is = __webpack_require__(864);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/ownerDocument.js\nfunction ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/ownerDocument.js\n\n/* harmony default export */ const utils_ownerDocument = (ownerDocument);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/List/listClasses.js\n\nfunction getListUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiList\', slot);\n}\nconst listClasses = generateUtilityClasses(\'MuiList\', [\'root\', \'padding\', \'dense\', \'subheader\']);\n/* harmony default export */ const List_listClasses = ((/* unused pure expression or super */ null && (listClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/List/List.js\n\n\nconst List_excluded = ["children", "className", "component", "dense", "disablePadding", "subheader"];\n\n\n\n\n\n\n\n\n\n\n\nconst List_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePadding,\n    dense,\n    subheader\n  } = ownerState;\n  const slots = {\n    root: [\'root\', !disablePadding && \'padding\', dense && \'dense\', subheader && \'subheader\']\n  };\n  return composeClasses(slots, getListUtilityClass, classes);\n};\n\nconst ListRoot = styles_styled(\'ul\', {\n  name: \'MuiList\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disablePadding && styles.padding, ownerState.dense && styles.dense, ownerState.subheader && styles.subheader];\n  }\n})(({\n  ownerState\n}) => extends_extends({\n  listStyle: \'none\',\n  margin: 0,\n  padding: 0,\n  position: \'relative\'\n}, !ownerState.disablePadding && {\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.subheader && {\n  paddingTop: 0\n}));\nconst List = /*#__PURE__*/react.forwardRef(function List(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiList\'\n  });\n\n  const {\n    children,\n    className,\n    component = \'ul\',\n    dense = false,\n    disablePadding = false,\n    subheader\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, List_excluded);\n\n  const context = react.useMemo(() => ({\n    dense\n  }), [dense]);\n\n  const ownerState = extends_extends({}, props, {\n    component,\n    dense,\n    disablePadding\n  });\n\n  const classes = List_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(List_ListContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(ListRoot, extends_extends({\n      as: component,\n      className: clsx_m(classes.root, className),\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      children: [subheader, children]\n    }))\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const List_List = (List);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/getScrollbarSize.js\n// A change of the browser zoom change the scrollbar size.\n// Credit https://github.com/twbs/bootstrap/blob/488fd8afc535ca3a6ad4dc581f5e89217b6a36ac/js/src/util/scrollbar.js#L14-L18\nfunction getScrollbarSize(doc) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n  const documentWidth = doc.documentElement.clientWidth;\n  return Math.abs(window.innerWidth - documentWidth);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/getScrollbarSize.js\n\n/* harmony default export */ const utils_getScrollbarSize = (getScrollbarSize);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/MenuList/MenuList.js\n\n\nconst MenuList_excluded = ["actions", "autoFocus", "autoFocusItem", "children", "className", "disabledItemsFocusable", "disableListWrap", "onKeyDown", "variant"];\n\n\n\n\n\n\n\n\n\n\nfunction nextItem(list, item, disableListWrap) {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return disableListWrap ? null : list.firstChild;\n}\n\nfunction previousItem(list, item, disableListWrap) {\n  if (list === item) {\n    return disableListWrap ? list.firstChild : list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return disableListWrap ? null : list.lastChild;\n}\n\nfunction textCriteriaMatches(nextFocus, textCriteria) {\n  if (textCriteria === undefined) {\n    return true;\n  }\n\n  let text = nextFocus.innerText;\n\n  if (text === undefined) {\n    // jsdom doesn\'t support innerText\n    text = nextFocus.textContent;\n  }\n\n  text = text.trim().toLowerCase();\n\n  if (text.length === 0) {\n    return false;\n  }\n\n  if (textCriteria.repeating) {\n    return text[0] === textCriteria.keys[0];\n  }\n\n  return text.indexOf(textCriteria.keys.join(\'\')) === 0;\n}\n\nfunction moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return false;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    const nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute(\'aria-disabled\') === \'true\';\n\n    if (!nextFocus.hasAttribute(\'tabindex\') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\n    } else {\n      nextFocus.focus();\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * A permanently displayed menu following https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/.\n * It\'s exposed to help customization of the [`Menu`](/material-ui/api/menu/) component if you\n * use it separately you need to move focus into the component manually. Once\n * the focus is placed inside the component it is fully keyboard accessible.\n */\n\n\nconst MenuList = /*#__PURE__*/react.forwardRef(function MenuList(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    autoFocus = false,\n    autoFocusItem = false,\n    children,\n    className,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    onKeyDown,\n    variant = \'selectedMenu\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, MenuList_excluded);\n\n  const listRef = react.useRef(null);\n  const textCriteriaRef = react.useRef({\n    keys: [],\n    repeating: true,\n    previousKeyMatched: true,\n    lastTime: null\n  });\n  utils_useEnhancedEffect(() => {\n    if (autoFocus) {\n      listRef.current.focus();\n    }\n  }, [autoFocus]);\n  react.useImperativeHandle(actions, () => ({\n    adjustStyleForScrollbar: (containerElement, theme) => {\n      // Let\'s ignore that piece of logic if users are already overriding the width\n      // of the menu.\n      const noExplicitWidth = !listRef.current.style.width;\n\n      if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\n        const scrollbarSize = `${utils_getScrollbarSize(utils_ownerDocument(containerElement))}px`;\n        listRef.current.style[theme.direction === \'rtl\' ? \'paddingLeft\' : \'paddingRight\'] = scrollbarSize;\n        listRef.current.style.width = `calc(100% + ${scrollbarSize})`;\n      }\n\n      return listRef.current;\n    }\n  }), []);\n\n  const handleKeyDown = event => {\n    const list = listRef.current;\n    const key = event.key;\n    /**\n     * @type {Element} - will always be defined since we are in a keydown handler\n     * attached to an element. A keydown event is either dispatched to the activeElement\n     * or document.body or document.documentElement. Only the first case will\n     * trigger this specific handler.\n     */\n\n    const currentFocus = utils_ownerDocument(list).activeElement;\n\n    if (key === \'ArrowDown\') {\n      // Prevent scroll of the page\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === \'ArrowUp\') {\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key === \'Home\') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === \'End\') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key.length === 1) {\n      const criteria = textCriteriaRef.current;\n      const lowerKey = key.toLowerCase();\n      const currTime = performance.now();\n\n      if (criteria.keys.length > 0) {\n        // Reset\n        if (currTime - criteria.lastTime > 500) {\n          criteria.keys = [];\n          criteria.repeating = true;\n          criteria.previousKeyMatched = true;\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\n          criteria.repeating = false;\n        }\n      }\n\n      criteria.lastTime = currTime;\n      criteria.keys.push(lowerKey);\n      const keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\n\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {\n        event.preventDefault();\n      } else {\n        criteria.previousKeyMatched = false;\n      }\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleRef = utils_useForkRef(listRef, ref);\n  /**\n   * the index of the item should receive focus\n   * in a `variant="selectedMenu"` it\'s the first `selected` item\n   * otherwise it\'s the very first item.\n   */\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We\'re looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  react.Children.forEach(children, (child, index) => {\n    if (! /*#__PURE__*/react.isValidElement(child)) {\n      return;\n    }\n\n    if (false) {}\n\n    if (!child.props.disabled) {\n      if (variant === \'selectedMenu\' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const items = react.Children.map(children, (child, index) => {\n    if (index === activeItemIndex) {\n      const newChildProps = {};\n\n      if (autoFocusItem) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined && variant === \'selectedMenu\') {\n        newChildProps.tabIndex = 0;\n      }\n\n      return /*#__PURE__*/react.cloneElement(child, newChildProps);\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(List_List, extends_extends({\n    role: "menu",\n    ref: handleRef,\n    className: className,\n    onKeyDown: handleKeyDown,\n    tabIndex: autoFocus ? 0 : -1\n  }, other, {\n    children: items\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const MenuList_MenuList = (MenuList);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Paper/paperClasses.js\n\nfunction getPaperUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiPaper\', slot);\n}\nconst paperClasses = generateUtilityClasses(\'MuiPaper\', [\'root\', \'rounded\', \'outlined\', \'elevation\', \'elevation0\', \'elevation1\', \'elevation2\', \'elevation3\', \'elevation4\', \'elevation5\', \'elevation6\', \'elevation7\', \'elevation8\', \'elevation9\', \'elevation10\', \'elevation11\', \'elevation12\', \'elevation13\', \'elevation14\', \'elevation15\', \'elevation16\', \'elevation17\', \'elevation18\', \'elevation19\', \'elevation20\', \'elevation21\', \'elevation22\', \'elevation23\', \'elevation24\']);\n/* harmony default export */ const Paper_paperClasses = ((/* unused pure expression or super */ null && (paperClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Paper/Paper.js\n\n\nconst Paper_excluded = ["className", "component", "elevation", "square", "variant"];\n\n\n\n\n\n\n\n\n\n // Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\n\n\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n\n  return (alphaValue / 100).toFixed(2);\n};\n\nconst Paper_useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\', variant, !square && \'rounded\', variant === \'elevation\' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\n\nconst PaperRoot = styles_styled(\'div\', {\n  name: \'MuiPaper\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === \'elevation\' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$overlays;\n\n  return extends_extends({\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    color: (theme.vars || theme).palette.text.primary,\n    transition: theme.transitions.create(\'box-shadow\')\n  }, !ownerState.square && {\n    borderRadius: theme.shape.borderRadius\n  }, ownerState.variant === \'outlined\' && {\n    border: `1px solid ${(theme.vars || theme).palette.divider}`\n  }, ownerState.variant === \'elevation\' && extends_extends({\n    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]\n  }, !theme.vars && theme.palette.mode === \'dark\' && {\n    backgroundImage: `linear-gradient(${alpha(\'#fff\', getOverlayAlpha(ownerState.elevation))}, ${alpha(\'#fff\', getOverlayAlpha(ownerState.elevation))})`\n  }, theme.vars && {\n    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]\n  }));\n});\nconst Paper = /*#__PURE__*/react.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiPaper\'\n  });\n\n  const {\n    className,\n    component = \'div\',\n    elevation = 1,\n    square = false,\n    variant = \'elevation\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Paper_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n\n  const classes = Paper_useUtilityClasses(ownerState);\n\n  if (false) {}\n\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(PaperRoot, extends_extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx_m(classes.root, className),\n    ref: ref\n  }, other));\n});\n false ? 0 : void 0;\n/* harmony default export */ const Paper_Paper = (Paper);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/debounce.js\n// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nfunction debounce(func, wait = 166) {\n  let timeout;\n\n  function debounced(...args) {\n    const later = () => {\n      func.apply(this, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/debounce.js\n\n/* harmony default export */ const utils_debounce = (debounce);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/ownerWindow.js\n\nfunction ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/ownerWindow.js\n\n/* harmony default export */ const utils_ownerWindow = (ownerWindow);\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(935);\n;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/config.js\n/* harmony default export */ const config = ({\n  disabled: false\n});\n;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js\n\n\n\n\n\n\n\n\nvar UNMOUNTED = \'unmounted\';\nvar EXITED = \'exited\';\nvar ENTERING = \'entering\';\nvar ENTERED = \'entered\';\nvar EXITING = \'exiting\';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it\'s used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you\'re using\n * transitions in CSS, you\'ll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks "enter" and "exit" states for the\n * components. It\'s up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from \'react-transition-group\';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I\'m a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `\'entering\'`\n *  - `\'entered\'`\n *  - `\'exiting\'`\n *  - `\'exited\'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the "Enter" stage. During this stage, the component will shift from\n * its current transition state, to `\'entering\'` for the duration of the\n * transition and then to the `\'entered\'` stage once it\'s complete. Let\'s take\n * the following example (we\'ll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `\'entering\'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `\'entered\'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `\'exiting\'` to `\'exited\'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== \'number\') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [react_dom.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : react_dom.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn\'t be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      react.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === \'function\' ? children(status, childProps) : react.cloneElement(react.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(react.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes =  false ? 0 : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\n/* harmony default export */ const esm_Transition = (Transition);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/useTheme.js\n\n\n\nfunction styles_useTheme_useTheme() {\n  const theme = esm_useTheme(styles_defaultTheme);\n\n  if (false) {}\n\n  return theme;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/transitions/utils.js\nconst reflow = node => node.scrollTop;\nfunction getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === \'number\' ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === \'object\' ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Grow/Grow.js\n\n\nconst Grow_excluded = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];\n\n\n\n\n\n\n\n\n\nfunction getScale(value) {\n  return `scale(${value}, ${value ** 2})`;\n}\n\nconst styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: \'none\'\n  }\n};\n/*\n TODO v6: remove\n Conditionally apply a workaround for the CSS transition bug in Safari 15.4 / WebKit browsers.\n */\n\nconst isWebKit154 = typeof navigator !== \'undefined\' && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\\/)15(.|_)4/i.test(navigator.userAgent);\n/**\n * The Grow transition is used by the [Tooltip](/material-ui/react-tooltip/) and\n * [Popover](/material-ui/react-popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Grow = /*#__PURE__*/react.forwardRef(function Grow(props, ref) {\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = \'auto\',\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = esm_Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Grow_excluded);\n\n  const timer = react.useRef();\n  const autoTimeout = react.useRef();\n  const theme = styles_useTheme_useTheme();\n  const nodeRef = react.useRef(null);\n  const foreignRef = utils_useForkRef(children.ref, ref);\n  const handleRef = utils_useForkRef(nodeRef, foreignRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const {\n      duration: transitionDuration,\n      delay,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: \'enter\'\n    });\n    let duration;\n\n    if (timeout === \'auto\') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create(\'opacity\', {\n      duration,\n      delay\n    }), theme.transitions.create(\'transform\', {\n      duration: isWebKit154 ? duration : duration * 0.666,\n      delay,\n      easing: transitionTimingFunction\n    })].join(\',\');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const {\n      duration: transitionDuration,\n      delay,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: \'exit\'\n    });\n    let duration;\n\n    if (timeout === \'auto\') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create(\'opacity\', {\n      duration,\n      delay\n    }), theme.transitions.create(\'transform\', {\n      duration: isWebKit154 ? duration : duration * 0.666,\n      delay: isWebKit154 ? delay : delay || duration * 0.333,\n      easing: transitionTimingFunction\n    })].join(\',\');\n    node.style.opacity = 0;\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n\n  const handleAddEndListener = next => {\n    if (timeout === \'auto\') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n\n  react.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, extends_extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout === \'auto\' ? null : timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/react.cloneElement(children, extends_extends({\n        style: extends_extends({\n          opacity: 0,\n          transform: getScale(0.75),\n          visibility: state === \'exited\' && !inProp ? \'hidden\' : undefined\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\n false ? 0 : void 0;\nGrow.muiSupportAuto = true;\n/* harmony default export */ const Grow_Grow = (Grow);\n;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/isHostComponent.js\n/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === \'string\';\n}\n\n/* harmony default export */ const utils_isHostComponent = (isHostComponent);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/createChainedFunction.js\n/**\n * Safe chained function.\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.reduce((acc, func) => {\n    if (func == null) {\n      return acc;\n    }\n\n    return function chainedFunction(...args) {\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, () => {});\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/appendOwnerState.js\n\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can\'t be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps = {}, ownerState) {\n  if (utils_isHostComponent(elementType)) {\n    return otherProps;\n  }\n\n  return extends_extends({}, otherProps, {\n    ownerState: extends_extends({}, otherProps.ownerState, ownerState)\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/base/Portal/Portal.js\n\n\n\n\n\nfunction getContainer(container) {\n  return typeof container === \'function\' ? container() : container;\n}\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\n\nconst Portal = /*#__PURE__*/react.forwardRef(function Portal(props, ref) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = react.useState(null);\n  const handleRef = useForkRef( /*#__PURE__*/react.isValidElement(children) ? children.ref : null, ref);\n  esm_useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  esm_useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return () => {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/react.isValidElement(children)) {\n      return /*#__PURE__*/react.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/react_dom.createPortal(children, mountNode) : mountNode;\n});\n false ? 0 : void 0;\n\nif (false) {}\n\n/* harmony default export */ const Portal_Portal = (Portal);\n;// CONCATENATED MODULE: ./node_modules/@mui/base/ModalUnstyled/ModalManager.js\n\n\n// Is a vertical scrollbar displayed?\nfunction isOverflowing(container) {\n  const doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(container).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nfunction ariaHidden(element, show) {\n  if (show) {\n    element.setAttribute(\'aria-hidden\', \'true\');\n  } else {\n    element.removeAttribute(\'aria-hidden\');\n  }\n}\n\nfunction getPaddingRight(element) {\n  return parseInt(ownerWindow(element).getComputedStyle(element).paddingRight, 10) || 0;\n}\n\nfunction isAriaHiddenForbiddenOnElement(element) {\n  // The forbidden HTML tags are the ones from ARIA specification that\n  // can be children of body and can\'t have aria-hidden attribute.\n  // cf. https://www.w3.org/TR/html-aria/#docconformance\n  const forbiddenTagNames = [\'TEMPLATE\', \'SCRIPT\', \'STYLE\', \'LINK\', \'MAP\', \'META\', \'NOSCRIPT\', \'PICTURE\', \'COL\', \'COLGROUP\', \'PARAM\', \'SLOT\', \'SOURCE\', \'TRACK\'];\n  const isForbiddenTagName = forbiddenTagNames.indexOf(element.tagName) !== -1;\n  const isInputHidden = element.tagName === \'INPUT\' && element.getAttribute(\'type\') === \'hidden\';\n  return isForbiddenTagName || isInputHidden;\n}\n\nfunction ariaHiddenSiblings(container, mountElement, currentElement, elementsToExclude = [], show) {\n  const blacklist = [mountElement, currentElement, ...elementsToExclude];\n  [].forEach.call(container.children, element => {\n    const isNotExcludedElement = blacklist.indexOf(element) === -1;\n    const isNotForbiddenElement = !isAriaHiddenForbiddenOnElement(element);\n\n    if (isNotExcludedElement && isNotForbiddenElement) {\n      ariaHidden(element, show);\n    }\n  });\n}\n\nfunction findIndexOf(items, callback) {\n  let idx = -1;\n  items.some((item, index) => {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  const restoreStyle = [];\n  const container = containerInfo.container;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      const scrollbarSize = getScrollbarSize(ownerDocument(container));\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        property: \'padding-right\',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style.paddingRight = `${getPaddingRight(container) + scrollbarSize}px`; // .mui-fixed is a global helper.\n\n      const fixedElements = ownerDocument(container).querySelectorAll(\'.mui-fixed\');\n      [].forEach.call(fixedElements, element => {\n        restoreStyle.push({\n          value: element.style.paddingRight,\n          property: \'padding-right\',\n          el: element\n        });\n        element.style.paddingRight = `${getPaddingRight(element) + scrollbarSize}px`;\n      });\n    }\n\n    let scrollContainer;\n\n    if (container.parentNode instanceof DocumentFragment) {\n      scrollContainer = ownerDocument(container).body;\n    } else {\n      // Improve Gatsby support\n      // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n      const parent = container.parentElement;\n      const containerWindow = ownerWindow(container);\n      scrollContainer = (parent == null ? void 0 : parent.nodeName) === \'HTML\' && containerWindow.getComputedStyle(parent).overflowY === \'scroll\' ? parent : container;\n    } // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      property: \'overflow\',\n      el: scrollContainer\n    }, {\n      value: scrollContainer.style.overflowX,\n      property: \'overflow-x\',\n      el: scrollContainer\n    }, {\n      value: scrollContainer.style.overflowY,\n      property: \'overflow-y\',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = \'hidden\';\n  }\n\n  const restore = () => {\n    restoreStyle.forEach(({\n      value,\n      el,\n      property\n    }) => {\n      if (value) {\n        el.style.setProperty(property, value);\n      } else {\n        el.style.removeProperty(property);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  const hiddenSiblings = [];\n  [].forEach.call(container.children, element => {\n    if (element.getAttribute(\'aria-hidden\') === \'true\') {\n      hiddenSiblings.push(element);\n    }\n  });\n  return hiddenSiblings;\n}\n\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay\'s ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\nclass ModalManager {\n  constructor() {\n    this.containers = void 0;\n    this.modals = void 0;\n    this.modals = [];\n    this.containers = [];\n  }\n\n  add(modal, container) {\n    let modalIndex = this.modals.indexOf(modal);\n\n    if (modalIndex !== -1) {\n      return modalIndex;\n    }\n\n    modalIndex = this.modals.length;\n    this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n    if (modal.modalRef) {\n      ariaHidden(modal.modalRef, false);\n    }\n\n    const hiddenSiblings = getHiddenSiblings(container);\n    ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);\n    const containerIndex = findIndexOf(this.containers, item => item.container === container);\n\n    if (containerIndex !== -1) {\n      this.containers[containerIndex].modals.push(modal);\n      return modalIndex;\n    }\n\n    this.containers.push({\n      modals: [modal],\n      container,\n      restore: null,\n      hiddenSiblings\n    });\n    return modalIndex;\n  }\n\n  mount(modal, props) {\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n\n    if (!containerInfo.restore) {\n      containerInfo.restore = handleContainer(containerInfo, props);\n    }\n  }\n\n  remove(modal, ariaHiddenState = true) {\n    const modalIndex = this.modals.indexOf(modal);\n\n    if (modalIndex === -1) {\n      return modalIndex;\n    }\n\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n    this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n    if (containerInfo.modals.length === 0) {\n      // The modal might be closed before it had the chance to be mounted in the DOM.\n      if (containerInfo.restore) {\n        containerInfo.restore();\n      }\n\n      if (modal.modalRef) {\n        // In case the modal wasn\'t in the DOM yet.\n        ariaHidden(modal.modalRef, ariaHiddenState);\n      }\n\n      ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);\n      this.containers.splice(containerIndex, 1);\n    } else {\n      // Otherwise make sure the next top modal is visible to a screen reader.\n      const nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can\'t set\n      // aria-hidden because the dom element doesn\'t exist either\n      // when modal was unmounted before modalRef gets null\n\n      if (nextTop.modalRef) {\n        ariaHidden(nextTop.modalRef, false);\n      }\n    }\n\n    return modalIndex;\n  }\n\n  isTopModal(modal) {\n    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/base/TrapFocus/TrapFocus.js\n/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\n\n\n // Inspired by https://github.com/focus-trap/tabbable\n\n\n\nconst candidatesSelector = [\'input\', \'select\', \'textarea\', \'a[href]\', \'button\', \'[tabindex]\', \'audio[controls]\', \'video[controls]\', \'[contenteditable]:not([contenteditable="false"])\'].join(\',\');\n\nfunction getTabIndex(node) {\n  const tabindexAttr = parseInt(node.getAttribute(\'tabindex\'), 10);\n\n  if (!Number.isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  } // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2\n  // so if they don\'t have a tabindex attribute specifically set, assume it\'s 0.\n  // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n  //  `tabIndex` of -1 when the \'tabindex\' attribute isn\'t specified in the DOM,\n  //  yet they are still part of the regular tab order; in FF, they get a default\n  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n  //  order, consider their tab index to be 0.\n\n\n  if (node.contentEditable === \'true\' || (node.nodeName === \'AUDIO\' || node.nodeName === \'VIDEO\' || node.nodeName === \'DETAILS\') && node.getAttribute(\'tabindex\') === null) {\n    return 0;\n  }\n\n  return node.tabIndex;\n}\n\nfunction isNonTabbableRadio(node) {\n  if (node.tagName !== \'INPUT\' || node.type !== \'radio\') {\n    return false;\n  }\n\n  if (!node.name) {\n    return false;\n  }\n\n  const getRadio = selector => node.ownerDocument.querySelector(`input[type="radio"]${selector}`);\n\n  let roving = getRadio(`[name="${node.name}"]:checked`);\n\n  if (!roving) {\n    roving = getRadio(`[name="${node.name}"]`);\n  }\n\n  return roving !== node;\n}\n\nfunction isNodeMatchingSelectorFocusable(node) {\n  if (node.disabled || node.tagName === \'INPUT\' && node.type === \'hidden\' || isNonTabbableRadio(node)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction defaultGetTabbable(root) {\n  const regularTabNodes = [];\n  const orderedTabNodes = [];\n  Array.from(root.querySelectorAll(candidatesSelector)).forEach((node, i) => {\n    const nodeTabIndex = getTabIndex(node);\n\n    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {\n      return;\n    }\n\n    if (nodeTabIndex === 0) {\n      regularTabNodes.push(node);\n    } else {\n      orderedTabNodes.push({\n        documentOrder: i,\n        tabIndex: nodeTabIndex,\n        node\n      });\n    }\n  });\n  return orderedTabNodes.sort((a, b) => a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex).map(a => a.node).concat(regularTabNodes);\n}\n\nfunction defaultIsEnabled() {\n  return true;\n}\n/**\n * Utility component that locks focus inside the component.\n */\n\n\nfunction TrapFocus(props) {\n  const {\n    children,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    getTabbable = defaultGetTabbable,\n    isEnabled = defaultIsEnabled,\n    open\n  } = props;\n  const ignoreNextEnforceFocus = react.useRef();\n  const sentinelStart = react.useRef(null);\n  const sentinelEnd = react.useRef(null);\n  const nodeToRestore = react.useRef(null);\n  const reactFocusEventTarget = react.useRef(null); // This variable is useful when disableAutoFocus is true.\n  // It waits for the active element to move into the component to activate.\n\n  const activated = react.useRef(false);\n  const rootRef = react.useRef(null);\n  const handleRef = useForkRef(children.ref, rootRef);\n  const lastKeydown = react.useRef(null);\n  react.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    activated.current = !disableAutoFocus;\n  }, [disableAutoFocus, open]);\n  react.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    const doc = ownerDocument(rootRef.current);\n\n    if (!rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute(\'tabIndex\')) {\n        if (false) {}\n\n        rootRef.current.setAttribute(\'tabIndex\', -1);\n      }\n\n      if (activated.current) {\n        rootRef.current.focus();\n      }\n    }\n\n    return () => {\n      // restoreLastFocus()\n      if (!disableRestoreFocus) {\n        // In IE11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE11 have a focus method.\n        // Once IE11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          ignoreNextEnforceFocus.current = true;\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    }; // Missing `disableRestoreFocus` which is fine.\n    // We don\'t support changing that prop on an open TrapFocus\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n  react.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    const doc = ownerDocument(rootRef.current);\n\n    const contain = nativeEvent => {\n      const {\n        current: rootElement\n      } = rootRef; // Cleanup functions are executed lazily in React 17.\n      // Contain can be called between the component being unmounted and its cleanup function being run.\n\n      if (rootElement === null) {\n        return;\n      }\n\n      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (!rootElement.contains(doc.activeElement)) {\n        // if the focus event is not coming from inside the children\'s react tree, reset the refs\n        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {\n          reactFocusEventTarget.current = null;\n        } else if (reactFocusEventTarget.current !== null) {\n          return;\n        }\n\n        if (!activated.current) {\n          return;\n        }\n\n        let tabbable = [];\n\n        if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {\n          tabbable = getTabbable(rootRef.current);\n        }\n\n        if (tabbable.length > 0) {\n          var _lastKeydown$current, _lastKeydown$current2;\n\n          const isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === \'Tab\');\n          const focusNext = tabbable[0];\n          const focusPrevious = tabbable[tabbable.length - 1];\n\n          if (isShiftTab) {\n            focusPrevious.focus();\n          } else {\n            focusNext.focus();\n          }\n        } else {\n          rootElement.focus();\n        }\n      }\n    };\n\n    const loopFocus = nativeEvent => {\n      lastKeydown.current = nativeEvent;\n\n      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== \'Tab\') {\n        return;\n      } // Make sure the next tab starts from the right place.\n      // doc.activeElement referes to the origin.\n\n\n      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n        sentinelEnd.current.focus();\n      }\n    };\n\n    doc.addEventListener(\'focusin\', contain);\n    doc.addEventListener(\'keydown\', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    // Instead, we can look if the active element was restored on the BODY element.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    const interval = setInterval(() => {\n      if (doc.activeElement.tagName === \'BODY\') {\n        contain();\n      }\n    }, 50);\n    return () => {\n      clearInterval(interval);\n      doc.removeEventListener(\'focusin\', contain);\n      doc.removeEventListener(\'keydown\', loopFocus, true);\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);\n\n  const onFocus = event => {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n\n    activated.current = true;\n    reactFocusEventTarget.current = event.target;\n    const childrenPropsHandler = children.props.onFocus;\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  const handleFocusSentinel = event => {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n\n    activated.current = true;\n  };\n\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n      tabIndex: 0,\n      onFocus: handleFocusSentinel,\n      ref: sentinelStart,\n      "data-test": "sentinelStart"\n    }), /*#__PURE__*/react.cloneElement(children, {\n      ref: handleRef,\n      onFocus\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n      tabIndex: 0,\n      onFocus: handleFocusSentinel,\n      ref: sentinelEnd,\n      "data-test": "sentinelEnd"\n    })]\n  });\n}\n\n false ? 0 : void 0;\n\nif (false) {}\n\n/* harmony default export */ const TrapFocus_TrapFocus = (TrapFocus);\n;// CONCATENATED MODULE: ./node_modules/@mui/base/ModalUnstyled/modalUnstyledClasses.js\n\n\nfunction getModalUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiModal\', slot);\n}\nconst modalUnstyledClasses_modalUnstyledClasses = generateUtilityClasses(\'MuiModal\', [\'root\', \'hidden\']);\n/* harmony default export */ const ModalUnstyled_modalUnstyledClasses = ((/* unused pure expression or super */ null && (modalUnstyledClasses_modalUnstyledClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js\n\n\nconst ModalUnstyled_excluded = ["children", "classes", "className", "closeAfterTransition", "component", "components", "componentsProps", "container", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onKeyDown", "open", "onTransitionEnter", "onTransitionExited"];\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ModalUnstyled_useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\', !open && exited && \'hidden\']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction ModalUnstyled_getContainer(container) {\n  return typeof container === \'function\' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty(\'in\') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don\'t open on the server so this won\'t conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/react.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden, _componentsProps$root;\n\n  const {\n    children,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    component = \'div\',\n    components = {},\n    componentsProps = {},\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    onTransitionEnter,\n    onTransitionExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, ModalUnstyled_excluded);\n\n  const [exited, setExited] = react.useState(true);\n  const modal = react.useRef({});\n  const mountNodeRef = react.useRef(null);\n  const modalRef = react.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n  const ariaHiddenProp = (_props$ariaHidden = props[\'aria-hidden\']) != null ? _props$ariaHidden : true;\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn\'t initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = ModalUnstyled_getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = react.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = react.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  react.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  react.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = extends_extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = ModalUnstyled_useUtilityClasses(ownerState);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, \'backdropClick\');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn\'t take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== \'Escape\' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, \'escapeKeyDown\');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = \'-1\';\n  } // It\'s a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = components.Root || component;\n  const rootProps = appendOwnerState(Root, extends_extends({\n    role: \'presentation\'\n  }, other, componentsProps.root, {\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    className: clsx_m(classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, className)\n  }), ownerState);\n  const BackdropComponent = components.Backdrop;\n  const backdropProps = appendOwnerState(BackdropComponent, extends_extends({\n    \'aria-hidden\': true,\n    open,\n    onClick: handleBackdropClick\n  }, componentsProps.backdrop), ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Portal_Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(Root, extends_extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/(0,jsx_runtime.jsx)(BackdropComponent, extends_extends({}, backdropProps)) : null, /*#__PURE__*/(0,jsx_runtime.jsx)(TrapFocus_TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/react.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const ModalUnstyled_ModalUnstyled = (ModalUnstyled);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Fade/Fade.js\n\n\nconst Fade_excluded = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];\n\n\n\n\n\n\n\n\nconst Fade_styles = {\n  entering: {\n    opacity: 1\n  },\n  entered: {\n    opacity: 1\n  }\n};\n/**\n * The Fade transition is used by the [Modal](/material-ui/react-modal/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Fade = /*#__PURE__*/react.forwardRef(function Fade(props, ref) {\n  const theme = styles_useTheme_useTheme();\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = esm_Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Fade_excluded);\n\n  const enableStrictModeCompat = true;\n  const nodeRef = react.useRef(null);\n  const foreignRef = utils_useForkRef(children.ref, ref);\n  const handleRef = utils_useForkRef(nodeRef, foreignRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: \'enter\'\n    });\n    node.style.webkitTransition = theme.transitions.create(\'opacity\', transitionProps);\n    node.style.transition = theme.transitions.create(\'opacity\', transitionProps);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: \'exit\'\n    });\n    node.style.webkitTransition = theme.transitions.create(\'opacity\', transitionProps);\n    node.style.transition = theme.transitions.create(\'opacity\', transitionProps);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n\n  const handleAddEndListener = next => {\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, extends_extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/react.cloneElement(children, extends_extends({\n        style: extends_extends({\n          opacity: 0,\n          visibility: state === \'exited\' && !inProp ? \'hidden\' : undefined\n        }, Fade_styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const Fade_Fade = (Fade);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Backdrop/backdropClasses.js\n\nfunction getBackdropUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiBackdrop\', slot);\n}\nconst backdropClasses = generateUtilityClasses(\'MuiBackdrop\', [\'root\', \'invisible\']);\n/* harmony default export */ const Backdrop_backdropClasses = ((/* unused pure expression or super */ null && (backdropClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Backdrop/Backdrop.js\n\n\nconst Backdrop_excluded = ["children", "component", "components", "componentsProps", "className", "invisible", "open", "transitionDuration", "TransitionComponent"];\n\n\n\n\n\n\n\n\n\n\nconst Backdrop_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: [\'root\', invisible && \'invisible\']\n  };\n  return composeClasses(slots, getBackdropUtilityClass, classes);\n};\n\nconst BackdropRoot = styles_styled(\'div\', {\n  name: \'MuiBackdrop\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.invisible && styles.invisible];\n  }\n})(({\n  ownerState\n}) => extends_extends({\n  position: \'fixed\',\n  display: \'flex\',\n  alignItems: \'center\',\n  justifyContent: \'center\',\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0,\n  backgroundColor: \'rgba(0, 0, 0, 0.5)\',\n  WebkitTapHighlightColor: \'transparent\'\n}, ownerState.invisible && {\n  backgroundColor: \'transparent\'\n}));\nconst Backdrop = /*#__PURE__*/react.forwardRef(function Backdrop(inProps, ref) {\n  var _components$Root, _componentsProps$root;\n\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiBackdrop\'\n  });\n\n  const {\n    children,\n    component = \'div\',\n    components = {},\n    componentsProps = {},\n    className,\n    invisible = false,\n    open,\n    transitionDuration,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Fade_Fade\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Backdrop_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    component,\n    invisible\n  });\n\n  const classes = Backdrop_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, extends_extends({\n    in: open,\n    timeout: transitionDuration\n  }, other, {\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(BackdropRoot, {\n      "aria-hidden": true,\n      as: (_components$Root = components.Root) != null ? _components$Root : component,\n      className: clsx_m(classes.root, className),\n      ownerState: extends_extends({}, ownerState, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.ownerState),\n      classes: classes,\n      ref: ref,\n      children: children\n    })\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const Backdrop_Backdrop = (Backdrop);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Modal/Modal.js\n\n\nconst Modal_excluded = ["BackdropComponent", "BackdropProps", "closeAfterTransition", "children", "component", "components", "componentsProps", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "theme"];\n\n\n\n\n\n\n\n\n\nconst modalClasses = (/* unused pure expression or super */ null && (modalUnstyledClasses));\n\nconst extendUtilityClasses = ownerState => {\n  return ownerState.classes;\n};\n\nconst ModalRoot = styles_styled(\'div\', {\n  name: \'MuiModal\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(({\n  theme,\n  ownerState\n}) => extends_extends({\n  position: \'fixed\',\n  zIndex: (theme.vars || theme).zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0\n}, !ownerState.open && ownerState.exited && {\n  visibility: \'hidden\'\n}));\nconst ModalBackdrop = styles_styled(Backdrop_Backdrop, {\n  name: \'MuiModal\',\n  slot: \'Backdrop\',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst Modal = /*#__PURE__*/react.forwardRef(function Modal(inProps, ref) {\n  var _ref, _components$Root;\n\n  const props = useThemeProps_useThemeProps({\n    name: \'MuiModal\',\n    props: inProps\n  });\n\n  const {\n    BackdropComponent = ModalBackdrop,\n    BackdropProps,\n    closeAfterTransition = false,\n    children,\n    component,\n    components = {},\n    componentsProps = {},\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // eslint-disable-next-line react/prop-types\n    theme\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Modal_excluded);\n\n  const [exited, setExited] = react.useState(true);\n  const commonProps = {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  };\n\n  const ownerState = extends_extends({}, props, commonProps, {\n    exited\n  });\n\n  const classes = extendUtilityClasses(ownerState);\n  const Root = (_ref = (_components$Root = components.Root) != null ? _components$Root : component) != null ? _ref : ModalRoot;\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(ModalUnstyled_ModalUnstyled, extends_extends({\n    components: extends_extends({\n      Root,\n      Backdrop: BackdropComponent\n    }, components),\n    componentsProps: {\n      root: extends_extends({}, componentsProps.root, !utils_isHostComponent(Root) && {\n        as: component,\n        theme\n      }),\n      backdrop: extends_extends({}, BackdropProps, componentsProps.backdrop)\n    },\n    onTransitionEnter: () => setExited(false),\n    onTransitionExited: () => setExited(true),\n    ref: ref\n  }, other, {\n    classes: classes\n  }, commonProps, {\n    children: children\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const Modal_Modal = (Modal);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Popover/popoverClasses.js\n\nfunction getPopoverUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiPopover\', slot);\n}\nconst popoverClasses = generateUtilityClasses(\'MuiPopover\', [\'root\', \'paper\']);\n/* harmony default export */ const Popover_popoverClasses = ((/* unused pure expression or super */ null && (popoverClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Popover/Popover.js\n\n\nconst Popover_excluded = ["onEntering"],\n      Popover_excluded2 = ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "className", "container", "elevation", "marginThreshold", "open", "PaperProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getOffsetTop(rect, vertical) {\n  let offset = 0;\n\n  if (typeof vertical === \'number\') {\n    offset = vertical;\n  } else if (vertical === \'center\') {\n    offset = rect.height / 2;\n  } else if (vertical === \'bottom\') {\n    offset = rect.height;\n  }\n\n  return offset;\n}\nfunction getOffsetLeft(rect, horizontal) {\n  let offset = 0;\n\n  if (typeof horizontal === \'number\') {\n    offset = horizontal;\n  } else if (horizontal === \'center\') {\n    offset = rect.width / 2;\n  } else if (horizontal === \'right\') {\n    offset = rect.width;\n  }\n\n  return offset;\n}\n\nfunction getTransformOriginValue(transformOrigin) {\n  return [transformOrigin.horizontal, transformOrigin.vertical].map(n => typeof n === \'number\' ? `${n}px` : n).join(\' \');\n}\n\nfunction resolveAnchorEl(anchorEl) {\n  return typeof anchorEl === \'function\' ? anchorEl() : anchorEl;\n}\n\nconst Popover_useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\'],\n    paper: [\'paper\']\n  };\n  return composeClasses(slots, getPopoverUtilityClass, classes);\n};\n\nconst PopoverRoot = styles_styled(Modal_Modal, {\n  name: \'MuiPopover\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst PopoverPaper = styles_styled(Paper_Paper, {\n  name: \'MuiPopover\',\n  slot: \'Paper\',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  position: \'absolute\',\n  overflowY: \'auto\',\n  overflowX: \'hidden\',\n  // So we see the popover when it\'s empty.\n  // It\'s most likely on issue on userland.\n  minWidth: 16,\n  minHeight: 16,\n  maxWidth: \'calc(100% - 32px)\',\n  maxHeight: \'calc(100% - 32px)\',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Popover = /*#__PURE__*/react.forwardRef(function Popover(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiPopover\'\n  });\n\n  const {\n    action,\n    anchorEl,\n    anchorOrigin = {\n      vertical: \'top\',\n      horizontal: \'left\'\n    },\n    anchorPosition,\n    anchorReference = \'anchorEl\',\n    children,\n    className,\n    container: containerProp,\n    elevation = 8,\n    marginThreshold = 16,\n    open,\n    PaperProps = {},\n    transformOrigin = {\n      vertical: \'top\',\n      horizontal: \'left\'\n    },\n    TransitionComponent = Grow_Grow,\n    transitionDuration: transitionDurationProp = \'auto\',\n    TransitionProps: {\n      onEntering\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, Popover_excluded),\n        other = _objectWithoutPropertiesLoose(props, Popover_excluded2);\n\n  const paperRef = react.useRef();\n  const handlePaperRef = utils_useForkRef(paperRef, PaperProps.ref);\n\n  const ownerState = extends_extends({}, props, {\n    anchorOrigin,\n    anchorReference,\n    elevation,\n    marginThreshold,\n    PaperProps,\n    transformOrigin,\n    TransitionComponent,\n    transitionDuration: transitionDurationProp,\n    TransitionProps\n  });\n\n  const classes = Popover_useUtilityClasses(ownerState); // Returns the top/left offset of the position\n  // to attach to on the anchor element (or body if none is provided)\n\n  const getAnchorOffset = react.useCallback(() => {\n    if (anchorReference === \'anchorPosition\') {\n      if (false) {}\n\n      return anchorPosition;\n    }\n\n    const resolvedAnchorEl = resolveAnchorEl(anchorEl); // If an anchor element wasn\'t provided, just use the parent body element of this Popover\n\n    const anchorElement = resolvedAnchorEl && resolvedAnchorEl.nodeType === 1 ? resolvedAnchorEl : utils_ownerDocument(paperRef.current).body;\n    const anchorRect = anchorElement.getBoundingClientRect();\n\n    if (false) {}\n\n    return {\n      top: anchorRect.top + getOffsetTop(anchorRect, anchorOrigin.vertical),\n      left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)\n    };\n  }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]); // Returns the base transform origin using the element\n\n  const getTransformOrigin = react.useCallback(elemRect => {\n    return {\n      vertical: getOffsetTop(elemRect, transformOrigin.vertical),\n      horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)\n    };\n  }, [transformOrigin.horizontal, transformOrigin.vertical]);\n  const getPositioningStyle = react.useCallback(element => {\n    const elemRect = {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    }; // Get the transform origin point on the element itself\n\n    const elemTransformOrigin = getTransformOrigin(elemRect);\n\n    if (anchorReference === \'none\') {\n      return {\n        top: null,\n        left: null,\n        transformOrigin: getTransformOriginValue(elemTransformOrigin)\n      };\n    } // Get the offset of the anchoring element\n\n\n    const anchorOffset = getAnchorOffset(); // Calculate element positioning\n\n    let top = anchorOffset.top - elemTransformOrigin.vertical;\n    let left = anchorOffset.left - elemTransformOrigin.horizontal;\n    const bottom = top + elemRect.height;\n    const right = left + elemRect.width; // Use the parent window of the anchorEl if provided\n\n    const containerWindow = utils_ownerWindow(resolveAnchorEl(anchorEl)); // Window thresholds taking required margin into account\n\n    const heightThreshold = containerWindow.innerHeight - marginThreshold;\n    const widthThreshold = containerWindow.innerWidth - marginThreshold; // Check if the vertical axis needs shifting\n\n    if (top < marginThreshold) {\n      const diff = top - marginThreshold;\n      top -= diff;\n      elemTransformOrigin.vertical += diff;\n    } else if (bottom > heightThreshold) {\n      const diff = bottom - heightThreshold;\n      top -= diff;\n      elemTransformOrigin.vertical += diff;\n    }\n\n    if (false) {} // Check if the horizontal axis needs shifting\n\n\n    if (left < marginThreshold) {\n      const diff = left - marginThreshold;\n      left -= diff;\n      elemTransformOrigin.horizontal += diff;\n    } else if (right > widthThreshold) {\n      const diff = right - widthThreshold;\n      left -= diff;\n      elemTransformOrigin.horizontal += diff;\n    }\n\n    return {\n      top: `${Math.round(top)}px`,\n      left: `${Math.round(left)}px`,\n      transformOrigin: getTransformOriginValue(elemTransformOrigin)\n    };\n  }, [anchorEl, anchorReference, getAnchorOffset, getTransformOrigin, marginThreshold]);\n  const setPositioningStyles = react.useCallback(() => {\n    const element = paperRef.current;\n\n    if (!element) {\n      return;\n    }\n\n    const positioning = getPositioningStyle(element);\n\n    if (positioning.top !== null) {\n      element.style.top = positioning.top;\n    }\n\n    if (positioning.left !== null) {\n      element.style.left = positioning.left;\n    }\n\n    element.style.transformOrigin = positioning.transformOrigin;\n  }, [getPositioningStyle]);\n\n  const handleEntering = (element, isAppearing) => {\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n\n    setPositioningStyles();\n  };\n\n  react.useEffect(() => {\n    if (open) {\n      setPositioningStyles();\n    }\n  });\n  react.useImperativeHandle(action, () => open ? {\n    updatePosition: () => {\n      setPositioningStyles();\n    }\n  } : null, [open, setPositioningStyles]);\n  react.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    const handleResize = utils_debounce(() => {\n      setPositioningStyles();\n    });\n    const containerWindow = utils_ownerWindow(anchorEl);\n    containerWindow.addEventListener(\'resize\', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener(\'resize\', handleResize);\n    };\n  }, [anchorEl, open, setPositioningStyles]);\n  let transitionDuration = transitionDurationProp;\n\n  if (transitionDurationProp === \'auto\' && !TransitionComponent.muiSupportAuto) {\n    transitionDuration = undefined;\n  } // If the container prop is provided, use that\n  // If the anchorEl prop is provided, use its parent body element as the container\n  // If neither are provided let the Modal take care of choosing the container\n\n\n  const container = containerProp || (anchorEl ? utils_ownerDocument(resolveAnchorEl(anchorEl)).body : undefined);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(PopoverRoot, extends_extends({\n    BackdropProps: {\n      invisible: true\n    },\n    className: clsx_m(classes.root, className),\n    container: container,\n    open: open,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, extends_extends({\n      appear: true,\n      in: open,\n      onEntering: handleEntering,\n      timeout: transitionDuration\n    }, TransitionProps, {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(PopoverPaper, extends_extends({\n        elevation: elevation\n      }, PaperProps, {\n        ref: handlePaperRef,\n        className: clsx_m(classes.paper, PaperProps.className),\n        children: children\n      }))\n    }))\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const Popover_Popover = (Popover);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Menu/menuClasses.js\n\nfunction getMenuUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiMenu\', slot);\n}\nconst menuClasses = generateUtilityClasses(\'MuiMenu\', [\'root\', \'paper\', \'list\']);\n/* harmony default export */ const Menu_menuClasses = ((/* unused pure expression or super */ null && (menuClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Menu/Menu.js\n\n\nconst Menu_excluded = ["onEntering"],\n      Menu_excluded2 = ["autoFocus", "children", "disableAutoFocusItem", "MenuListProps", "onClose", "open", "PaperProps", "PopoverClasses", "transitionDuration", "TransitionProps", "variant"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst RTL_ORIGIN = {\n  vertical: \'top\',\n  horizontal: \'right\'\n};\nconst LTR_ORIGIN = {\n  vertical: \'top\',\n  horizontal: \'left\'\n};\n\nconst Menu_useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\'],\n    paper: [\'paper\'],\n    list: [\'list\']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\n\nconst MenuRoot = styles_styled(Popover_Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === \'classes\',\n  name: \'MuiMenu\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst MenuPaper = styles_styled(Paper_Paper, {\n  name: \'MuiMenu\',\n  slot: \'Paper\',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tapable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: \'calc(100% - 96px)\',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: \'touch\'\n});\nconst MenuMenuList = styles_styled(MenuList_MenuList, {\n  name: \'MuiMenu\',\n  slot: \'List\',\n  overridesResolver: (props, styles) => styles.list\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/react.forwardRef(function Menu(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiMenu\'\n  });\n\n  const {\n    autoFocus = true,\n    children,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = \'auto\',\n    TransitionProps: {\n      onEntering\n    } = {},\n    variant = \'selectedMenu\'\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, Menu_excluded),\n        other = _objectWithoutPropertiesLoose(props, Menu_excluded2);\n\n  const theme = styles_useTheme_useTheme();\n  const isRtl = theme.direction === \'rtl\';\n\n  const ownerState = extends_extends({}, props, {\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  });\n\n  const classes = Menu_useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = react.useRef(null);\n\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === \'Tab\') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, \'tabKeyDown\');\n      }\n    }\n  };\n  /**\n   * the index of the item should receive focus\n   * in a `variant="selectedMenu"` it\'s the first `selected` item\n   * otherwise it\'s the very first item.\n   */\n\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We\'re looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  react.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/react.isValidElement(child)) {\n      return;\n    }\n\n    if (false) {}\n\n    if (!child.props.disabled) {\n      if (variant === \'selectedMenu\' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(MenuRoot, extends_extends({\n    classes: PopoverClasses,\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: \'bottom\',\n      horizontal: isRtl ? \'right\' : \'left\'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: extends_extends({\n      component: MenuPaper\n    }, PaperProps, {\n      classes: extends_extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    className: classes.root,\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: extends_extends({\n      onEntering: handleEntering\n    }, TransitionProps),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(MenuMenuList, extends_extends({\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant\n    }, MenuListProps, {\n      className: clsx_m(classes.list, MenuListProps.className),\n      children: children\n    }))\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const Menu_Menu = (Menu);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/NativeSelect/nativeSelectClasses.js\n\nfunction getNativeSelectUtilityClasses(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiNativeSelect\', slot);\n}\nconst nativeSelectClasses = generateUtilityClasses(\'MuiNativeSelect\', [\'root\', \'select\', \'multiple\', \'filled\', \'outlined\', \'standard\', \'disabled\', \'icon\', \'iconOpen\', \'iconFilled\', \'iconOutlined\', \'iconStandard\', \'nativeInput\']);\n/* harmony default export */ const NativeSelect_nativeSelectClasses = (nativeSelectClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/NativeSelect/NativeSelectInput.js\n\n\nconst NativeSelectInput_excluded = ["className", "disabled", "IconComponent", "inputRef", "variant"];\n\n\n\n\n\n\n\n\n\n\n\nconst NativeSelectInput_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    disabled,\n    multiple,\n    open\n  } = ownerState;\n  const slots = {\n    select: [\'select\', variant, disabled && \'disabled\', multiple && \'multiple\'],\n    icon: [\'icon\', `icon${utils_capitalize(variant)}`, open && \'iconOpen\', disabled && \'disabled\']\n  };\n  return composeClasses(slots, getNativeSelectUtilityClasses, classes);\n};\n\nconst nativeSelectSelectStyles = ({\n  ownerState,\n  theme\n}) => extends_extends({\n  MozAppearance: \'none\',\n  // Reset\n  WebkitAppearance: \'none\',\n  // Reset\n  // When interacting quickly, the text can end up selected.\n  // Native select can\'t be selected either.\n  userSelect: \'none\',\n  borderRadius: 0,\n  // Reset\n  cursor: \'pointer\',\n  \'&:focus\': {\n    // Show that it\'s not an text input\n    backgroundColor: theme.palette.mode === \'light\' ? \'rgba(0, 0, 0, 0.05)\' : \'rgba(255, 255, 255, 0.05)\',\n    borderRadius: 0 // Reset Chrome style\n\n  },\n  // Remove IE11 arrow\n  \'&::-ms-expand\': {\n    display: \'none\'\n  },\n  [`&.${NativeSelect_nativeSelectClasses.disabled}`]: {\n    cursor: \'default\'\n  },\n  \'&[multiple]\': {\n    height: \'auto\'\n  },\n  \'&:not([multiple]) option, &:not([multiple]) optgroup\': {\n    backgroundColor: theme.palette.background.paper\n  },\n  // Bump specificity to allow extending custom inputs\n  \'&&&\': {\n    paddingRight: 24,\n    minWidth: 16 // So it doesn\'t collapse.\n\n  }\n}, ownerState.variant === \'filled\' && {\n  \'&&&\': {\n    paddingRight: 32\n  }\n}, ownerState.variant === \'outlined\' && {\n  borderRadius: theme.shape.borderRadius,\n  \'&:focus\': {\n    borderRadius: theme.shape.borderRadius // Reset the reset for Chrome style\n\n  },\n  \'&&&\': {\n    paddingRight: 32\n  }\n});\nconst NativeSelectSelect = styles_styled(\'select\', {\n  name: \'MuiNativeSelect\',\n  slot: \'Select\',\n  shouldForwardProp: rootShouldForwardProp,\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.select, styles[ownerState.variant], {\n      [`&.${NativeSelect_nativeSelectClasses.multiple}`]: styles.multiple\n    }];\n  }\n})(nativeSelectSelectStyles);\nconst nativeSelectIconStyles = ({\n  ownerState,\n  theme\n}) => extends_extends({\n  // We use a position absolute over a flexbox in order to forward the pointer events\n  // to the input and to support wrapping tags..\n  position: \'absolute\',\n  right: 0,\n  top: \'calc(50% - .5em)\',\n  // Center vertically, height is 1em\n  pointerEvents: \'none\',\n  // Don\'t block pointer events on the select under the icon.\n  color: theme.palette.action.active,\n  [`&.${NativeSelect_nativeSelectClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}, ownerState.open && {\n  transform: \'rotate(180deg)\'\n}, ownerState.variant === \'filled\' && {\n  right: 7\n}, ownerState.variant === \'outlined\' && {\n  right: 7\n});\nconst NativeSelectIcon = styles_styled(\'svg\', {\n  name: \'MuiNativeSelect\',\n  slot: \'Icon\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, ownerState.variant && styles[`icon${utils_capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\n  }\n})(nativeSelectIconStyles);\n/**\n * @ignore - internal component.\n */\n\nconst NativeSelectInput = /*#__PURE__*/react.forwardRef(function NativeSelectInput(props, ref) {\n  const {\n    className,\n    disabled,\n    IconComponent,\n    inputRef,\n    variant = \'standard\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, NativeSelectInput_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    disabled,\n    variant\n  });\n\n  const classes = NativeSelectInput_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(NativeSelectSelect, extends_extends({\n      ownerState: ownerState,\n      className: clsx_m(classes.select, className),\n      disabled: disabled,\n      ref: inputRef || ref\n    }, other)), props.multiple ? null : /*#__PURE__*/(0,jsx_runtime.jsx)(NativeSelectIcon, {\n      as: IconComponent,\n      ownerState: ownerState,\n      className: classes.icon\n    })]\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const NativeSelect_NativeSelectInput = (NativeSelectInput);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/useControlled.js\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\n\nfunction useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = \'value\'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = react.useRef(controlled !== undefined);\n  const [valueState, setValue] = react.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n\n  if (false) {}\n\n  const setValueIfUncontrolled = react.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/useControlled.js\n\n/* harmony default export */ const utils_useControlled = (useControlled);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Select/selectClasses.js\n\nfunction getSelectUtilityClasses(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiSelect\', slot);\n}\nconst selectClasses = generateUtilityClasses(\'MuiSelect\', [\'select\', \'multiple\', \'filled\', \'outlined\', \'standard\', \'disabled\', \'focused\', \'icon\', \'iconOpen\', \'iconFilled\', \'iconOutlined\', \'iconStandard\', \'nativeInput\']);\n/* harmony default export */ const Select_selectClasses = (selectClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Select/SelectInput.js\n\n\n\n\nvar _span;\n\nconst SelectInput_excluded = ["aria-describedby", "aria-label", "autoFocus", "autoWidth", "children", "className", "defaultOpen", "defaultValue", "disabled", "displayEmpty", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "SelectDisplayProps", "tabIndex", "type", "value", "variant"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst SelectSelect = styles_styled(\'div\', {\n  name: \'MuiSelect\',\n  slot: \'Select\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [// Win specificity over the input base\n    {\n      [`&.${Select_selectClasses.select}`]: styles.select\n    }, {\n      [`&.${Select_selectClasses.select}`]: styles[ownerState.variant]\n    }, {\n      [`&.${Select_selectClasses.multiple}`]: styles.multiple\n    }];\n  }\n})(nativeSelectSelectStyles, {\n  // Win specificity over the input base\n  [`&.${Select_selectClasses.select}`]: {\n    height: \'auto\',\n    // Resets for multiple select with chips\n    minHeight: \'1.4375em\',\n    // Required for select\\text-field height consistency\n    textOverflow: \'ellipsis\',\n    whiteSpace: \'nowrap\',\n    overflow: \'hidden\'\n  }\n});\nconst SelectIcon = styles_styled(\'svg\', {\n  name: \'MuiSelect\',\n  slot: \'Icon\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, ownerState.variant && styles[`icon${utils_capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\n  }\n})(nativeSelectIconStyles);\nconst SelectNativeInput = styles_styled(\'input\', {\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== \'classes\',\n  name: \'MuiSelect\',\n  slot: \'NativeInput\',\n  overridesResolver: (props, styles) => styles.nativeInput\n})({\n  bottom: 0,\n  left: 0,\n  position: \'absolute\',\n  opacity: 0,\n  pointerEvents: \'none\',\n  width: \'100%\',\n  boxSizing: \'border-box\'\n});\n\nfunction areEqualValues(a, b) {\n  if (typeof b === \'object\' && b !== null) {\n    return a === b;\n  } // The value could be a number, the DOM will stringify it anyway.\n\n\n  return String(a) === String(b);\n}\n\nfunction SelectInput_isEmpty(display) {\n  return display == null || typeof display === \'string\' && !display.trim();\n}\n\nconst SelectInput_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    disabled,\n    multiple,\n    open\n  } = ownerState;\n  const slots = {\n    select: [\'select\', variant, disabled && \'disabled\', multiple && \'multiple\'],\n    icon: [\'icon\', `icon${utils_capitalize(variant)}`, open && \'iconOpen\', disabled && \'disabled\'],\n    nativeInput: [\'nativeInput\']\n  };\n  return composeClasses(slots, getSelectUtilityClasses, classes);\n};\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/react.forwardRef(function SelectInput(props, ref) {\n  const {\n    \'aria-describedby\': ariaDescribedby,\n    \'aria-label\': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    className,\n    defaultOpen,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = \'standard\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, SelectInput_excluded);\n\n  const [value, setValueState] = utils_useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: \'Select\'\n  });\n  const [openState, setOpenState] = utils_useControlled({\n    controlled: openProp,\n    default: defaultOpen,\n    name: \'Select\'\n  });\n  const inputRef = react.useRef(null);\n  const displayRef = react.useRef(null);\n  const [displayNode, setDisplayNode] = react.useState(null);\n  const {\n    current: isOpenControlled\n  } = react.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = react.useState();\n  const handleRef = utils_useForkRef(ref, inputRefProp);\n  const handleDisplayRef = react.useCallback(node => {\n    displayRef.current = node;\n\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  react.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]); // Resize menu on `defaultOpen` automatic toggle.\n\n  react.useEffect(() => {\n    if (defaultOpen && openState && displayNode && !isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      displayRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [displayNode, autoWidth]); // `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.\n  // `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.\n\n  react.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  react.useEffect(() => {\n    if (!labelId) {\n      return undefined;\n    }\n\n    const label = utils_ownerDocument(displayRef.current).getElementById(labelId);\n\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n\n      label.addEventListener(\'click\', handler);\n      return () => {\n        label.removeEventListener(\'click\', handler);\n      };\n    }\n\n    return undefined;\n  }, [labelId]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = react.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue; // We use the tabindex attribute to signal the available options.\n\n    if (!event.currentTarget.hasAttribute(\'tabindex\')) {\n      return;\n    }\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, \'target\', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [\' \', \'ArrowUp\', \'ArrowDown\', // The native select doesn\'t respond to enter on macOS, but it\'s recommended by\n      // https://www.w3.org/WAI/ARIA/apg/example-index/combobox/combobox-select-only.html\n      \'Enter\'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && openState;\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      // Preact support, target is read only property on a native event.\n      Object.defineProperty(event, \'target\', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other[\'aria-invalid\'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map((child, index, arr) => {\n    if (! /*#__PURE__*/react.isValidElement(child)) {\n      return null;\n    }\n\n    if (false) {}\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error( false ? 0 : formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    if (child.props.value === undefined) {\n      return /*#__PURE__*/react.cloneElement(child, {\n        \'aria-readonly\': true,\n        role: \'option\'\n      });\n    }\n\n    const isFirstSelectableElement = () => {\n      if (value) {\n        return selected;\n      }\n\n      const firstSelectableElement = arr.find(item => item.props.value !== undefined && item.props.disabled !== true);\n\n      if (child === firstSelectableElement) {\n        return true;\n      }\n\n      return selected;\n    };\n\n    return /*#__PURE__*/react.cloneElement(child, {\n      \'aria-selected\': selected ? \'true\' : \'false\',\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === \' \') {\n          // otherwise our MenuItems dispatches a click event\n          // it\'s not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: \'option\',\n      selected: arr[0].props.value === undefined || arr[0].props.disabled === true ? isFirstSelectableElement() : selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      \'data-value\': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (false) {}\n\n  if (computeDisplay) {\n    if (multiple) {\n      if (displayMultiple.length === 0) {\n        display = null;\n      } else {\n        display = displayMultiple.reduce((output, child, index) => {\n          output.push(child);\n\n          if (index < displayMultiple.length - 1) {\n            output.push(\', \');\n          }\n\n          return output;\n        }, []);\n      }\n    } else {\n      display = displaySingle;\n    }\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== \'undefined\') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n\n  const ownerState = extends_extends({}, props, {\n    variant,\n    value,\n    open\n  });\n\n  const classes = SelectInput_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(SelectSelect, extends_extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: "button",\n      "aria-disabled": disabled ? \'true\' : undefined,\n      "aria-expanded": open ? \'true\' : \'false\',\n      "aria-haspopup": "listbox",\n      "aria-label": ariaLabel,\n      "aria-labelledby": [labelId, buttonId].filter(Boolean).join(\' \') || undefined,\n      "aria-describedby": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      ownerState: ownerState,\n      className: clsx_m(classes.select, className, SelectDisplayProps.className) // The id is required for proper a11y\n      ,\n      id: buttonId,\n      children: SelectInput_isEmpty(display) ? // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n        className: "notranslate",\n        children: "\\u200B"\n      })) : display\n    })), /*#__PURE__*/(0,jsx_runtime.jsx)(SelectNativeInput, extends_extends({\n      value: Array.isArray(value) ? value.join(\',\') : value,\n      name: name,\n      ref: inputRef,\n      "aria-hidden": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus,\n      ownerState: ownerState\n    }, other)), /*#__PURE__*/(0,jsx_runtime.jsx)(SelectIcon, {\n      as: IconComponent,\n      className: classes.icon,\n      ownerState: ownerState\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(Menu_Menu, extends_extends({\n      id: `menu-${name || \'\'}`,\n      anchorEl: displayNode,\n      open: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: \'bottom\',\n        horizontal: \'center\'\n      },\n      transformOrigin: {\n        vertical: \'top\',\n        horizontal: \'center\'\n      }\n    }, MenuProps, {\n      MenuListProps: extends_extends({\n        \'aria-labelledby\': labelId,\n        role: \'listbox\',\n        disableListWrap: true\n      }, MenuProps.MenuListProps),\n      PaperProps: extends_extends({}, MenuProps.PaperProps, {\n        style: extends_extends({\n          minWidth: menuMinWidth\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n      }),\n      children: items\n    }))]\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const Select_SelectInput = (SelectInput);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/SvgIcon/svgIconClasses.js\n\nfunction getSvgIconUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiSvgIcon\', slot);\n}\nconst svgIconClasses = generateUtilityClasses(\'MuiSvgIcon\', [\'root\', \'colorPrimary\', \'colorSecondary\', \'colorAction\', \'colorError\', \'colorDisabled\', \'fontSizeInherit\', \'fontSizeSmall\', \'fontSizeMedium\', \'fontSizeLarge\']);\n/* harmony default export */ const SvgIcon_svgIconClasses = ((/* unused pure expression or super */ null && (svgIconClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/SvgIcon/SvgIcon.js\n\n\nconst SvgIcon_excluded = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"];\n\n\n\n\n\n\n\n\n\n\n\nconst SvgIcon_useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\', color !== \'inherit\' && `color${utils_capitalize(color)}`, `fontSize${utils_capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\n\nconst SvgIconRoot = styles_styled(\'svg\', {\n  name: \'MuiSvgIcon\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== \'inherit\' && styles[`color${utils_capitalize(ownerState.color)}`], styles[`fontSize${utils_capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$transitions2$d, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette$ownerState$c2, _palette2, _palette2$action, _palette3, _palette3$action;\n\n  return {\n    userSelect: \'none\',\n    width: \'1em\',\n    height: \'1em\',\n    display: \'inline-block\',\n    fill: \'currentColor\',\n    flexShrink: 0,\n    transition: (_theme$transitions = theme.transitions) == null ? void 0 : (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, \'fill\', {\n      duration: (_theme$transitions2 = theme.transitions) == null ? void 0 : (_theme$transitions2$d = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2$d.shorter\n    }),\n    fontSize: {\n      inherit: \'inherit\',\n      small: ((_theme$typography = theme.typography) == null ? void 0 : (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || \'1.25rem\',\n      medium: ((_theme$typography2 = theme.typography) == null ? void 0 : (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || \'1.5rem\',\n      large: ((_theme$typography3 = theme.typography) == null ? void 0 : (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || \'2.1875\'\n    }[ownerState.fontSize],\n    // TODO v5 deprecate, v6 remove for sx\n    color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null ? void 0 : (_palette$ownerState$c2 = _palette[ownerState.color]) == null ? void 0 : _palette$ownerState$c2.main) != null ? _palette$ownerState$c : {\n      action: (_palette2 = (theme.vars || theme).palette) == null ? void 0 : (_palette2$action = _palette2.action) == null ? void 0 : _palette2$action.active,\n      disabled: (_palette3 = (theme.vars || theme).palette) == null ? void 0 : (_palette3$action = _palette3.action) == null ? void 0 : _palette3$action.disabled,\n      inherit: undefined\n    }[ownerState.color]\n  };\n});\nconst SvgIcon = /*#__PURE__*/react.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiSvgIcon\'\n  });\n\n  const {\n    children,\n    className,\n    color = \'inherit\',\n    component = \'svg\',\n    fontSize = \'medium\',\n    htmlColor,\n    inheritViewBox = false,\n    titleAccess,\n    viewBox = \'0 0 24 24\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, SvgIcon_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox\n  });\n\n  const more = {};\n\n  if (!inheritViewBox) {\n    more.viewBox = viewBox;\n  }\n\n  const classes = SvgIcon_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(SvgIconRoot, extends_extends({\n    as: component,\n    className: clsx_m(classes.root, className),\n    ownerState: ownerState,\n    focusable: "false",\n    color: htmlColor,\n    "aria-hidden": titleAccess ? undefined : true,\n    role: titleAccess ? \'img\' : undefined,\n    ref: ref\n  }, more, other, {\n    children: [children, titleAccess ? /*#__PURE__*/(0,jsx_runtime.jsx)("title", {\n      children: titleAccess\n    }) : null]\n  }));\n});\n false ? 0 : void 0;\nSvgIcon.muiName = \'SvgIcon\';\n/* harmony default export */ const SvgIcon_SvgIcon = (SvgIcon);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/createSvgIcon.js\n\n\n\n/**\n * Private module reserved for @mui packages.\n */\n\n\nfunction createSvgIcon(path, displayName) {\n  const Component = (props, ref) => /*#__PURE__*/(0,jsx_runtime.jsx)(SvgIcon_SvgIcon, extends_extends({\n    "data-testid": `${displayName}Icon`,\n    ref: ref\n  }, props, {\n    children: path\n  }));\n\n  if (false) {}\n\n  Component.muiName = SvgIcon_SvgIcon.muiName;\n  return /*#__PURE__*/react.memo( /*#__PURE__*/react.forwardRef(Component));\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/ArrowDropDown.js\n\n\n/**\n * @ignore - internal component.\n */\n\n\n/* harmony default export */ const ArrowDropDown = (createSvgIcon( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {\n  d: "M7 10l5 5 5-5z"\n}), \'ArrowDropDown\'));\n;// CONCATENATED MODULE: ./node_modules/@mui/base/TextareaAutosize/TextareaAutosize.js\n\n\nconst TextareaAutosize_excluded = ["onChange", "maxRows", "minRows", "style", "value"];\n\n\n\n\n\n\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nconst TextareaAutosize_styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: \'hidden\',\n    // Remove from the content flow\n    position: \'absolute\',\n    // Ignore the scrollbar width\n    overflow: \'hidden\',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: \'translateZ(0)\'\n  }\n};\n\nfunction TextareaAutosize_isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nconst TextareaAutosize = /*#__PURE__*/react.forwardRef(function TextareaAutosize(props, ref) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, TextareaAutosize_excluded);\n\n  const {\n    current: isControlled\n  } = react.useRef(value != null);\n  const inputRef = react.useRef(null);\n  const handleRef = useForkRef(ref, inputRef);\n  const shadowRef = react.useRef(null);\n  const renders = react.useRef(0);\n  const [state, setState] = react.useState({});\n  const getUpdatedState = react.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    const computedStyle = containerWindow.getComputedStyle(input); // If input\'s width is shrunk and it\'s not visible, don\'t sync height.\n\n    if (computedStyle.width === \'0px\') {\n      return {};\n    }\n\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || \'x\';\n\n    if (inputShallow.value.slice(-1) === \'\\n\') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += \' \';\n    }\n\n    const boxSizing = computedStyle[\'box-sizing\'];\n    const padding = getStyleValue(computedStyle, \'padding-bottom\') + getStyleValue(computedStyle, \'padding-top\');\n    const border = getStyleValue(computedStyle, \'border-bottom-width\') + getStyleValue(computedStyle, \'border-top-width\'); // The height of the inner content\n\n    const innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row\n\n    inputShallow.value = \'x\';\n    const singleRowHeight = inputShallow.scrollHeight; // The height of the outer content\n\n    let outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    const outerHeightStyle = outerHeight + (boxSizing === \'border-box\' ? padding + border : 0);\n    const overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflow\n    };\n  }, [maxRows, minRows, props.placeholder]);\n\n  const updateState = (prevState, newState) => {\n    const {\n      outerHeightStyle,\n      overflow\n    } = newState; // Need a large enough difference to update the height.\n    // This prevents infinite rendering loop.\n\n    if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n      renders.current += 1;\n      return {\n        overflow,\n        outerHeightStyle\n      };\n    }\n\n    if (false) {}\n\n    return prevState;\n  };\n\n  const syncHeight = react.useCallback(() => {\n    const newState = getUpdatedState();\n\n    if (TextareaAutosize_isEmpty(newState)) {\n      return;\n    }\n\n    setState(prevState => {\n      return updateState(prevState, newState);\n    });\n  }, [getUpdatedState]);\n\n  const syncHeightWithFlushSycn = () => {\n    const newState = getUpdatedState();\n\n    if (TextareaAutosize_isEmpty(newState)) {\n      return;\n    } // In React 18, state updates in a ResizeObserver\'s callback are happening after the paint which causes flickering\n    // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n    // Related issue - https://github.com/facebook/react/issues/24331\n\n\n    (0,react_dom.flushSync)(() => {\n      setState(prevState => {\n        return updateState(prevState, newState);\n      });\n    });\n  };\n\n  react.useEffect(() => {\n    const handleResize = debounce(() => {\n      renders.current = 0; // If the TextareaAutosize component is replaced by Suspense with a fallback, the last\n      // ResizeObserver\'s handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/32640\n      // TODO: Add tests that will ensure the component is not failing when\n      // replaced by Suspense with a fallback, once React is updated to version 18\n\n      if (inputRef.current) {\n        syncHeightWithFlushSycn();\n      }\n    });\n    const containerWindow = ownerWindow(inputRef.current);\n    containerWindow.addEventListener(\'resize\', handleResize);\n    let resizeObserver;\n\n    if (typeof ResizeObserver !== \'undefined\') {\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(inputRef.current);\n    }\n\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener(\'resize\', handleResize);\n\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  });\n  esm_useEnhancedEffect(() => {\n    syncHeight();\n  });\n  react.useEffect(() => {\n    renders.current = 0;\n  }, [value]);\n\n  const handleChange = event => {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("textarea", extends_extends({\n      value: value,\n      onChange: handleChange,\n      ref: handleRef // Apply the rows prop to get a "correct" first SSR paint\n      ,\n      rows: minRows,\n      style: extends_extends({\n        height: state.outerHeightStyle,\n        // Need a large enough difference to allow scrolling.\n        // This prevents infinite rendering loop.\n        overflow: state.overflow ? \'hidden\' : null\n      }, style)\n    }, other)), /*#__PURE__*/(0,jsx_runtime.jsx)("textarea", {\n      "aria-hidden": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: extends_extends({}, TextareaAutosize_styles.shadow, style, {\n        padding: 0\n      })\n    })]\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const TextareaAutosize_TextareaAutosize = (TextareaAutosize);\n;// CONCATENATED MODULE: ./node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js\n\n\n\n\n\nfunction GlobalStyles_isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nfunction GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === \'function\' ? themeInput => styles(GlobalStyles_isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Global, {\n    styles: globalStyles\n  });\n}\n false ? 0 : void 0;\n;// CONCATENATED MODULE: ./node_modules/@mui/material/GlobalStyles/GlobalStyles.js\n\n\n\n\n\n\n\nfunction GlobalStyles_GlobalStyles(props) {\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(GlobalStyles, extends_extends({}, props, {\n    defaultTheme: styles_defaultTheme\n  }));\n}\n\n false ? 0 : void 0;\n/* harmony default export */ const material_GlobalStyles_GlobalStyles = (GlobalStyles_GlobalStyles);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/InputBase/inputBaseClasses.js\n\nfunction getInputBaseUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiInputBase\', slot);\n}\nconst inputBaseClasses = generateUtilityClasses(\'MuiInputBase\', [\'root\', \'formControl\', \'focused\', \'disabled\', \'adornedStart\', \'adornedEnd\', \'error\', \'sizeSmall\', \'multiline\', \'colorSecondary\', \'fullWidth\', \'hiddenLabel\', \'input\', \'inputSizeSmall\', \'inputMultiline\', \'inputTypeSearch\', \'inputAdornedStart\', \'inputAdornedEnd\', \'inputHiddenLabel\']);\n/* harmony default export */ const InputBase_inputBaseClasses = (inputBaseClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/InputBase/InputBase.js\n\n\n\nconst InputBase_excluded = ["aria-describedby", "autoComplete", "autoFocus", "className", "color", "components", "componentsProps", "defaultValue", "disabled", "disableInjectingGlobalStyles", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "size", "startAdornment", "type", "value"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst rootOverridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.formControl && styles.formControl, ownerState.startAdornment && styles.adornedStart, ownerState.endAdornment && styles.adornedEnd, ownerState.error && styles.error, ownerState.size === \'small\' && styles.sizeSmall, ownerState.multiline && styles.multiline, ownerState.color && styles[`color${utils_capitalize(ownerState.color)}`], ownerState.fullWidth && styles.fullWidth, ownerState.hiddenLabel && styles.hiddenLabel];\n};\nconst inputOverridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.input, ownerState.size === \'small\' && styles.inputSizeSmall, ownerState.multiline && styles.inputMultiline, ownerState.type === \'search\' && styles.inputTypeSearch, ownerState.startAdornment && styles.inputAdornedStart, ownerState.endAdornment && styles.inputAdornedEnd, ownerState.hiddenLabel && styles.inputHiddenLabel];\n};\n\nconst InputBase_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disabled,\n    error,\n    endAdornment,\n    focused,\n    formControl,\n    fullWidth,\n    hiddenLabel,\n    multiline,\n    size,\n    startAdornment,\n    type\n  } = ownerState;\n  const slots = {\n    root: [\'root\', `color${utils_capitalize(color)}`, disabled && \'disabled\', error && \'error\', fullWidth && \'fullWidth\', focused && \'focused\', formControl && \'formControl\', size === \'small\' && \'sizeSmall\', multiline && \'multiline\', startAdornment && \'adornedStart\', endAdornment && \'adornedEnd\', hiddenLabel && \'hiddenLabel\'],\n    input: [\'input\', disabled && \'disabled\', type === \'search\' && \'inputTypeSearch\', multiline && \'inputMultiline\', size === \'small\' && \'inputSizeSmall\', hiddenLabel && \'inputHiddenLabel\', startAdornment && \'inputAdornedStart\', endAdornment && \'inputAdornedEnd\']\n  };\n  return composeClasses(slots, getInputBaseUtilityClass, classes);\n};\n\nconst InputBaseRoot = styles_styled(\'div\', {\n  name: \'MuiInputBase\',\n  slot: \'Root\',\n  overridesResolver: rootOverridesResolver\n})(({\n  theme,\n  ownerState\n}) => extends_extends({}, theme.typography.body1, {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: \'1.4375em\',\n  // 23px\n  boxSizing: \'border-box\',\n  // Prevent padding issue with fullWidth.\n  position: \'relative\',\n  cursor: \'text\',\n  display: \'inline-flex\',\n  alignItems: \'center\',\n  [`&.${InputBase_inputBaseClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled,\n    cursor: \'default\'\n  }\n}, ownerState.multiline && extends_extends({\n  padding: \'4px 0 5px\'\n}, ownerState.size === \'small\' && {\n  paddingTop: 1\n}), ownerState.fullWidth && {\n  width: \'100%\'\n}));\nconst InputBaseComponent = styles_styled(\'input\', {\n  name: \'MuiInputBase\',\n  slot: \'Input\',\n  overridesResolver: inputOverridesResolver\n})(({\n  theme,\n  ownerState\n}) => {\n  const light = theme.palette.mode === \'light\';\n\n  const placeholder = extends_extends({\n    color: \'currentColor\'\n  }, theme.vars ? {\n    opacity: theme.vars.opacity.inputPlaceholder\n  } : {\n    opacity: light ? 0.42 : 0.5\n  }, {\n    transition: theme.transitions.create(\'opacity\', {\n      duration: theme.transitions.duration.shorter\n    })\n  });\n\n  const placeholderHidden = {\n    opacity: \'0 !important\'\n  };\n  const placeholderVisible = theme.vars ? {\n    opacity: theme.vars.opacity.inputPlaceholder\n  } : {\n    opacity: light ? 0.42 : 0.5\n  };\n  return extends_extends({\n    font: \'inherit\',\n    letterSpacing: \'inherit\',\n    color: \'currentColor\',\n    padding: \'4px 0 5px\',\n    border: 0,\n    boxSizing: \'content-box\',\n    background: \'none\',\n    height: \'1.4375em\',\n    // Reset 23pxthe native input line-height\n    margin: 0,\n    // Reset for Safari\n    WebkitTapHighlightColor: \'transparent\',\n    display: \'block\',\n    // Make the flex item shrink with Firefox\n    minWidth: 0,\n    width: \'100%\',\n    // Fix IE11 width issue\n    animationName: \'mui-auto-fill-cancel\',\n    animationDuration: \'10ms\',\n    \'&::-webkit-input-placeholder\': placeholder,\n    \'&::-moz-placeholder\': placeholder,\n    // Firefox 19+\n    \'&:-ms-input-placeholder\': placeholder,\n    // IE11\n    \'&::-ms-input-placeholder\': placeholder,\n    // Edge\n    \'&:focus\': {\n      outline: 0\n    },\n    // Reset Firefox invalid required input style\n    \'&:invalid\': {\n      boxShadow: \'none\'\n    },\n    \'&::-webkit-search-decoration\': {\n      // Remove the padding when type=search.\n      WebkitAppearance: \'none\'\n    },\n    // Show and hide the placeholder logic\n    [`label[data-shrink=false] + .${InputBase_inputBaseClasses.formControl} &`]: {\n      \'&::-webkit-input-placeholder\': placeholderHidden,\n      \'&::-moz-placeholder\': placeholderHidden,\n      // Firefox 19+\n      \'&:-ms-input-placeholder\': placeholderHidden,\n      // IE11\n      \'&::-ms-input-placeholder\': placeholderHidden,\n      // Edge\n      \'&:focus::-webkit-input-placeholder\': placeholderVisible,\n      \'&:focus::-moz-placeholder\': placeholderVisible,\n      // Firefox 19+\n      \'&:focus:-ms-input-placeholder\': placeholderVisible,\n      // IE11\n      \'&:focus::-ms-input-placeholder\': placeholderVisible // Edge\n\n    },\n    [`&.${InputBase_inputBaseClasses.disabled}`]: {\n      opacity: 1,\n      // Reset iOS opacity\n      WebkitTextFillColor: (theme.vars || theme).palette.text.disabled // Fix opacity Safari bug\n\n    },\n    \'&:-webkit-autofill\': {\n      animationDuration: \'5000s\',\n      animationName: \'mui-auto-fill\'\n    }\n  }, ownerState.size === \'small\' && {\n    paddingTop: 1\n  }, ownerState.multiline && {\n    height: \'auto\',\n    resize: \'none\',\n    padding: 0,\n    paddingTop: 0\n  }, ownerState.type === \'search\' && {\n    // Improve type search style.\n    MozAppearance: \'textfield\'\n  });\n});\n\nconst inputGlobalStyles = /*#__PURE__*/(0,jsx_runtime.jsx)(material_GlobalStyles_GlobalStyles, {\n  styles: {\n    \'@keyframes mui-auto-fill\': {\n      from: {\n        display: \'block\'\n      }\n    },\n    \'@keyframes mui-auto-fill-cancel\': {\n      from: {\n        display: \'block\'\n      }\n    }\n  }\n});\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\n\nconst InputBase = /*#__PURE__*/react.forwardRef(function InputBase(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiInputBase\'\n  });\n\n  const {\n    \'aria-describedby\': ariaDescribedby,\n    autoComplete,\n    autoFocus,\n    className,\n    components = {},\n    componentsProps = {},\n    defaultValue,\n    disabled,\n    disableInjectingGlobalStyles,\n    endAdornment,\n    fullWidth = false,\n    id,\n    inputComponent = \'input\',\n    inputProps: inputPropsProp = {},\n    inputRef: inputRefProp,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onClick,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    placeholder,\n    readOnly,\n    renderSuffix,\n    rows,\n    startAdornment,\n    type = \'text\',\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, InputBase_excluded);\n\n  const value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n  const {\n    current: isControlled\n  } = react.useRef(value != null);\n  const inputRef = react.useRef();\n  const handleInputRefWarning = react.useCallback(instance => {\n    if (false) {}\n  }, []);\n  const handleInputPropsRefProp = utils_useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  const handleInputRefProp = utils_useForkRef(inputRefProp, handleInputPropsRefProp);\n  const handleInputRef = utils_useForkRef(inputRef, handleInputRefProp);\n  const [focused, setFocused] = react.useState(false);\n  const muiFormControl = useFormControl();\n\n  if (false) {}\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: [\'color\', \'disabled\', \'error\', \'hiddenLabel\', \'size\', \'required\', \'filled\']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won\'t fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  react.useEffect(() => {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  const onFilled = muiFormControl && muiFormControl.onFilled;\n  const onEmpty = muiFormControl && muiFormControl.onEmpty;\n  const checkDirty = react.useCallback(obj => {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  utils_useEnhancedEffect(() => {\n    if (isControlled) {\n      checkDirty({\n        value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  const handleFocus = event => {\n    // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the component is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = (event, ...args) => {\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error( false ? 0 : formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange(event, ...args);\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange(event, ...args);\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  react.useEffect(() => {\n    checkDirty(inputRef.current); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClick = event => {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  let InputComponent = inputComponent;\n  let inputProps = inputPropsProp;\n\n  if (multiline && InputComponent === \'input\') {\n    if (rows) {\n      if (false) {}\n\n      inputProps = extends_extends({\n        type: undefined,\n        minRows: rows,\n        maxRows: rows\n      }, inputProps);\n    } else {\n      inputProps = extends_extends({\n        type: undefined,\n        maxRows,\n        minRows\n      }, inputProps);\n    }\n\n    InputComponent = TextareaAutosize_TextareaAutosize;\n  }\n\n  const handleAutoFill = event => {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === \'mui-auto-fill-cancel\' ? inputRef.current : {\n      value: \'x\'\n    });\n  };\n\n  react.useEffect(() => {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n\n  const ownerState = extends_extends({}, props, {\n    color: fcs.color || \'primary\',\n    disabled: fcs.disabled,\n    endAdornment,\n    error: fcs.error,\n    focused: fcs.focused,\n    formControl: muiFormControl,\n    fullWidth,\n    hiddenLabel: fcs.hiddenLabel,\n    multiline,\n    size: fcs.size,\n    startAdornment,\n    type\n  });\n\n  const classes = InputBase_useUtilityClasses(ownerState);\n  const Root = components.Root || InputBaseRoot;\n  const rootProps = componentsProps.root || {};\n  const Input = components.Input || InputBaseComponent;\n  inputProps = extends_extends({}, inputProps, componentsProps.input);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {\n    children: [!disableInjectingGlobalStyles && inputGlobalStyles, /*#__PURE__*/(0,jsx_runtime.jsxs)(Root, extends_extends({}, rootProps, !utils_isHostComponent(Root) && {\n      ownerState: extends_extends({}, ownerState, rootProps.ownerState)\n    }, {\n      ref: ref,\n      onClick: handleClick\n    }, other, {\n      className: clsx_m(classes.root, rootProps.className, className),\n      children: [startAdornment, /*#__PURE__*/(0,jsx_runtime.jsx)(FormControl_FormControlContext.Provider, {\n        value: null,\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)(Input, extends_extends({\n          ownerState: ownerState,\n          "aria-invalid": fcs.error,\n          "aria-describedby": ariaDescribedby,\n          autoComplete: autoComplete,\n          autoFocus: autoFocus,\n          defaultValue: defaultValue,\n          disabled: fcs.disabled,\n          id: id,\n          onAnimationStart: handleAutoFill,\n          name: name,\n          placeholder: placeholder,\n          readOnly: readOnly,\n          required: fcs.required,\n          rows: rows,\n          value: value,\n          onKeyDown: onKeyDown,\n          onKeyUp: onKeyUp,\n          type: type\n        }, inputProps, !utils_isHostComponent(Input) && {\n          as: InputComponent,\n          ownerState: extends_extends({}, ownerState, inputProps.ownerState)\n        }, {\n          ref: handleInputRef,\n          className: clsx_m(classes.input, inputProps.className),\n          onBlur: handleBlur,\n          onChange: handleChange,\n          onFocus: handleFocus\n        }))\n      }), endAdornment, renderSuffix ? renderSuffix(extends_extends({}, fcs, {\n        startAdornment\n      })) : null]\n    }))]\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const InputBase_InputBase = (InputBase);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Input/inputClasses.js\n\n\n\nfunction getInputUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiInput\', slot);\n}\n\nconst inputClasses = extends_extends({}, InputBase_inputBaseClasses, generateUtilityClasses(\'MuiInput\', [\'root\', \'underline\', \'input\']));\n\n/* harmony default export */ const Input_inputClasses = (inputClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Input/Input.js\n\n\nconst Input_excluded = ["disableUnderline", "components", "componentsProps", "fullWidth", "inputComponent", "multiline", "type"];\n\n\n\n\n\n\n\n\n\n\n\nconst Input_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableUnderline\n  } = ownerState;\n  const slots = {\n    root: [\'root\', !disableUnderline && \'underline\'],\n    input: [\'input\']\n  };\n  const composedClasses = composeClasses(slots, getInputUtilityClass, classes);\n  return extends_extends({}, classes, composedClasses);\n};\n\nconst InputRoot = styles_styled(InputBaseRoot, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === \'classes\',\n  name: \'MuiInput\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [...rootOverridesResolver(props, styles), !ownerState.disableUnderline && styles.underline];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const light = theme.palette.mode === \'light\';\n  let bottomLineColor = light ? \'rgba(0, 0, 0, 0.42)\' : \'rgba(255, 255, 255, 0.7)\';\n\n  if (theme.vars) {\n    bottomLineColor = `rgba(${theme.vars.palette.common.onBackgroundChannel} / ${theme.vars.opacity.inputUnderline})`;\n  }\n\n  return extends_extends({\n    position: \'relative\'\n  }, ownerState.formControl && {\n    \'label + &\': {\n      marginTop: 16\n    }\n  }, !ownerState.disableUnderline && {\n    \'&:after\': {\n      borderBottom: `2px solid ${(theme.vars || theme).palette[ownerState.color].main}`,\n      left: 0,\n      bottom: 0,\n      // Doing the other way around crash on IE11 "\'\'" https://github.com/cssinjs/jss/issues/242\n      content: \'""\',\n      position: \'absolute\',\n      right: 0,\n      transform: \'scaleX(0)\',\n      transition: theme.transitions.create(\'transform\', {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      }),\n      pointerEvents: \'none\' // Transparent to the hover style.\n\n    },\n    [`&.${Input_inputClasses.focused}:after`]: {\n      // translateX(0) is a workaround for Safari transform scale bug\n      // See https://github.com/mui/material-ui/issues/31766\n      transform: \'scaleX(1) translateX(0)\'\n    },\n    [`&.${Input_inputClasses.error}:after`]: {\n      borderBottomColor: (theme.vars || theme).palette.error.main,\n      transform: \'scaleX(1)\' // error is always underlined in red\n\n    },\n    \'&:before\': {\n      borderBottom: `1px solid ${bottomLineColor}`,\n      left: 0,\n      bottom: 0,\n      // Doing the other way around crash on IE11 "\'\'" https://github.com/cssinjs/jss/issues/242\n      content: \'"\\\\00a0"\',\n      position: \'absolute\',\n      right: 0,\n      transition: theme.transitions.create(\'border-bottom-color\', {\n        duration: theme.transitions.duration.shorter\n      }),\n      pointerEvents: \'none\' // Transparent to the hover style.\n\n    },\n    [`&:hover:not(.${Input_inputClasses.disabled}):before`]: {\n      borderBottom: `2px solid ${(theme.vars || theme).palette.text.primary}`,\n      // Reset on touch devices, it doesn\'t add specificity\n      \'@media (hover: none)\': {\n        borderBottom: `1px solid ${bottomLineColor}`\n      }\n    },\n    [`&.${Input_inputClasses.disabled}:before`]: {\n      borderBottomStyle: \'dotted\'\n    }\n  });\n});\nconst InputInput = styles_styled(InputBaseComponent, {\n  name: \'MuiInput\',\n  slot: \'Input\',\n  overridesResolver: inputOverridesResolver\n})({});\nconst Input = /*#__PURE__*/react.forwardRef(function Input(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiInput\'\n  });\n\n  const {\n    disableUnderline,\n    components = {},\n    componentsProps: componentsPropsProp,\n    fullWidth = false,\n    inputComponent = \'input\',\n    multiline = false,\n    type = \'text\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Input_excluded);\n\n  const classes = Input_useUtilityClasses(props);\n  const ownerState = {\n    disableUnderline\n  };\n  const inputComponentsProps = {\n    root: {\n      ownerState\n    }\n  };\n  const componentsProps = componentsPropsProp ? deepmerge_deepmerge(componentsPropsProp, inputComponentsProps) : inputComponentsProps;\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputBase_InputBase, extends_extends({\n    components: extends_extends({\n      Root: InputRoot,\n      Input: InputInput\n    }, components),\n    componentsProps: componentsProps,\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other, {\n    classes: classes\n  }));\n});\n false ? 0 : void 0;\nInput.muiName = \'Input\';\n/* harmony default export */ const Input_Input = (Input);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/FilledInput/filledInputClasses.js\n\n\n\nfunction getFilledInputUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiFilledInput\', slot);\n}\n\nconst filledInputClasses = extends_extends({}, InputBase_inputBaseClasses, generateUtilityClasses(\'MuiFilledInput\', [\'root\', \'underline\', \'input\']));\n\n/* harmony default export */ const FilledInput_filledInputClasses = (filledInputClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/FilledInput/FilledInput.js\n\n\nconst FilledInput_excluded = ["disableUnderline", "components", "componentsProps", "fullWidth", "hiddenLabel", "inputComponent", "multiline", "type"];\n\n\n\n\n\n\n\n\n\n\n\nconst FilledInput_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableUnderline\n  } = ownerState;\n  const slots = {\n    root: [\'root\', !disableUnderline && \'underline\'],\n    input: [\'input\']\n  };\n  const composedClasses = composeClasses(slots, getFilledInputUtilityClass, classes);\n  return extends_extends({}, classes, composedClasses);\n};\n\nconst FilledInputRoot = styles_styled(InputBaseRoot, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === \'classes\',\n  name: \'MuiFilledInput\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [...rootOverridesResolver(props, styles), !ownerState.disableUnderline && styles.underline];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n\n  const light = theme.palette.mode === \'light\';\n  const bottomLineColor = light ? \'rgba(0, 0, 0, 0.42)\' : \'rgba(255, 255, 255, 0.7)\';\n  const backgroundColor = light ? \'rgba(0, 0, 0, 0.06)\' : \'rgba(255, 255, 255, 0.09)\';\n  const hoverBackground = light ? \'rgba(0, 0, 0, 0.09)\' : \'rgba(255, 255, 255, 0.13)\';\n  const disabledBackground = light ? \'rgba(0, 0, 0, 0.12)\' : \'rgba(255, 255, 255, 0.12)\';\n  return extends_extends({\n    position: \'relative\',\n    backgroundColor: theme.vars ? theme.vars.palette.FilledInput.bg : backgroundColor,\n    borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n    borderTopRightRadius: (theme.vars || theme).shape.borderRadius,\n    transition: theme.transitions.create(\'background-color\', {\n      duration: theme.transitions.duration.shorter,\n      easing: theme.transitions.easing.easeOut\n    }),\n    \'&:hover\': {\n      backgroundColor: theme.vars ? theme.vars.palette.FilledInput.hoverBg : hoverBackground,\n      // Reset on touch devices, it doesn\'t add specificity\n      \'@media (hover: none)\': {\n        backgroundColor: theme.vars ? theme.vars.palette.FilledInput.bg : backgroundColor\n      }\n    },\n    [`&.${FilledInput_filledInputClasses.focused}`]: {\n      backgroundColor: theme.vars ? theme.vars.palette.FilledInput.bg : backgroundColor\n    },\n    [`&.${FilledInput_filledInputClasses.disabled}`]: {\n      backgroundColor: theme.vars ? theme.vars.palette.FilledInput.disabledBg : disabledBackground\n    }\n  }, !ownerState.disableUnderline && {\n    \'&:after\': {\n      borderBottom: `2px solid ${(_palette = (theme.vars || theme).palette[ownerState.color || \'primary\']) == null ? void 0 : _palette.main}`,\n      left: 0,\n      bottom: 0,\n      // Doing the other way around crash on IE11 "\'\'" https://github.com/cssinjs/jss/issues/242\n      content: \'""\',\n      position: \'absolute\',\n      right: 0,\n      transform: \'scaleX(0)\',\n      transition: theme.transitions.create(\'transform\', {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      }),\n      pointerEvents: \'none\' // Transparent to the hover style.\n\n    },\n    [`&.${FilledInput_filledInputClasses.focused}:after`]: {\n      // translateX(0) is a workaround for Safari transform scale bug\n      // See https://github.com/mui/material-ui/issues/31766\n      transform: \'scaleX(1) translateX(0)\'\n    },\n    [`&.${FilledInput_filledInputClasses.error}:after`]: {\n      borderBottomColor: (theme.vars || theme).palette.error.main,\n      transform: \'scaleX(1)\' // error is always underlined in red\n\n    },\n    \'&:before\': {\n      borderBottom: `1px solid ${theme.vars ? `rgba(${theme.vars.palette.common.onBackgroundChannel} / ${theme.vars.opacity.inputUnderline})` : bottomLineColor}`,\n      left: 0,\n      bottom: 0,\n      // Doing the other way around crash on IE11 "\'\'" https://github.com/cssinjs/jss/issues/242\n      content: \'"\\\\00a0"\',\n      position: \'absolute\',\n      right: 0,\n      transition: theme.transitions.create(\'border-bottom-color\', {\n        duration: theme.transitions.duration.shorter\n      }),\n      pointerEvents: \'none\' // Transparent to the hover style.\n\n    },\n    [`&:hover:not(.${FilledInput_filledInputClasses.disabled}):before`]: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.text.primary}`\n    },\n    [`&.${FilledInput_filledInputClasses.disabled}:before`]: {\n      borderBottomStyle: \'dotted\'\n    }\n  }, ownerState.startAdornment && {\n    paddingLeft: 12\n  }, ownerState.endAdornment && {\n    paddingRight: 12\n  }, ownerState.multiline && extends_extends({\n    padding: \'25px 12px 8px\'\n  }, ownerState.size === \'small\' && {\n    paddingTop: 21,\n    paddingBottom: 4\n  }, ownerState.hiddenLabel && {\n    paddingTop: 16,\n    paddingBottom: 17\n  }));\n});\nconst FilledInputInput = styles_styled(InputBaseComponent, {\n  name: \'MuiFilledInput\',\n  slot: \'Input\',\n  overridesResolver: inputOverridesResolver\n})(({\n  theme,\n  ownerState\n}) => extends_extends({\n  paddingTop: 25,\n  paddingRight: 12,\n  paddingBottom: 8,\n  paddingLeft: 12\n}, !theme.vars && {\n  \'&:-webkit-autofill\': {\n    WebkitBoxShadow: theme.palette.mode === \'light\' ? null : \'0 0 0 100px #266798 inset\',\n    WebkitTextFillColor: theme.palette.mode === \'light\' ? null : \'#fff\',\n    caretColor: theme.palette.mode === \'light\' ? null : \'#fff\',\n    borderTopLeftRadius: \'inherit\',\n    borderTopRightRadius: \'inherit\'\n  }\n}, theme.vars && {\n  \'&:-webkit-autofill\': {\n    borderTopLeftRadius: \'inherit\',\n    borderTopRightRadius: \'inherit\'\n  },\n  [theme.getColorSchemeSelector(\'dark\')]: {\n    \'&:-webkit-autofill\': {\n      WebkitBoxShadow: \'0 0 0 100px #266798 inset\',\n      WebkitTextFillColor: \'#fff\',\n      caretColor: \'#fff\'\n    }\n  }\n}, ownerState.size === \'small\' && {\n  paddingTop: 21,\n  paddingBottom: 4\n}, ownerState.hiddenLabel && {\n  paddingTop: 16,\n  paddingBottom: 17\n}, ownerState.multiline && {\n  paddingTop: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  paddingRight: 0\n}, ownerState.startAdornment && {\n  paddingLeft: 0\n}, ownerState.endAdornment && {\n  paddingRight: 0\n}, ownerState.hiddenLabel && ownerState.size === \'small\' && {\n  paddingTop: 8,\n  paddingBottom: 9\n}));\nconst FilledInput = /*#__PURE__*/react.forwardRef(function FilledInput(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiFilledInput\'\n  });\n\n  const {\n    components = {},\n    componentsProps: componentsPropsProp,\n    fullWidth = false,\n    // declare here to prevent spreading to DOM\n    inputComponent = \'input\',\n    multiline = false,\n    type = \'text\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, FilledInput_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    fullWidth,\n    inputComponent,\n    multiline,\n    type\n  });\n\n  const classes = FilledInput_useUtilityClasses(props);\n  const filledInputComponentsProps = {\n    root: {\n      ownerState\n    },\n    input: {\n      ownerState\n    }\n  };\n  const componentsProps = componentsPropsProp ? deepmerge_deepmerge(componentsPropsProp, filledInputComponentsProps) : filledInputComponentsProps;\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputBase_InputBase, extends_extends({\n    components: extends_extends({\n      Root: FilledInputRoot,\n      Input: FilledInputInput\n    }, components),\n    componentsProps: componentsProps,\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other, {\n    classes: classes\n  }));\n});\n false ? 0 : void 0;\nFilledInput.muiName = \'Input\';\n/* harmony default export */ const FilledInput_FilledInput = (FilledInput);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/OutlinedInput/NotchedOutline.js\n\n\n\nvar NotchedOutline_span;\n\nconst NotchedOutline_excluded = ["children", "classes", "className", "label", "notched"];\n\n\n\n\nconst NotchedOutlineRoot = styles_styled(\'fieldset\')({\n  textAlign: \'left\',\n  position: \'absolute\',\n  bottom: 0,\n  right: 0,\n  top: -5,\n  left: 0,\n  margin: 0,\n  padding: \'0 8px\',\n  pointerEvents: \'none\',\n  borderRadius: \'inherit\',\n  borderStyle: \'solid\',\n  borderWidth: 1,\n  overflow: \'hidden\',\n  minWidth: \'0%\'\n});\nconst NotchedOutlineLegend = styles_styled(\'legend\')(({\n  ownerState,\n  theme\n}) => extends_extends({\n  float: \'unset\',\n  // Fix conflict with bootstrap\n  overflow: \'hidden\'\n}, !ownerState.withLabel && {\n  padding: 0,\n  lineHeight: \'11px\',\n  // sync with `height` in `legend` styles\n  transition: theme.transitions.create(\'width\', {\n    duration: 150,\n    easing: theme.transitions.easing.easeOut\n  })\n}, ownerState.withLabel && extends_extends({\n  display: \'block\',\n  // Fix conflict with normalize.css and sanitize.css\n  width: \'auto\',\n  // Fix conflict with bootstrap\n  padding: 0,\n  height: 11,\n  // sync with `lineHeight` in `legend` styles\n  fontSize: \'0.75em\',\n  visibility: \'hidden\',\n  maxWidth: 0.01,\n  transition: theme.transitions.create(\'max-width\', {\n    duration: 50,\n    easing: theme.transitions.easing.easeOut\n  }),\n  whiteSpace: \'nowrap\',\n  \'& > span\': {\n    paddingLeft: 5,\n    paddingRight: 5,\n    display: \'inline-block\',\n    opacity: 0,\n    visibility: \'visible\'\n  }\n}, ownerState.notched && {\n  maxWidth: \'100%\',\n  transition: theme.transitions.create(\'max-width\', {\n    duration: 100,\n    easing: theme.transitions.easing.easeOut,\n    delay: 50\n  })\n})));\n/**\n * @ignore - internal component.\n */\n\nfunction NotchedOutline(props) {\n  const {\n    className,\n    label,\n    notched\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, NotchedOutline_excluded);\n\n  const withLabel = label != null && label !== \'\';\n\n  const ownerState = extends_extends({}, props, {\n    notched,\n    withLabel\n  });\n\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(NotchedOutlineRoot, extends_extends({\n    "aria-hidden": true,\n    className: className,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(NotchedOutlineLegend, {\n      ownerState: ownerState,\n      children: withLabel ? /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n        children: label\n      }) : // notranslate needed while Google Translate will not fix zero-width space issue\n      NotchedOutline_span || (NotchedOutline_span = /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n        className: "notranslate",\n        children: "\\u200B"\n      }))\n    })\n  }));\n}\n false ? 0 : void 0;\n;// CONCATENATED MODULE: ./node_modules/@mui/material/OutlinedInput/outlinedInputClasses.js\n\n\n\nfunction getOutlinedInputUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiOutlinedInput\', slot);\n}\n\nconst outlinedInputClasses = extends_extends({}, InputBase_inputBaseClasses, generateUtilityClasses(\'MuiOutlinedInput\', [\'root\', \'notchedOutline\', \'input\']));\n\n/* harmony default export */ const OutlinedInput_outlinedInputClasses = (outlinedInputClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/OutlinedInput/OutlinedInput.js\n\n\nconst OutlinedInput_excluded = ["components", "fullWidth", "inputComponent", "label", "multiline", "notched", "type"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst OutlinedInput_useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\'],\n    notchedOutline: [\'notchedOutline\'],\n    input: [\'input\']\n  };\n  const composedClasses = composeClasses(slots, getOutlinedInputUtilityClass, classes);\n  return extends_extends({}, classes, composedClasses);\n};\n\nconst OutlinedInputRoot = styles_styled(InputBaseRoot, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === \'classes\',\n  name: \'MuiOutlinedInput\',\n  slot: \'Root\',\n  overridesResolver: rootOverridesResolver\n})(({\n  theme,\n  ownerState\n}) => {\n  const borderColor = theme.palette.mode === \'light\' ? \'rgba(0, 0, 0, 0.23)\' : \'rgba(255, 255, 255, 0.23)\';\n  return extends_extends({\n    position: \'relative\',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    [`&:hover .${OutlinedInput_outlinedInputClasses.notchedOutline}`]: {\n      borderColor: (theme.vars || theme).palette.text.primary\n    },\n    // Reset on touch devices, it doesn\'t add specificity\n    \'@media (hover: none)\': {\n      [`&:hover .${OutlinedInput_outlinedInputClasses.notchedOutline}`]: {\n        borderColor: theme.vars ? `rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : borderColor\n      }\n    },\n    [`&.${OutlinedInput_outlinedInputClasses.focused} .${OutlinedInput_outlinedInputClasses.notchedOutline}`]: {\n      borderColor: (theme.vars || theme).palette[ownerState.color].main,\n      borderWidth: 2\n    },\n    [`&.${OutlinedInput_outlinedInputClasses.error} .${OutlinedInput_outlinedInputClasses.notchedOutline}`]: {\n      borderColor: (theme.vars || theme).palette.error.main\n    },\n    [`&.${OutlinedInput_outlinedInputClasses.disabled} .${OutlinedInput_outlinedInputClasses.notchedOutline}`]: {\n      borderColor: (theme.vars || theme).palette.action.disabled\n    }\n  }, ownerState.startAdornment && {\n    paddingLeft: 14\n  }, ownerState.endAdornment && {\n    paddingRight: 14\n  }, ownerState.multiline && extends_extends({\n    padding: \'16.5px 14px\'\n  }, ownerState.size === \'small\' && {\n    padding: \'8.5px 14px\'\n  }));\n});\nconst OutlinedInput_NotchedOutlineRoot = styles_styled(NotchedOutline, {\n  name: \'MuiOutlinedInput\',\n  slot: \'NotchedOutline\',\n  overridesResolver: (props, styles) => styles.notchedOutline\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === \'light\' ? \'rgba(0, 0, 0, 0.23)\' : \'rgba(255, 255, 255, 0.23)\';\n  return {\n    borderColor: theme.vars ? `rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : borderColor\n  };\n});\nconst OutlinedInputInput = styles_styled(InputBaseComponent, {\n  name: \'MuiOutlinedInput\',\n  slot: \'Input\',\n  overridesResolver: inputOverridesResolver\n})(({\n  theme,\n  ownerState\n}) => extends_extends({\n  padding: \'16.5px 14px\'\n}, !theme.vars && {\n  \'&:-webkit-autofill\': {\n    WebkitBoxShadow: theme.palette.mode === \'light\' ? null : \'0 0 0 100px #266798 inset\',\n    WebkitTextFillColor: theme.palette.mode === \'light\' ? null : \'#fff\',\n    caretColor: theme.palette.mode === \'light\' ? null : \'#fff\',\n    borderRadius: \'inherit\'\n  }\n}, theme.vars && {\n  \'&:-webkit-autofill\': {\n    borderRadius: \'inherit\'\n  },\n  [theme.getColorSchemeSelector(\'dark\')]: {\n    \'&:-webkit-autofill\': {\n      WebkitBoxShadow: \'0 0 0 100px #266798 inset\',\n      WebkitTextFillColor: \'#fff\',\n      caretColor: \'#fff\'\n    }\n  }\n}, ownerState.size === \'small\' && {\n  padding: \'8.5px 14px\'\n}, ownerState.multiline && {\n  padding: 0\n}, ownerState.startAdornment && {\n  paddingLeft: 0\n}, ownerState.endAdornment && {\n  paddingRight: 0\n}));\nconst OutlinedInput = /*#__PURE__*/react.forwardRef(function OutlinedInput(inProps, ref) {\n  var _React$Fragment;\n\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiOutlinedInput\'\n  });\n\n  const {\n    components = {},\n    fullWidth = false,\n    inputComponent = \'input\',\n    label,\n    multiline = false,\n    notched,\n    type = \'text\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, OutlinedInput_excluded);\n\n  const classes = OutlinedInput_useUtilityClasses(props);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: [\'required\']\n  });\n\n  const ownerState = extends_extends({}, props, {\n    color: fcs.color || \'primary\',\n    disabled: fcs.disabled,\n    error: fcs.error,\n    focused: fcs.focused,\n    formControl: muiFormControl,\n    fullWidth,\n    hiddenLabel: fcs.hiddenLabel,\n    multiline,\n    size: fcs.size,\n    type\n  });\n\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputBase_InputBase, extends_extends({\n    components: extends_extends({\n      Root: OutlinedInputRoot,\n      Input: OutlinedInputInput\n    }, components),\n    renderSuffix: state => /*#__PURE__*/(0,jsx_runtime.jsx)(OutlinedInput_NotchedOutlineRoot, {\n      ownerState: ownerState,\n      className: classes.notchedOutline,\n      label: label != null && label !== \'\' && fcs.required ? _React$Fragment || (_React$Fragment = /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {\n        children: [label, "\\xA0", \'*\']\n      })) : label,\n      notched: typeof notched !== \'undefined\' ? notched : Boolean(state.startAdornment || state.filled || state.focused)\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other, {\n    classes: extends_extends({}, classes, {\n      notchedOutline: null\n    })\n  }));\n});\n false ? 0 : void 0;\nOutlinedInput.muiName = \'Input\';\n/* harmony default export */ const OutlinedInput_OutlinedInput = (OutlinedInput);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Select/Select.js\n\n\n\nvar _StyledInput, _StyledFilledInput;\n\nconst Select_excluded = ["autoWidth", "children", "classes", "className", "defaultOpen", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Select_useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return classes;\n};\n\nconst styledRootConfig = {\n  name: \'MuiSelect\',\n  overridesResolver: (props, styles) => styles.root,\n  shouldForwardProp: prop => rootShouldForwardProp(prop) && prop !== \'variant\',\n  slot: \'Root\'\n};\nconst StyledInput = styles_styled(Input_Input, styledRootConfig)(\'\');\nconst StyledOutlinedInput = styles_styled(OutlinedInput_OutlinedInput, styledRootConfig)(\'\');\nconst StyledFilledInput = styles_styled(FilledInput_FilledInput, styledRootConfig)(\'\');\nconst Select = /*#__PURE__*/react.forwardRef(function Select(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    name: \'MuiSelect\',\n    props: inProps\n  });\n\n  const {\n    autoWidth = false,\n    children,\n    classes: classesProp = {},\n    className,\n    defaultOpen = false,\n    displayEmpty = false,\n    IconComponent = ArrowDropDown,\n    id,\n    input,\n    inputProps,\n    label,\n    labelId,\n    MenuProps,\n    multiple = false,\n    native = false,\n    onClose,\n    onOpen,\n    open,\n    renderValue,\n    SelectDisplayProps,\n    variant: variantProp = \'outlined\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Select_excluded);\n\n  const inputComponent = native ? NativeSelect_NativeSelectInput : Select_SelectInput;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: [\'variant\']\n  });\n  const variant = fcs.variant || variantProp;\n  const InputComponent = input || {\n    standard: _StyledInput || (_StyledInput = /*#__PURE__*/(0,jsx_runtime.jsx)(StyledInput, {})),\n    outlined: /*#__PURE__*/(0,jsx_runtime.jsx)(StyledOutlinedInput, {\n      label: label\n    }),\n    filled: _StyledFilledInput || (_StyledFilledInput = /*#__PURE__*/(0,jsx_runtime.jsx)(StyledFilledInput, {}))\n  }[variant];\n\n  const ownerState = extends_extends({}, props, {\n    variant,\n    classes: classesProp\n  });\n\n  const classes = Select_useUtilityClasses(ownerState);\n  const inputComponentRef = utils_useForkRef(ref, InputComponent.ref);\n  return /*#__PURE__*/react.cloneElement(InputComponent, extends_extends({\n    // Most of the logic is implemented in `SelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent,\n    inputProps: extends_extends({\n      children,\n      IconComponent,\n      variant,\n      type: undefined,\n      // We render a select. We can ignore the type provided by the `Input`.\n      multiple\n    }, native ? {\n      id\n    } : {\n      autoWidth,\n      defaultOpen,\n      displayEmpty,\n      labelId,\n      MenuProps,\n      onClose,\n      onOpen,\n      open,\n      renderValue,\n      SelectDisplayProps: extends_extends({\n        id\n      }, SelectDisplayProps)\n    }, inputProps, {\n      classes: inputProps ? deepmerge_deepmerge(classes, inputProps.classes) : classes\n    }, input ? input.props.inputProps : {})\n  }, multiple && native && variant === \'outlined\' ? {\n    notched: true\n  } : {}, {\n    ref: inputComponentRef,\n    className: clsx_m(InputComponent.props.className, className),\n    variant\n  }, other));\n});\n false ? 0 : void 0;\nSelect.muiName = \'Select\';\n/* harmony default export */ const Select_Select = (Select);\n;// CONCATENATED MODULE: ./src/components/Header/Header.jsx\n\n\n\n\n\n\n\n\nfunction Header(props) {\n  var officeList = props.officeList,\n      currentOfficeId = props.currentOfficeId,\n      rights = props.rights;\n\n  var _useState = (0,react.useState)(\'\'),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentOffice = _useState2[0],\n      setCurrentOffice = _useState2[1];\n\n  (0,react.useEffect)(function () {\n    if (currentOffice) {\n      setCurrentOffice(officeList.find(function (office) {\n        return office.id === currentOfficeId;\n      }));\n    } else {\n      setCurrentOffice(\'\');\n    }\n  }, [currentOfficeId]);\n  return /*#__PURE__*/react.createElement("div", {\n    className: "header"\n  }, /*#__PURE__*/react.createElement("img", {\n    className: "header__logo",\n    src: "https://crm.centralnoe.ru/dealincom/assets/logo_can.jpg",\n    alt: "logo"\n  }), /*#__PURE__*/react.createElement("div", {\n    className: "header__filter"\n  }, /*#__PURE__*/react.createElement(FormControl_FormControl, {\n    size: "small"\n  }, /*#__PURE__*/react.createElement(InputLabel_InputLabel, {\n    id: "demo-simple-select-label"\n  }, "\\u041E\\u0444\\u0438\\u0441"), /*#__PURE__*/react.createElement(Select_Select, {\n    labelId: "demo-simple-select-label",\n    id: "demo-simple-select",\n    value: currentOffice,\n    label: "\\u041E\\u0444\\u0438\\u0441",\n    name: \'office\',\n    size: "small",\n    onChange: function onChange(event) {\n      setCurrentOffice(event.target.value);\n    },\n    disabled: rights !== \'chief\'\n  }, officeList.map(function (office) {\n    return /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n      key: office.id,\n      value: office\n    }, office.name);\n  }))), /*#__PURE__*/react.createElement(Button_Button, {\n    variant: "contained"\n  }, "\\u0421\\u0444\\u043E\\u0440\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C")));\n}\n;// CONCATENATED MODULE: ./src/components/Header/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n;// CONCATENATED MODULE: ./src/assets/svg/arrow.svg\nvar _path;\n\nfunction arrow_extends() { arrow_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return arrow_extends.apply(this, arguments); }\n\n\n\nvar SvgArrow = function SvgArrow(props) {\n  return /*#__PURE__*/react.createElement("svg", arrow_extends({\n    xmlns: "http://www.w3.org/2000/svg",\n    viewBox: "0 0 16 16",\n    fill: "#212529"\n  }, props), _path || (_path = /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    d: "M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"\n  })));\n};\n\n/* harmony default export */ const arrow = (SvgArrow);\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== \'[object Window]\') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\n\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === \'undefined\') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/math.js\nvar math_max = Math.max;\nvar math_min = Math.min;\nvar math_round = Math.round;\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\n\n\nfunction getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (isHTMLElement(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = math_round(rect.width) / offsetWidth || 1;\n    }\n\n    if (offsetHeight > 0) {\n      scaleY = math_round(rect.height) / offsetHeight || 1;\n    }\n  }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js\n\nfunction getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js\nfunction getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js\n\n\n\n\nfunction getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\nfunction getNodeName(element) {\n  return element ? (element.nodeName || \'\').toLowerCase() : null;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\n\nfunction getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js\n\n\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let\'s assume\n  // it\'s not an issue. I don\'t think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn\'t cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js\n\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js\n\n\n\n\n\n\n\n\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = math_round(rect.width) / element.offsetWidth || 1;\n  var scaleY = math_round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== \'body\' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js\n // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn\'t take into account transforms.\n\nfunction getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it\'s not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js\n\n\n\nfunction getParentNode(element) {\n  if (getNodeName(element) === \'html\') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js\n\n\n\n\nfunction getScrollParent(node) {\n  if ([\'html\', \'body\', \'#document\'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js\n\n\n\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we\'ll need to re-calculate the\nreference element\'s position.\n*/\n\nfunction listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js\n\nfunction isTableElement(element) {\n  return [\'table\', \'td\', \'th\'].indexOf(getNodeName(element)) >= 0;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\n\n\n\n\n\n\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === \'fixed\') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf(\'firefox\') !== -1;\n  var isIE = navigator.userAgent.indexOf(\'Trident\') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === \'fixed\') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && [\'html\', \'body\'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== \'none\' || css.perspective !== \'none\' || css.contain === \'paint\' || [\'transform\', \'perspective\'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === \'filter\' || isFirefox && css.filter && css.filter !== \'none\') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === \'static\') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === \'html\' || getNodeName(offsetParent) === \'body\' && getComputedStyle(offsetParent).position === \'static\')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/enums.js\nvar enums_top = \'top\';\nvar enums_bottom = \'bottom\';\nvar enums_right = \'right\';\nvar enums_left = \'left\';\nvar auto = \'auto\';\nvar basePlacements = [enums_top, enums_bottom, enums_right, enums_left];\nvar start = \'start\';\nvar end = \'end\';\nvar clippingParents = \'clippingParents\';\nvar viewport = \'viewport\';\nvar popper = \'popper\';\nvar reference = \'reference\';\nvar variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + "-" + start, placement + "-" + end]);\n}, []);\nvar enums_placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);\n}, []); // modifiers that need to read the DOM\n\nvar beforeRead = \'beforeRead\';\nvar read = \'read\';\nvar afterRead = \'afterRead\'; // pure-logic modifiers\n\nvar beforeMain = \'beforeMain\';\nvar main = \'main\';\nvar afterMain = \'afterMain\'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nvar beforeWrite = \'beforeWrite\';\nvar write = \'write\';\nvar afterWrite = \'afterWrite\';\nvar modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/orderModifiers.js\n // source: https://stackoverflow.com/questions/49875255\n\nfunction orderModifiers_order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nfunction orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = orderModifiers_order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/debounce.js\nfunction debounce_debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergeByName.js\nfunction mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/createPopper.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar INVALID_ELEMENT_ERROR = \'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.\';\nvar INFINITE_LOOP_ERROR = \'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.\';\nvar DEFAULT_OPTIONS = {\n  placement: \'bottom\',\n  modifiers: [],\n  strategy: \'absolute\'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === \'function\');\n  });\n}\n\nfunction popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: \'bottom\',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === \'function\' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (false) { var _getComputedStyle, marginTop, marginRight, marginBottom, marginLeft, flipModifier, modifiers; }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don\'t proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (false) {}\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === \'fixed\'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn\'t persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (false) {}\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === \'function\') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce_debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (false) {}\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === \'function\') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nvar createPopper = /*#__PURE__*/(/* unused pure expression or super */ null && (popperGenerator())); // eslint-disable-next-line import/no-unused-modules\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js\n // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener(\'scroll\', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener(\'resize\', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener(\'scroll\', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener(\'resize\', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const eventListeners = ({\n  name: \'eventListeners\',\n  enabled: true,\n  phase: \'write\',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\n\nfunction getBasePlacement(placement) {\n  return placement.split(\'-\')[0];\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getVariation.js\nfunction getVariation(placement) {\n  return placement.split(\'-\')[1];\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js\nfunction getMainAxisFromPlacement(placement) {\n  return [\'top\', \'bottom\'].indexOf(placement) >= 0 ? \'x\' : \'y\';\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeOffsets.js\n\n\n\n\nfunction computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case enums_top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case enums_bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case enums_right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case enums_left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === \'y\' ? \'height\' : \'width\';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\n\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: \'absolute\',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_popperOffsets = ({\n  name: \'popperOffsets\',\n  enabled: true,\n  phase: \'read\',\n  fn: popperOffsets,\n  data: {}\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: \'auto\',\n  right: \'auto\',\n  bottom: \'auto\',\n  left: \'auto\'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: math_round(x * dpr) / dpr || 0,\n    y: math_round(y * dpr) / dpr || 0\n  };\n}\n\nfunction mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === \'function\' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty(\'x\');\n  var hasY = offsets.hasOwnProperty(\'y\');\n  var sideX = enums_left;\n  var sideY = enums_top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = \'clientHeight\';\n    var widthProp = \'clientWidth\';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== \'static\' && position === \'absolute\') {\n        heightProp = \'scrollHeight\';\n        widthProp = \'scrollWidth\';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn\'t detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === enums_top || (placement === enums_left || placement === enums_right) && variation === end) {\n      sideY = enums_bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === enums_left || (placement === enums_top || placement === enums_bottom) && variation === end) {\n      sideX = enums_right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? \'0\' : \'\', _Object$assign[sideX] = hasX ? \'0\' : \'\', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : \'\', _Object$assign2[sideX] = hasX ? x + "px" : \'\', _Object$assign2.transform = \'\', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (false) { var transitionProperty; }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === \'fixed\'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: \'absolute\',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    \'data-popper-placement\': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_computeStyles = ({\n  name: \'computeStyles\',\n  enabled: true,\n  phase: \'beforeWrite\',\n  fn: computeStyles,\n  data: {}\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js\n\n // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn\'t support to extend this property, but it\'s the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? \'\' : value);\n      }\n    });\n  });\n}\n\nfunction applyStyles_effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: \'0\',\n      top: \'0\',\n      margin: \'0\'\n    },\n    arrow: {\n      position: \'absolute\'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = \'\';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_applyStyles = ({\n  name: \'applyStyles\',\n  enabled: true,\n  phase: \'write\',\n  fn: applyStyles,\n  effect: applyStyles_effect,\n  requires: [\'computeStyles\']\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/offset.js\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [enums_left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === \'function\' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [enums_left, enums_right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = enums_placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_offset = ({\n  name: \'offset\',\n  enabled: true,\n  phase: \'main\',\n  requires: [\'popperOffsets\'],\n  fn: offset\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js\nvar getOppositePlacement_hash = {\n  left: \'right\',\n  right: \'left\',\n  bottom: \'top\',\n  top: \'bottom\'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return getOppositePlacement_hash[matched];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js\nvar getOppositeVariationPlacement_hash = {\n  start: \'end\',\n  end: \'start\'\n};\nfunction getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return getOppositeVariationPlacement_hash[matched];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js\n\n\n\nfunction getViewportRect(element) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn\'t supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn\'t open, so if this isn\'t available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: "Not Safari" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js\n\n\n\n\n // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = math_max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = math_max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === \'rtl\') {\n    x += math_max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/contains.js\n\nfunction contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js\nfunction rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A "clipping parent" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = [\'absolute\', \'fixed\'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== \'body\';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === \'clippingParents\' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = math_max(rect.top, accRect.top);\n    accRect.right = math_min(rect.right, accRect.right);\n    accRect.bottom = math_min(rect.bottom, accRect.bottom);\n    accRect.left = math_max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js\nfunction getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js\n\nfunction mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js\nfunction expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/detectOverflow.js\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== \'number\' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: \'absolute\',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [enums_right, enums_bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [enums_top, enums_bottom].indexOf(key) >= 0 ? \'y\' : \'x\';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js\n\n\n\n\nfunction computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (false) {}\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/flip.js\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [enums_top, enums_bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? \'width\' : \'height\';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? enums_right : enums_left : isStartVariation ? enums_bottom : enums_top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return "break";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === "break") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_flip = ({\n  name: \'flip\',\n  enabled: true,\n  phase: \'main\',\n  fn: flip,\n  requiresIfExists: [\'offset\'],\n  data: {\n    _skip: false\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getAltAxis.js\nfunction getAltAxis(axis) {\n  return axis === \'x\' ? \'y\' : \'x\';\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/within.js\n\nfunction within(min, value, max) {\n  return math_max(min, math_min(value, max));\n}\nfunction withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === \'function\' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === \'number\' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === \'y\' ? enums_top : enums_left;\n    var altSide = mainAxis === \'y\' ? enums_bottom : enums_right;\n    var len = mainAxis === \'y\' ? \'height\' : \'width\';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn\'t go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData[\'arrow#persistent\'] ? state.modifiersData[\'arrow#persistent\'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don\'t want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === \'y\' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? math_min(min, tetherMin) : min, offset, tether ? math_max(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === \'x\' ? enums_top : enums_left;\n\n    var _altSide = mainAxis === \'x\' ? enums_bottom : enums_right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === \'y\' ? \'height\' : \'width\';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [enums_top, enums_left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_preventOverflow = ({\n  name: \'preventOverflow\',\n  enabled: true,\n  phase: \'main\',\n  fn: preventOverflow,\n  requiresIfExists: [\'offset\']\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/arrow.js\n\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === \'function\' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== \'number\' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow_arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [enums_left, enums_right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? \'height\' : \'width\';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === \'y\' ? enums_top : enums_left;\n  var maxProp = axis === \'y\' ? enums_bottom : enums_right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === \'y\' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn\'t overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction arrow_effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? \'[data-popper-arrow]\' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === \'string\') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (false) {}\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (false) {}\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_arrow = ({\n  name: \'arrow\',\n  enabled: true,\n  phase: \'main\',\n  fn: arrow_arrow,\n  effect: arrow_effect,\n  requires: [\'popperOffsets\'],\n  requiresIfExists: [\'preventOverflow\']\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/hide.js\n\n\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [enums_top, enums_right, enums_bottom, enums_left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: \'reference\'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    \'data-popper-reference-hidden\': isReferenceHidden,\n    \'data-popper-escaped\': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_hide = ({\n  name: \'hide\',\n  enabled: true,\n  phase: \'main\',\n  requiresIfExists: [\'preventOverflow\'],\n  fn: hide\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper.js\n\n\n\n\n\n\n\n\n\n\nvar defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];\nvar popper_createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n\n;// CONCATENATED MODULE: ./node_modules/@mui/base/PopperUnstyled/PopperUnstyled.js\n\n\nconst PopperUnstyled_excluded = ["anchorEl", "children", "direction", "disablePortal", "modifiers", "open", "ownerState", "placement", "popperOptions", "popperRef", "TransitionProps"],\n      PopperUnstyled_excluded2 = ["anchorEl", "children", "container", "direction", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition"];\n\n\n\n\n\n\n\nfunction flipPlacement(placement, direction) {\n  if (direction === \'ltr\') {\n    return placement;\n  }\n\n  switch (placement) {\n    case \'bottom-end\':\n      return \'bottom-start\';\n\n    case \'bottom-start\':\n      return \'bottom-end\';\n\n    case \'top-end\':\n      return \'top-start\';\n\n    case \'top-start\':\n      return \'top-end\';\n\n    default:\n      return placement;\n  }\n}\n\nfunction PopperUnstyled_resolveAnchorEl(anchorEl) {\n  return typeof anchorEl === \'function\' ? anchorEl() : anchorEl;\n}\n\nconst defaultPopperOptions = {};\n/* eslint-disable react/prop-types */\n\nconst PopperTooltip = /*#__PURE__*/react.forwardRef(function PopperTooltip(props, ref) {\n  const {\n    anchorEl,\n    children,\n    direction,\n    disablePortal,\n    modifiers,\n    open,\n    placement: initialPlacement,\n    popperOptions,\n    popperRef: popperRefProp,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, PopperUnstyled_excluded);\n\n  const tooltipRef = react.useRef(null);\n  const ownRef = useForkRef(tooltipRef, ref);\n  const popperRef = react.useRef(null);\n  const handlePopperRef = useForkRef(popperRef, popperRefProp);\n  const handlePopperRefRef = react.useRef(handlePopperRef);\n  esm_useEnhancedEffect(() => {\n    handlePopperRefRef.current = handlePopperRef;\n  }, [handlePopperRef]);\n  react.useImperativeHandle(popperRefProp, () => popperRef.current, []);\n  const rtlPlacement = flipPlacement(initialPlacement, direction);\n  /**\n   * placement initialized from prop but can change during lifetime if modifiers.flip.\n   * modifiers.flip is essentially a flip for controlled/uncontrolled behavior\n   */\n\n  const [placement, setPlacement] = react.useState(rtlPlacement);\n  react.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.forceUpdate();\n    }\n  });\n  esm_useEnhancedEffect(() => {\n    if (!anchorEl || !open) {\n      return undefined;\n    }\n\n    const handlePopperUpdate = data => {\n      setPlacement(data.placement);\n    };\n\n    const resolvedAnchorEl = PopperUnstyled_resolveAnchorEl(anchorEl);\n\n    if (false) {}\n\n    let popperModifiers = [{\n      name: \'preventOverflow\',\n      options: {\n        altBoundary: disablePortal\n      }\n    }, {\n      name: \'flip\',\n      options: {\n        altBoundary: disablePortal\n      }\n    }, {\n      name: \'onUpdate\',\n      enabled: true,\n      phase: \'afterWrite\',\n      fn: ({\n        state\n      }) => {\n        handlePopperUpdate(state);\n      }\n    }];\n\n    if (modifiers != null) {\n      popperModifiers = popperModifiers.concat(modifiers);\n    }\n\n    if (popperOptions && popperOptions.modifiers != null) {\n      popperModifiers = popperModifiers.concat(popperOptions.modifiers);\n    }\n\n    const popper = popper_createPopper(PopperUnstyled_resolveAnchorEl(anchorEl), tooltipRef.current, extends_extends({\n      placement: rtlPlacement\n    }, popperOptions, {\n      modifiers: popperModifiers\n    }));\n    handlePopperRefRef.current(popper);\n    return () => {\n      popper.destroy();\n      handlePopperRefRef.current(null);\n    };\n  }, [anchorEl, disablePortal, modifiers, open, popperOptions, rtlPlacement]);\n  const childProps = {\n    placement\n  };\n\n  if (TransitionProps !== null) {\n    childProps.TransitionProps = TransitionProps;\n  }\n\n  return /*#__PURE__*/(0,jsx_runtime.jsx)("div", extends_extends({\n    ref: ownRef,\n    role: "tooltip"\n  }, other, {\n    children: typeof children === \'function\' ? children(childProps) : children\n  }));\n});\n/* eslint-enable react/prop-types */\n\n/**\n * Poppers rely on the 3rd party library [Popper.js](https://popper.js.org/docs/v2/) for positioning.\n */\n\nconst PopperUnstyled = /*#__PURE__*/react.forwardRef(function PopperUnstyled(props, ref) {\n  const {\n    anchorEl,\n    children,\n    container: containerProp,\n    direction = \'ltr\',\n    disablePortal = false,\n    keepMounted = false,\n    modifiers,\n    open,\n    placement = \'bottom\',\n    popperOptions = defaultPopperOptions,\n    popperRef,\n    style,\n    transition = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, PopperUnstyled_excluded2);\n\n  const [exited, setExited] = react.useState(true);\n\n  const handleEnter = () => {\n    setExited(false);\n  };\n\n  const handleExited = () => {\n    setExited(true);\n  };\n\n  if (!keepMounted && !open && (!transition || exited)) {\n    return null;\n  } // If the container prop is provided, use that\n  // If the anchorEl prop is provided, use its parent body element as the container\n  // If neither are provided let the Modal take care of choosing the container\n\n\n  const container = containerProp || (anchorEl ? ownerDocument(PopperUnstyled_resolveAnchorEl(anchorEl)).body : undefined);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Portal_Portal, {\n    disablePortal: disablePortal,\n    container: container,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(PopperTooltip, extends_extends({\n      anchorEl: anchorEl,\n      direction: direction,\n      disablePortal: disablePortal,\n      modifiers: modifiers,\n      ref: ref,\n      open: transition ? !exited : open,\n      placement: placement,\n      popperOptions: popperOptions,\n      popperRef: popperRef\n    }, other, {\n      style: extends_extends({\n        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.\n        position: \'fixed\',\n        // Fix Popper.js display issue\n        top: 0,\n        left: 0,\n        display: !open && keepMounted && (!transition || exited) ? \'none\' : null\n      }, style),\n      TransitionProps: transition ? {\n        in: open,\n        onEnter: handleEnter,\n        onExited: handleExited\n      } : null,\n      children: children\n    }))\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const PopperUnstyled_PopperUnstyled = (PopperUnstyled);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Popper/Popper.js\n\n\n\n\n\n\n\n\nconst PopperRoot = styles_styled(PopperUnstyled_PopperUnstyled, {\n  name: \'MuiPopper\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n *\n * Demos:\n *\n * - [Autocomplete](https://mui.com/material-ui/react-autocomplete/)\n * - [Menus](https://mui.com/material-ui/react-menu/)\n * - [Popper](https://mui.com/material-ui/react-popper/)\n *\n * API:\n *\n * - [Popper API](https://mui.com/material-ui/api/popper/)\n */\n\nconst Popper = /*#__PURE__*/react.forwardRef(function Popper(inProps, ref) {\n  const theme = useThemeWithoutDefault();\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiPopper\'\n  });\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(PopperRoot, extends_extends({\n    direction: theme == null ? void 0 : theme.direction\n  }, props, {\n    ref: ref\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const Popper_Popper = (Popper);\n;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/useId.js\n\nlet globalId = 0;\n\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = react.useState(idOverride);\n  const id = idOverride || defaultId;\n  react.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can\'t use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\n\nconst maybeReactUseId = react_namespaceObject[\'useId\' + \'\'];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\n\nfunction useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  } // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n\n\n  return useGlobalId(idOverride);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/useId.js\n\n/* harmony default export */ const utils_useId = (useId);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Tooltip/tooltipClasses.js\n\nfunction getTooltipUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiTooltip\', slot);\n}\nconst tooltipClasses = generateUtilityClasses(\'MuiTooltip\', [\'popper\', \'popperInteractive\', \'popperArrow\', \'popperClose\', \'tooltip\', \'tooltipArrow\', \'touch\', \'tooltipPlacementLeft\', \'tooltipPlacementRight\', \'tooltipPlacementTop\', \'tooltipPlacementBottom\', \'arrow\']);\n/* harmony default export */ const Tooltip_tooltipClasses = (tooltipClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Tooltip/Tooltip.js\n\n\nconst Tooltip_excluded = ["arrow", "children", "classes", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "title", "TransitionComponent", "TransitionProps"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Tooltip_round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst Tooltip_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableInteractive,\n    arrow,\n    touch,\n    placement\n  } = ownerState;\n  const slots = {\n    popper: [\'popper\', !disableInteractive && \'popperInteractive\', arrow && \'popperArrow\'],\n    tooltip: [\'tooltip\', arrow && \'tooltipArrow\', touch && \'touch\', `tooltipPlacement${utils_capitalize(placement.split(\'-\')[0])}`],\n    arrow: [\'arrow\']\n  };\n  return composeClasses(slots, getTooltipUtilityClass, classes);\n};\n\nconst TooltipPopper = styles_styled(Popper_Popper, {\n  name: \'MuiTooltip\',\n  slot: \'Popper\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.popper, !ownerState.disableInteractive && styles.popperInteractive, ownerState.arrow && styles.popperArrow, !ownerState.open && styles.popperClose];\n  }\n})(({\n  theme,\n  ownerState,\n  open\n}) => extends_extends({\n  zIndex: (theme.vars || theme).zIndex.tooltip,\n  pointerEvents: \'none\'\n}, !ownerState.disableInteractive && {\n  pointerEvents: \'auto\'\n}, !open && {\n  pointerEvents: \'none\'\n}, ownerState.arrow && {\n  [`&[data-popper-placement*="bottom"] .${Tooltip_tooltipClasses.arrow}`]: {\n    top: 0,\n    marginTop: \'-0.71em\',\n    \'&::before\': {\n      transformOrigin: \'0 100%\'\n    }\n  },\n  [`&[data-popper-placement*="top"] .${Tooltip_tooltipClasses.arrow}`]: {\n    bottom: 0,\n    marginBottom: \'-0.71em\',\n    \'&::before\': {\n      transformOrigin: \'100% 0\'\n    }\n  },\n  [`&[data-popper-placement*="right"] .${Tooltip_tooltipClasses.arrow}`]: extends_extends({}, !ownerState.isRtl ? {\n    left: 0,\n    marginLeft: \'-0.71em\'\n  } : {\n    right: 0,\n    marginRight: \'-0.71em\'\n  }, {\n    height: \'1em\',\n    width: \'0.71em\',\n    \'&::before\': {\n      transformOrigin: \'100% 100%\'\n    }\n  }),\n  [`&[data-popper-placement*="left"] .${Tooltip_tooltipClasses.arrow}`]: extends_extends({}, !ownerState.isRtl ? {\n    right: 0,\n    marginRight: \'-0.71em\'\n  } : {\n    left: 0,\n    marginLeft: \'-0.71em\'\n  }, {\n    height: \'1em\',\n    width: \'0.71em\',\n    \'&::before\': {\n      transformOrigin: \'0 0\'\n    }\n  })\n}));\nconst TooltipTooltip = styles_styled(\'div\', {\n  name: \'MuiTooltip\',\n  slot: \'Tooltip\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.tooltip, ownerState.touch && styles.touch, ownerState.arrow && styles.tooltipArrow, styles[`tooltipPlacement${utils_capitalize(ownerState.placement.split(\'-\')[0])}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => extends_extends({\n  backgroundColor: theme.vars ? theme.vars.palette.Tooltip.bg : alpha(theme.palette.grey[700], 0.92),\n  borderRadius: (theme.vars || theme).shape.borderRadius,\n  color: (theme.vars || theme).palette.common.white,\n  fontFamily: theme.typography.fontFamily,\n  padding: \'4px 8px\',\n  fontSize: theme.typography.pxToRem(11),\n  maxWidth: 300,\n  margin: 2,\n  wordWrap: \'break-word\',\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.arrow && {\n  position: \'relative\',\n  margin: 0\n}, ownerState.touch && {\n  padding: \'8px 16px\',\n  fontSize: theme.typography.pxToRem(14),\n  lineHeight: `${Tooltip_round(16 / 14)}em`,\n  fontWeight: theme.typography.fontWeightRegular\n}, {\n  [`.${Tooltip_tooltipClasses.popper}[data-popper-placement*="left"] &`]: extends_extends({\n    transformOrigin: \'right center\'\n  }, !ownerState.isRtl ? extends_extends({\n    marginRight: \'14px\'\n  }, ownerState.touch && {\n    marginRight: \'24px\'\n  }) : extends_extends({\n    marginLeft: \'14px\'\n  }, ownerState.touch && {\n    marginLeft: \'24px\'\n  })),\n  [`.${Tooltip_tooltipClasses.popper}[data-popper-placement*="right"] &`]: extends_extends({\n    transformOrigin: \'left center\'\n  }, !ownerState.isRtl ? extends_extends({\n    marginLeft: \'14px\'\n  }, ownerState.touch && {\n    marginLeft: \'24px\'\n  }) : extends_extends({\n    marginRight: \'14px\'\n  }, ownerState.touch && {\n    marginRight: \'24px\'\n  })),\n  [`.${Tooltip_tooltipClasses.popper}[data-popper-placement*="top"] &`]: extends_extends({\n    transformOrigin: \'center bottom\',\n    marginBottom: \'14px\'\n  }, ownerState.touch && {\n    marginBottom: \'24px\'\n  }),\n  [`.${Tooltip_tooltipClasses.popper}[data-popper-placement*="bottom"] &`]: extends_extends({\n    transformOrigin: \'center top\',\n    marginTop: \'14px\'\n  }, ownerState.touch && {\n    marginTop: \'24px\'\n  })\n}));\nconst TooltipArrow = styles_styled(\'span\', {\n  name: \'MuiTooltip\',\n  slot: \'Arrow\',\n  overridesResolver: (props, styles) => styles.arrow\n})(({\n  theme\n}) => ({\n  overflow: \'hidden\',\n  position: \'absolute\',\n  width: \'1em\',\n  height: \'0.71em\'\n  /* = width / sqrt(2) = (length of the hypotenuse) */\n  ,\n  boxSizing: \'border-box\',\n  color: theme.vars ? `rgba(${theme.vars.palette.grey.darkChannel} / 0.9)` : alpha(theme.palette.grey[700], 0.9),\n  \'&::before\': {\n    content: \'""\',\n    margin: \'auto\',\n    display: \'block\',\n    width: \'100%\',\n    height: \'100%\',\n    backgroundColor: \'currentColor\',\n    transform: \'rotate(45deg)\'\n  }\n}));\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nfunction testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\n\nfunction composeEventHandler(handler, eventHandler) {\n  return event => {\n    if (eventHandler) {\n      eventHandler(event);\n    }\n\n    handler(event);\n  };\n} // TODO v6: Remove PopperComponent, PopperProps, TransitionComponent and TransitionProps.\n\n\nconst Tooltip = /*#__PURE__*/react.forwardRef(function Tooltip(inProps, ref) {\n  var _components$Popper, _ref, _components$Transitio, _components$Tooltip, _components$Arrow, _componentsProps$popp;\n\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiTooltip\'\n  });\n\n  const {\n    arrow = false,\n    children,\n    components = {},\n    componentsProps = {},\n    describeChild = false,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableInteractive: disableInteractiveProp = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    followCursor = false,\n    id: idProp,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = \'bottom\',\n    PopperComponent: PopperComponentProp,\n    PopperProps = {},\n    title,\n    TransitionComponent: TransitionComponentProp = Grow_Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Tooltip_excluded);\n\n  const theme = styles_useTheme_useTheme();\n  const isRtl = theme.direction === \'rtl\';\n  const [childNode, setChildNode] = react.useState();\n  const [arrowRef, setArrowRef] = react.useState(null);\n  const ignoreNonTouchEvents = react.useRef(false);\n  const disableInteractive = disableInteractiveProp || followCursor;\n  const closeTimer = react.useRef();\n  const enterTimer = react.useRef();\n  const leaveTimer = react.useRef();\n  const touchTimer = react.useRef();\n  const [openState, setOpenState] = utils_useControlled({\n    controlled: openProp,\n    default: false,\n    name: \'Tooltip\',\n    state: \'open\'\n  });\n  let open = openState;\n\n  if (false) {}\n\n  const id = utils_useId(idProp);\n  const prevUserSelect = react.useRef();\n  const stopTouchInteraction = react.useCallback(() => {\n    if (prevUserSelect.current !== undefined) {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      prevUserSelect.current = undefined;\n    }\n\n    clearTimeout(touchTimer.current);\n  }, []);\n  react.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      stopTouchInteraction();\n    };\n  }, [stopTouchInteraction]);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen && !open) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = utils_useEventCallback(\n  /**\n   * @param {React.SyntheticEvent | Event} event\n   */\n  event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose && open) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  });\n\n  const handleEnter = event => {\n    if (ignoreNonTouchEvents.current && event.type !== \'touchstart\') {\n      return;\n    } // Remove the title ahead of time.\n    // We don\'t want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute(\'title\');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleLeave = event => {\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = utils_useIsFocusVisible(); // We don\'t necessarily care about the focusVisible state (which is safe to access via ref anyway).\n  // We just need to re-render the Tooltip if the focus-visible state changes.\n\n  const [, setChildIsFocusVisible] = react.useState(false);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setChildIsFocusVisible(false);\n      handleLeave(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleMouseOver = handleEnter;\n  const handleMouseLeave = handleLeave;\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    stopTouchInteraction();\n    prevUserSelect.current = document.body.style.WebkitUserSelect; // Prevent iOS text selection on long-tap.\n\n    document.body.style.WebkitUserSelect = \'none\';\n    touchTimer.current = setTimeout(() => {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    stopTouchInteraction();\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  react.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use \'Esc\'\n      if (nativeEvent.key === \'Escape\' || nativeEvent.key === \'Esc\') {\n        handleClose(nativeEvent);\n      }\n    }\n\n    document.addEventListener(\'keydown\', handleKeyDown);\n    return () => {\n      document.removeEventListener(\'keydown\', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleUseRef = utils_useForkRef(setChildNode, ref);\n  const handleFocusRef = utils_useForkRef(focusVisibleRef, handleUseRef);\n  const handleRef = utils_useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\n\n  if (title === \'\') {\n    open = false;\n  }\n\n  const positionRef = react.useRef({\n    x: 0,\n    y: 0\n  });\n  const popperRef = react.useRef();\n\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n\n    positionRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  };\n\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === \'string\';\n\n  if (describeChild) {\n    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps[\'aria-describedby\'] = open ? id : null;\n  } else {\n    nameOrDescProps[\'aria-label\'] = titleIsString ? title : null;\n    nameOrDescProps[\'aria-labelledby\'] = open && !titleIsString ? id : null;\n  }\n\n  const childrenProps = extends_extends({}, nameOrDescProps, other, children.props, {\n    className: clsx_m(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  }, followCursor ? {\n    onMouseMove: handleMouseMove\n  } : {});\n\n  if (false) {}\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n\n  if (false) {}\n\n  const popperOptions = react.useMemo(() => {\n    var _PopperProps$popperOp;\n\n    let tooltipModifiers = [{\n      name: \'arrow\',\n      enabled: Boolean(arrowRef),\n      options: {\n        element: arrowRef,\n        padding: 4\n      }\n    }];\n\n    if ((_PopperProps$popperOp = PopperProps.popperOptions) != null && _PopperProps$popperOp.modifiers) {\n      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);\n    }\n\n    return extends_extends({}, PopperProps.popperOptions, {\n      modifiers: tooltipModifiers\n    });\n  }, [arrowRef, PopperProps]);\n\n  const ownerState = extends_extends({}, props, {\n    isRtl,\n    arrow,\n    disableInteractive,\n    placement,\n    PopperComponentProp,\n    touch: ignoreNonTouchEvents.current\n  });\n\n  const classes = Tooltip_useUtilityClasses(ownerState);\n  const PopperComponent = (_components$Popper = components.Popper) != null ? _components$Popper : TooltipPopper;\n  const TransitionComponent = (_ref = (_components$Transitio = components.Transition) != null ? _components$Transitio : TransitionComponentProp) != null ? _ref : Grow_Grow;\n  const TooltipComponent = (_components$Tooltip = components.Tooltip) != null ? _components$Tooltip : TooltipTooltip;\n  const ArrowComponent = (_components$Arrow = components.Arrow) != null ? _components$Arrow : TooltipArrow;\n  const popperProps = appendOwnerState(PopperComponent, extends_extends({}, PopperProps, componentsProps.popper), ownerState);\n  const transitionProps = appendOwnerState(TransitionComponent, extends_extends({}, TransitionProps, componentsProps.transition), ownerState);\n  const tooltipProps = appendOwnerState(TooltipComponent, extends_extends({}, componentsProps.tooltip), ownerState);\n  const tooltipArrowProps = appendOwnerState(ArrowComponent, extends_extends({}, componentsProps.arrow), ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {\n    children: [/*#__PURE__*/react.cloneElement(children, childrenProps), /*#__PURE__*/(0,jsx_runtime.jsx)(PopperComponent, extends_extends({\n      as: PopperComponentProp != null ? PopperComponentProp : Popper_Popper,\n      placement: placement,\n      anchorEl: followCursor ? {\n        getBoundingClientRect: () => ({\n          top: positionRef.current.y,\n          left: positionRef.current.x,\n          right: positionRef.current.x,\n          bottom: positionRef.current.y,\n          width: 0,\n          height: 0\n        })\n      } : childNode,\n      popperRef: popperRef,\n      open: childNode ? open : false,\n      id: id,\n      transition: true\n    }, interactiveWrapperListeners, popperProps, {\n      className: clsx_m(classes.popper, PopperProps == null ? void 0 : PopperProps.className, (_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className),\n      popperOptions: popperOptions,\n      children: ({\n        TransitionProps: TransitionPropsInner\n      }) => {\n        var _componentsProps$tool, _componentsProps$arro;\n\n        return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, extends_extends({\n          timeout: theme.transitions.duration.shorter\n        }, TransitionPropsInner, transitionProps, {\n          children: /*#__PURE__*/(0,jsx_runtime.jsxs)(TooltipComponent, extends_extends({}, tooltipProps, {\n            className: clsx_m(classes.tooltip, (_componentsProps$tool = componentsProps.tooltip) == null ? void 0 : _componentsProps$tool.className),\n            children: [title, arrow ? /*#__PURE__*/(0,jsx_runtime.jsx)(ArrowComponent, extends_extends({}, tooltipArrowProps, {\n              className: clsx_m(classes.arrow, (_componentsProps$arro = componentsProps.arrow) == null ? void 0 : _componentsProps$arro.className),\n              ref: setArrowRef\n            })) : null]\n          }))\n        }));\n      }\n    }))]\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const Tooltip_Tooltip = (Tooltip);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Table/TableContext.js\n\n/**\n * @ignore - internal component.\n */\n\nconst TableContext = /*#__PURE__*/react.createContext();\n\nif (false) {}\n\n/* harmony default export */ const Table_TableContext = (TableContext);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Table/tableClasses.js\n\nfunction getTableUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiTable\', slot);\n}\nconst tableClasses = generateUtilityClasses(\'MuiTable\', [\'root\', \'stickyHeader\']);\n/* harmony default export */ const Table_tableClasses = ((/* unused pure expression or super */ null && (tableClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Table/Table.js\n\n\nconst Table_excluded = ["className", "component", "padding", "size", "stickyHeader"];\n\n\n\n\n\n\n\n\n\n\nconst Table_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: [\'root\', stickyHeader && \'stickyHeader\']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styles_styled(\'table\', {\n  name: \'MuiTable\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => extends_extends({\n  display: \'table\',\n  width: \'100%\',\n  borderCollapse: \'collapse\',\n  borderSpacing: 0,\n  \'& caption\': extends_extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: \'left\',\n    captionSide: \'bottom\'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: \'separate\'\n}));\nconst defaultComponent = \'table\';\nconst Table = /*#__PURE__*/react.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiTable\'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = \'normal\',\n    size = \'medium\',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, Table_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = Table_useUtilityClasses(ownerState);\n  const table = react.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Table_TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TableRoot, extends_extends({\n      as: component,\n      role: component === defaultComponent ? null : \'table\',\n      ref: ref,\n      className: clsx_m(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const Table_Table = (Table);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Table/Tablelvl2Context.js\n\n/**\n * @ignore - internal component.\n */\n\nconst Tablelvl2Context = /*#__PURE__*/react.createContext();\n\nif (false) {}\n\n/* harmony default export */ const Table_Tablelvl2Context = (Tablelvl2Context);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableBody/tableBodyClasses.js\n\nfunction getTableBodyUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiTableBody\', slot);\n}\nconst tableBodyClasses = generateUtilityClasses(\'MuiTableBody\', [\'root\']);\n/* harmony default export */ const TableBody_tableBodyClasses = ((/* unused pure expression or super */ null && (tableBodyClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableBody/TableBody.js\n\n\nconst TableBody_excluded = ["className", "component"];\n\n\n\n\n\n\n\n\n\n\nconst TableBody_useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styles_styled(\'tbody\', {\n  name: \'MuiTableBody\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: \'table-row-group\'\n});\nconst tablelvl2 = {\n  variant: \'body\'\n};\nconst TableBody_defaultComponent = \'tbody\';\nconst TableBody = /*#__PURE__*/react.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiTableBody\'\n  });\n\n  const {\n    className,\n    component = TableBody_defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, TableBody_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    component\n  });\n\n  const classes = TableBody_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Table_Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TableBodyRoot, extends_extends({\n      className: clsx_m(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === TableBody_defaultComponent ? null : \'rowgroup\',\n      ownerState: ownerState\n    }, other))\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const TableBody_TableBody = (TableBody);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableCell/tableCellClasses.js\n\nfunction getTableCellUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiTableCell\', slot);\n}\nconst tableCellClasses = generateUtilityClasses(\'MuiTableCell\', [\'root\', \'head\', \'body\', \'footer\', \'sizeSmall\', \'sizeMedium\', \'paddingCheckbox\', \'paddingNone\', \'alignLeft\', \'alignCenter\', \'alignRight\', \'alignJustify\', \'stickyHeader\']);\n/* harmony default export */ const TableCell_tableCellClasses = (tableCellClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableCell/TableCell.js\n\n\nconst TableCell_excluded = ["align", "className", "component", "padding", "scope", "size", "sortDirection", "variant"];\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst TableCell_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: [\'root\', variant, stickyHeader && \'stickyHeader\', align !== \'inherit\' && `align${utils_capitalize(align)}`, padding !== \'normal\' && `padding${utils_capitalize(padding)}`, `size${utils_capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\n\nconst TableCellRoot = styles_styled(\'td\', {\n  name: \'MuiTableCell\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${utils_capitalize(ownerState.size)}`], ownerState.padding !== \'normal\' && styles[`padding${utils_capitalize(ownerState.padding)}`], ownerState.align !== \'inherit\' && styles[`align${utils_capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => extends_extends({}, theme.typography.body2, {\n  display: \'table-cell\',\n  verticalAlign: \'inherit\',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === \'light\' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: \'left\',\n  padding: 16\n}, ownerState.variant === \'head\' && {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === \'body\' && {\n  color: (theme.vars || theme).palette.text.primary\n}, ownerState.variant === \'footer\' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === \'small\' && {\n  padding: \'6px 16px\',\n  [`&.${TableCell_tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: \'0 12px 0 16px\',\n    \'& > *\': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === \'checkbox\' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: \'0 0 0 4px\'\n}, ownerState.padding === \'none\' && {\n  padding: 0\n}, ownerState.align === \'left\' && {\n  textAlign: \'left\'\n}, ownerState.align === \'center\' && {\n  textAlign: \'center\'\n}, ownerState.align === \'right\' && {\n  textAlign: \'right\',\n  flexDirection: \'row-reverse\'\n}, ownerState.align === \'justify\' && {\n  textAlign: \'justify\'\n}, ownerState.stickyHeader && {\n  position: \'sticky\',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: (theme.vars || theme).palette.background.default\n}));\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nconst TableCell = /*#__PURE__*/react.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiTableCell\'\n  });\n\n  const {\n    align = \'inherit\',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, TableCell_excluded);\n\n  const table = react.useContext(Table_TableContext);\n  const tablelvl2 = react.useContext(Table_Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === \'head\';\n  let component;\n\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? \'th\' : \'td\';\n  }\n\n  let scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = \'col\';\n  }\n\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n\n  const ownerState = extends_extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : \'normal\'),\n    size: sizeProp || (table && table.size ? table.size : \'medium\'),\n    sortDirection,\n    stickyHeader: variant === \'head\' && table && table.stickyHeader,\n    variant\n  });\n\n  const classes = TableCell_useUtilityClasses(ownerState);\n  let ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === \'asc\' ? \'ascending\' : \'descending\';\n  }\n\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(TableCellRoot, extends_extends({\n    as: component,\n    ref: ref,\n    className: clsx_m(classes.root, className),\n    "aria-sort": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\n false ? 0 : void 0;\n/* harmony default export */ const TableCell_TableCell = (TableCell);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableContainer/tableContainerClasses.js\n\nfunction getTableContainerUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiTableContainer\', slot);\n}\nconst tableContainerClasses = generateUtilityClasses(\'MuiTableContainer\', [\'root\']);\n/* harmony default export */ const TableContainer_tableContainerClasses = ((/* unused pure expression or super */ null && (tableContainerClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableContainer/TableContainer.js\n\n\nconst TableContainer_excluded = ["className", "component"];\n\n\n\n\n\n\n\n\n\nconst TableContainer_useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\n\nconst TableContainerRoot = styles_styled(\'div\', {\n  name: \'MuiTableContainer\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: \'100%\',\n  overflowX: \'auto\'\n});\nconst TableContainer = /*#__PURE__*/react.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiTableContainer\'\n  });\n\n  const {\n    className,\n    component = \'div\'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, TableContainer_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    component\n  });\n\n  const classes = TableContainer_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(TableContainerRoot, extends_extends({\n    ref: ref,\n    as: component,\n    className: clsx_m(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\n false ? 0 : void 0;\n/* harmony default export */ const TableContainer_TableContainer = (TableContainer);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableHead/tableHeadClasses.js\n\nfunction getTableHeadUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiTableHead\', slot);\n}\nconst tableHeadClasses = generateUtilityClasses(\'MuiTableHead\', [\'root\']);\n/* harmony default export */ const TableHead_tableHeadClasses = ((/* unused pure expression or super */ null && (tableHeadClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableHead/TableHead.js\n\n\nconst TableHead_excluded = ["className", "component"];\n\n\n\n\n\n\n\n\n\n\nconst TableHead_useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\'root\']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styles_styled(\'thead\', {\n  name: \'MuiTableHead\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: \'table-header-group\'\n});\nconst TableHead_tablelvl2 = {\n  variant: \'head\'\n};\nconst TableHead_defaultComponent = \'thead\';\nconst TableHead = /*#__PURE__*/react.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiTableHead\'\n  });\n\n  const {\n    className,\n    component = TableHead_defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, TableHead_excluded);\n\n  const ownerState = extends_extends({}, props, {\n    component\n  });\n\n  const classes = TableHead_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Table_Tablelvl2Context.Provider, {\n    value: TableHead_tablelvl2,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TableHeadRoot, extends_extends({\n      as: component,\n      className: clsx_m(classes.root, className),\n      ref: ref,\n      role: component === TableHead_defaultComponent ? null : \'rowgroup\',\n      ownerState: ownerState\n    }, other))\n  });\n});\n false ? 0 : void 0;\n/* harmony default export */ const TableHead_TableHead = (TableHead);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableRow/tableRowClasses.js\n\nfunction getTableRowUtilityClass(slot) {\n  return generateUtilityClass_generateUtilityClass(\'MuiTableRow\', slot);\n}\nconst tableRowClasses = generateUtilityClasses(\'MuiTableRow\', [\'root\', \'selected\', \'hover\', \'head\', \'footer\']);\n/* harmony default export */ const TableRow_tableRowClasses = (tableRowClasses);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/TableRow/TableRow.js\n\n\nconst TableRow_excluded = ["className", "component", "hover", "selected"];\n\n\n\n\n\n\n\n\n\n\n\nconst TableRow_useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: [\'root\', selected && \'selected\', hover && \'hover\', head && \'head\', footer && \'footer\']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styles_styled(\'tr\', {\n  name: \'MuiTableRow\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: \'inherit\',\n  display: \'table-row\',\n  verticalAlign: \'middle\',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${TableRow_tableRowClasses.hover}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${TableRow_tableRowClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    \'&:hover\': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst TableRow_defaultComponent = \'tr\';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/react.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps_useThemeProps({\n    props: inProps,\n    name: \'MuiTableRow\'\n  });\n\n  const {\n    className,\n    component = TableRow_defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, TableRow_excluded);\n\n  const tablelvl2 = react.useContext(Table_Tablelvl2Context);\n\n  const ownerState = extends_extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === \'head\',\n    footer: tablelvl2 && tablelvl2.variant === \'footer\'\n  });\n\n  const classes = TableRow_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(TableRowRoot, extends_extends({\n    as: component,\n    ref: ref,\n    className: clsx_m(classes.root, className),\n    role: component === TableRow_defaultComponent ? null : \'row\',\n    ownerState: ownerState\n  }, other));\n});\n false ? 0 : void 0;\n/* harmony default export */ const TableRow_TableRow = (TableRow);\n;// CONCATENATED MODULE: ./src/components/TableList/TableList.jsx\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction TableList(props) {\n  var list = props.list,\n      subordinated = props.subordinated,\n      rights = props.rights;\n\n  var _useState = (0,react.useState)({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      filter = _useState2[0],\n      setFilter = _useState2[1];\n\n  var _useState3 = (0,react.useState)(list ? list : []),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterList = _useState4[0],\n      setFilterList = _useState4[1];\n\n  (0,react.useEffect)(function () {\n    var interimFilter = list;\n\n    var _loop = function _loop(key) {\n      if (filter[key] !== \'all\') {\n        if (key === \'type\') {\n          interimFilter = interimFilter.filter(function (item) {\n            return item.type === filter[key];\n          });\n        }\n\n        if (key === \'contract\') {\n          interimFilter = interimFilter.filter(function (item) {\n            return item.contract.type === filter[key];\n          });\n        }\n\n        if (key === \'advStatus\') {\n          interimFilter = interimFilter.filter(function (item) {\n            return item.advStatus === filter[key];\n          });\n        }\n\n        if (key === \'assigned\') {\n          interimFilter = interimFilter.filter(function (item) {\n            return item.assigned_by.fullName === filter[key];\n          });\n        }\n      }\n    };\n\n    for (var key in filter) {\n      _loop(key);\n    }\n\n    setFilterList(interimFilter);\n  }, [filter]);\n  return /*#__PURE__*/react.createElement(TableContainer_TableContainer, {\n    component: Paper_Paper,\n    sx: {\n      maxHeight: \'calc(100vh - 84px - 2rem)\'\n    }\n  }, /*#__PURE__*/react.createElement(Table_Table, {\n    sx: {\n      minWidth: 650\n    },\n    size: "small",\n    stickyHeader: true\n  }, /*#__PURE__*/react.createElement(TableHead_TableHead, null, /*#__PURE__*/react.createElement(TableRow_TableRow, null, /*#__PURE__*/react.createElement(TableCell_TableCell, {\n    sx: {\n      fontWeight: 700,\n      fontSize: 12\n    }\n  }, /*#__PURE__*/react.createElement(FormControl_FormControl, {\n    size: "small",\n    fullWidth: true\n  }, /*#__PURE__*/react.createElement(InputLabel_InputLabel, {\n    id: "demo-simple-select-label"\n  }, "\\u0420\\u0438\\u044D\\u0442\\u043E\\u0440"), /*#__PURE__*/react.createElement(Select_Select, {\n    labelId: "demo-simple-select-label",\n    id: "demo-simple-select",\n    value: filter !== null && filter !== void 0 && filter.assigned ? filter === null || filter === void 0 ? void 0 : filter.assigned : \'all\',\n    label: "\\u0420\\u0438\\u044D\\u0442\\u043E\\u0440",\n    name: \'assigned\',\n    size: "small",\n    sx: {\n      fontSize: 12\n    },\n    onChange: function onChange(event) {\n      setFilter(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, event.target.name, event.target.value));\n      });\n    }\n  }, /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "all"\n  }, "\\u0412\\u0441\\u0435"), subordinated.length > 0 && subordinated.map(function (realtor) {\n    return /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n      key: realtor.id,\n      sx: {\n        fontSize: 12\n      },\n      value: realtor.name\n    }, realtor.name);\n  })))), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n    sx: {\n      fontWeight: 700,\n      fontSize: 12\n    }\n  }, /*#__PURE__*/react.createElement(FormControl_FormControl, {\n    size: "small",\n    fullWidth: true\n  }, /*#__PURE__*/react.createElement(InputLabel_InputLabel, {\n    id: "demo-simple-select-label"\n  }, "\\u041E\\u0431\\u044A\\u0435\\u043A\\u0442"), /*#__PURE__*/react.createElement(Select_Select, {\n    labelId: "demo-simple-select-label",\n    id: "demo-simple-select",\n    value: filter !== null && filter !== void 0 && filter.type ? filter === null || filter === void 0 ? void 0 : filter.type : \'all\',\n    label: "\\u041E\\u0431\\u044A\\u0435\\u043A\\u0442",\n    name: \'type\',\n    size: "small",\n    sx: {\n      fontSize: 12\n    },\n    onChange: function onChange(event) {\n      setFilter(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, event.target.name, event.target.value));\n      });\n    }\n  }, /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "all"\n  }, "\\u0412\\u0441\\u0435"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430"\n  }, "\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u041F\\u0435\\u0440\\u0435\\u0443\\u0441\\u0442\\u0443\\u043F\\u043A\\u0430 \\u0414\\u0414\\u0423"\n  }, "\\u041F\\u0435\\u0440\\u0435\\u0443\\u0441\\u0442\\u0443\\u043F\\u043A\\u0430 \\u0414\\u0414\\u0423"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u041A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0430"\n  }, "\\u041A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0430"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u0414\\u043E\\u043C"\n  }, "\\u0414\\u043E\\u043C"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u0417\\u0435\\u043C\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043E\\u043A"\n  }, "\\u0417\\u0435\\u043C\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043E\\u043A"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u0413\\u0430\\u0440\\u0430\\u0436"\n  }, "\\u0413\\u0430\\u0440\\u0430\\u0436")))), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n    sx: {\n      fontWeight: 700,\n      fontSize: 12\n    }\n  }, /*#__PURE__*/react.createElement(FormControl_FormControl, {\n    size: "small",\n    fullWidth: true\n  }, /*#__PURE__*/react.createElement(InputLabel_InputLabel, {\n    id: "demo-simple-select-label"\n  }, "\\u0422\\u0438\\u043F \\u0434\\u043E\\u0433\\u043E\\u0440\\u0430"), /*#__PURE__*/react.createElement(Select_Select, {\n    labelId: "demo-simple-select-label",\n    id: "demo-simple-select",\n    value: filter !== null && filter !== void 0 && filter.contract ? filter === null || filter === void 0 ? void 0 : filter.contract : \'all\',\n    label: "\\u0422\\u0438\\u043F \\u0434\\u043E\\u0433\\u043E\\u0440\\u0430",\n    name: \'contract\',\n    size: "small",\n    sx: {\n      fontSize: 12\n    },\n    onChange: function onChange(event) {\n      setFilter(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, event.target.name, event.target.value));\n      });\n    }\n  }, /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "all"\n  }, "\\u0412\\u0441\\u0435"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u042D\\u043A\\u0441\\u043A\\u043B\\u044E\\u0437\\u0438\\u0432"\n  }, "\\u042D\\u043A\\u0441\\u043A\\u043B\\u044E\\u0437\\u0438\\u0432"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u0420\\u0435\\u043B\\u0430\\u043C\\u043D\\u044B\\u0439"\n  }, "\\u0420\\u0435\\u043B\\u0430\\u043C\\u043D\\u044B\\u0439"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: null\n  }, "\\u0411\\u0435\\u0437 \\u0434\\u043E\\u0433\\u043E\\u0432\\u043E\\u0440\\u0430")))), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n    sx: {\n      fontWeight: 700,\n      fontSize: 12\n    }\n  }, "\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u0438"), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n    sx: {\n      fontWeight: 700,\n      fontSize: 12\n    }\n  }, "\\u0426\\u0435\\u043D\\u0430 \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441"), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n    sx: {\n      fontWeight: 700,\n      fontSize: 12\n    }\n  }, /*#__PURE__*/react.createElement(FormControl_FormControl, {\n    size: "small",\n    fullWidth: true\n  }, /*#__PURE__*/react.createElement(InputLabel_InputLabel, {\n    id: "demo-simple-select-label"\n  }, "\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441"), /*#__PURE__*/react.createElement(Select_Select, {\n    labelId: "demo-simple-select-label",\n    id: "demo-simple-select",\n    value: filter !== null && filter !== void 0 && filter.advStatus ? filter === null || filter === void 0 ? void 0 : filter.advStatus : \'all\',\n    label: "\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441",\n    name: \'advStatus\',\n    size: "small",\n    sx: {\n      fontSize: 12\n    },\n    onChange: function onChange(event) {\n      setFilter(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, event.target.name, event.target.value));\n      });\n    }\n  }, /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "all"\n  }, "\\u0412\\u0441\\u0435"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u041A \\u0440\\u0430\\u0437\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u044E"\n  }, "\\u041A \\u0440\\u0430\\u0437\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u044E"), /*#__PURE__*/react.createElement(MenuItem_MenuItem, {\n    sx: {\n      fontSize: 12\n    },\n    value: "\\u041D\\u0435 \\u0432 \\u0440\\u0435\\u043A\\u043B\\u0430\\u043C\\u0435"\n  }, "\\u041D\\u0435 \\u0432 \\u0440\\u0435\\u043A\\u043B\\u0430\\u043C\\u0435")))), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n    sx: {\n      fontWeight: 700,\n      fontSize: 12\n    }\n  }, "\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u043A\\u0430"), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n    sx: {\n      fontWeight: 700,\n      fontSize: 12\n    }\n  }, "\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A"))), /*#__PURE__*/react.createElement(TableBody_TableBody, null, filterList.length > 0 && filterList.map(function (row, idx) {\n    return /*#__PURE__*/react.createElement(TableRow_TableRow, {\n      key: idx\n    }, /*#__PURE__*/react.createElement(TableCell_TableCell, {\n      style: {\n        fontSize: 10\n      }\n    }, row.assigned_by.fullName), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n      style: {\n        fontSize: 10\n      }\n    }, row.typeName, ", ", row.viewedAddress), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n      style: {\n        fontSize: 10\n      }\n    }, row.contract.type ? row.contract.type : \'Нет\'), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n      style: {\n        fontSize: 10\n      }\n    }, row.viewedArea), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n      style: {\n        fontSize: 10\n      }\n    }, /*#__PURE__*/react.createElement(Tooltip_Tooltip, {\n      title: "\\u0426\\u0435\\u043D\\u0430 \\u043D\\u0430 \\u0441\\u0442\\u0430\\u0440\\u0442\\u0435 ".concat(row.priceStart, " \\u0442\\u044B\\u0441. \\u0440\\u0443\\u0431."),\n      placement: "top",\n      arrow: true\n    }, /*#__PURE__*/react.createElement("span", {\n      style: {\n        cursor: \'pointer\',\n        display: \'flex\',\n        gap: \'0.5rem\',\n        alignItems: \'center\'\n      }\n    }, row.priceCurrent, " \\u0442\\u044B\\u0441.\\u20BD", /*#__PURE__*/react.createElement(arrow, {\n      height: 16,\n      style: row.priceTrend !== 2 ? {\n        transform: "".concat(row.priceTrend === 0 ? \'rotate(-90deg)\' : \'rotate(180deg)\')\n      } : {}\n    })))), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n      style: {\n        fontSize: 10\n      }\n    }, row.advStatus), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n      style: {\n        fontSize: 10\n      }\n    }, (row === null || row === void 0 ? void 0 : row.platformStats.length) > 0 && row.platformStats.map(function (platform, idx) {\n      return /*#__PURE__*/react.createElement("span", {\n        key: idx,\n        style: {\n          display: \'block\'\n        }\n      }, platform.name);\n    })), /*#__PURE__*/react.createElement(TableCell_TableCell, {\n      style: {\n        fontSize: 10\n      }\n    }, "\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A"));\n  }))));\n}\n;// CONCATENATED MODULE: ./src/components/TableList/index.js\n\n;// CONCATENATED MODULE: ./src/App.jsx\nfunction App(){var _useState=(0,react.useState)(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=(0,react.useState)(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];(0,react.useEffect)(function(){setData({"objectsData":[{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"984000234","viewedAddress":"Прокудское Гагарина 86","viewedArea":"45/36/9","priceStart":"1500","priceCurrent":"1500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"51148000270","viewedAddress":"Новосибирск Олимпийская 67а","viewedArea":"26/18/5","priceStart":"3050","priceCurrent":"3050","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"51148000271","viewedAddress":"Криводановский сельсовет Метеор 232","viewedArea":"30/20/9","priceStart":"700","priceCurrent":"700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"51148000273","viewedAddress":"Новосибирск Спортивная 7","viewedArea":"30/14/9","priceStart":"3000","priceCurrent":"3000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"51148000275","viewedAddress":"Чик рп Терешковой 123","viewedArea":"40/30/7","priceStart":"1050","priceCurrent":"1050","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48811","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-15 13:19:56.227663","expiration":"2022-07-26 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 15:01:40.000000"},"type":"Комната","typeName":"(Ком.)","reqNumber":"51148000277","viewedAddress":"Новосибирск Шишкина 114","viewedArea":"28/20/5","priceStart":"1350","priceCurrent":"1350","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017310709420779231","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270686947","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"56249","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":"Эксклюзив","created":"2022-02-18 12:03:19.042433","expiration":"2022-05-18 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:43:41.000000"},"type":"Комната","typeName":"(Ком.)","reqNumber":"51148000307","viewedAddress":"Новосибирск Халтурина 31","viewedArea":"75/14/8","priceStart":"710","priceCurrent":710,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"59142","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":"Эксклюзив","created":"2022-03-10 10:38:46.049910","expiration":"2022-07-10 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 15:20:43.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"51148000308","viewedAddress":"Новосибирск Невельского 69","viewedArea":"45/33/6","priceStart":"3900","priceCurrent":"3900","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017310709420779976","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/271194021","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"61003","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":"Эксклюзив","created":"2022-03-22 13:52:04.253317","expiration":"2022-09-22 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 16:11:03.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"51148000309","viewedAddress":"Новосибирск Забалуева 43","viewedArea":"43/27/8","priceStart":"3200","priceCurrent":"3200","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017310709420779977","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123534","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"69564","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":"Эксклюзив","created":"2022-05-23 13:44:26.062331","expiration":"2022-11-23 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-23 14:28:47.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"51148000311","viewedAddress":"Новосибирск Ленина 59","viewedArea":"25/14/7","priceStart":"2900","priceCurrent":"2900","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017310709420780000","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274126024","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"70457","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":"Эксклюзив","created":"2022-05-30 14:20:33.301307","expiration":"2022-06-30 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-30 15:48:14.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"51148000312","viewedAddress":"Новосибирск Широкая 137/1","viewedArea":"62/42/7","priceStart":"5000","priceCurrent":"5000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017310709420780001","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274126303","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"71568","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":"Эксклюзив","created":"2022-06-06 12:10:56.789990","expiration":"2022-12-06 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-06 14:35:49.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"51148000313","viewedAddress":"Обь Станционная 46","viewedArea":"56/34/9","priceStart":"2800","priceCurrent":"2800","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017310709420780002","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274380306","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"73103","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":"Эксклюзив","created":"2022-06-16 12:06:12.327222","expiration":"2022-09-16 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-16 13:58:36.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"51148000314","viewedAddress":"Новосибирск Гэсстроевская 2/1","viewedArea":"49/22/13","priceStart":"5400","priceCurrent":"5400","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017310709420780003","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274923740","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53982000494","viewedAddress":"Новосибирск Порт-Артурский 2-й 27","viewedArea":"34/27/8","priceStart":"3950","priceCurrent":"3950","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53982000655","viewedAddress":"Криводановка Пушкина 2","viewedArea":"7.90","priceStart":"1000","priceCurrent":"1000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53982000700","viewedAddress":"Марусино Ёлочка 39","viewedArea":"60/50/7","priceStart":"1200","priceCurrent":"1200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53982000702","viewedAddress":"Буготак Советская 66","viewedArea":"74/43/13","priceStart":"2150","priceCurrent":"2150","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53982000706","viewedAddress":"Криводановский сельсовет Ёлочка уч. 124","viewedArea":"7.20","priceStart":"200","priceCurrent":"200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53982000725","viewedAddress":"Новосибирск Фасадная 26/1","viewedArea":"40/29/4","priceStart":"2600","priceCurrent":"2600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53982000735","viewedAddress":"Новосибирск Ягодинская 39","viewedArea":"79/48/16","priceStart":"1750","priceCurrent":"1750","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53982000739","viewedAddress":"Новосибирск Золотая осень 26","viewedArea":"9.66","priceStart":"750","priceCurrent":"750","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53982000740","viewedAddress":"Криводановский сельсовет Елочка-2 27","viewedArea":"12/0/0","priceStart":"500","priceCurrent":"500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53982000746","viewedAddress":"Марусино СНТ Елочка 39","viewedArea":"36/25/6","priceStart":"1100","priceCurrent":"1100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53982000760","viewedAddress":"Новосибирск Порт Артурский 2 пер 78","viewedArea":"80/56/18","priceStart":"4500","priceCurrent":"4500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53982000766","viewedAddress":"Новосибирск Невельского 67","viewedArea":"45/31/7","priceStart":"2600","priceCurrent":"2600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53982000793","viewedAddress":"Коченево НСТ Ветеран-1 368","viewedArea":"126/60/20","priceStart":"3000","priceCurrent":"3000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53982000828","viewedAddress":"Новосибирск Забалуева 90","viewedArea":"40/21/5","priceStart":"3350","priceCurrent":"3350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54259001585","viewedAddress":"Марусино Комсомольская 16","viewedArea":"42/27/8","priceStart":"1600","priceCurrent":"1600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"54279002623","viewedAddress":"Новосибирск Карла Маркса площадь 1","viewedArea":"3.00","priceStart":"350","priceCurrent":"350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54704000316","viewedAddress":"Толмачевский сельсовет Фруктовая 143","viewedArea":"70/40/5","priceStart":"1900","priceCurrent":"1900","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54704000317","viewedAddress":"Новосибирск Писарева 4","viewedArea":"31/18/6","priceStart":"3650","priceCurrent":"3650","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54717000187","viewedAddress":"8 Марта Мира 2","viewedArea":"70/1/1","priceStart":"3800","priceCurrent":"3800","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54717003186","viewedAddress":"Дорогино Светлая 28","viewedArea":"42/27/5","priceStart":"700","priceCurrent":"700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48788","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":"2022-01-15 12:11:36.263532","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54737000140","viewedAddress":"Новосибирск Ягодинская 1Б","viewedArea":"48/17/13","priceStart":"3780","priceCurrent":"3780","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48358","assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 13:59:54.441856","expiration":"2022-06-03 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-06-09 08:06:46.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54737000154","viewedAddress":"Новосибирск Виталия Потылицына 7/5","viewedArea":"72/36/12","priceStart":"6800","priceCurrent":"6800","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"55479000475","viewedAddress":"Новосибирск Воскресная 5","viewedArea":"3.00","priceStart":"7700","priceCurrent":"7700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"55581000434","viewedAddress":"Искитим Индустриальный 24","viewedArea":"55/1/6","priceStart":"1750","priceCurrent":"1750","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"55599000162","viewedAddress":"Лесная Поляна Станционная 20","viewedArea":"50/0/0","priceStart":"350","priceCurrent":"350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Комната","typeName":"(Ком.)","reqNumber":"55599001065","viewedAddress":"Новосибирск Забалуева 70","viewedArea":"60/13/6","priceStart":"750","priceCurrent":"750","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1583,"fullName":"Альчикова Оксана Геннадьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57450000301","viewedAddress":"Новосибирск Виктора Шевелёва 34","viewedArea":"41/16/12","priceStart":"2250","priceCurrent":"2250","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"57416","assigned_by":{"UID":3617,"fullName":"Антонова Наталья Александровна"},"contract":{"type":"Эксклюзив","created":"2022-02-25 17:14:02.924155","expiration":"2022-08-25 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 14:09:13.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000342","viewedAddress":"Новосибирск Титова 198","viewedArea":"60/37/9","priceStart":"5300","priceCurrent":"5300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017369635227680089","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270685151","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"56919","assigned_by":{"UID":3617,"fullName":"Антонова Наталья Александровна"},"contract":{"type":"Эксклюзив","created":"2022-02-24 11:38:20.508724","expiration":"2022-08-25 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 13:43:08.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000076","viewedAddress":"Горбуново Молодежная 3","viewedArea":"43/30/6","priceStart":"400","priceCurrent":"400","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017476113481805278","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270689308","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"61623","assigned_by":{"UID":3617,"fullName":"Антонова Наталья Александровна"},"contract":{"type":"Рекламный","created":"2022-03-25 14:22:26.714512","expiration":"2022-06-24 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-25 12:50:42.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58608000010","viewedAddress":"Новосибирск Связистов 139","viewedArea":"42/28/7","priceStart":"4700","priceCurrent":4700,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274126215","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"62381","assigned_by":{"UID":3617,"fullName":"Антонова Наталья Александровна"},"contract":{"type":"Эксклюзив","created":"2022-03-29 17:37:28.654385","expiration":"2022-07-31 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 17:38:10.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58608000011","viewedAddress":"Новосибирск 9 Гвардейской Дивизии 11","viewedArea":"59/42/7","priceStart":"4800","priceCurrent":"4800","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499941180632575","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123738","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"67605","assigned_by":{"UID":3617,"fullName":"Антонова Наталья Александровна"},"contract":{"type":"Эксклюзив","created":"2022-05-06 10:37:15.485507","expiration":"2022-10-11 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-12 11:15:12.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58608000013","viewedAddress":"Куйбышев Омская 77","viewedArea":"41/30/10","priceStart":"2000","priceCurrent":"2000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499941180632577","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274125418","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34034","assigned_by":{"UID":1506,"fullName":"Безуглов Александр Викторович"},"contract":{"type":null,"created":"2022-01-17 10:22:08.745705","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54842000047","viewedAddress":"Новосибирск Молдавская 11","viewedArea":"240/100/12","priceStart":"8400","priceCurrent":"8400","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1506,"fullName":"Безуглов Александр Викторович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54842000050","viewedAddress":"Новосибирск Динамовцев 16","viewedArea":"62/47/6","priceStart":"2790","priceCurrent":"2790","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"50113","assigned_by":{"UID":1506,"fullName":"Безуглов Александр Викторович"},"contract":{"type":null,"created":"2022-01-19 11:06:58.201726","expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"54842000052","viewedAddress":"Станционный сельский совет Ратник 10","viewedArea":"12.00","priceStart":"1100","priceCurrent":"1100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48219","assigned_by":{"UID":1506,"fullName":"Безуглов Александр Викторович"},"contract":{"type":"Эксклюзив","created":"2022-01-14 11:37:34.055973","expiration":"2022-07-05 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-25 09:38:55.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54842000078","viewedAddress":"Новосибирск Вертковская 12/3","viewedArea":"46/33/6","priceStart":"3700","priceCurrent":3800,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/2071835052088962933","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274284507","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"63763","assigned_by":{"UID":1506,"fullName":"Безуглов Александр Викторович"},"contract":{"type":"Эксклюзив","created":"2022-04-07 15:48:01.102995","expiration":"2022-10-07 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 10:15:20.000000"},"type":"Гараж","typeName":"(Г.)","reqNumber":"54842000084","viewedAddress":"Новосибирск Потанинская 6а","viewedArea":"17/0/0","priceStart":"650","priceCurrent":"650","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017395993199499351","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/commercial/274123987","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68359","assigned_by":{"UID":1506,"fullName":"Безуглов Александр Викторович"},"contract":{"type":"Эксклюзив","created":"2022-05-13 12:21:56.546382","expiration":"2022-11-16 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-16 13:09:34.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"54842000085","viewedAddress":"Новосибирск 2-й Степной переулок 26","viewedArea":"203/97/12","priceStart":"7900","priceCurrent":"7900","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017395993199499352","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274125709","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48459","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 15:20:04.168751","expiration":"2022-07-06 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 15:14:46.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53871000083","viewedAddress":"Нижнекаменка Ленина 48","viewedArea":"38/27/9","priceStart":"640","priceCurrent":"640","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017369635227677331","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274123338","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34039","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":"2022-01-14 15:37:00.425954","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000091","viewedAddress":"Новосибирск Сибиряков-Гвардейцев 44/1","viewedArea":"26/24/1","priceStart":"1100","priceCurrent":"1100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53871000109","viewedAddress":"Новопичугово Бирюзовая-Пляжная 12-34","viewedArea":"360/189/22","priceStart":"1200","priceCurrent":"1200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53871000169","viewedAddress":"Колывань Овчинникова 68","viewedArea":"54/36/8","priceStart":"2500","priceCurrent":"2500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48384","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 14:18:54.854941","expiration":null,"moderation":"Отклонено","moderationDate":"2022-04-28 10:39:49.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53871000220","viewedAddress":"Марусино Горького 24а","viewedArea":"269/260/0","priceStart":"7000","priceCurrent":"7000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48373","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":"2022-01-14 14:12:30.384506","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000224","viewedAddress":"Новосибирск Невельского 55","viewedArea":"74/58/8","priceStart":"4700","priceCurrent":"4700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48367","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 14:08:06.817025","expiration":"2022-06-29 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 16:41:26.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000229","viewedAddress":"Новосибирск Титова 39/1","viewedArea":"43/27/6","priceStart":"3850","priceCurrent":3850,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274303149","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34035","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":"2022-01-14 15:36:04.022239","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000299","viewedAddress":"Новосибирск Забалуева 80","viewedArea":"60/48/8","priceStart":"3720","priceCurrent":"3720","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000304","viewedAddress":"Новосибирск Виктора Уса 15/1","viewedArea":"63/39/10","priceStart":"4320","priceCurrent":"4320","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53871000306","viewedAddress":"Береговое Степная 272","viewedArea":"1500.00","priceStart":"410","priceCurrent":"410","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53871000317","viewedAddress":"Кубовинский сельсовет участок №43 53","viewedArea":"7.00","priceStart":"690","priceCurrent":"690","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000318","viewedAddress":"Криводановка Зеленая 16","viewedArea":"66/34/10","priceStart":"2350","priceCurrent":"2350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48515","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 15:56:37.165532","expiration":"2022-04-26 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:33:07.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000323","viewedAddress":"Новосибирск Кубовая 107/2","viewedArea":"58/36/9","priceStart":"4500","priceCurrent":"4500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48526","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:02:26.534197","expiration":"2022-04-26 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:33:12.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000324","viewedAddress":"Новосибирск Кубовая 115","viewedArea":"73/45/15","priceStart":"5900","priceCurrent":"5900","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000325","viewedAddress":"Новосибирск Ольги Жилиной 92а","viewedArea":"45/30/6","priceStart":"4040","priceCurrent":"4040","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48545","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":"2022-01-14 16:14:34.739968","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000327","viewedAddress":"Новосибирск Мичурина 23","viewedArea":"46/31/6","priceStart":"4720","priceCurrent":"4720","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48550","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":"2022-01-14 16:16:06.234236","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000328","viewedAddress":"Новосибирск Железнодорожная 22","viewedArea":"62/47/9","priceStart":"6750","priceCurrent":"6750","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48557","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":"2022-01-14 16:18:58.761312","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53871000329","viewedAddress":"Новосибирск Тульская 241","viewedArea":"75/51/8","priceStart":"3000","priceCurrent":"3000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"51623","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":"2022-01-25 13:11:05.043118","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000338","viewedAddress":"Новосибирск Тюленина 26/2","viewedArea":"24/16/3","priceStart":"2000","priceCurrent":"2000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"56157","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-02-17 15:23:31.654453","expiration":"2022-05-17 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:43:18.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000340","viewedAddress":"Новосибирск Станционная 44","viewedArea":"75/49/11","priceStart":"4990","priceCurrent":"4990","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"57105","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-02-24 16:31:15.660605","expiration":"2022-05-25 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-30 07:53:42.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53871000341","viewedAddress":"Каменский сельсовет 11-я УЧАСТОК №2","viewedArea":"145/112/20","priceStart":"5800","priceCurrent":"5800","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"57595","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-02-28 12:43:21.985780","expiration":"2022-05-28 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-30 07:54:16.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000343","viewedAddress":"Новосибирск Степная 64","viewedArea":"44/31/5","priceStart":"4700","priceCurrent":"4700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"60817","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-03-21 12:25:07.718464","expiration":"2022-06-21 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-06-27 08:04:23.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53871000345","viewedAddress":"Кубовинский сельсовет Луговая 53","viewedArea":"43/34/3","priceStart":"700","priceCurrent":700,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"64882","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-04-15 15:53:27.406699","expiration":"2022-07-15 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-15 17:18:50.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"53871000348","viewedAddress":"Новосибирск бронная 2/6","viewedArea":"60/40/7","priceStart":"3600","priceCurrent":"3600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"65296","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-04-19 13:05:21.197955","expiration":"2022-07-19 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-19 17:02:58.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000349","viewedAddress":"Новосибирск Чигорина 14/1","viewedArea":"43/16/15","priceStart":"4200","priceCurrent":"4200","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017369635227680096","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124323","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68144","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-05-12 11:22:01.309668","expiration":"2022-08-12 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-12 12:51:18.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000350","viewedAddress":"Новосибирск Коммунстроевская 50","viewedArea":"61/48/7","priceStart":"5250","priceCurrent":5350,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/2071017954962567547","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274744882","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68366","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-05-13 12:56:59.422148","expiration":"2022-08-13 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-13 15:21:58.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53871000351","viewedAddress":"Новосибирск Танкистов 47","viewedArea":"91/71/15","priceStart":"3500","priceCurrent":"3500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274125688","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"69612","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-05-23 15:06:46.630539","expiration":"2022-08-23 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-24 13:53:17.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53871000352","viewedAddress":"Новосибирск Петухова 95/1","viewedArea":"57/43/9","priceStart":"5100","priceCurrent":"5100","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017369635227680120","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274126082","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"70972","assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":"Эксклюзив","created":"2022-06-02 11:13:02.803310","expiration":"2022-11-02 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-02 14:16:14.000000"},"type":"Комната","typeName":"(Ком.)","reqNumber":"53871000353","viewedAddress":"Новосибирск Полтавская 37","viewedArea":"58/47/7","priceStart":"900","priceCurrent":"900","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017369635227680121","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274237196","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"56539001543","viewedAddress":"Новосибирск Титова 253/7","viewedArea":"38/19/9","priceStart":"1890","priceCurrent":"1890","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57836000843","viewedAddress":"Новосибирск Николая Сотникова 16","viewedArea":"33/20/5","priceStart":"2350","priceCurrent":"2350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58352000045","viewedAddress":"Новосибирск Березовая 19","viewedArea":"28/16/4","priceStart":"2450","priceCurrent":"2450","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58480000001","viewedAddress":"Элитный Фламинго 19","viewedArea":"37/26/1","priceStart":"3200","priceCurrent":3200,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58480000002","viewedAddress":"Криводановка Зеленая 16","viewedArea":"60/42/10","priceStart":"2350","priceCurrent":"2350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58480000010","viewedAddress":"Новосибирск Забалуева 98","viewedArea":"38/20/14","priceStart":"3100","priceCurrent":"3100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1599,"fullName":"Бриль Наталья Борисовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58480000013","viewedAddress":"Новосибирск Забалуева 98","viewedArea":"38/19/13","priceStart":"2780","priceCurrent":"2780","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"956461","viewedAddress":"Новосибирск Пролетарская 271/2","viewedArea":"65/35/12","priceStart":"4200","priceCurrent":"4200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"779000347","viewedAddress":"Новосибирск Экономическая 1","viewedArea":"35/23/7","priceStart":"1590","priceCurrent":1590,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48560","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:21:27.981448","expiration":"2022-08-26 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-26 15:48:20.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000244","viewedAddress":"Новосибирск Есенина 43","viewedArea":"62/47/6","priceStart":"4000","priceCurrent":"4000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123236","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48516","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 15:56:48.585341","expiration":"2022-06-23 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-06-27 08:07:21.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"1230000272","viewedAddress":"Новошилово Рябиновая 14","viewedArea":"76/46/12","priceStart":"2650","priceCurrent":"2650","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"1230000306","viewedAddress":"Новосибирск Светлановская 36","viewedArea":"60/30/10","priceStart":"5600","priceCurrent":"5600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48552","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":"2022-01-14 16:17:34.294050","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000327","viewedAddress":"Новосибирск Ключ-Камышенское плато 10/2","viewedArea":"35/20/4","priceStart":"3050","priceCurrent":"3050","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48534","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:07:15.015550","expiration":"2022-07-18 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-31 17:40:17.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"1230000333","viewedAddress":"Новосибирск Большая 337","viewedArea":"124/84/23","priceStart":"6050","priceCurrent":"6050","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270686750","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000336","viewedAddress":"Новосибирск Николая Сотникова 2","viewedArea":"34/17/9","priceStart":"3450","priceCurrent":"3450","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"50329","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":"2022-01-19 16:41:20.908959","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000349","viewedAddress":"Новосибирск Виталия Потылицына 1","viewedArea":"65/40/10","priceStart":"5900","priceCurrent":"5900","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"50321","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":"2022-01-19 16:27:54.514287","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000365","viewedAddress":"Новосибирск Тенистая 27","viewedArea":"35/19/9","priceStart":"2950","priceCurrent":"2950","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270687598","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000366","viewedAddress":"Новосибирск Республиканская 1а","viewedArea":"43/28/6","priceStart":"3100","priceCurrent":"3100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"1230000367","viewedAddress":"Марусино Васнецова 10","viewedArea":"129/45/25","priceStart":"9300","priceCurrent":"9300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"52580","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-01-27 17:04:05.959264","expiration":"2022-08-30 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-31 17:54:15.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000375","viewedAddress":"Новосибирск Татьяны Снежиной 45/1","viewedArea":"58/34/12","priceStart":"4450","priceCurrent":"4450","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270688516","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"53346","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-01-31 11:29:19.682047","expiration":"2022-07-28 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-24 16:27:21.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000376","viewedAddress":"Новосибирск Охотская 88","viewedArea":"39/18/11","priceStart":"4080","priceCurrent":4100,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125821","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"55820","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-15 14:07:31.759205","expiration":"2022-08-24 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-24 16:59:45.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"1230000378","viewedAddress":"Новосибирск Советской Сибири 35","viewedArea":"75/40/10","priceStart":"5150","priceCurrent":"5150","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270689066","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"56168","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":null,"created":"2022-02-17 16:23:23.334408","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000379","viewedAddress":"Новосибирск Горский 63/1","viewedArea":"51/25/18","priceStart":"5450","priceCurrent":"5450","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"58331","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-03-03 15:01:36.638450","expiration":"2022-05-17 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:43:24.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000379","viewedAddress":"Новосибирск Горский 63/1","viewedArea":"51/25/18","priceStart":"5450","priceCurrent":"5450","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"57678","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-28 15:04:30.873338","expiration":"2022-08-24 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-24 16:58:14.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000381","viewedAddress":"Новосибирск Николая Островского 120","viewedArea":"34/16/11","priceStart":"5300","priceCurrent":"5300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270685305","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"60875","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-03-21 15:28:46.562993","expiration":"2022-09-28 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-28 17:10:15.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000382","viewedAddress":"Новосибирск Тюленина 16/1","viewedArea":"37/18/10","priceStart":"4300","priceCurrent":"4300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6144564547149103767","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123504","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"60910","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-03-21 17:29:21.660251","expiration":"2022-08-21 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-03 13:21:42.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"1230000383","viewedAddress":"Новосибирск СНТ Север-1 221","viewedArea":"37/18/10","priceStart":"499","priceCurrent":"499","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274123513","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"65138","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-04-18 15:58:09.989965","expiration":"2022-07-18 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-18 18:00:46.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000385","viewedAddress":"Садовый Затонского 106/3","viewedArea":"37/18/10","priceStart":"3650","priceCurrent":"3650","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124269","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"65325","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-04-19 13:49:13.591353","expiration":"2022-07-19 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-19 15:49:36.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000386","viewedAddress":"Чаны Центральная 31","viewedArea":"30/16/6","priceStart":"350","priceCurrent":"350","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124320","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"65545","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-04-20 16:07:57.890315","expiration":"2022-07-20 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-20 17:58:05.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000387","viewedAddress":"Садовый Затонского 106","viewedArea":"37/16/10","priceStart":"3500","priceCurrent":"3500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124361","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68049","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-05-11 15:46:40.801291","expiration":"2022-08-11 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-11 16:24:29.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000388","viewedAddress":"Новосибирск Бориса Богаткова 194/6","viewedArea":"60/42/7","priceStart":"4980","priceCurrent":"4980","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125299","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68058","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Рекламный","created":"2022-05-11 16:00:00.049192","expiration":null,"moderation":"Отклонено","moderationDate":"2022-05-11 16:01:04.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000388","viewedAddress":"Новосибирск Бориса Богаткова 194/6","viewedArea":"60/42/7","priceStart":"4980","priceCurrent":"4980","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125299","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"69213","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-05-19 15:16:04.134473","expiration":"2022-08-19 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-19 15:54:39.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"1230000389","viewedAddress":"Новосибирск 1-я Искитимская 76","viewedArea":"54/45/8","priceStart":"6150","priceCurrent":"6150","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274125856","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"69791","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-05-24 15:48:58.693108","expiration":"2022-08-24 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-24 16:40:39.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000390","viewedAddress":"Новосибирск Индустриальная 3","viewedArea":"44/30/6","priceStart":"4300","priceCurrent":"4300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274126081","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"70669","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-05-31 15:30:41.016059","expiration":"2022-08-30 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-31 16:30:11.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000391","viewedAddress":"Новосибирск Сибирская 17","viewedArea":"60/40/10","priceStart":"8050","priceCurrent":"8050","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274145122","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"70695","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-05-31 16:39:25.519103","expiration":"2022-08-30 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-02 16:37:02.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000392","viewedAddress":"Новосибирск Троллейная 35","viewedArea":"76/42/13","priceStart":"7400","priceCurrent":"7400","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274251470","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"72372","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-06-09 17:22:16.757518","expiration":"2022-09-09 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-10 08:03:53.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000393","viewedAddress":"Новосибирск Татьяны Снежиной 21/2","viewedArea":"38/25/4","priceStart":"3490","priceCurrent":"3490","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274564624","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"72804","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-06-14 16:44:29.512123","expiration":"2022-09-14 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-14 17:51:13.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000394","viewedAddress":"Новосибирск Есенина 45","viewedArea":"31/19/6","priceStart":"3250","priceCurrent":"3250","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274733612","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"73695","assigned_by":{"UID":1593,"fullName":"Чапская Елена Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-06-20 15:38:40.118106","expiration":"2022-09-20 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-20 16:32:33.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1230000395","viewedAddress":"Новосибирск Мирная 10","viewedArea":"41/31/6","priceStart":"3700","priceCurrent":"3700","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274986078","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34100","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":"2022-01-14 17:17:51.359726","expiration":null,"moderation":null,"moderationDate":null},"type":"Комната","typeName":"(Ком.)","reqNumber":"53357000078","viewedAddress":"Новосибирск Ботаническая 35","viewedArea":"79/17/6","priceStart":"600","priceCurrent":"600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48651","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 17:24:31.938613","expiration":"2022-09-22 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 15:15:21.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53357000098","viewedAddress":"Локти Земельный участок 04.02.5418","viewedArea":"1223.00","priceStart":"1800","priceCurrent":1800,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274123622","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34103","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:57:52.535596","expiration":"2022-10-15 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-13 14:57:14.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000180","viewedAddress":"Краснообск Краснообск 36","viewedArea":"32/18/6","priceStart":"3500","priceCurrent":"3500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017365321072284948","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123288","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"53357000253","viewedAddress":"Новосибирск Кирова 242","viewedArea":"45/21/8","priceStart":"4750","priceCurrent":"4750","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"53357000254","viewedAddress":"Новосибирск Кирова 242","viewedArea":"46/22/8","priceStart":"4750","priceCurrent":"4750","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000258","viewedAddress":"Новосибирск Бориса Богаткова 192а","viewedArea":"44/19/12","priceStart":"5000","priceCurrent":"5000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000259","viewedAddress":"Новосибирск Бориса Богаткова 192а","viewedArea":"46/31/4","priceStart":"5500","priceCurrent":"5500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34105","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:28:40.183544","expiration":null,"moderation":"Отклонено","moderationDate":"2022-04-13 14:56:09.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53357000282","viewedAddress":"Коченево Логовская 8","viewedArea":"42/28/8","priceStart":"1500","priceCurrent":"1500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"53357000284","viewedAddress":"Новосибирск Фрунзе 252стр","viewedArea":"63/37/16","priceStart":"12000","priceCurrent":"12000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53357000285","viewedAddress":"Новосибирск Планетная 17","viewedArea":"65/27/7","priceStart":"1620","priceCurrent":"1620","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000288","viewedAddress":"Новосибирск Линейная 33/2","viewedArea":"76/52/7","priceStart":"6480","priceCurrent":"6480","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"49313","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-01-17 14:04:29.303382","expiration":"2022-09-22 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 15:48:28.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53357000292","viewedAddress":"Кудряшовский сельсовет Русская сказка 17","viewedArea":"12.00","priceStart":"250","priceCurrent":"250","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017365321072285942","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274123320","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000293","viewedAddress":"Новосибирск Вертковская 121","viewedArea":"28/19/2","priceStart":"3200","priceCurrent":"3200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000295","viewedAddress":"Новосибирск Зорге 275","viewedArea":"42/24/11","priceStart":"3370","priceCurrent":4000,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"47703","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-01-10 15:13:55.462272","expiration":"2023-01-18 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-25 11:09:50.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53357000304","viewedAddress":"Новосибирск Чехова 329","viewedArea":"55/34/10","priceStart":"3350","priceCurrent":"3350","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017365321072286626","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270687695","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48693","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 18:00:19.846800","expiration":"2022-11-21 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-21 16:40:16.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000306","viewedAddress":"Новосибирск Высоцкого 50/2","viewedArea":"38/16/9","priceStart":"3600","priceCurrent":"3600","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017365321072286628","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270687963","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"62312","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-03-29 15:31:19.526674","expiration":"2022-09-19 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-14 12:57:38.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"53357000309","viewedAddress":"Новосибирск Ивана Севастьянова 7","viewedArea":"41/19/11","priceStart":"4500","priceCurrent":4500,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123669","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"61483","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-03-24 18:13:58.715063","expiration":"2022-09-24 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 16:59:30.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53357000310","viewedAddress":"Локти Советская 1891","viewedArea":"99397.00","priceStart":"1950","priceCurrent":2000,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/2070884216145370132","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274196344","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"62369","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-03-29 16:54:41.085158","expiration":"2022-10-04 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 09:25:55.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53357000311","viewedAddress":"Балта Школьная 5","viewedArea":"57/35/10","priceStart":"790","priceCurrent":"790","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017365321072286654","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274123873","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68674","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-05-16 14:33:26.452864","expiration":"2022-11-16 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-19 17:33:27.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000313","viewedAddress":"Новосибирск Зорге 117/1","viewedArea":"32/20/6","priceStart":"3200","priceCurrent":"3200","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017365321072286656","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125850","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"70472","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-05-30 15:14:32.373982","expiration":"2022-11-30 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-30 16:43:52.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000314","viewedAddress":"Новосибирск Филатова 12","viewedArea":"45/28/6","priceStart":"3420","priceCurrent":"3420","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017365321072286657","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274145099","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"73002","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-06-15 16:59:07.197874","expiration":"2022-12-15 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-15 18:18:11.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000315","viewedAddress":"Новосибирск Титова 255/2","viewedArea":"38/19/11","priceStart":"4500","priceCurrent":"4500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017365321072286658","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274773982","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"73176","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-06-16 15:06:35.803579","expiration":"2022-12-16 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-22 16:42:41.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000316","viewedAddress":"Новосибирск Фрунзе 252/2","viewedArea":"63/37/8","priceStart":"10000","priceCurrent":"10000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017365321072286659","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/275027121","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"60430","assigned_by":{"UID":1503,"fullName":"Цынкер Любовь Александровна"},"contract":{"type":"Эксклюзив","created":"2022-03-17 14:41:11.339519","expiration":"2022-09-17 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 15:36:45.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58494000011","viewedAddress":"Решеты Набережная 9","viewedArea":"45/12/3","priceStart":"650","priceCurrent":"650","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017498479462069968","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/271312014","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48189","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":"2022-02-13 09:52:15.917967","expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"50667000215","viewedAddress":"Новосибирск Петухова 162","viewedArea":"54/30/12","priceStart":"3610","priceCurrent":"3610","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"55341000157","viewedAddress":"Криводановка Зеленая 16","viewedArea":"61/27/11","priceStart":"2350","priceCurrent":"2350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"50477","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-01-20 12:54:32.931365","expiration":"2022-06-13 12:00:00.000000","moderation":null,"moderationDate":"2022-06-16 09:55:51.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"56178000006","viewedAddress":"Криводановка Зеленая 26","viewedArea":"39/20/12","priceStart":"2900","priceCurrent":"2900","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"57926000006","viewedAddress":"Новосибирск Окинская 8","viewedArea":"35/0/0","priceStart":"1500","priceCurrent":"1500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"58126","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":"2022-03-02 15:32:04.958800","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"57926000031","viewedAddress":"Новосибирск Гризодубовой 8","viewedArea":"38/29/8","priceStart":"3280","priceCurrent":"3280","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48237","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 12:15:23.123342","expiration":"2022-10-03 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-15 09:36:12.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"57926000040","viewedAddress":"Новосибирск Титова 253/7","viewedArea":"38/14/10","priceStart":"2300","priceCurrent":"2300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017476113481805179","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"57926000044","viewedAddress":"Новосибирск Титова 253/7","viewedArea":"20/16/1","priceStart":"1390","priceCurrent":"1390","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"57926000048","viewedAddress":"Новосибирск Красных Партизан 2-я 6","viewedArea":"44/36/3","priceStart":"3540","priceCurrent":"3540","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000049","viewedAddress":"Криводановка Зеленая 16","viewedArea":"40/19/9","priceStart":"1660","priceCurrent":"1660","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48201","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":"2022-01-14 10:39:48.477881","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000054","viewedAddress":"Новосибирск Петухова 40","viewedArea":"33/18/7","priceStart":"2470","priceCurrent":"2470","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000057","viewedAddress":"Новосибирск Невельского 79","viewedArea":"29/15/5","priceStart":"2000","priceCurrent":"2000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000061","viewedAddress":"Новосибирск Титова 276","viewedArea":"19/16/1","priceStart":"2100","priceCurrent":"2100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"57926000066","viewedAddress":"Гусиный Брод Сибирская 26","viewedArea":"59/34/9","priceStart":"1840","priceCurrent":"1840","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48234","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 12:09:50.203937","expiration":"2022-05-16 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:34:54.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000067","viewedAddress":"Новосибирск Хилокская 1г","viewedArea":"33/17/9","priceStart":"2450","priceCurrent":2450,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Комната","typeName":"(Ком.)","reqNumber":"57926000072","viewedAddress":"Новосибирск Халтурина 33","viewedArea":"64/36/7","priceStart":"520","priceCurrent":"520","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"57269","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-02-25 12:48:45.524868","expiration":"2022-08-25 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 14:03:21.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000077","viewedAddress":"Новосибирск Ленинградская 347а","viewedArea":"21/19/1","priceStart":"2200","priceCurrent":"2200","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017476113481805279","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/271102552","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"59362","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Рекламный","created":"2022-03-11 12:40:39.975450","expiration":"2022-06-09 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-25 11:09:44.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000080","viewedAddress":"Новосибирск Ясный берег 25","viewedArea":"35/18/7","priceStart":"5000","priceCurrent":5000,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274532687","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"59517","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-03-12 12:19:14.094090","expiration":"2022-11-10 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-10 17:15:56.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"57926000081","viewedAddress":"Верх-Тула Новая 5","viewedArea":"42/22/8","priceStart":"3600","priceCurrent":"3600","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017476113481805304","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/271160959","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"61398","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-03-24 14:18:28.887378","expiration":"2022-09-16 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-16 17:14:51.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000082","viewedAddress":"Новосибирск Титова 255/2","viewedArea":"30/18/3","priceStart":"3300","priceCurrent":"3300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017476113481805305","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123627","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"61540","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-03-25 10:49:33.954793","expiration":"2022-06-25 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-06-27 08:05:16.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000083","viewedAddress":"Новосибирск Фасадная 25/1","viewedArea":"45/26/6","priceStart":"4100","priceCurrent":"4100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"62705","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-03-31 14:27:34.215886","expiration":"2022-06-29 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 09:05:07.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000084","viewedAddress":"Новосибирск Титова 253/4","viewedArea":"30/26/3","priceStart":"3180","priceCurrent":3180,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274239019","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"64403","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-04-12 15:11:35.426870","expiration":"2022-07-12 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-12 16:59:14.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000085","viewedAddress":"Новосибирск бронная 38","viewedArea":"34/18/9","priceStart":"3300","priceCurrent":"3300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017476113481805308","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/275112659","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"66256","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Рекламный","created":"2022-04-26 10:22:11.385957","expiration":"2022-08-24 00:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-12 09:40:50.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000087","viewedAddress":"Новосибирск Титова 16","viewedArea":"44/28/6","priceStart":"4000","priceCurrent":"4000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68138","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-05-12 11:07:07.467792","expiration":"2022-10-12 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-12 12:27:06.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000090","viewedAddress":"Кемерово Инициативная 99","viewedArea":"79/60/6","priceStart":"3999","priceCurrent":3999,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68364","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-05-13 12:47:06.591246","expiration":"2022-12-13 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-13 13:33:58.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"57926000091","viewedAddress":"Новосибирск Районная 38","viewedArea":"90/30/20","priceStart":"1650","priceCurrent":1650,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274239023","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"69214","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-05-19 15:16:09.171538","expiration":"2022-11-19 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-19 16:01:09.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000092","viewedAddress":"Новосибирск Титова 97","viewedArea":"39/26/6","priceStart":"3250","priceCurrent":"3250","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"72354","assigned_by":{"UID":2551,"fullName":"Дегтярёва Елена Николаевна"},"contract":{"type":"Эксклюзив","created":"2022-06-09 16:19:22.663380","expiration":"2022-12-09 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-09 17:27:23.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57926000096","viewedAddress":"Новосибирск Спортивная 5","viewedArea":"38/18/9","priceStart":"3500","priceCurrent":"3500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017476113481805340","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274536700","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48160","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-13 17:13:10.265286","expiration":"2022-08-24 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-24 13:04:48.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"2379000188","viewedAddress":"Новосибирск Воскресная 37","viewedArea":"40/20/12","priceStart":"3700","priceCurrent":"3700","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270686604","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"2379000190","viewedAddress":"Марусино Шишкина 12","viewedArea":"179/100/15","priceStart":"6990","priceCurrent":"6990","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"2379000200","viewedAddress":"Криводановский сельсовет №5 1281","viewedArea":"50/30/10","priceStart":"430","priceCurrent":"430","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48158","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":null,"created":"2022-01-13 17:05:49.036018","expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"2379000209","viewedAddress":"Новосибирск Фрунзе 252","viewedArea":"43/27/5","priceStart":"7000","priceCurrent":"7000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/275081949","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48622","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 17:04:10.945242","expiration":"2022-12-30 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-24 12:31:15.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"2379000214","viewedAddress":"Новосибирск Станиславского 36","viewedArea":"71/47/7","priceStart":"5800","priceCurrent":"5800","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270688118","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"49550","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":null,"created":"2022-01-17 17:06:12.023288","expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"2379000216","viewedAddress":"Новосибирск Светлановская 52","viewedArea":"41/16/15","priceStart":"4100","priceCurrent":"4100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"53556","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Рекламный","created":"2022-01-31 17:43:55.986834","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"2379000217","viewedAddress":"Жеребцово Береговая 33","viewedArea":"50/25/10","priceStart":"1100","priceCurrent":"1100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68062","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Эксклюзив","created":"2022-05-11 16:07:24.079346","expiration":"2022-08-12 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-12 16:09:10.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"2379000218","viewedAddress":"Новосибирск Высоцкого 139/1","viewedArea":"33/19/4","priceStart":"2850","priceCurrent":"2850","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125510","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"72244","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Эксклюзив","created":"2022-06-09 11:33:07.364623","expiration":"2022-09-09 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-09 17:00:19.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"2379000219","viewedAddress":"Новосибирск Котовского 24","viewedArea":"44/32/6","priceStart":"4100","priceCurrent":"4100","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274536698","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"72369","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Эксклюзив","created":"2022-06-09 17:16:00.448929","expiration":"2022-09-09 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-10 11:33:21.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"2379000220","viewedAddress":"Новосибирск Татьяны Снежиной 41","viewedArea":"42/22/7","priceStart":"4100","priceCurrent":"4100","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274576344","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48606","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:54:34.570382","expiration":"2022-08-20 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-24 14:09:43.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58494000006","viewedAddress":"Новосибирск Ясный берег 25","viewedArea":"35/18/8","priceStart":"4800","priceCurrent":4350,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/2075012126228652091","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125820","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"46130","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":null,"created":"2021-12-24 09:39:38.122090","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58494000008","viewedAddress":"Новосибирск Забалуева 51","viewedArea":"54/34/7","priceStart":"3","priceCurrent":"3","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48564","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:25:22.605030","expiration":"2022-06-27 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-06-28 08:32:50.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"58494000009","viewedAddress":"Новосибирск Ивана Севастьянова 82","viewedArea":"51/31/5","priceStart":"5200","priceCurrent":"5200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"50514","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-20 14:52:21.691195","expiration":"2022-07-20 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-25 16:42:25.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58494000010","viewedAddress":"Новосибирск Забалуева 90","viewedArea":"23/12/3","priceStart":"2350","priceCurrent":2350,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125612","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"60579","assigned_by":{"UID":1594,"fullName":"Дергунова Наталья Валерьевна"},"contract":{"type":"Эксклюзив","created":"2022-03-18 15:53:51.872872","expiration":"2022-09-21 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 15:45:13.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58494000012","viewedAddress":"Новосибирск 1905 года 85","viewedArea":"45/28/7","priceStart":"6500","priceCurrent":"6500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017498479462069969","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123512","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"9053165","viewedAddress":"Новосибирск Чехова 111","viewedArea":"40/20/10","priceStart":"3400","priceCurrent":"3400","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68168","assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":"Эксклюзив","created":"2022-05-12 12:04:06.957475","expiration":"2022-12-31 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-16 13:07:20.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58737000000","viewedAddress":"Прокудское Строительная 36","viewedArea":"91/63/13","priceStart":"3700","priceCurrent":"3700","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017500875722008636","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274125708","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68240","assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":"Эксклюзив","created":"2022-05-12 15:18:29.936494","expiration":"2022-12-31 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-16 13:05:05.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58737000001","viewedAddress":"Новосибирск Почтовая 41","viewedArea":"83/49/26","priceStart":"3950","priceCurrent":3950,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274125972","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68701","assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":"Эксклюзив","created":"2022-05-16 15:50:17.809659","expiration":"2022-12-31 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-17 09:59:56.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58737000002","viewedAddress":"Новосибирск Коминтерна 66","viewedArea":"55/29/26","priceStart":"3300","priceCurrent":"3300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017500875722008638","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274125746","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"70986","assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":"Эксклюзив","created":"2022-06-02 11:41:21.697249","expiration":"2022-12-31 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-02 17:36:45.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58737000003","viewedAddress":"Новосибирск Ясный Берег 25","viewedArea":"35/18/9","priceStart":"4500","priceCurrent":"4500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/275033587","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"73143","assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":"Эксклюзив","created":"2022-06-16 13:45:03.076521","expiration":"2022-12-01 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-21 17:23:09.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58737000004","viewedAddress":"Новосибирск Громова 16","viewedArea":"45/31/6","priceStart":"4000","priceCurrent":"4000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/275033589","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"74341","assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":"Рекламный","created":"2022-06-23 18:23:49.670181","expiration":"2022-09-23 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-28 17:44:56.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58737000006","viewedAddress":"Морской сельсовет Приморский 149","viewedArea":"30/20/8","priceStart":"1650","priceCurrent":1650,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68656","assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":"Эксклюзив","created":"2022-05-16 13:57:31.287450","expiration":null,"moderation":"Отклонено","moderationDate":"2022-05-16 15:23:53.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58740000000","viewedAddress":"Новосибирск Кузьмы Минина 9","viewedArea":"18/8/6","priceStart":"6000","priceCurrent":"6000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68928","assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":"Рекламный","created":"2022-05-18 09:40:59.450579","expiration":"2022-08-18 00:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-18 12:28:23.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58740000002","viewedAddress":"Новосибирск Дмитрия Шмонина 10/2","viewedArea":"35/19/8","priceStart":"3500","priceCurrent":"3500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68982","assigned_by":{"UID":3849,"fullName":"Кралько Светлана Григорьевна"},"contract":{"type":"Рекламный","created":"2022-05-18 12:08:42.449968","expiration":"2022-08-18 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-18 13:38:26.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"58740000003","viewedAddress":"Новосибирск бронная 37/2с","viewedArea":"39/25/8","priceStart":"3300","priceCurrent":"3300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017500897022096983","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48231","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 12:04:21.109185","expiration":null,"moderation":"Отклонено","moderationDate":"2022-05-06 18:18:20.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53357000269","viewedAddress":"Новосибирск Горский 3","viewedArea":"54/32/9","priceStart":"4900","priceCurrent":"4900","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53446010944","viewedAddress":"Новосибирск Станционная 48","viewedArea":"61/1/1","priceStart":"2600","priceCurrent":"2600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Комната","typeName":"(Ком.)","reqNumber":"53554000082","viewedAddress":"Новосибирск Халтурина 43","viewedArea":"19/19/9","priceStart":"780","priceCurrent":"780","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Комната","typeName":"(Ком.)","reqNumber":"53554000201","viewedAddress":"Новосибирск Станционная 50","viewedArea":"18/13/4","priceStart":"600","priceCurrent":"600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000207","viewedAddress":"Новосибирск Невельского 61","viewedArea":"60/43/7","priceStart":"2790","priceCurrent":"2790","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000214","viewedAddress":"Новосибирск Троллейная 12","viewedArea":"31/16/4","priceStart":"2350","priceCurrent":"2350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34071","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-02-28 10:21:30.457427","expiration":"2022-09-11 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-09 13:25:19.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000285","viewedAddress":"Новосибирск микрорайон Горский 67","viewedArea":"42/22/11","priceStart":"4800","priceCurrent":4800,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/2070937012851826232","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/275011632","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000290","viewedAddress":"Новосибирск Забалуева 92","viewedArea":"24/16/4","priceStart":"2220","priceCurrent":"2220","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48283","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 13:12:55.694740","expiration":"2022-09-20 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-20 15:05:04.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53554000305","viewedAddress":"Толмачево Ватутина 9","viewedArea":"67/37/9","priceStart":"6100","priceCurrent":6150,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/2070937012851848335","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274698856","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48475","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 15:30:15.477524","expiration":"2022-12-28 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-25 14:21:04.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"53554000315","viewedAddress":"Новосибирск Немировича-Данченко 145","viewedArea":"42/16/16","priceStart":"5500","priceCurrent":5500,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/2070937012851849296","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125379","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48466","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 15:22:41.165142","expiration":"2022-08-13 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-25 15:11:49.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53554000316","viewedAddress":"Каменка Близкий микрорайон 783","viewedArea":"115/74/28","priceStart":"8460","priceCurrent":8500,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/2070937012851849328","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274124818","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"53527","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-31 16:47:20.556931","expiration":"2022-08-20 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-23 14:44:50.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000317","viewedAddress":"Новосибирск Виктора Уса 7","viewedArea":"20/14/2","priceStart":"2199","priceCurrent":2199,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"57065","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-02-24 15:57:07.677912","expiration":"2022-08-25 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 14:06:05.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53554000322","viewedAddress":"Лепокурово Центральная 29","viewedArea":"102/60/12","priceStart":"480","priceCurrent":"480","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/275223990","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"60464","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":"2022-03-17 17:45:01.978095","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53554000325","viewedAddress":"Новосибирск Мира 73","viewedArea":"40/20/5","priceStart":"1000","priceCurrent":"1000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"60915","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-03-21 18:22:13.500087","expiration":"2022-06-21 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-06-27 08:04:39.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000327","viewedAddress":"Новосибирск Петровского 7","viewedArea":"39/18/8","priceStart":"2800","priceCurrent":"2800","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"62111","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-03-28 16:36:53.426464","expiration":"2022-08-28 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 17:24:44.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"53554000328","viewedAddress":"Новосибирск Сталинградской Битвы 15","viewedArea":"271/150/40","priceStart":"5500","priceCurrent":5500,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274532666","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"62537","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":"2022-03-30 16:31:15.946614","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000329","viewedAddress":"Новосибирск Бетонная 13","viewedArea":"55/34/7","priceStart":"4050","priceCurrent":"4050","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"64864","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-04-15 14:28:50.565803","expiration":"2022-08-10 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-15 17:17:22.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53554000330","viewedAddress":"Светлый СНТ Онега 11","viewedArea":"12.00","priceStart":"290","priceCurrent":"290","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017367024191850554","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274124230","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"66353","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-04-26 13:29:09.901250","expiration":"2022-07-26 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-28 11:00:08.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000331","viewedAddress":"Новосибирск Титова 232/3","viewedArea":"26/17/3","priceStart":"3600","priceCurrent":"3600","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017367024191850555","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124621","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"66366","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-04-26 13:57:34.711500","expiration":"2022-07-26 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-28 15:53:36.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000331","viewedAddress":"Новосибирск Титова 232/3","viewedArea":"26/17/3","priceStart":"3600","priceCurrent":"3600","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017367024191850555","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124621","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"66399","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-04-26 15:35:22.651516","expiration":"2022-07-26 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-28 16:36:54.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"53554000332","viewedAddress":"Новосибирск Титова 82","viewedArea":"83/52/14","priceStart":"8200","priceCurrent":"8200","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017367024191850556","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124634","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"67975","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-05-11 13:01:50.097079","expiration":"2022-08-11 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-12 13:57:14.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000334","viewedAddress":"Новосибирск Плахотного 72","viewedArea":"32/17/7","priceStart":"3300","priceCurrent":3300,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125481","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"67975","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-05-11 13:01:50.097079","expiration":"2022-08-11 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-12 13:57:14.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000334","viewedAddress":"Новосибирск Плахотного 72","viewedArea":"32/17/7","priceStart":"3300","priceCurrent":3300,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274698859","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68029","assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-05-11 14:57:15.670297","expiration":"2022-08-11 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-11 15:20:29.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000335","viewedAddress":"Новосибирск Фасадная 21","viewedArea":"44/32/6","priceStart":"3500","priceCurrent":3500,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274395382","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"56106000059","viewedAddress":"Каменка Олимпийской Славы микрорайон 16б","viewedArea":"20/10/3","priceStart":"1280","priceCurrent":"1280","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"56106000117","viewedAddress":"Марусино Тропинина 2","viewedArea":"9.00","priceStart":"1550","priceCurrent":"1550","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"56195000260","viewedAddress":"Новосибирск Титова 253/5","viewedArea":"42/18/12","priceStart":"2860","priceCurrent":"2860","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"56700001826","viewedAddress":"Новосибирск Горский 67","viewedArea":"84/47/10","priceStart":"6600","priceCurrent":"6600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":185,"fullName":"Крижановская Татьяна Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57936000193","viewedAddress":"Новосибирск Титова 257","viewedArea":"33/20/9","priceStart":"2870","priceCurrent":"2870","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"57635","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-02-28 13:50:27.180709","expiration":"2022-08-24 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-24 12:58:16.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53554000323","viewedAddress":"Новосибирск Титова 257/2","viewedArea":"33/17/9","priceStart":"3550","priceCurrent":"3550","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017367024191850526","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270716924","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48559","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":null,"created":"2022-01-14 16:19:47.696521","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54172000022","viewedAddress":"Новосибирск Юргинская 1-я 27","viewedArea":"76/0/15","priceStart":"3650","priceCurrent":"3650","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34075","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":null,"created":"2022-02-28 10:23:20.907363","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54172000230","viewedAddress":"Новосибирск Рионская 27","viewedArea":"86/61/11","priceStart":"6300","priceCurrent":6300,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34078","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-02-28 10:24:00.847297","expiration":"2022-05-17 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-24 13:07:52.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"54172000235","viewedAddress":"Ленинское Андреева 82","viewedArea":"200/150/20","priceStart":"3780","priceCurrent":"3780","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54172000238","viewedAddress":"Новосибирск Олекминская 10","viewedArea":"62/35/7","priceStart":"5490","priceCurrent":"5490","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54172000243","viewedAddress":"Кудряшовский сельсовет Ягодная 27","viewedArea":"45/20/9","priceStart":"700","priceCurrent":"700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000244","viewedAddress":"Криводановка Зеленая 16","viewedArea":"67/28/11","priceStart":"2470","priceCurrent":"2470","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48571","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:31:40.493233","expiration":"2022-09-03 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 16:48:53.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"54172000248","viewedAddress":"Рыбачий улица 8 402","viewedArea":"82/50/6","priceStart":"3000","priceCurrent":"3000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081399","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270687241","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48578","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:37:58.071204","expiration":"2022-08-25 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-26 12:33:22.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000255","viewedAddress":"Новосибирск Заречная 41","viewedArea":"41/15/13","priceStart":"4200","priceCurrent":"4200","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081427","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270687725","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48600","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:51:55.045622","expiration":"2022-06-14 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-06-16 07:57:07.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"54172000259","viewedAddress":"Клевер Алферова 88","viewedArea":"6.75","priceStart":"580","priceCurrent":"580","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"50124","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-19 11:29:12.375723","expiration":"2022-04-19 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:37:38.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000261","viewedAddress":"Новосибирск Танкистов 11","viewedArea":"62/44/7","priceStart":"4400","priceCurrent":"4400","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"52878","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-01-28 16:58:13.711724","expiration":"2022-04-28 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:39:26.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"54172000262","viewedAddress":"Новосибирск Янтарная 38","viewedArea":"137/45/20","priceStart":"5500","priceCurrent":"5500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000263","viewedAddress":"Новосибирск Ленина 30/1","viewedArea":"56/43/5","priceStart":"6999","priceCurrent":"6999","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081456","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270688789","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"56191","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-02-17 18:43:27.111381","expiration":"2022-09-03 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-03 13:56:47.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000264","viewedAddress":"Новосибирск Амурская 65/1","viewedArea":"42/26/7","priceStart":"3300","priceCurrent":"3300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081457","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270689161","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"59796","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-03-14 14:14:19.489734","expiration":"2022-09-15 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-15 17:12:27.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000267","viewedAddress":"Новосибирск Южная 40/3","viewedArea":"31/17/6","priceStart":"2800","priceCurrent":"2800","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081460","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/271279415","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"62354","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":null,"created":"2022-03-29 16:18:54.985981","expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"54172000269","viewedAddress":"Ярковский сельсовет Рябиновая 14","viewedArea":"10.00","priceStart":"350","priceCurrent":"350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"62478","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-03-30 14:01:11.164416","expiration":"2022-09-12 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-12 15:29:16.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"54172000270","viewedAddress":"Морской сельсовет Металлург 90","viewedArea":"6.00","priceStart":"400","priceCurrent":"400","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081484","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274124117","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"64546","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":null,"created":"2022-04-13 13:36:51.802315","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000271","viewedAddress":"Новосибирск Степная 41","viewedArea":"45/28/6","priceStart":"4100","priceCurrent":"4100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081485","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124125","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"65158","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-04-18 16:35:05.163433","expiration":"2022-08-19 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-20 10:06:00.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"54172000272","viewedAddress":"Улыбино Братьев Весниных 5","viewedArea":"30/20/8","priceStart":"700","priceCurrent":"700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"66327","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-04-26 12:47:36.229428","expiration":"2022-07-26 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-29 09:54:48.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000273","viewedAddress":"Новосибирск Спортивная 17","viewedArea":"37/16/10","priceStart":"3800","priceCurrent":"3800","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081487","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124702","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68023","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-05-11 14:36:39.124672","expiration":"2022-08-13 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-13 17:17:43.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"54172000275","viewedAddress":"Новосибирск Забалуева 84/8","viewedArea":"27/15/5","priceStart":"3000","priceCurrent":"3000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081489","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"69138","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-05-19 09:46:02.034252","expiration":"2022-08-19 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-19 12:26:36.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000276","viewedAddress":"Новосибирск Ленинградская 143","viewedArea":"60/40/6","priceStart":"5100","priceCurrent":"5100","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081490","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274125837","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"71274","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-06-03 14:04:18.587378","expiration":"2022-09-03 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-03 14:49:37.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000277","viewedAddress":"Новосибирск Николая Грицюка 1/4","viewedArea":"21/18/5","priceStart":"1800","priceCurrent":"1800","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081491","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274303121","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"72639","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-06-14 11:04:57.930278","expiration":"2022-09-14 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-14 12:12:45.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54172000278","viewedAddress":"Новосибирск Степная 63","viewedArea":"60/40/7","priceStart":"4600","priceCurrent":"4600","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017390105500081492","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274773976","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"72666","assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":"Эксклюзив","created":"2022-06-14 11:46:56.413350","expiration":null,"moderation":"Отклонено","moderationDate":"2022-06-16 16:53:58.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"54172000279","viewedAddress":"Колывань Северный объезд - СНТ  337","viewedArea":"12.00","priceStart":"300","priceCurrent":"300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1658,"fullName":"Андрухова Евгения Викторовна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"56330001076","viewedAddress":"Краснообск 6-й микрорайон 51","viewedArea":"129/1/1","priceStart":"8000","priceCurrent":"8000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"44048","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":null,"created":"2022-01-14 12:55:58.704904","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"58514000001","viewedAddress":"СНТ Юбилей Южная 344","viewedArea":"20/15/3","priceStart":"550","priceCurrent":"550","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"46462","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 12:52:43.745077","expiration":"2022-05-14 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-13 15:26:24.000000"},"type":"Комната","typeName":"(Ком.)","reqNumber":"58514000007","viewedAddress":"Новосибирск Петропавловская 1","viewedArea":"23/22/0","priceStart":"1500","priceCurrent":"1500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"46469","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":null,"created":"2022-01-14 17:07:26.092505","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"58514000009","viewedAddress":"Дружный Озерная 11","viewedArea":"39/30/6","priceStart":"550","priceCurrent":"550","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"51678","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":null,"created":"2022-01-25 14:11:34.213403","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000010","viewedAddress":"Новосибирск Титова 11","viewedArea":"29/18/6","priceStart":"3100","priceCurrent":"3100","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"44729","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 17:08:30.583323","expiration":"2022-11-26 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-20 11:38:06.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000013","viewedAddress":"Новосибирск Серафимовича 3","viewedArea":"36/16/6","priceStart":"2500","priceCurrent":"2500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194523","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270687740","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"46154","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 17:09:23.182668","expiration":"2022-12-31 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-07 16:13:25.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000014","viewedAddress":"Новосибирск Якушева 39","viewedArea":"32/21/5","priceStart":"3700","priceCurrent":"3700","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194524","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270687741","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48331","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":null,"created":"2022-01-14 13:43:22.867468","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"58514000017","viewedAddress":"Толмачевский сельсовет Зелёная 196","viewedArea":"50/40/9","priceStart":"500","priceCurrent":"500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48601","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Рекламный","created":"2022-01-14 16:52:16.616531","expiration":"2022-07-28 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-28 17:53:00.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000018","viewedAddress":"Новосибирск Римского-Корсакова 1-й 3","viewedArea":"30/20/6","priceStart":"4800","priceCurrent":"4800","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194528","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123381","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48250","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":null,"created":"2022-01-14 12:32:56.425599","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000019","viewedAddress":"Новосибирск Якушева 39","viewedArea":"33/24/5","priceStart":"4000","priceCurrent":"4000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48618","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Рекламный","created":"2022-01-14 17:01:32.168763","expiration":null,"moderation":"Отклонено","moderationDate":"2022-06-28 11:31:46.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000020","viewedAddress":"Новосибирск Костычева 38","viewedArea":"29/20/5","priceStart":"3500","priceCurrent":"3500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48629","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":null,"created":"2022-01-14 17:11:49.208209","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000022","viewedAddress":"Новосибирск Серафимовича 13","viewedArea":"52/41/6","priceStart":"3300","priceCurrent":3300,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48645","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":null,"created":"2022-01-14 17:18:11.070313","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"58514000024","viewedAddress":"СНТ Юбилей Южная 721","viewedArea":"65/43/9","priceStart":"2700","priceCurrent":"2700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"44726","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-03 13:56:30.107460","expiration":"2022-06-23 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-28 12:48:05.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000025","viewedAddress":"Новосибирск Серафимовича 3","viewedArea":"51/36/7","priceStart":"3650","priceCurrent":"3650","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194556","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270688058","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48653","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Рекламный","created":"2022-01-14 17:26:14.360795","expiration":"2022-07-28 00:00:00.000000","moderation":"Отклонено","moderationDate":"2022-04-28 17:42:33.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000026","viewedAddress":"Новосибирск Котовского 48","viewedArea":"31/17/5","priceStart":"4200","priceCurrent":"4200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48385","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":null,"created":"2022-01-14 14:20:56.504884","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000027","viewedAddress":"Новосибирск Серафимовича 8","viewedArea":"58/45/7","priceStart":"8500","priceCurrent":"8500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48658","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Рекламный","created":"2022-01-14 17:31:31.835634","expiration":"2022-04-22 16:56:11.000000","moderation":"Отклонено","moderationDate":"2022-05-05 14:31:55.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000028","viewedAddress":"Новосибирск Котовского 48","viewedArea":"62/43/6","priceStart":"5300","priceCurrent":"5300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194559","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270688088","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"52947","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-01-29 11:44:28.799852","expiration":"2022-07-29 12:00:00.000000","moderation":null,"moderationDate":"2022-06-28 09:39:38.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000033","viewedAddress":"Новосибирск Солидарности 99а","viewedArea":"59/39/7","priceStart":"3800","priceCurrent":"3800","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194585","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270688756","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"59863","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":null,"created":"2022-03-14 16:42:01.765959","expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"58514000034","viewedAddress":"Толмачевский сельсовет Луговая 637","viewedArea":"48/36/6","priceStart":"750000","priceCurrent":"750000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"60568","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-03-18 14:41:45.968545","expiration":"2022-09-01 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 15:44:53.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000035","viewedAddress":"Новосибирск Виталия Потылицына 13","viewedArea":"41/20/11","priceStart":"3500","priceCurrent":"3500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194587","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123503","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"62041","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-03-28 13:47:37.870653","expiration":"2022-09-01 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 17:19:57.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58514000036","viewedAddress":"Толмачевский сельсовет Светлая 496","viewedArea":"50/40/9","priceStart":"1450","priceCurrent":"1450","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194588","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274123661","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"66770","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-04-28 14:15:48.378853","expiration":"2022-10-28 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-28 17:26:59.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000037","viewedAddress":"Новосибирск Покатная 55","viewedArea":"36/15/9","priceStart":"4700","priceCurrent":"4700","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194589","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124645","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"66818","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-04-28 16:23:46.493081","expiration":null,"moderation":"Отклонено","moderationDate":"2022-04-28 16:43:56.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58514000038","viewedAddress":"Новосибирск Немировича-Данченко 4","viewedArea":"45/26/6","priceStart":"4000","priceCurrent":"4000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"72222","assigned_by":{"UID":3379,"fullName":"Шейн Яна Юрьевна"},"contract":{"type":"Эксклюзив","created":"2022-06-09 10:28:08.534507","expiration":"2022-12-09 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-09 14:26:12.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58514000039","viewedAddress":"Толмачевский сельсовет Светлая 414","viewedArea":"42/35/6","priceStart":"1300","priceCurrent":"1300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017499112252194591","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274532683","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000135","viewedAddress":"Криводановка Микрорайон 10","viewedArea":"44/30/5","priceStart":"1650","priceCurrent":"1650","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48195","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 10:50:44.837718","expiration":"2022-08-14 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-21 16:33:36.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000157","viewedAddress":"Новосибирск Чемская 12","viewedArea":"59/40/7","priceStart":"4000","priceCurrent":"4000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/275011633","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000160","viewedAddress":"Криводановка Микрорайон 8б","viewedArea":"19/10/1","priceStart":"850","priceCurrent":"850","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"57134","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-24 17:21:23.780649","expiration":"2022-12-25 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-25 14:37:34.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000190","viewedAddress":"Новосибирск Спортивная 23","viewedArea":"37/18/8","priceStart":"3500","priceCurrent":3500,"priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274772558","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"50667000192","viewedAddress":"Новосибирск СНТ Печатник 108а","viewedArea":"846.00","priceStart":"340","priceCurrent":"340","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48197","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-13 10:06:05.800265","expiration":"2022-04-14 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:28:06.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"50667000194","viewedAddress":"Обь Октябрьская 2/2","viewedArea":"241/150/25","priceStart":"11200","priceCurrent":"11200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34093","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-28 10:27:48.218028","expiration":"2022-05-17 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:29:20.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000199","viewedAddress":"Криводановка Зеленая 16","viewedArea":"84/47/13","priceStart":"3200","priceCurrent":3250,"priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34096","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-28 10:28:29.073745","expiration":"2023-06-06 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-06 17:50:30.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"50667000203","viewedAddress":"Новосибирск Больничный 14а","viewedArea":"47/30/6","priceStart":"2380","priceCurrent":"2380","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017288588391530085","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274772559","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48198","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-13 10:09:05.910701","expiration":"2022-06-07 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-06-06 16:34:36.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"50667000203","viewedAddress":"Новосибирск Больничный 14а","viewedArea":"47/30/6","priceStart":"2380","priceCurrent":"2380","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017288588391530085","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274772559","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"50667000213","viewedAddress":"Тулинский Садовая 12а","viewedArea":"36/16/4","priceStart":"550","priceCurrent":"550","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48182","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":null,"created":"2022-02-13 09:44:20.594485","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000226","viewedAddress":"Бердск Бердский санаторий 48","viewedArea":"47/22/12","priceStart":"4840","priceCurrent":"4840","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"53351","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-01-31 11:36:00.736689","expiration":"2022-12-30 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-20 11:15:06.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000229","viewedAddress":"Новосибирск Владимировская 14","viewedArea":"45/33/6","priceStart":"3930","priceCurrent":"3930","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"54719","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-07 13:00:22.096834","expiration":"2023-02-07 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 10:59:57.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000230","viewedAddress":"Новосибирск Зорге 267","viewedArea":"61/23/7","priceStart":"4400","priceCurrent":"4400","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017288588391530175","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274772564","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"56493","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-24 11:38:42.750731","expiration":"2022-08-24 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 13:15:34.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000231","viewedAddress":"Новосибирск Петухова 104А","viewedArea":"73/30/25","priceStart":"9000","priceCurrent":"9000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017288588391530176","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274772566","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"57112","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-02-24 16:39:09.224314","expiration":"2023-02-24 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 13:45:06.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"50667000232","viewedAddress":"Эко-городок Центральная 59","viewedArea":"11.00","priceStart":"170","priceCurrent":"170","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017288588391530177","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274772567","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"67998","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-05-11 13:40:22.585565","expiration":"2022-08-11 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-11 14:27:54.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000234","viewedAddress":"Новосибирск Колхидская 6","viewedArea":"36/12/17","priceStart":"3800","priceCurrent":"3800","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274772615","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"70218","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-05-27 12:57:02.581515","expiration":"2023-05-27 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-27 14:56:44.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000235","viewedAddress":"Красный Яр Красный Яр 23","viewedArea":"45/32/6","priceStart":"2250","priceCurrent":"2250","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017288588391530180","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274772622","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"73312","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-06-17 11:37:22.782627","expiration":"2023-06-17 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-17 12:42:07.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000237","viewedAddress":"Новосибирск Мичурина 37а","viewedArea":"44/31/6","priceStart":"5000","priceCurrent":"5000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017288588391530182","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/275011627","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"53680000118","viewedAddress":"Новосибирск Петухова 150","viewedArea":"43/18/13","priceStart":"2650","priceCurrent":"2650","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"66893","assigned_by":{"UID":1595,"fullName":"Сорокина Ирина Владимировна"},"contract":{"type":"Эксклюзив","created":"2022-04-29 11:12:25.864008","expiration":"2022-08-16 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-16 17:25:20.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"57926000089","viewedAddress":"Новосибирск 19-я 329","viewedArea":"43/30/6","priceStart":"1500","priceCurrent":"1500","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017476113481805312","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274772618","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57412000015","viewedAddress":"Новосибирск Дачная 5","viewedArea":"61/38/1","priceStart":"5000","priceCurrent":"5000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57412000016","viewedAddress":"Новосибирск Дачная 5","viewedArea":"68/38/1","priceStart":"5600","priceCurrent":"5600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Гараж","typeName":"(Г.)","reqNumber":"58254000012","viewedAddress":"Новосибирск Дачная 5","viewedArea":"14/0/0","priceStart":"650050","priceCurrent":"650050","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Гараж","typeName":"(Г.)","reqNumber":"58254000016","viewedAddress":"Новосибирск Дачная 5","viewedArea":"14/0/0","priceStart":"650350","priceCurrent":"650350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Гараж","typeName":"(Г.)","reqNumber":"58254000021","viewedAddress":"Новосибирск Дачная 5","viewedArea":"14/0/0","priceStart":"618500","priceCurrent":"618500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Гараж","typeName":"(Г.)","reqNumber":"58254000024","viewedAddress":"Новосибирск Дачная 5","viewedArea":"17/0/0","priceStart":"700000","priceCurrent":"700000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Гараж","typeName":"(Г.)","reqNumber":"58254000038","viewedAddress":"Новосибирск Дачная 5","viewedArea":"27/0/0","priceStart":"740600","priceCurrent":"740600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Гараж","typeName":"(Г.)","reqNumber":"58254000040","viewedAddress":"Новосибирск Дачная 5","viewedArea":"13/0/0","priceStart":"777","priceCurrent":"777","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Гараж","typeName":"(Г.)","reqNumber":"58254000047","viewedAddress":"Новосибирск Дачная 5","viewedArea":"14/0/0","priceStart":"666","priceCurrent":"666","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Гараж","typeName":"(Г.)","reqNumber":"58254000054","viewedAddress":"Новосибирск Дачная 5","viewedArea":"27/0/0","priceStart":"780000","priceCurrent":"780000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2015,"fullName":"Тадевосян Гайк Андраникович"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58254000066","viewedAddress":"Новосибирск Дачная 5","viewedArea":"35/19/7","priceStart":"3450","priceCurrent":"3450","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":54,"fullName":"Винник Наталья Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"264000078","viewedAddress":"Новосибирск Зорге 98","viewedArea":"37/20/1","priceStart":"3000","priceCurrent":"3000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":54,"fullName":"Винник Наталья Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"56700002371","viewedAddress":"Новосибирск Титова 253/7","viewedArea":"43/17/9","priceStart":"2350","priceCurrent":"2350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":54,"fullName":"Винник Наталья Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"57847000077","viewedAddress":"Новосибирск Титова 253","viewedArea":"24/20/1","priceStart":"1300","priceCurrent":"1300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":54,"fullName":"Винник Наталья Александровна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"57936000254","viewedAddress":"Новосибирск Титова 253","viewedArea":"38/15/10","priceStart":"1930","priceCurrent":"1930","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"952492","viewedAddress":"Октябрьский Дачная *","viewedArea":"157/115/15","priceStart":"3600","priceCurrent":"3600","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34126","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-04-19 16:32:10.312644","expiration":"2022-12-30 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-20 15:26:04.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"9014022","viewedAddress":"Кудряшовский Октябрьская 12","viewedArea":"58/39/7","priceStart":"3700","priceCurrent":"3700","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"1440001552","viewedAddress":"Криводановка Зеленая 16","viewedArea":"70/35/11","priceStart":"2405","priceCurrent":"2405","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"1496000278","viewedAddress":"Новосибирск Вишневая 8","viewedArea":"400/200/18","priceStart":"21900","priceCurrent":"21900","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"50667000210","viewedAddress":"Криводановка Зеленая 16","viewedArea":"62/28/9","priceStart":"2500","priceCurrent":"2500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"51803001239","viewedAddress":"Криводановка Зеленая 214","viewedArea":"46/15/15","priceStart":"1466","priceCurrent":"1466","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"51803003625","viewedAddress":"Куйбышев 8-й 9","viewedArea":"43/34/6","priceStart":"1400","priceCurrent":"1400","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"52500003131","viewedAddress":"Чернаково Приморская 5","viewedArea":"75/0/0","priceStart":"2000","priceCurrent":"2000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"52890000240","viewedAddress":"Марусино Первомайский 4","viewedArea":"42/22/7","priceStart":"2500","priceCurrent":"2500","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53388002482","viewedAddress":"Рыбачий Ветеранов 1","viewedArea":"40/0/0","priceStart":"700","priceCurrent":"700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53388002697","viewedAddress":"Рыбачий Ветеранов 1","viewedArea":"9.00","priceStart":"300","priceCurrent":"300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53388002854","viewedAddress":"Мошково Березовая 1","viewedArea":"10.00","priceStart":"750","priceCurrent":"750","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"53446005145","viewedAddress":"Ордынское Центральная *","viewedArea":"7.00","priceStart":"430","priceCurrent":"430","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"53446005707","viewedAddress":"Новосибирск Тульская *","viewedArea":"20/0/0","priceStart":"950","priceCurrent":"950","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54259005982","viewedAddress":"Краснообск 2-й 1","viewedArea":"240/0/0","priceStart":"6000","priceCurrent":"6000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54737000113","viewedAddress":"Новосибирск Сибиряков-Гвардейцев 44/7","viewedArea":"43/16/10","priceStart":"3150","priceCurrent":"3150","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48637","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":"2022-01-14 17:14:21.670238","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54737000138","viewedAddress":"Криводановка Зеленая 16","viewedArea":"59/28/10","priceStart":"2400","priceCurrent":"2400","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54889000036","viewedAddress":"Колывань Приходская 78","viewedArea":"42/25/9","priceStart":"550","priceCurrent":"550","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54889000048","viewedAddress":"Новосибирск Сиреневая 19","viewedArea":"30/15/6","priceStart":"380","priceCurrent":"380","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54889000050","viewedAddress":"Новосибирск Балластный 1-й 1","viewedArea":"61/30/9","priceStart":"3730","priceCurrent":"3730","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54889000052","viewedAddress":"Пролетарский Ширяева 13","viewedArea":"43/25/8","priceStart":"450","priceCurrent":"450","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54889000071","viewedAddress":"Новосибирск Тулинское заречье 127","viewedArea":"150/90/10","priceStart":"3900","priceCurrent":"3900","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"54889000072","viewedAddress":"Ордынское Революции 74","viewedArea":"63/50/7","priceStart":"1990","priceCurrent":"1990","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54889000076","viewedAddress":"Новосибирск Тулинское заречье 127","viewedArea":"94/65/12","priceStart":"2300","priceCurrent":"2300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54889000084","viewedAddress":"Новый Шарап Говорухина 27","viewedArea":"170/60/12","priceStart":"3800","priceCurrent":"3800","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54889000087","viewedAddress":"Новосибирск Ягодинская 46/1","viewedArea":"45/30/8","priceStart":"2200","priceCurrent":"2200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54889000100","viewedAddress":"Марусино Славянская 7","viewedArea":"105/99/12","priceStart":"3300","priceCurrent":"3300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"54889000102","viewedAddress":"СНТ Сосна СНТ Сосна 104","viewedArea":"90/80/12","priceStart":"3660","priceCurrent":"3660","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"54932000760","viewedAddress":"Ярково Береговая 1","viewedArea":"10.00","priceStart":"235","priceCurrent":"235","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"55096000260","viewedAddress":"Новосибирск Связистов 154","viewedArea":"40/20/10","priceStart":"3300","priceCurrent":"3300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"55341000003","viewedAddress":"Рыбачий Ветеранов 4","viewedArea":"35/0/0","priceStart":"650","priceCurrent":"650","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"55341000099","viewedAddress":"Чаны Ломоносова 3","viewedArea":"50/36/9","priceStart":"400","priceCurrent":"400","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"55341000123","viewedAddress":"Новосибирск Титова 39","viewedArea":"44/31/5","priceStart":"2560","priceCurrent":"2560","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34088","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 13:18:51.662910","expiration":"2022-12-27 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-27 10:57:16.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"55341000164","viewedAddress":"Новосибирск Ветеран-1 28","viewedArea":"7.13","priceStart":"300","priceCurrent":"300","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017418167478970035","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270686936","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"55341000166","viewedAddress":"Майский Майский 755","viewedArea":"6360.00","priceStart":"740","priceCurrent":"740","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017418167478970037","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270687396","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"55599002978","viewedAddress":"Новосибирск Титова 253/3","viewedArea":"42/1/1","priceStart":"3400","priceCurrent":"3400","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Комната","typeName":"(Ком.)","reqNumber":"56700002132","viewedAddress":"Новосибирск Забалуева 74","viewedArea":"20/1/1","priceStart":"850","priceCurrent":"850","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"56700002313","viewedAddress":"Новосибирск Титова 252/2","viewedArea":"43/17/14","priceStart":"3300","priceCurrent":"3300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"57036001340","viewedAddress":"Новосибирск Титова 236/2","viewedArea":"55/31/9","priceStart":"4700","priceCurrent":"4700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48275","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Рекламный","created":"2022-01-14 13:04:40.496173","expiration":"2022-06-27 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 15:51:00.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000003","viewedAddress":"Новосибирск Вертковская 40","viewedArea":"55/29/10","priceStart":"4400","priceCurrent":"4400","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447345939","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274123271","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34117","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":"2022-05-20 10:47:13.021647","expiration":null,"moderation":null,"moderationDate":null},"type":"Комната","typeName":"(Ком.)","reqNumber":"58043000004","viewedAddress":"Новосибирск Титова 34","viewedArea":"82/10/4","priceStart":"850","priceCurrent":"850","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"58043000009","viewedAddress":"Новосибирск Римского-Корсакова 46","viewedArea":"284/104/19","priceStart":"18000","priceCurrent":"18000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48338","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 13:46:06.712887","expiration":"2022-11-18 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-16 16:24:49.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"58043000018","viewedAddress":"Пичугово море Южный бриз 8","viewedArea":"15.00","priceStart":"960","priceCurrent":"960","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447345975","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270686698","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000024","viewedAddress":"Мошково Западная 15","viewedArea":"58/39/8","priceStart":"1220","priceCurrent":"1220","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000027","viewedAddress":"Новосибирск Немировича-Данченко 24/3","viewedArea":"45/31/6","priceStart":"2900","priceCurrent":"2900","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"58043000029","viewedAddress":"Ордынское Вишневая 70","viewedArea":"130/90/20","priceStart":"2180","priceCurrent":"2180","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34125","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":"2022-06-09 10:30:28.510600","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000031","viewedAddress":"Верх-Тула Жилмассив 12","viewedArea":"64/39/12","priceStart":"3350","priceCurrent":"3350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000040","viewedAddress":"Криводановка Зеленая 16","viewedArea":"41/14/12","priceStart":"1710","priceCurrent":"1710","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48549","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":"2022-01-14 16:16:05.800805","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000050","viewedAddress":"Новосибирск Вертковская 37","viewedArea":"39/17/6","priceStart":"2950","priceCurrent":"2950","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000055","viewedAddress":"Барабинск Аэропорт 5","viewedArea":"33/22/10","priceStart":"850","priceCurrent":"850","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48644","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":"2022-01-14 17:17:55.195290","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000057","viewedAddress":"Криводановка Зеленая 16","viewedArea":"61/30/12","priceStart":"2170","priceCurrent":"2170","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"58043000058","viewedAddress":"Ленинское Морское 70","viewedArea":"10.00","priceStart":"2180","priceCurrent":"2180","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48570","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:31:38.680600","expiration":"2023-04-24 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 17:40:45.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"58043000059","viewedAddress":"Ленинское СНТ Морское 70","viewedArea":"10.00","priceStart":"3270","priceCurrent":"3270","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346100","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/274123346","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"58043000060","viewedAddress":"Новосибирск 2-я Гэсстроевская 8","viewedArea":"145/0/0","priceStart":"4700","priceCurrent":"4700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Дом","typeName":"(Д.)","reqNumber":"58043000063","viewedAddress":"Новосибирск Амурский 1-й 21","viewedArea":"89/0/0","priceStart":"5800","priceCurrent":"5800","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000067","viewedAddress":"Новосибирск Пархоменко 14А","viewedArea":"95/67/9","priceStart":"5200","priceCurrent":"5200","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48521","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 15:59:31.641655","expiration":"2022-11-16 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-16 13:32:45.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58043000068","viewedAddress":"Новосибирск Бийская 44","viewedArea":"118/100/12","priceStart":"8520","priceCurrent":"8520","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346130","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270687679","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000071","viewedAddress":"Новосибирск Немировича-Данченко 30/1","viewedArea":"33/16/6","priceStart":"2990","priceCurrent":"2990","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48648","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 17:21:13.402258","expiration":"2022-08-31 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-30 16:07:59.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000075","viewedAddress":"Криводановка Зеленая 16","viewedArea":"84/46/13","priceStart":"3100","priceCurrent":"3100","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346158","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270687732","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48529","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:04:15.773699","expiration":"2022-08-16 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-16 12:00:47.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000076","viewedAddress":"Новосибирск Филатова 12","viewedArea":"62/48/7","priceStart":"3990","priceCurrent":"3990","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346159","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/270687964","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"53920","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-02-01 17:48:33.442160","expiration":"2023-01-31 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 10:45:12.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"58043000081","viewedAddress":"СНТ Клевер Ландау 1935","viewedArea":"8.30","priceStart":"2000","priceCurrent":"2000","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346185","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270688824","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"54697","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":"2022-02-07 11:55:06.336085","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000082","viewedAddress":"Криводановка Зелёная 16","viewedArea":"42/15/15","priceStart":"1850","priceCurrent":"1850","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"55177","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-02-10 10:11:21.970721","expiration":"2022-08-10 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-26 11:27:55.000000"},"type":"Земельный участок","typeName":"(Уч.)","reqNumber":"58043000083","viewedAddress":"Клевер Ландау 1","viewedArea":"8.34","priceStart":"670","priceCurrent":"670","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346187","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/suburban/270688941","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"59229","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-03-10 15:26:22.373697","expiration":"2022-04-15 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-05 14:52:24.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000088","viewedAddress":"Криводановка Зелёная 16","viewedArea":"66/34/11","priceStart":"2390","priceCurrent":"2390","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000089","viewedAddress":"Кудряшовский Октябрьская 12","viewedArea":"58/39/7","priceStart":"3700","priceCurrent":"3700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"63434","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-04-05 15:09:17.976565","expiration":"2023-04-04 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 09:32:35.000000"},"type":"Гараж","typeName":"(Г.)","reqNumber":"58043000092","viewedAddress":"Новосибирск Дачная 5","viewedArea":"14/0/0","priceStart":"670","priceCurrent":"670","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346217","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/commercial/274123923","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"63507","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-04-06 09:33:28.169161","expiration":"2023-04-07 12:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 10:12:06.000000"},"type":"Гараж","typeName":"(Г.)","reqNumber":"58043000094","viewedAddress":"Новосибирск Дачная 5","viewedArea":"16/0/0","priceStart":"700","priceCurrent":"700","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346219","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/commercial/275112658","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"65339","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-04-19 14:19:05.948758","expiration":"2022-10-25 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-25 12:44:23.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000095","viewedAddress":"Криводановка Зелёная 16","viewedArea":"42/15/16","priceStart":"2150","priceCurrent":"2150","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346220","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124457","status":"Ошибка","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"65731","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-04-21 15:22:40.973386","expiration":"2022-10-21 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-04-22 05:40:53.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000107","viewedAddress":"Новосибирск Пархоменко 124","viewedArea":"59/39/8","priceStart":"4450","priceCurrent":"4450","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274124416","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"68997","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-05-18 13:25:18.628487","expiration":"2022-11-18 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-18 14:57:54.000000"},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"58043000108","viewedAddress":"Новосибирск Титова 82","viewedArea":"29/16/6","priceStart":"3690","priceCurrent":"3690","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346905","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"70080","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-05-26 14:01:06.098369","expiration":"2022-11-30 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-05-31 11:08:19.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000109","viewedAddress":"Криводановка Зелёная 16","viewedArea":"66/34/11","priceStart":"2600","priceCurrent":"2600","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346906","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274126330","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"71855","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-06-07 14:57:41.741593","expiration":"2022-12-06 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-07 15:38:08.000000"},"type":"Дом","typeName":"(Д.)","reqNumber":"58043000110","viewedAddress":"Новосибирск Степная 215","viewedArea":"373/350/22","priceStart":"7000","priceCurrent":"7000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"72775","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-06-14 15:31:11.176848","expiration":"2022-12-14 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-14 17:52:27.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000111","viewedAddress":"Толмачёво квартал Форда 3","viewedArea":"84/52/12","priceStart":"6800","priceCurrent":"6800","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346929","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274744864","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"73466","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-06-18 12:47:57.473782","expiration":"2022-09-18 00:00:00.000000","moderation":"Подтверждено","moderationDate":"2022-06-19 18:49:02.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58043000112","viewedAddress":"Новосибирск Филатова 11","viewedArea":"32/17/7","priceStart":"2950","priceCurrent":"2950","priceTrend":0,"advStatus":"К размещению","platformStats":[{"name":"Yandex","url":"https://realty.yandex.ru/offer/6017494929447346930","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":"https://www.cian.ru/sale/flat/274986070","status":"Опубликовано","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48297","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Рекламный","created":"2022-01-14 13:24:32.257362","expiration":null,"moderation":null,"moderationDate":null},"type":"Переуступка ДДУ","typeName":"(Нов.)","reqNumber":"58084000003","viewedAddress":"Новосибирск Александра Чистякова 22","viewedArea":"29/11/9","priceStart":"2300","priceCurrent":"2300","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58084000010","viewedAddress":"Колывань Кирова 42","viewedArea":"53/36/6","priceStart":"3000","priceCurrent":"3000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Гараж","typeName":"(Г.)","reqNumber":"58084000015","viewedAddress":"Новосибирск Кропоткина 197 корп 2","viewedArea":"35/0/0","priceStart":"800","priceCurrent":"800","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Комната","typeName":"(Ком.)","reqNumber":"58167000023","viewedAddress":"Новосибирск Забалуева 39","viewedArea":"23/15/2","priceStart":"1000","priceCurrent":"1000","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":null,"assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":null,"expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58198000085","viewedAddress":"Новосибирск Титова 198/1","viewedArea":"60/42/9","priceStart":"5950","priceCurrent":"5950","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"34128","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":null,"created":"2022-06-16 11:03:01.165405","expiration":null,"moderation":null,"moderationDate":null},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58198000305","viewedAddress":"Новосибирск Спортивная 11/1","viewedArea":"56/31/10","priceStart":"4090","priceCurrent":"4090","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]},{"dealId":"48615","assigned_by":{"UID":2583,"fullName":"Ядрышникова Ольга Сергеевна"},"contract":{"type":"Эксклюзив","created":"2022-01-14 16:59:50.288928","expiration":"2022-05-16 12:00:00.000000","moderation":"Отклонено","moderationDate":"2022-05-20 08:34:59.000000"},"type":"Квартира","typeName":"(Кв.)","reqNumber":"58494000005","viewedAddress":"Криводановка Зеленая 16","viewedArea":"60/41/9","priceStart":"2350","priceCurrent":"2350","priceTrend":0,"advStatus":"Не в рекламе","platformStats":[{"name":"Yandex","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0},{"name":"Cian","url":null,"status":"Не размещено","coverage":0,"searches":0,"shows":0,"showsTrand":0}]}],"rights":"chief","subordinated":[{"name":"Кралько Светлана Григорьевна","id":3849,"office":56,"login":"kralko"},{"name":"Мешечко Родион Игоревич","id":3842,"office":56,"login":"meshechkori"},{"name":"Антонова Наталья Александровна","id":3617,"office":56,"login":"antonovana"},{"name":"Шейн Яна Юрьевна","id":3379,"office":56,"login":"sheynyayu"},{"name":"Ядрышникова Ольга Сергеевна","id":2583,"office":56,"login":"yadryishnikovaos"},{"name":"Дегтярёва Елена Николаевна","id":2551,"office":56,"login":"degtyarevaen"},{"name":"Тадевосян Гайк Андраникович","id":2015,"office":56,"login":"tadevosyanga"},{"name":"Андрухова Евгения Викторовна","id":1658,"office":56,"login":"kustovaev"},{"name":"Бриль Наталья Борисовна","id":1599,"office":56,"login":"brilnb"},{"name":"Сорокина Ирина Владимировна","id":1595,"office":56,"login":"sorokina.i"},{"name":"Дергунова Наталья Валерьевна","id":1594,"office":56,"login":"dergunova"},{"name":"Чапская Елена Владимировна","id":1593,"office":56,"login":"chapskaya"},{"name":"Альчикова Оксана Геннадьевна","id":1583,"office":56,"login":"alchikovaog"},{"name":"Безуглов Александр Викторович","id":1506,"office":56,"login":"bezuglovav"},{"name":"Цынкер Любовь Александровна","id":1503,"office":56,"login":"cyinker"},{"name":"Крижановская Татьяна Викторовна","id":185,"office":56,"login":"krizhanovskayatv"},{"name":"Винник Наталья Александровна","id":54,"office":56,"login":"vinnik"},{"name":"Розова Елена Владимировна","id":3549,"office":63,"login":"rozovaev"},{"name":"Сампетова Елена Александровна","id":2504,"office":63,"login":"sampetovaea"},{"name":"Мумбер Евгений Леонидович","id":2034,"office":63,"login":"mumberel"},{"name":"Бондарь Наталья Евгеньевна","id":1893,"office":63,"login":"bondarne"},{"name":"Аибян Лейли Маджитовна","id":1762,"office":63,"login":"aibyanlm"},{"name":"Юдин Дмитрий Павлович","id":1745,"office":63,"login":"yudindp"},{"name":"Андреева Юлия Валерьевна","id":1643,"office":63,"login":"lebedevayuv"},{"name":"Колотыгина Александра Николаевна","id":992,"office":63,"login":"kolotyiginaan"},{"name":"Медведева Татьяна Николаевна","id":518,"office":63,"login":"medvedevatn"},{"name":"Грудев Вячеслав Викторович","id":388,"office":63,"login":"grudevvv"},{"name":"Лобынцев Михаил Михайлович","id":256,"office":63,"login":"lobyincevmm"},{"name":"Рагулина Татьяна Юрьевна","id":55,"office":63,"login":"ragulina"},{"name":"Кислякова Зинаида Сергеевна","id":3876,"office":66,"login":"kislyakovazs"},{"name":"Коробкина Анастасия Андреевна","id":2931,"office":66,"login":"korobkinaaa"},{"name":"Давыденко Елена Александровна","id":2922,"office":66,"login":"davyidenkoea"},{"name":"Долгова Ирина Петровна","id":1998,"office":66,"login":"dolgovaip"},{"name":"Крестьянова Людмила Викторовна","id":1967,"office":66,"login":"krestyanovalv"},{"name":"Матвейкина Анастасия Александровна","id":1636,"office":66,"login":"matveykina"},{"name":"Светляков Василий Николаевич","id":3885,"office":67,"login":"svetlyakovvn"},{"name":"Бебамуратов Данил Захарович","id":3846,"office":67,"login":"bebamuratovdz"},{"name":"Фильченко Станислав Евгеньевич","id":3840,"office":67,"login":"filchenkose1"},{"name":"Богидаева Ирина Николаевна","id":3759,"office":67,"login":"bogidaevain"},{"name":"Белая Алена Гарьевна","id":3433,"office":67,"login":"belayaag"},{"name":"Павлюченко Дмитрий Александрович","id":3201,"office":67,"login":"pavlyuchenkoda"},{"name":"Чухиль Руслан Викторович","id":2620,"office":67,"login":"chukhilrv"},{"name":"Зубова Инга Анатольевна","id":2022,"office":67,"login":"zubovaia"},{"name":"Чичканова Анна Евгеньевна","id":1925,"office":67,"login":"chichkanovaae"},{"name":"Андрейченко Ольга Вячеславовна","id":3121,"office":68,"login":"andreychenkoov"},{"name":"Пасюк Оксана Викторовна","id":874,"office":68,"login":"pasyukov"},{"name":"Федулова Марина Геннадьевна","id":3714,"office":69,"login":"fedulovamg"},{"name":"Борматова Анастасия Евгеньевна","id":3682,"office":69,"login":"bormatovaae"},{"name":"Катренко Галина Валентиновна","id":3207,"office":69,"login":"katrenkogv"},{"name":"Литвинова Ольга Павловна","id":3083,"office":69,"login":"litvinovaop"},{"name":"Полухина Елена Юрьевна","id":3048,"office":69,"login":"polukhinaeyu"},{"name":"Горбаткова Елена Сергеевна","id":2949,"office":69,"login":"gorbatkovaes"},{"name":"Матвиенко Екатерина Сергеевна","id":2242,"office":69,"login":"matvienkoes"},{"name":"Лаврова Елена Викторовна","id":1779,"office":69,"login":"lavrovaev"},{"name":"Голдин Евгений Александрович","id":1729,"office":69,"login":"goldinea"},{"name":"Соколова Юлия Александровна","id":1656,"office":69,"login":"sokolovayua"},{"name":"Шлыкова Юлия Юрьевна","id":1584,"office":69,"login":"shlikova"},{"name":"Кравцова Наталья Михайловна","id":1519,"office":69,"login":"kravtsova"},{"name":"Циглер Ксения Васильевна","id":2594,"office":70,"login":"ciglerkv"},{"name":"Габдрахманова Ольга Олеговна","id":1907,"office":70,"login":"gabdrakhmanovaoo"},{"name":"Корсак Валерия Маратовна","id":1796,"office":70,"login":"korsakvm"},{"name":"Евдокимова Виктория Андреевна","id":610,"office":70,"login":"evdokimovava"},{"name":"Лодясова Анна Евгеньевна","id":609,"office":70,"login":"lodyasovaae"},{"name":"Павловец Ксения Юрьевна","id":222,"office":70,"login":"pavloveckyu"},{"name":"Милахин Руслан Олегович","id":3936,"office":72,"login":"milakhinro"},{"name":"Попов Кирилл Денисович","id":3901,"office":72,"login":"popovkd"},{"name":"Скопич Дарья Александровна","id":3768,"office":72,"login":"skopichda"},{"name":"Парфенов Денис Александрович","id":3711,"office":72,"login":"parfenovda"},{"name":"Половинкина Ольга Борисовна","id":3693,"office":72,"login":"polovinkinaob"},{"name":"Чевелёва Олеся Михайловна","id":3315,"office":72,"login":"chevelevaom"},{"name":"Бажанова Галина Филипповна","id":3000,"office":72,"login":"bazhanova"},{"name":"Корчагина Алина Ивановна","id":1992,"office":72,"login":"korchaginaai"},{"name":"Виноградова Лариса Анатольевна","id":1823,"office":72,"login":"vinogradovala"},{"name":"Мироненко Роман Андреевич","id":1793,"office":72,"login":"mironenkora"},{"name":"Чичкина Марина Леонидовна","id":1746,"office":72,"login":"chichkinaml"},{"name":"Ладченко Татьяна Викторовна","id":1727,"office":72,"login":"ladchenkotv"},{"name":"Тырышкина Татьяна Павловна","id":1699,"office":72,"login":"tirishkina"},{"name":"Кравченко Татьяна Николаевна","id":1630,"office":72,"login":"kravchenkot"},{"name":"Ершова Виктория Валерьевна","id":1628,"office":72,"login":"ershovavv"},{"name":"Гусев Максим Вячеславович","id":1623,"office":72,"login":"gusevmv"},{"name":"Ковинько Ирина Евгеньевна","id":1619,"office":72,"login":"kovinko"},{"name":"Салостий Татьяна Владимировна","id":1615,"office":72,"login":"salostiy"},{"name":"Жигач Светлана Николаевна","id":1604,"office":72,"login":"zhigachsn"},{"name":"Максимова Ольга Геннадьевна","id":1603,"office":72,"login":"maksimovaog"},{"name":"Шлыкова Ольга Михайловна","id":1602,"office":72,"login":"shlyikovao"},{"name":"Федорова Светлана Геннадьевна","id":1601,"office":72,"login":"fedorova"},{"name":"Маркова Мария Михайловна","id":1572,"office":72,"login":"markovamm"},{"name":"Новикова Евгения Михайловна","id":1571,"office":72,"login":"e.novikova"},{"name":"Кашина Оксана Викторовна","id":1561,"office":72,"login":"kashina"},{"name":"Вагайцева Юлия Александровна","id":1560,"office":72,"login":"vagaycevayua"},{"name":"Погромская Елена Ивановна","id":1556,"office":72,"login":"poturemskayaei"},{"name":"Максимов Александр Юрьевич","id":1161,"office":72,"login":"maksimovayu"},{"name":"Волосухина Анжелика Викторовна","id":1021,"office":72,"login":"volosukhinaav"},{"name":"Слёзкин Дмитрий Александрович","id":472,"office":72,"login":"slezkinda"},{"name":"Бурнина Анна Борисовна","id":213,"office":72,"login":"burnina"},{"name":"Агеева Надежда Сергеевна","id":3907,"office":73,"login":"ageevans"},{"name":"Раджабова Надия Маликовна","id":3898,"office":73,"login":"radzhabovanm"},{"name":"Горбунова Дарья Андреевна","id":3893,"office":73,"login":"gorbunovada"},{"name":"Козлов Дмитрий Сергеевич","id":3834,"office":73,"login":"kozlovds"},{"name":"Кисилев Александр Сергеевич","id":3819,"office":73,"login":"kisilevas"},{"name":"Алексеев Денис Викторович","id":3814,"office":73,"login":"alekseevdv"},{"name":"Михайлюков Артём Иванович","id":3807,"office":73,"login":"mikhaylyukovai"},{"name":"Кошмидько Олеся Николаевна","id":3065,"office":73,"login":"koshmidkoon"},{"name":"Лопатина Анна Вадимовна","id":2708,"office":73,"login":"lopatinaav"},{"name":"Иванов Олег Александрович","id":2051,"office":73,"login":"ivanovoa"},{"name":"Ахременко Ярослав Юрьевич","id":1939,"office":73,"login":"akhremenkoyayu"},{"name":"Асанов Евгений Вениаминович","id":1868,"office":73,"login":"asanovev"},{"name":"Толстова Юлия Ивановна","id":1866,"office":73,"login":"tolstovayui"},{"name":"Истифеев Николай Николаевич","id":1819,"office":73,"login":"istifeevnn"},{"name":"Останина Елена Жоржевна","id":1795,"office":73,"login":"ostaninaezh"},{"name":"Ветрова Оксана Викторовна","id":1590,"office":73,"login":"vetrova"},{"name":"Ахременко Владимир Юрьевич","id":175,"office":73,"login":"akhremenkovyu"},{"name":"Дергилева Анастасия Андреевна","id":1713,"office":83,"login":"dergileva"},{"name":"Дягилев Никита Сергеевич","id":3879,"office":85,"login":"dyagilevns"},{"name":"Аль-Рабеа Ирина Олеговна","id":3820,"office":85,"login":"alrabeaio"},{"name":"Макарова Татьяна Дмитриевна","id":3422,"office":85,"login":"makarovatd"},{"name":"Мозговой Андрей Викторович","id":3167,"office":85,"login":"mozgovoyav"},{"name":"Смолянинова Стелла Владимировна","id":3134,"office":85,"login":"smolyaninovasv"},{"name":"Черепянко Нина Валерьевна","id":3120,"office":85,"login":"cherepyankonv"},{"name":"Рожаева Ирина Юрьевна","id":3056,"office":85,"login":"rozhaevaiyu"},{"name":"Широких Ольга Юрьевна","id":3055,"office":85,"login":"shirokikhoyu"},{"name":"Маслянко Виталий Витальевич","id":3054,"office":85,"login":"maslyankovv"},{"name":"Рыбина Анна Николаевна","id":2578,"office":85,"login":"ryibinaan"},{"name":"Макаров Александр Викторович","id":1786,"office":85,"login":"makarovav"},{"name":"Агеева Елена Анатольевна","id":1574,"office":85,"login":"ageeva"},{"name":"Новицкая Елена Николаевна","id":1573,"office":85,"login":"novickaya"},{"name":"Дубовицкая Альбина Геннадьевна","id":1570,"office":85,"login":"dubovitskaya"},{"name":"Пронькина Юлия Николаевна","id":1569,"office":85,"login":"pronkina"},{"name":"Тирских Оксана Анатольевна","id":1568,"office":85,"login":"tirskikh"},{"name":"Богомолова Марина Николаевна","id":1567,"office":85,"login":"bogomolova"},{"name":"Пилецкая Светлана Николаевна","id":1566,"office":85,"login":"pileckaya"},{"name":"Котова Юлия Сергеевна","id":1565,"office":85,"login":"kotova"},{"name":"Сущенко Светлана Маратовна","id":1564,"office":85,"login":"sushenko"},{"name":"Голомидова Анна Владимировна","id":1513,"office":85,"login":"golomidova"},{"name":"Сидорова Наталья Викторовна","id":1493,"office":85,"login":"sidorovanv"},{"name":"Петрова Наталья Анатольевна","id":3850,"office":86,"login":"petrovana"},{"name":"Ленц Наталья Станиславовна","id":3749,"office":86,"login":"lencns"},{"name":"Севко Наталья Александровна","id":1812,"office":86,"login":"sevkona"},{"name":"Кузьменко Евгения Викторовна","id":1806,"office":86,"login":"kuzmenkoev"},{"name":"Ширяева Юлия Владимировна","id":1760,"office":86,"login":"shiryaevayuv"},{"name":"Павлов Анатолий Сергеевич","id":1722,"office":86,"login":"pavlovas"},{"name":"Степанюк Любовь Николаевна","id":1721,"office":86,"login":"stepanyukln"},{"name":"Карнаух Дарья Александровна-Столетова","id":1705,"office":86,"login":"karpichkoda"},{"name":"Передерина Лариса Геннадьевна","id":1821,"office":88,"login":"perederinalg"},{"name":"Кустова Надежда Александровна","id":1707,"office":88,"login":"kustovan"},{"name":"Григорьева Светлана Каримовна","id":1693,"office":88,"login":"grigorevask"},{"name":"Чаусовская Маргарита Николаевна","id":1661,"office":88,"login":"chausovskayam"},{"name":"Тимошенко Марина Меружановна","id":1642,"office":88,"login":"timoshenkom"},{"name":"Пестрикова Виктория Викторовна","id":1517,"office":88,"login":"pestrikova"},{"name":"Ларин Иван Юрьевич","id":3945,"office":89,"login":"lariniyu"},{"name":"Ситнер Елена Александровна","id":3016,"office":89,"login":"sitnerea"},{"name":"Яковлева София Юрьевна","id":2322,"office":89,"login":"yakovlevasyu"},{"name":"Павлецова Алина Андреевна","id":1664,"office":89,"login":"pavlecovaaa"},{"name":"Вараксина Ирина Владимировна","id":1654,"office":89,"login":"varaksina"},{"name":"Филиппенко Татьяна Николаевна","id":1638,"office":89,"login":"filippenko"},{"name":"Карпачева Екатерина Юрьевна","id":1635,"office":89,"login":"karpachevaeyu"},{"name":"Рубахина Наталья Николаевна","id":1633,"office":89,"login":"rubakhinann"},{"name":"Клейн Анжелика Сергеевна","id":1591,"office":89,"login":"sosninaas"},{"name":"Крохалева Ирина Владимировна","id":1518,"office":89,"login":"krokhaleva"},{"name":"Топоркова Ольга Алексеевна","id":1498,"office":89,"login":"toporkovaoa"},{"name":"Койнова Оксана Викторовна","id":1494,"office":89,"login":"koinova"},{"name":"Бакенова Алина","id":1208,"office":89,"login":"bakenovaak"},{"name":"Дергилева Анастасия Андреевна","id":3948,"office":96,"login":"dergileva1"},{"name":"Рекк Ольга Константиновна","id":3888,"office":96,"login":"rekkok"},{"name":"Пановицын Данила Александрович","id":3887,"office":96,"login":"panovicyinda"},{"name":"Кузнецова Людмила Михайловна","id":1706,"office":96,"login":"kuznetsoval"},{"name":"Дмитриева Ирина Александровна","id":1698,"office":96,"login":"dmitrieva"},{"name":"Еремина Людмила Николаевна","id":1671,"office":96,"login":"ereminaln"},{"name":"Ельченко Григорий Александрович","id":3881,"office":97,"login":"elchenkoga"},{"name":"Маркова Татьяна Геннадьевна","id":3822,"office":97,"login":"markovatg"},{"name":"Шушляков Григорий Владимирович","id":3811,"office":97,"login":"shushlyakovgv"},{"name":"Селимханов Руслан Селимханович","id":1958,"office":97,"login":"selimkhanovrs"},{"name":"Григорьева Елена Евгеньевна","id":1896,"office":97,"login":"grigorevaee"},{"name":"Ковалева Валентина Владимировна","id":1792,"office":97,"login":"kovalevavv"},{"name":"Пугачева Ольга Георгиевна","id":1774,"office":97,"login":"grishinaog"},{"name":"Авилова Оксана Сергеевна","id":1577,"office":97,"login":"avilovaos"},{"name":"Дубровин Андрей Игоревич","id":1576,"office":97,"login":"dubrovinai"},{"name":"Федорищев Антон Алексеевич","id":1530,"office":97,"login":"fedorischevaa"},{"name":"Трухачева Наталья Владимировна","id":3942,"office":98,"login":"trukhachevanv"},{"name":"Кононенко Григорий Александрович","id":3928,"office":98,"login":"kononenkoga"},{"name":"Немировский Дмитрий Игоревич","id":3864,"office":98,"login":"nemirovskiydi"},{"name":"Журавлева Елена Георгиевна","id":3436,"office":98,"login":"zhuravlevaeg"},{"name":"Федорова Лариса Николаевна","id":2648,"office":98,"login":"fedorovaln"},{"name":"Давлатова Нодира Ахмедовна","id":2642,"office":98,"login":"davlatovana"},{"name":"Дементьева Елена Юрьевна","id":1703,"office":98,"login":"dementevaeyu"},{"name":"Максагина Тамара Александровна","id":1668,"office":98,"login":"maksaginata"},{"name":"Жукова Людмила Николаевна","id":1652,"office":98,"login":"zhukovaln"},{"name":"Дадоян Кнарик Рафиковна","id":1596,"office":98,"login":"dadoyan"},{"name":"Визигина Татьяна Алексеевна","id":1578,"office":98,"login":"vizigina"},{"name":"Тимошенко Галина Александровна","id":3710,"office":100,"login":"timoshenkoga"},{"name":"Некрасова Анна Владимировна","id":3004,"office":100,"login":"nekrasovaav"},{"name":"Пирожков Дмитрий Сергеевич","id":2987,"office":100,"login":"pirozhkovds"},{"name":"Чанов Вячеслав Григорьевич","id":1964,"office":100,"login":"chanovvg"},{"name":"Кадеркаев Альберт Александрович","id":1947,"office":100,"login":"kaderkaev"},{"name":"Суворова Мария Александровна","id":1842,"office":100,"login":"suvorovama"},{"name":"Левчук Надежда Алексеевна","id":1750,"office":100,"login":"levchukna"},{"name":"Крижевич Наталья Геннадьевна","id":1585,"office":100,"login":"krizhevichng"},{"name":"Болмосова Лариса Анатольевна","id":1580,"office":100,"login":"bolmosova"},{"name":"Мезенцева Светлана Вячеславовна","id":1538,"office":100,"login":"mezencevasv"},{"name":"Самбур Ирина Леонидовна","id":1537,"office":100,"login":"sambur"},{"name":"Морозова Елена Геннадьевна","id":410,"office":100,"login":"shishmarevaeg"},{"name":"Федорченко Дмитрий Сергеевич","id":3847,"office":102,"login":"fedorchenkods"},{"name":"Баборыкин Виталий Валерьевич","id":642,"office":102,"login":"baboryikinvv"},{"name":"Капцова Ольга Михайловна","id":390,"office":102,"login":"kapcovaom"},{"name":"Горбунова Ирина Андреевна","id":389,"office":102,"login":"gorbunovaia"},{"name":"Капцов Михаил Олегович","id":108,"office":102,"login":"kapcovmo"},{"name":"Янбулатова Диляра Равильевна","id":107,"office":102,"login":"yanbulatovadr"},{"name":"Семенихина Елена Владимировна","id":106,"office":102,"login":"semenihina"},{"name":"Фильченко Станислав Евгеньевич-Ленина","id":1588,"office":107,"login":"filchenkose"},{"name":"Ичаловская Инна Викторовна","id":3903,"office":110,"login":"ichalovskayaiv"},{"name":"Карнаух Дарья Александровна","id":3836,"office":110,"login":"karnaukhda"},{"name":"Орлов Андрей Эдуардович","id":3733,"office":110,"login":"orlovaye"},{"name":"Соловьева Олеся Владимировна","id":3696,"office":110,"login":"solovevaov"},{"name":"Вороной Вячеслав Геннадьевич","id":2964,"office":110,"login":"voronoyvg"},{"name":"Барановский Данил Денисович","id":2591,"office":110,"login":"baranovskiydd"},{"name":"Макаренко Юлия Ивановна","id":2102,"office":110,"login":"makarenkoyui"},{"name":"Кравченко Яна Викторовна","id":1909,"office":110,"login":"kravchenkoyav"},{"name":"Власова Наталья Николаевна","id":1891,"office":110,"login":"vlasovann"},{"name":"Добрынина Елизавета Александровна","id":1887,"office":110,"login":"dobryininaea"},{"name":"Меркулова Любовь Анатольевна","id":1874,"office":110,"login":"merkulovala"},{"name":"Торгашова Любовь Ивановна","id":1870,"office":110,"login":"torgashovali"},{"name":"Филиппова Анна Анатольевна","id":1829,"office":110,"login":"filippovaaa"},{"name":"Канева Рената Юрьевна","id":3597,"office":111,"login":"kanevaryu"},{"name":"Ивашко Юлия Фаридовна","id":2333,"office":111,"login":"ivashkoyuf"},{"name":"Рачинская Юлия Николаевна","id":1782,"office":111,"login":"rachinskayayun"},{"name":"Скакунова Ирина Юрьевна","id":1716,"office":111,"login":"skakunova"},{"name":"Мадиссон Елена Владимировна","id":1715,"office":111,"login":"madissonev"},{"name":"Бутьянова Алла Михайловна","id":1686,"office":111,"login":"butyanova"},{"name":"Рябченко Ольга Евгеньевна","id":1592,"office":111,"login":"ryabchenkooe"},{"name":"Архангельский Игорь Олегович","id":3166,"office":114,"login":"arkhangelskiyio"},{"name":"Чакенова Татьяна Васильевна","id":1978,"office":114,"login":"chakenovatv"},{"name":"Грязнов Станислав Константинович","id":1826,"office":114,"login":"gryaznovsk"},{"name":"Никулина Татьяна Борисовна","id":1813,"office":114,"login":"nikulinatb"},{"name":"Свирин Евгений Валерьевич","id":1802,"office":114,"login":"svirinev"},{"name":"Михайлова Ирина Михайловна","id":1766,"office":114,"login":"voynovaim"},{"name":"Свирина Инна Сергеевна","id":1738,"office":114,"login":"larionovas"},{"name":"Угроватая Лариса Борисовна","id":1692,"office":114,"login":"ugrovataya"},{"name":"Хадаковская Эльвира Викторовна","id":1679,"office":114,"login":"hadakovskaya"},{"name":"Терентьева Елена Сергеевна","id":1648,"office":114,"login":"terentevaes"},{"name":"Манаков Олег Кириллович","id":3398,"office":116,"login":"manakovok"},{"name":"Гайкова Валентина Сергеевна","id":3256,"office":116,"login":"gaykovavs"},{"name":"Шульга Валентина Ивановна","id":3082,"office":116,"login":"shulgavi"},{"name":"Летецкая Наталья Александровна","id":3080,"office":116,"login":"leteckayana"},{"name":"Винникова Ольга Александровна","id":2653,"office":116,"login":"vinnikovaoa"},{"name":"Рашитова Марина Валерьевна","id":1827,"office":116,"login":"rashitovamv"},{"name":"Пупышева Инна Васильевна","id":1758,"office":116,"login":"pupyishevaiv"},{"name":"Базева Ольга Николаевна","id":1754,"office":116,"login":"bazevaon"},{"name":"Соколов Александр Владимирович","id":1726,"office":116,"login":"sokolovav"},{"name":"Манакова Татьяна Анатольевна","id":1687,"office":116,"login":"manakovata"},{"name":"Артюхина Ирина Геннадьевна","id":1670,"office":116,"login":"artyukhinaig"},{"name":"Петрова Светлана Николаевна","id":1655,"office":116,"login":"s.petrova"},{"name":"Мироненко Павел Андреевич","id":1527,"office":116,"login":"mironenkopa"},{"name":"Синицына Любовь Евгеньевна","id":3767,"office":117,"login":"sinicyinale"},{"name":"Меженин Денис Анатольевич","id":3093,"office":117,"login":"mezheninda"},{"name":"Сергеев Егор Александрович","id":2925,"office":117,"login":"sergeevea"},{"name":"Коновалова Надежда Валентиновна","id":1828,"office":117,"login":"konovalovanv"},{"name":"Гончарова Наталья Владимировна","id":1732,"office":117,"login":"goncharovanv"},{"name":"Заворина Ольга Сергеевна","id":1731,"office":117,"login":"skachilova"},{"name":"Данилова Ирина Викторовна","id":1680,"office":117,"login":"danilovaiv"},{"name":"Перфильева Елена Борисовна","id":1562,"office":117,"login":"perfileva"},{"name":"Дунаева Юлия Викторовна","id":1520,"office":117,"login":"dunaeva"},{"name":"Петрова Наталья Анатольевна-Богдана хмельниц","id":1714,"office":122,"login":"petrovan"},{"name":"Падчеров Денис Анатольевич-Трудовая","id":3164,"office":127,"login":"padcherov"},{"name":"Хрущ Владимир Вениаминович","id":1957,"office":127,"login":"khruschvv"},{"name":"Ольховский Алексей Александрович","id":3892,"office":129,"login":"olkhovskiyaa"},{"name":"Харитонкина Татьяна Александровна","id":3771,"office":129,"login":"kharitonkinata"},{"name":"Молодцова Ольга Николаевна","id":3662,"office":129,"login":"molodcovaon"},{"name":"Троценко Кирилл Олегович","id":3548,"office":129,"login":"trocenkoko"},{"name":"Михеечкина Ольга Дмитриевна","id":2288,"office":129,"login":"mikheechkinaod"},{"name":"Калабин Леонид Юрьевич","id":2257,"office":129,"login":"kalabinlyu"},{"name":"Петеримов Сергей Анатольевич","id":2193,"office":129,"login":"peterimovsa"},{"name":"Букреева Снежана Николаевна","id":1801,"office":129,"login":"bukreevasn"},{"name":"Минакова Кристина Андреевна","id":1942,"office":133,"login":"minakovaka"},{"name":"Задара Александр Сергеевич","id":1081,"office":133,"login":"zadaraas"},{"name":"Васильченко Ольга Юрьевна","id":529,"office":133,"login":"vasilchenkooyu"},{"name":"Скоробогатова Елена Анатольевна","id":3226,"office":166,"login":"skorobogatovaea"},{"name":"Бердышев Евгений Владиславович","id":3185,"office":166,"login":"berdyishevev"},{"name":"Кливер Елена Викторовна","id":3183,"office":166,"login":"kliverev"},{"name":"Иванова Екатерина Николаевна","id":3036,"office":166,"login":"ivanovaen"},{"name":"Зернова Ирина Станиславовна","id":1934,"office":166,"login":"zernovais"},{"name":"Бахарев Сергей Сергеевич","id":1720,"office":166,"login":"bakharevss"},{"name":"Королева Марина Викторовна","id":901,"office":166,"login":"korolevamv"},{"name":"Кузнецова Алёна Николаевна","id":369,"office":166,"login":"kuznecovaan"},{"name":"Бердышева Анна Александровна","id":237,"office":166,"login":"berdyishevaaa"},{"name":"Рябкова Светлана Владимировна","id":3258,"office":168,"login":"ryabkovasv"},{"name":"Шевелева Анна Юрьевна","id":3017,"office":168,"login":"sheveleva"},{"name":"Павлютина Кристина Александровна","id":1843,"office":168,"login":"pavlyutinaka"},{"name":"Ильичева Светлана Дмитриевна","id":1709,"office":168,"login":"ilichevasd"},{"name":"Зеленская Марина Владимировна","id":1708,"office":168,"login":"zelenskaya"},{"name":"Буданова Галина Михайловна","id":1669,"office":168,"login":"budanova"},{"name":"Падчеров Денис Анатольевич","id":3923,"office":181,"login":"padcherovda"},{"name":"Теребецкий Яков Валерьевич","id":3905,"office":181,"login":"terebeckiyyav"},{"name":"Сибирякова Жанна Александровна","id":3712,"office":181,"login":"sibiryakovazha"},{"name":"Волхин Михаил Александрович","id":3569,"office":181,"login":"volkhinma"},{"name":"Демидов Роман Алексеевич","id":2942,"office":181,"login":"demidovra"},{"name":"Хохлявина Галина Александровна","id":2018,"office":181,"login":"khokhlyavinaga"},{"name":"Хохлявин Константин Александрович","id":1497,"office":181,"login":"khokhlyavinka"},{"name":"Баженов Олег Евгеньевич","id":3896,"office":191,"login":"bazhenovoe"},{"name":"Самочернова Евгения Федоровна","id":3841,"office":191,"login":"samochernovaef"},{"name":"Сулим Евгения Радомировна","id":2689,"office":191,"login":"sulimer"},{"name":"Турищева Ольга Сергеевна","id":2241,"office":191,"login":"turischevaos"},{"name":"Некрасова Елена Владимировна","id":2238,"office":191,"login":"nekrasovaev"},{"name":"Петрова Алёна Викторовна","id":2969,"office":194,"login":"petrenkoa"},{"name":"Суворова Людмила Алексеевна","id":1805,"office":194,"login":"suvorovala"},{"name":"Ведерников Илья Николаевич","id":1784,"office":194,"login":"vedernikovin"},{"name":"Тихонова Жанна Викторовна","id":1704,"office":194,"login":"tikhonovazh"},{"name":"Капчик Мария Павловна","id":1697,"office":194,"login":"kapchik"},{"name":"Мусатова Галина Валентиновна","id":1673,"office":194,"login":"musatovagv"},{"name":"Ленченко Надежда Николаевна","id":1659,"office":194,"login":"lenchenko"},{"name":"Латонова Татьяна Викторовна","id":1637,"office":194,"login":"latonova"},{"name":"Никитин Анатолий Петрович","id":1631,"office":194,"login":"nikitinap"},{"name":"Захарова Татьяна Юрьевна","id":1575,"office":194,"login":"zaharova"},{"name":"Лячина Ольга Викторовна","id":3813,"office":195,"login":"lyachinaov"},{"name":"Торовин Олег Владимирович","id":3040,"office":195,"login":"torovinov"},{"name":"Титова Наталья Ивановна","id":3015,"office":195,"login":"titovani"},{"name":"Чепизубов Дмитрий Викторович","id":3003,"office":195,"login":"chepizubovdv"},{"name":"Шугаева Галина Владимировна","id":2938,"office":195,"login":"shugaevagv"},{"name":"Пужак Лилия Владимировна","id":2593,"office":195,"login":"puzhaklv"},{"name":"Таценко Анна Геннадьевна","id":2338,"office":195,"login":"tacenkoag"},{"name":"Померова Мария Георгиевна","id":2337,"office":195,"login":"pomerovamg"},{"name":"Сидорова Юлия Анатольевна","id":1917,"office":195,"login":"sidorovayua"},{"name":"Дизендорф Анна Николаевна","id":1897,"office":195,"login":"dizendorfan"},{"name":"Пимонова Оксана Васильевна","id":1551,"office":195,"login":"pimonovaov"},{"name":"Барышева Оксана Юрьевна","id":1546,"office":195,"login":"baryshevao"},{"name":"Цветкова Оксана Анатольевна","id":1545,"office":195,"login":"yanchenkooa"},{"name":"Палатовская Марина Аликовна","id":1544,"office":195,"login":"palatovskayama"},{"name":"Нечипорук Марина Викторовна","id":1542,"office":195,"login":"nechiporuk"},{"name":"Шмельцле Татьяна Валерьевна","id":1515,"office":195,"login":"shmel"},{"name":"Кузнецова Валерия Сергеевна","id":3790,"office":207,"login":"kuznecovavs"},{"name":"Волобуев Иван Евгеньевич","id":3757,"office":207,"login":"volobuevie"},{"name":"Рост Александр Юрьевич","id":3737,"office":207,"login":"rostayu"},{"name":"Алспаев Данияр Сагындыкович","id":3466,"office":207,"login":"alspaevds"},{"name":"Желтов Леонид Игоревич","id":3355,"office":207,"login":"zheltovli"},{"name":"Карпенко Оксана Сергеевна","id":3865,"office":232,"login":"karpenkoos"},{"name":"Сорокина Ольга Николаевна","id":3848,"office":232,"login":"sorokinaon"},{"name":"Кузикова Татьяна Владимировна","id":1895,"office":232,"login":"kuzikovatv"},{"name":"Пистунова Анжелика Юрьевна","id":1767,"office":232,"login":"pistunovaayu"},{"name":"Ушакова Наталья Михайловна","id":1536,"office":232,"login":"ushakova"},{"name":"Ермолина Елена Геннадьевна","id":1535,"office":232,"login":"ermolina"},{"name":"Рябцев Иван Ильич","id":3956,"office":283,"login":"ryabcevii"},{"name":"Дубровин Владимир Александрович","id":3955,"office":283,"login":"dubrovinva"},{"name":"Вдовцов Сергей Владимирович","id":3954,"office":283,"login":"vdovcovsv"},{"name":"Витушкина Юлия Вячеславовна","id":3953,"office":283,"login":"vitushkinayuv"},{"name":"Выходцева Екатерина Андреевна","id":3952,"office":283,"login":"vyikhodcevaea"},{"name":"Желтоусова Арина Сергеевна","id":3951,"office":283,"login":"zheltousovaas"},{"name":"Иванилов Иван Валерьевич","id":3950,"office":283,"login":"ivaniloviv"},{"name":"Комбаров Сергей Алексеевич","id":3944,"office":283,"login":"kombarovsa"},{"name":"Храпов Евгений Евгеньевич","id":3938,"office":283,"login":"khrapovee"},{"name":"Лабутин Александр Алексеевич","id":3937,"office":283,"login":"labutinaa"},{"name":"Алиев Мурад Махарат оглы","id":3911,"office":283,"login":"alievmm"},{"name":"Крапивина Наталья Алексеевна","id":3906,"office":283,"login":"krapivinana"},{"name":"Подколзин Владислав Владимирович","id":3900,"office":283,"login":"podkolzinvv"},{"name":"Диль Лидия Андреевна","id":3897,"office":283,"login":"dilla"},{"name":"Сильнягина Евгения Сергеевна","id":3877,"office":283,"login":"silnyaginaes"},{"name":"Андриянова Александра Сергеевна","id":3873,"office":283,"login":"andriyanovaas"},{"name":"Савченко Николай Николаевич","id":3857,"office":283,"login":"savchenkonn"},{"name":"Карбовский Родион Сергеевич","id":3856,"office":283,"login":"karbovskiyrs"},{"name":"Ситников Алан Людвигович","id":3845,"office":283,"login":"sitnikoval"},{"name":"Жучков Владимир Сергеевич","id":3844,"office":283,"login":"zhuchkovvs"},{"name":"Федоров Юрий Витальевич","id":3833,"office":283,"login":"fedorovyuv"},{"name":"Цырендоржыев Зоригто Баторович","id":3817,"office":283,"login":"cyirendorzhyievzb"},{"name":"Логвиненко Александр Николаевич","id":3760,"office":283,"login":"logvinenkoan"},{"name":"Токарев Димитрий Александрович","id":3716,"office":283,"login":"tokarevda"},{"name":"Руденко Ольга Владимировна","id":3697,"office":283,"login":"rudenkoov"},{"name":"Чащина Нина Викторовна","id":2492,"office":283,"login":"chaschinanv"},{"name":"Мищенко Иван Владимирович","id":2198,"office":262,"login":"mischenkoiv"}],"office":[{"name":"Фасадная","id":56},{"name":"Зорге, 1","id":63},{"name":"Авиастроителей, 13","id":66},{"name":"Б.Хмельницкого 5","id":67},{"name":"Отдел аренды","id":68},{"name":"Станиславского, 20","id":69},{"name":"Служба клиентского сервиса","id":70},{"name":"Красный проспект, 51","id":72},{"name":"Д.Ковальчук","id":73},{"name":"Бердск 2-ой отдел продаж","id":78},{"name":"Станиславского, 2","id":83},{"name":"Красный проспект, 51/2 1ОП","id":84},{"name":"Гоголя 39","id":85},{"name":"Столетова","id":86},{"name":"Новосибирская, 24","id":88},{"name":"Б.Богаткова","id":89},{"name":"Лазурная, 4","id":94},{"name":"Ватутина 33","id":96},{"name":"Морской Проспект 38","id":97},{"name":"Блюхера 28","id":98},{"name":"9 Гвардейской дивизии","id":100},{"name":"Отдел коммерческой недвижимости","id":102},{"name":"Ленина 73","id":107},{"name":"Красный проспект, 81","id":108},{"name":"Рассветная 8","id":110},{"name":"Учительская 19","id":111},{"name":"Зорге, 73","id":114},{"name":"Станиславского, 31","id":115},{"name":"Комсомольская, 3","id":116},{"name":"Дзержинского, 30","id":117},{"name":"Б.Хмельницкого 68","id":122},{"name":"Трудовая, 3 2-й отдел продаж","id":127},{"name":"Маяковского,17","id":129},{"name":"Отдел продаж новостроек","id":133},{"name":"Блюхера 13","id":166},{"name":"Выборная","id":168},{"name":"Красный проспект, 184 1ОП","id":181},{"name":"Бердск","id":191},{"name":"Восход 11","id":194},{"name":"Гребенщикова 9 1 ОП","id":195},{"name":"Красный проспект, 184 2й ОП","id":207},{"name":"Красный проспект, 184 3й ОП","id":231},{"name":"Красный проспект, 184 4й ОП","id":232},{"name":"Красный проспект 184","id":283}],"viewedOfficeId":56});},[]);(0,react.useEffect)(function(){setLoading(false);},[data]);return/*#__PURE__*/react.createElement(react.Fragment,null,!loading&&/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement(Header,{officeList:data!==null&&data!==void 0&&data.office?data===null||data===void 0?void 0:data.office:[],currentOfficeId:data.viewedOfficeId,rights:data!==null&&data!==void 0&&data.rights?data===null||data===void 0?void 0:data.rights:\'\'}),/*#__PURE__*/react.createElement(TableList,{list:data!==null&&data!==void 0&&data.objectsData?data===null||data===void 0?void 0:data.objectsData:[],subordinated:data!==null&&data!==void 0&&data.subordinated?data===null||data===void 0?void 0:data.subordinated:[],rights:data!==null&&data!==void 0&&data.rights?data===null||data===void 0?void 0:data.rights:\'\'})));}\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\nvar container = document.getElementById(\'root\');\nvar root = (0,client/* createRoot */.s)(container);\nroot.render( /*#__PURE__*/react.createElement(App, null));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODA0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNSQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDdkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDekpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNsSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNyUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2xDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN0SEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMzR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDOUxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMxVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3REQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNqREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTJCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMzVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7OztBQ2pQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMzQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3hMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOUZBO0FBQ0E7QUFDQTtBQUNBOztBQ0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDdEtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7O0FDcktBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM3QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7O0FDN0VBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMxQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3pHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFhQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzdOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBY0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1VUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMxRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEyQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNaQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWlDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBOztBQ3BGQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBOztBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTs7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbEJBO0FBQ0E7O0FDREE7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNkQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoTEE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTBEQTtBQUNBOzs7O0FDNUxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBbUJBO0FBQ0E7Ozs7O0FDdFdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEyQ0E7O0FDbEdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBa0JBOztBQ3ZWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFrTUE7O0FDbGlCQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTs7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXdIQTs7QUN4WkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0JBO0FBQ0E7QUFDQTtBQUNBOztBQ0hBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7O0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFxR0E7O0FDdFVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFvRUE7O0FDdkxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWdGQTs7QUNuT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7O0FDWEE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF1RkE7Ozs7QUNuUkE7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFxREE7O0FDN0lBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF1REE7O0FDdlRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFrRUE7O0FDakxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbkJBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBOzs7O0FDREE7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEyTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN2bUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBOztBQ1pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXlGQTtBQUNBOztBQzdSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3ZCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE4QkE7QUFDQTtBQUlBO0FBQ0E7O0FDdEZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25QQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUErREE7QUFDQTtBQUlBO0FBQ0E7O0FDNVdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBcUpBOztBQ25hQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTBGQTs7QUNqT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXlFQTs7QUNyS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFxS0E7O0FDelNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUErS0E7O0FDdmZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFxR0E7O0FDclNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE4REE7O0FDL05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyQ0E7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBMEtBOztBQzF0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEwRkE7QUFDQTs7QUM5TUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBOztBQ3hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTRDQTs7QUNqUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWVBOztBQzVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZ1BBOztBQ3p1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTZMQTtBQUNBOztBQ3hWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXFNQTtBQUNBOztBQzdhQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1R0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTBMQTtBQUNBOztBQ25YQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBOEtBO0FBQ0E7O0FDalRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUUxREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDckJBO0FBQ0E7QUFDQTs7QUNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1ZBO0FBQ0E7QUFDQTs7QUNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWkE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDekRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWdDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoREE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7QUFDQTs7QUNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcExBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN2Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsSkE7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDN0lBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcEdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzVEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWlJQTs7QUNuV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBNkdBOztBQ25KQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwQ0E7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWdNQTs7QUM1ekJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBOztBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXdEQTs7QUNsSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7O0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWtDQTs7QUNoR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXVFQTs7QUN4T0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBa0NBOztBQ3hGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBa0NBOztBQ2hHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQThDQTs7QUM1SUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FFM1ZBOztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzPzE4YWMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5TGltaXQuanM/YWZlYyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheUxpa2VUb0FycmF5LmpzP2RkMmYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanM/MmQ3YiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVJlc3QuanM/NGNjYiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5LmpzP2U4NmYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcz9iZDFmIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanM/MWM3YyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tLmpzPzhhZTgiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vcmVzb2x2ZVByb3BzLmpzPzEyNmEiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vY29tcG9zZUNsYXNzZXMvY29tcG9zZUNsYXNzZXMuanM/Njg2MyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3V0aWxzL2VzbS9mb3JtYXRNdWlFcnJvck1lc3NhZ2UuanM/NDY1MSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vY29sb3JNYW5pcHVsYXRvci5qcz9kOTBhIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL21lbW9pemUvZGlzdC9lbW90aW9uLW1lbW9pemUuYnJvd3Nlci5lc20uanM/NDk1OCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9pcy1wcm9wLXZhbGlkL2Rpc3QvZW1vdGlvbi1pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzPzA5MzgiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc2hlZXQvZGlzdC9lbW90aW9uLXNoZWV0LmJyb3dzZXIuZXNtLmpzPzdhOWYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvc3R5bGlzL3NyYy9VdGlsaXR5LmpzP2ZiZDIiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvc3R5bGlzL3NyYy9Ub2tlbml6ZXIuanM/OGQ1OCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsaXMvc3JjL0VudW0uanM/OTg2MyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsaXMvc3JjL1NlcmlhbGl6ZXIuanM/Y2EyMCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsaXMvc3JjL1ByZWZpeGVyLmpzPzhmNjYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvc3R5bGlzL3NyYy9NaWRkbGV3YXJlLmpzPzgxYzAiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvc3R5bGlzL3NyYy9QYXJzZXIuanM/MTQ4MyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jYWNoZS9kaXN0L2Vtb3Rpb24tY2FjaGUuYnJvd3Nlci5lc20uanM/ZmI1NSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9oYXNoL2Rpc3QvaGFzaC5icm93c2VyLmVzbS5qcz9jZTk2Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanM/MzA0ZSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zZXJpYWxpemUvZGlzdC9lbW90aW9uLXNlcmlhbGl6ZS5icm93c2VyLmVzbS5qcz8xMzE4Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3JlYWN0L2Rpc3QvZW1vdGlvbi1lbGVtZW50LWNiZWQ0NTFmLmJyb3dzZXIuZXNtLmpzP2MzZTciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdXRpbHMvZGlzdC9lbW90aW9uLXV0aWxzLmJyb3dzZXIuZXNtLmpzPzc5NTQiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc3R5bGVkL2Jhc2UvZGlzdC9lbW90aW9uLXN0eWxlZC1iYXNlLmJyb3dzZXIuZXNtLmpzPzBkOTciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc3R5bGVkL2Rpc3QvZW1vdGlvbi1zdHlsZWQuYnJvd3Nlci5lc20uanM/ZTUyMSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N0eWxlZC1lbmdpbmUvaW5kZXguanM/MDMzMCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3V0aWxzL2VzbS9kZWVwbWVyZ2UuanM/ZDZiYyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vY3JlYXRlVGhlbWUvY3JlYXRlQnJlYWtwb2ludHMuanM/YjNjNSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vY3JlYXRlVGhlbWUvc2hhcGUuanM/YWRkNCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vYnJlYWtwb2ludHMuanM/N2M2OCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3V0aWxzL2VzbS9jYXBpdGFsaXplLmpzP2EyYTciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3N0eWxlLmpzP2ZiMmUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL21lcmdlLmpzPzcwNDMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL21lbW9pemUuanM/NGI5YyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vc3BhY2luZy5qcz9mYzExIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9jcmVhdGVUaGVtZS9jcmVhdGVTcGFjaW5nLmpzPzEwODAiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL2NyZWF0ZVRoZW1lL2NyZWF0ZVRoZW1lLmpzP2ViZjYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3Byb3BzVG9DbGFzc0tleS5qcz9lMGZmIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9jb21wb3NlLmpzP2E3YmUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL2JvcmRlcnMuanM/ZmMwZSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vZGlzcGxheS5qcz84ZDNhIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9mbGV4Ym94LmpzPzY3OGUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL2dyaWQuanM/NzUzOSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vcG9zaXRpb25zLmpzP2Y2OGYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3BhbGV0dGUuanM/MWYyOSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vc2hhZG93cy5qcz9iYjkxIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9zaXppbmcuanM/MDg4YyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vdHlwb2dyYXBoeS5qcz9kNzM3Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9nZXRUaGVtZVZhbHVlLmpzPzg5MDciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3N0eWxlRnVuY3Rpb25TeC9zdHlsZUZ1bmN0aW9uU3guanM/YzUzMyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vY3JlYXRlU3R5bGVkLmpzP2M2ZWIiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvY3JlYXRlTWl4aW5zLmpzP2UyNTkiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9jb2xvcnMvY29tbW9uLmpzPzFmNGQiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9jb2xvcnMvZ3JleS5qcz81ZjE3Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvY29sb3JzL3B1cnBsZS5qcz84ODg4Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvY29sb3JzL3JlZC5qcz9kMTcxIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvY29sb3JzL29yYW5nZS5qcz8wMzU2Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvY29sb3JzL2JsdWUuanM/NTA2ZCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL2NvbG9ycy9saWdodEJsdWUuanM/ZjIzNiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL2NvbG9ycy9ncmVlbi5qcz82YWRlIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvc3R5bGVzL2NyZWF0ZVBhbGV0dGUuanM/ZTE2NSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3N0eWxlcy9jcmVhdGVUeXBvZ3JhcGh5LmpzPzMwNzkiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvc2hhZG93cy5qcz81NDdjIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvc3R5bGVzL2NyZWF0ZVRyYW5zaXRpb25zLmpzPzg2YTUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvekluZGV4LmpzPzY5YTYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvY3JlYXRlVGhlbWUuanM/YjAzZCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3N0eWxlcy9kZWZhdWx0VGhlbWUuanM/OGY5OSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3N0eWxlcy9zdHlsZWQuanM/NTY3ZSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vdXNlVGhlbWVQcm9wcy9nZXRUaGVtZVByb3BzLmpzPzNkZjUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9wcml2YXRlLXRoZW1pbmcvdXNlVGhlbWUvVGhlbWVDb250ZXh0LmpzPzc3MTciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9wcml2YXRlLXRoZW1pbmcvdXNlVGhlbWUvdXNlVGhlbWUuanM/MDk5NiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vdXNlVGhlbWVXaXRob3V0RGVmYXVsdC5qcz84ZjI0Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS91c2VUaGVtZS5qcz82YTgzIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS91c2VUaGVtZVByb3BzL3VzZVRoZW1lUHJvcHMuanM/YjFkYSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3N0eWxlcy91c2VUaGVtZVByb3BzLmpzP2I0MjQiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vc2V0UmVmLmpzP2MwMWYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vdXNlRm9ya1JlZi5qcz9hNjNiIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvdXRpbHMvdXNlRm9ya1JlZi5qcz82NWYwIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvdXRpbHMvZXNtL3VzZUVuaGFuY2VkRWZmZWN0LmpzPzcxOWUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vdXNlRXZlbnRDYWxsYmFjay5qcz8yZmE3Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvdXRpbHMvdXNlRXZlbnRDYWxsYmFjay5qcz8yOTdiIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvdXRpbHMvZXNtL3VzZUlzRm9jdXNWaXNpYmxlLmpzPzA2OGMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC91dGlscy91c2VJc0ZvY3VzVmlzaWJsZS5qcz9mMmI5Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qcz82MWMxIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NldFByb3RvdHlwZU9mLmpzPzAyYzMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcz80OTYxIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL1RyYW5zaXRpb25Hcm91cENvbnRleHQuanM/ZDBmNCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL2VzbS91dGlscy9DaGlsZE1hcHBpbmcuanM/MjBjOCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL2VzbS9UcmFuc2l0aW9uR3JvdXAuanM/NTVlMCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9yZWFjdC9kaXN0L2Vtb3Rpb24tcmVhY3QuYnJvd3Nlci5lc20uanM/MDFlMSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0J1dHRvbkJhc2UvUmlwcGxlLmpzPzI1YWMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vQ2xhc3NOYW1lR2VuZXJhdG9yL0NsYXNzTmFtZUdlbmVyYXRvci5qcz8zYThhIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvdXRpbHMvZXNtL2dlbmVyYXRlVXRpbGl0eUNsYXNzL2dlbmVyYXRlVXRpbGl0eUNsYXNzLmpzPzRlNDYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vZ2VuZXJhdGVVdGlsaXR5Q2xhc3Nlcy9nZW5lcmF0ZVV0aWxpdHlDbGFzc2VzLmpzPzNkODciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9CdXR0b25CYXNlL3RvdWNoUmlwcGxlQ2xhc3Nlcy5qcz8wNzNkIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvQnV0dG9uQmFzZS9Ub3VjaFJpcHBsZS5qcz8yZTI3Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvQnV0dG9uQmFzZS9idXR0b25CYXNlQ2xhc3Nlcy5qcz83ZjJlIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvQnV0dG9uQmFzZS9CdXR0b25CYXNlLmpzPzljYjkiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC91dGlscy9jYXBpdGFsaXplLmpzP2M1ZTciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9CdXR0b24vYnV0dG9uQ2xhc3Nlcy5qcz9kMDAzIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvQnV0dG9uR3JvdXAvQnV0dG9uR3JvdXBDb250ZXh0LmpzPzZkYTkiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9CdXR0b24vQnV0dG9uLmpzP2U0OGYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9JbnB1dEJhc2UvdXRpbHMuanM/MDBlOCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3V0aWxzL2VzbS9pc011aUVsZW1lbnQuanM/YTFiNiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3V0aWxzL2lzTXVpRWxlbWVudC5qcz8zMzczIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvRm9ybUNvbnRyb2wvRm9ybUNvbnRyb2xDb250ZXh0LmpzPzhiYzEiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9Gb3JtQ29udHJvbC9mb3JtQ29udHJvbENsYXNzZXMuanM/NWQxZCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0Zvcm1Db250cm9sL0Zvcm1Db250cm9sLmpzPzE2MGYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9Gb3JtQ29udHJvbC9mb3JtQ29udHJvbFN0YXRlLmpzP2Q0ZTAiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9Gb3JtQ29udHJvbC91c2VGb3JtQ29udHJvbC5qcz9lYzQzIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvRm9ybUxhYmVsL2Zvcm1MYWJlbENsYXNzZXMuanM/ZTEwYiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0Zvcm1MYWJlbC9Gb3JtTGFiZWwuanM/NTQ0YSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0lucHV0TGFiZWwvaW5wdXRMYWJlbENsYXNzZXMuanM/NzhhMiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0lucHV0TGFiZWwvSW5wdXRMYWJlbC5qcz85MTAxIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvTGlzdC9MaXN0Q29udGV4dC5qcz83MzA5Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvdXRpbHMvdXNlRW5oYW5jZWRFZmZlY3QuanM/ZWFhZSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0RpdmlkZXIvZGl2aWRlckNsYXNzZXMuanM/NThlNSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0xpc3RJdGVtSWNvbi9saXN0SXRlbUljb25DbGFzc2VzLmpzP2M2NDUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9MaXN0SXRlbVRleHQvbGlzdEl0ZW1UZXh0Q2xhc3Nlcy5qcz80N2FhIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvTWVudUl0ZW0vbWVudUl0ZW1DbGFzc2VzLmpzPzA0MmIiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9NZW51SXRlbS9NZW51SXRlbS5qcz8yZWViIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvdXRpbHMvZXNtL293bmVyRG9jdW1lbnQuanM/ZWMzNSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3V0aWxzL293bmVyRG9jdW1lbnQuanM/YWRkNyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0xpc3QvbGlzdENsYXNzZXMuanM/YjBhZiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0xpc3QvTGlzdC5qcz8xZmQ5Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvdXRpbHMvZXNtL2dldFNjcm9sbGJhclNpemUuanM/MDEyYiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3V0aWxzL2dldFNjcm9sbGJhclNpemUuanM/MDJkNyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL01lbnVMaXN0L01lbnVMaXN0LmpzP2NjYWUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9QYXBlci9wYXBlckNsYXNzZXMuanM/OWVkYiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1BhcGVyL1BhcGVyLmpzPzFiOGQiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vZGVib3VuY2UuanM/Zjk5NiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3V0aWxzL2RlYm91bmNlLmpzP2VmMjEiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vb3duZXJXaW5kb3cuanM/ZGViMiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3V0aWxzL293bmVyV2luZG93LmpzPzU4NTYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9lc20vY29uZmlnLmpzPzJhNDIiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9lc20vVHJhbnNpdGlvbi5qcz83NTFiIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvc3R5bGVzL3VzZVRoZW1lLmpzPzUyNzQiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC90cmFuc2l0aW9ucy91dGlscy5qcz8wMjIxIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvR3Jvdy9Hcm93LmpzPzUxNTAiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9iYXNlL3V0aWxzL2lzSG9zdENvbXBvbmVudC5qcz82ZGNmIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvdXRpbHMvZXNtL2NyZWF0ZUNoYWluZWRGdW5jdGlvbi5qcz8xOTE2Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvYmFzZS91dGlscy9hcHBlbmRPd25lclN0YXRlLmpzPzlhZTUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9iYXNlL1BvcnRhbC9Qb3J0YWwuanM/NjlhZiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL2Jhc2UvTW9kYWxVbnN0eWxlZC9Nb2RhbE1hbmFnZXIuanM/NmM0MyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL2Jhc2UvVHJhcEZvY3VzL1RyYXBGb2N1cy5qcz8yZGY0Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvYmFzZS9Nb2RhbFVuc3R5bGVkL21vZGFsVW5zdHlsZWRDbGFzc2VzLmpzPzQ4Y2MiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9iYXNlL01vZGFsVW5zdHlsZWQvTW9kYWxVbnN0eWxlZC5qcz9kMzJlIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvRmFkZS9GYWRlLmpzPzg0NjkiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9CYWNrZHJvcC9iYWNrZHJvcENsYXNzZXMuanM/ZmNiMiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL0JhY2tkcm9wL0JhY2tkcm9wLmpzPzRhNGYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9Nb2RhbC9Nb2RhbC5qcz8wYTM4Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvUG9wb3Zlci9wb3BvdmVyQ2xhc3Nlcy5qcz8zNzNjIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvUG9wb3Zlci9Qb3BvdmVyLmpzPzE1OTAiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9NZW51L21lbnVDbGFzc2VzLmpzPzkzZjUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9NZW51L01lbnUuanM/ZTFlOSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL05hdGl2ZVNlbGVjdC9uYXRpdmVTZWxlY3RDbGFzc2VzLmpzPzE3ZjkiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9OYXRpdmVTZWxlY3QvTmF0aXZlU2VsZWN0SW5wdXQuanM/ZjM2MiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL3V0aWxzL2VzbS91c2VDb250cm9sbGVkLmpzP2JlMWMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC91dGlscy91c2VDb250cm9sbGVkLmpzP2Q2ZjMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9TZWxlY3Qvc2VsZWN0Q2xhc3Nlcy5qcz9iNGQ3Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvU2VsZWN0L1NlbGVjdElucHV0LmpzPzBhMzMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9TdmdJY29uL3N2Z0ljb25DbGFzc2VzLmpzP2I3N2QiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9TdmdJY29uL1N2Z0ljb24uanM/NjdhYSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3V0aWxzL2NyZWF0ZVN2Z0ljb24uanM/MzNiYSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL2ludGVybmFsL3N2Zy1pY29ucy9BcnJvd0Ryb3BEb3duLmpzP2IyNmMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9iYXNlL1RleHRhcmVhQXV0b3NpemUvVGV4dGFyZWFBdXRvc2l6ZS5qcz82MDY4Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvc3R5bGVkLWVuZ2luZS9HbG9iYWxTdHlsZXMvR2xvYmFsU3R5bGVzLmpzP2Q5MzciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9HbG9iYWxTdHlsZXMvR2xvYmFsU3R5bGVzLmpzPzlmYTgiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9JbnB1dEJhc2UvaW5wdXRCYXNlQ2xhc3Nlcy5qcz8xYjljIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvSW5wdXRCYXNlL0lucHV0QmFzZS5qcz85MjY1Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvSW5wdXQvaW5wdXRDbGFzc2VzLmpzPzY2YWMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9JbnB1dC9JbnB1dC5qcz81OWQxIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvRmlsbGVkSW5wdXQvZmlsbGVkSW5wdXRDbGFzc2VzLmpzPzVkODkiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9GaWxsZWRJbnB1dC9GaWxsZWRJbnB1dC5qcz83YzllIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvT3V0bGluZWRJbnB1dC9Ob3RjaGVkT3V0bGluZS5qcz82MmQxIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvT3V0bGluZWRJbnB1dC9vdXRsaW5lZElucHV0Q2xhc3Nlcy5qcz9jYmQ0Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvT3V0bGluZWRJbnB1dC9PdXRsaW5lZElucHV0LmpzPzAzMzQiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9TZWxlY3QvU2VsZWN0LmpzP2FkM2QiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9zcmMvY29tcG9uZW50cy9IZWFkZXIvSGVhZGVyLmpzeD8yMWUyIiwid2VicGFjazovL215b2JqZWN0Ly4vc3JjL2NvbXBvbmVudHMvSGVhZGVyL2luZGV4LmpzPzg3YTAiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanM/NjlkNyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL3NyYy9hc3NldHMvc3ZnL2Fycm93LnN2Zz8yMTYxIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93LmpzPzFmYzAiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzPzI3NjciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21hdGguanM/ODRjNiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qcz8wZjg4Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93U2Nyb2xsLmpzP2EzMjEiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRIVE1MRWxlbWVudFNjcm9sbC5qcz81ZmU2Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Tm9kZVNjcm9sbC5qcz8xOTlhIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Tm9kZU5hbWUuanM/NTc4OCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qcz9lZjUyIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93U2Nyb2xsQmFyWC5qcz82MTI1Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qcz9iNTE5Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNTY3JvbGxQYXJlbnQuanM/YWU2YyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldENvbXBvc2l0ZVJlY3QuanM/ZDExNiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldExheW91dFJlY3QuanM/ZTJlOSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFBhcmVudE5vZGUuanM/MjhiZiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFNjcm9sbFBhcmVudC5qcz85ZDBlIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvbGlzdFNjcm9sbFBhcmVudHMuanM/ZWExYSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2lzVGFibGVFbGVtZW50LmpzP2I0NTEiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanM/YjYyYiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZW51bXMuanM/NzdmOSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvb3JkZXJNb2RpZmllcnMuanM/YjllNiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZGVib3VuY2UuanM/YjFlMiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWVyZ2VCeU5hbWUuanM/MmEzNSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvY3JlYXRlUG9wcGVyLmpzPzZjZWUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9ldmVudExpc3RlbmVycy5qcz9hZDZlIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzP2I1MGUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldFZhcmlhdGlvbi5qcz8zZDhkIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQuanM/YWQ5ZCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvY29tcHV0ZU9mZnNldHMuanM/NWQ3ZSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL3BvcHBlck9mZnNldHMuanM/MTM0YSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2NvbXB1dGVTdHlsZXMuanM/N2NkYSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2FwcGx5U3R5bGVzLmpzPzBhYjQiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9vZmZzZXQuanM/OTgzNSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0T3Bwb3NpdGVQbGFjZW1lbnQuanM/NTIzMiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQuanM/NTAwYiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFZpZXdwb3J0UmVjdC5qcz83YzczIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRSZWN0LmpzPzNlNzkiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9jb250YWlucy5qcz83ZjM3Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9yZWN0VG9DbGllbnRSZWN0LmpzPzdiY2YiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRDbGlwcGluZ1JlY3QuanM/OWRlMCIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzPzM1ZjYiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qcz9kMzliIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9leHBhbmRUb0hhc2hNYXAuanM/OTg1MiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanM/YjYxNyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvY29tcHV0ZUF1dG9QbGFjZW1lbnQuanM/NDNjZSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2ZsaXAuanM/ZWNiMiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0QWx0QXhpcy5qcz9mMmUwIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy93aXRoaW4uanM/ZTQzZiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL3ByZXZlbnRPdmVyZmxvdy5qcz85NDM1Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvYXJyb3cuanM/MDkyOSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2hpZGUuanM/MWQ2YyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvcG9wcGVyLmpzPzM5YzMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9iYXNlL1BvcHBlclVuc3R5bGVkL1BvcHBlclVuc3R5bGVkLmpzPzM5ZTUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9Qb3BwZXIvUG9wcGVyLmpzP2I0MDMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS91dGlscy9lc20vdXNlSWQuanM/YmI5OSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3V0aWxzL3VzZUlkLmpzPzBkMjUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9Ub29sdGlwL3Rvb2x0aXBDbGFzc2VzLmpzPzk4OWUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9Ub29sdGlwL1Rvb2x0aXAuanM/YmM3ZiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1RhYmxlL1RhYmxlQ29udGV4dC5qcz82YTZhIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvVGFibGUvdGFibGVDbGFzc2VzLmpzP2FiMmUiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9UYWJsZS9UYWJsZS5qcz8xOGVhIiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvVGFibGUvVGFibGVsdmwyQ29udGV4dC5qcz82ZTk2Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvVGFibGVCb2R5L3RhYmxlQm9keUNsYXNzZXMuanM/NmQ3NiIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1RhYmxlQm9keS9UYWJsZUJvZHkuanM/Mjc1NSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1RhYmxlQ2VsbC90YWJsZUNlbGxDbGFzc2VzLmpzPzU5ZTciLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9UYWJsZUNlbGwvVGFibGVDZWxsLmpzP2M2YWMiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9UYWJsZUNvbnRhaW5lci90YWJsZUNvbnRhaW5lckNsYXNzZXMuanM/ZWM0YSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1RhYmxlQ29udGFpbmVyL1RhYmxlQ29udGFpbmVyLmpzPzY2YjQiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9UYWJsZUhlYWQvdGFibGVIZWFkQ2xhc3Nlcy5qcz85YjM3Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvVGFibGVIZWFkL1RhYmxlSGVhZC5qcz8zZTM1Iiwid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvVGFibGVSb3cvdGFibGVSb3dDbGFzc2VzLmpzPzcyYjgiLCJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9UYWJsZVJvdy9UYWJsZVJvdy5qcz81NGMxIiwid2VicGFjazovL215b2JqZWN0Ly4vc3JjL2NvbXBvbmVudHMvVGFibGVMaXN0L1RhYmxlTGlzdC5qc3g/ZmMyNyIsIndlYnBhY2s6Ly9teW9iamVjdC8uL3NyYy9jb21wb25lbnRzL1RhYmxlTGlzdC9pbmRleC5qcz82ZDVmIiwid2VicGFjazovL215b2JqZWN0Ly4vc3JjL0FwcC5qc3g/OWYwNSIsIndlYnBhY2s6Ly9teW9iamVjdC8uL3NyYy9pbmRleC5qcz9kOWJlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7XG4gIHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTtcblxuICBpZiAoX2kgPT0gbnVsbCkgcmV0dXJuO1xuICB2YXIgX2FyciA9IFtdO1xuICB2YXIgX24gPSB0cnVlO1xuICB2YXIgX2QgPSBmYWxzZTtcblxuICB2YXIgX3MsIF9lO1xuXG4gIHRyeSB7XG4gICAgZm9yIChfaSA9IF9pLmNhbGwoYXJyKTsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2QgPSB0cnVlO1xuICAgIF9lID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9hcnI7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyMltpXSA9IGFycltpXTtcbiAgfVxuXG4gIHJldHVybiBhcnIyO1xufSIsImltcG9ydCBhcnJheUxpa2VUb0FycmF5IGZyb20gXCIuL2FycmF5TGlrZVRvQXJyYXkuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgaWYgKCFvKSByZXR1cm47XG4gIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTtcbiAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn0iLCJpbXBvcnQgYXJyYXlXaXRoSG9sZXMgZnJvbSBcIi4vYXJyYXlXaXRoSG9sZXMuanNcIjtcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXlMaW1pdCBmcm9tIFwiLi9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qc1wiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCIuL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzXCI7XG5pbXBvcnQgbm9uSXRlcmFibGVSZXN0IGZyb20gXCIuL25vbkl0ZXJhYmxlUmVzdC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBhcnJheVdpdGhIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZnVuY3Rpb24gdG9WYWwobWl4KSB7XG5cdHZhciBrLCB5LCBzdHI9Jyc7XG5cblx0aWYgKHR5cGVvZiBtaXggPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBtaXggPT09ICdudW1iZXInKSB7XG5cdFx0c3RyICs9IG1peDtcblx0fSBlbHNlIGlmICh0eXBlb2YgbWl4ID09PSAnb2JqZWN0Jykge1xuXHRcdGlmIChBcnJheS5pc0FycmF5KG1peCkpIHtcblx0XHRcdGZvciAoaz0wOyBrIDwgbWl4Lmxlbmd0aDsgaysrKSB7XG5cdFx0XHRcdGlmIChtaXhba10pIHtcblx0XHRcdFx0XHRpZiAoeSA9IHRvVmFsKG1peFtrXSkpIHtcblx0XHRcdFx0XHRcdHN0ciAmJiAoc3RyICs9ICcgJyk7XG5cdFx0XHRcdFx0XHRzdHIgKz0geTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yIChrIGluIG1peCkge1xuXHRcdFx0XHRpZiAobWl4W2tdKSB7XG5cdFx0XHRcdFx0c3RyICYmIChzdHIgKz0gJyAnKTtcblx0XHRcdFx0XHRzdHIgKz0gaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBzdHI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpIHtcblx0dmFyIGk9MCwgdG1wLCB4LCBzdHI9Jyc7XG5cdHdoaWxlIChpIDwgYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdGlmICh0bXAgPSBhcmd1bWVudHNbaSsrXSkge1xuXHRcdFx0aWYgKHggPSB0b1ZhbCh0bXApKSB7XG5cdFx0XHRcdHN0ciAmJiAoc3RyICs9ICcgJyk7XG5cdFx0XHRcdHN0ciArPSB4XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdHJldHVybiBzdHI7XG59XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcblxuLyoqXG4gKiBBZGQga2V5cywgdmFsdWVzIG9mIGBkZWZhdWx0UHJvcHNgIHRoYXQgZG9lcyBub3QgZXhpc3QgaW4gYHByb3BzYFxuICogQHBhcmFtIHtvYmplY3R9IGRlZmF1bHRQcm9wc1xuICogQHBhcmFtIHtvYmplY3R9IHByb3BzXG4gKiBAcmV0dXJucyB7b2JqZWN0fSByZXNvbHZlZCBwcm9wc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXNvbHZlUHJvcHMoZGVmYXVsdFByb3BzLCBwcm9wcykge1xuICBjb25zdCBvdXRwdXQgPSBfZXh0ZW5kcyh7fSwgcHJvcHMpO1xuXG4gIE9iamVjdC5rZXlzKGRlZmF1bHRQcm9wcykuZm9yRWFjaChwcm9wTmFtZSA9PiB7XG4gICAgaWYgKG91dHB1dFtwcm9wTmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgb3V0cHV0W3Byb3BOYW1lXSA9IGRlZmF1bHRQcm9wc1twcm9wTmFtZV07XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIG91dHB1dDtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0VXRpbGl0eUNsYXNzLCBjbGFzc2VzKSB7XG4gIGNvbnN0IG91dHB1dCA9IHt9O1xuICBPYmplY3Qua2V5cyhzbG90cykuZm9yRWFjaCggLy8gYE9iamV0LmtleXMoc2xvdHMpYCBjYW4ndCBiZSB3aWRlciB0aGFuIGBUYCBiZWNhdXNlIHdlIGluZmVyIGBUYCBmcm9tIGBzbG90c2AuXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9UeXBlU2NyaXB0L3B1bGwvMTIyNTMjaXNzdWVjb21tZW50LTI2MzEzMjIwOFxuICBzbG90ID0+IHtcbiAgICBvdXRwdXRbc2xvdF0gPSBzbG90c1tzbG90XS5yZWR1Y2UoKGFjYywga2V5KSA9PiB7XG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIGlmIChjbGFzc2VzICYmIGNsYXNzZXNba2V5XSkge1xuICAgICAgICAgIGFjYy5wdXNoKGNsYXNzZXNba2V5XSk7XG4gICAgICAgIH1cblxuICAgICAgICBhY2MucHVzaChnZXRVdGlsaXR5Q2xhc3Moa2V5KSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgW10pLmpvaW4oJyAnKTtcbiAgfSk7XG4gIHJldHVybiBvdXRwdXQ7XG59IiwiLyoqXG4gKiBXQVJOSU5HOiBEb24ndCBpbXBvcnQgdGhpcyBkaXJlY3RseS5cbiAqIFVzZSBgTXVpRXJyb3JgIGZyb20gYEBtdWkvdXRpbHMvbWFjcm9zL011aUVycm9yLm1hY3JvYCBpbnN0ZWFkLlxuICogQHBhcmFtIHtudW1iZXJ9IGNvZGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0TXVpRXJyb3JNZXNzYWdlKGNvZGUpIHtcbiAgLy8gQXBwbHkgYmFiZWwtcGx1Z2luLXRyYW5zZm9ybS10ZW1wbGF0ZS1saXRlcmFscyBpbiBsb29zZSBtb2RlXG4gIC8vIGxvb3NlIG1vZGUgaXMgc2FmZSBpZmYgd2UncmUgY29uY2F0ZW5hdGluZyBwcmltaXRpdmVzXG4gIC8vIHNlZSBodHRwczovL2JhYmVsanMuaW8vZG9jcy9lbi9iYWJlbC1wbHVnaW4tdHJhbnNmb3JtLXRlbXBsYXRlLWxpdGVyYWxzI2xvb3NlXG5cbiAgLyogZXNsaW50LWRpc2FibGUgcHJlZmVyLXRlbXBsYXRlICovXG4gIGxldCB1cmwgPSAnaHR0cHM6Ly9tdWkuY29tL3Byb2R1Y3Rpb24tZXJyb3IvP2NvZGU9JyArIGNvZGU7XG5cbiAgZm9yIChsZXQgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAvLyByZXN0IHBhcmFtcyBvdmVyLXRyYW5zcGlsZSBmb3IgdGhpcyBjYXNlXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1yZXN0LXBhcmFtc1xuICAgIHVybCArPSAnJmFyZ3NbXT0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tpXSk7XG4gIH1cblxuICByZXR1cm4gJ01pbmlmaWVkIE1VSSBlcnJvciAjJyArIGNvZGUgKyAnOyB2aXNpdCAnICsgdXJsICsgJyBmb3IgdGhlIGZ1bGwgbWVzc2FnZS4nO1xuICAvKiBlc2xpbnQtZW5hYmxlIHByZWZlci10ZW1wbGF0ZSAqL1xufSIsImltcG9ydCB7IGZvcm1hdE11aUVycm9yTWVzc2FnZSBhcyBfZm9ybWF0TXVpRXJyb3JNZXNzYWdlIH0gZnJvbSBcIkBtdWkvdXRpbHNcIjtcblxuLyoqXG4gKiBSZXR1cm5zIGEgbnVtYmVyIHdob3NlIHZhbHVlIGlzIGxpbWl0ZWQgdG8gdGhlIGdpdmVuIHJhbmdlLlxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlIFRoZSB2YWx1ZSB0byBiZSBjbGFtcGVkXG4gKiBAcGFyYW0ge251bWJlcn0gbWluIFRoZSBsb3dlciBib3VuZGFyeSBvZiB0aGUgb3V0cHV0IHJhbmdlXG4gKiBAcGFyYW0ge251bWJlcn0gbWF4IFRoZSB1cHBlciBib3VuZGFyeSBvZiB0aGUgb3V0cHV0IHJhbmdlXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBBIG51bWJlciBpbiB0aGUgcmFuZ2UgW21pbiwgbWF4XVxuICovXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZSwgbWluID0gMCwgbWF4ID0gMSkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICh2YWx1ZSA8IG1pbiB8fCB2YWx1ZSA+IG1heCkge1xuICAgICAgY29uc29sZS5lcnJvcihgTVVJOiBUaGUgdmFsdWUgcHJvdmlkZWQgJHt2YWx1ZX0gaXMgb3V0IG9mIHJhbmdlIFske21pbn0sICR7bWF4fV0uYCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG1pbiwgdmFsdWUpLCBtYXgpO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhIGNvbG9yIGZyb20gQ1NTIGhleCBmb3JtYXQgdG8gQ1NTIHJnYiBmb3JtYXQuXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBIZXggY29sb3IsIGkuZS4gI25ubiBvciAjbm5ubm5uXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyByZ2IgY29sb3Igc3RyaW5nXG4gKi9cblxuXG5leHBvcnQgZnVuY3Rpb24gaGV4VG9SZ2IoY29sb3IpIHtcbiAgY29sb3IgPSBjb2xvci5zbGljZSgxKTtcbiAgY29uc3QgcmUgPSBuZXcgUmVnRXhwKGAuezEsJHtjb2xvci5sZW5ndGggPj0gNiA/IDIgOiAxfX1gLCAnZycpO1xuICBsZXQgY29sb3JzID0gY29sb3IubWF0Y2gocmUpO1xuXG4gIGlmIChjb2xvcnMgJiYgY29sb3JzWzBdLmxlbmd0aCA9PT0gMSkge1xuICAgIGNvbG9ycyA9IGNvbG9ycy5tYXAobiA9PiBuICsgbik7XG4gIH1cblxuICByZXR1cm4gY29sb3JzID8gYHJnYiR7Y29sb3JzLmxlbmd0aCA9PT0gNCA/ICdhJyA6ICcnfSgke2NvbG9ycy5tYXAoKG4sIGluZGV4KSA9PiB7XG4gICAgcmV0dXJuIGluZGV4IDwgMyA/IHBhcnNlSW50KG4sIDE2KSA6IE1hdGgucm91bmQocGFyc2VJbnQobiwgMTYpIC8gMjU1ICogMTAwMCkgLyAxMDAwO1xuICB9KS5qb2luKCcsICcpfSlgIDogJyc7XG59XG5cbmZ1bmN0aW9uIGludFRvSGV4KGludCkge1xuICBjb25zdCBoZXggPSBpbnQudG9TdHJpbmcoMTYpO1xuICByZXR1cm4gaGV4Lmxlbmd0aCA9PT0gMSA/IGAwJHtoZXh9YCA6IGhleDtcbn1cbi8qKlxuICogUmV0dXJucyBhbiBvYmplY3Qgd2l0aCB0aGUgdHlwZSBhbmQgdmFsdWVzIG9mIGEgY29sb3IuXG4gKlxuICogTm90ZTogRG9lcyBub3Qgc3VwcG9ydCByZ2IgJSB2YWx1ZXMuXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLCBjb2xvcigpXG4gKiBAcmV0dXJucyB7b2JqZWN0fSAtIEEgTVVJIGNvbG9yIG9iamVjdDoge3R5cGU6IHN0cmluZywgdmFsdWVzOiBudW1iZXJbXX1cbiAqL1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBkZWNvbXBvc2VDb2xvcihjb2xvcikge1xuICAvLyBJZGVtcG90ZW50XG4gIGlmIChjb2xvci50eXBlKSB7XG4gICAgcmV0dXJuIGNvbG9yO1xuICB9XG5cbiAgaWYgKGNvbG9yLmNoYXJBdCgwKSA9PT0gJyMnKSB7XG4gICAgcmV0dXJuIGRlY29tcG9zZUNvbG9yKGhleFRvUmdiKGNvbG9yKSk7XG4gIH1cblxuICBjb25zdCBtYXJrZXIgPSBjb2xvci5pbmRleE9mKCcoJyk7XG4gIGNvbnN0IHR5cGUgPSBjb2xvci5zdWJzdHJpbmcoMCwgbWFya2VyKTtcblxuICBpZiAoWydyZ2InLCAncmdiYScsICdoc2wnLCAnaHNsYScsICdjb2xvciddLmluZGV4T2YodHlwZSkgPT09IC0xKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGBNVUk6IFVuc3VwcG9ydGVkIFxcYCR7Y29sb3J9XFxgIGNvbG9yLlxuVGhlIGZvbGxvd2luZyBmb3JtYXRzIGFyZSBzdXBwb3J0ZWQ6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKCksIGNvbG9yKCkuYCA6IF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UoOSwgY29sb3IpKTtcbiAgfVxuXG4gIGxldCB2YWx1ZXMgPSBjb2xvci5zdWJzdHJpbmcobWFya2VyICsgMSwgY29sb3IubGVuZ3RoIC0gMSk7XG4gIGxldCBjb2xvclNwYWNlO1xuXG4gIGlmICh0eXBlID09PSAnY29sb3InKSB7XG4gICAgdmFsdWVzID0gdmFsdWVzLnNwbGl0KCcgJyk7XG4gICAgY29sb3JTcGFjZSA9IHZhbHVlcy5zaGlmdCgpO1xuXG4gICAgaWYgKHZhbHVlcy5sZW5ndGggPT09IDQgJiYgdmFsdWVzWzNdLmNoYXJBdCgwKSA9PT0gJy8nKSB7XG4gICAgICB2YWx1ZXNbM10gPSB2YWx1ZXNbM10uc2xpY2UoMSk7XG4gICAgfVxuXG4gICAgaWYgKFsnc3JnYicsICdkaXNwbGF5LXAzJywgJ2E5OC1yZ2InLCAncHJvcGhvdG8tcmdiJywgJ3JlYy0yMDIwJ10uaW5kZXhPZihjb2xvclNwYWNlKSA9PT0gLTEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBgTVVJOiB1bnN1cHBvcnRlZCBcXGAke2NvbG9yU3BhY2V9XFxgIGNvbG9yIHNwYWNlLlxuVGhlIGZvbGxvd2luZyBjb2xvciBzcGFjZXMgYXJlIHN1cHBvcnRlZDogc3JnYiwgZGlzcGxheS1wMywgYTk4LXJnYiwgcHJvcGhvdG8tcmdiLCByZWMtMjAyMC5gIDogX2Zvcm1hdE11aUVycm9yTWVzc2FnZSgxMCwgY29sb3JTcGFjZSkpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YWx1ZXMgPSB2YWx1ZXMuc3BsaXQoJywnKTtcbiAgfVxuXG4gIHZhbHVlcyA9IHZhbHVlcy5tYXAodmFsdWUgPT4gcGFyc2VGbG9hdCh2YWx1ZSkpO1xuICByZXR1cm4ge1xuICAgIHR5cGUsXG4gICAgdmFsdWVzLFxuICAgIGNvbG9yU3BhY2VcbiAgfTtcbn1cbi8qKlxuICogUmV0dXJucyBhIGNoYW5uZWwgY3JlYXRlZCBmcm9tIHRoZSBpbnB1dCBjb2xvci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLCBjb2xvcigpXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIFRoZSBjaGFubmVsIGZvciB0aGUgY29sb3IsIHRoYXQgY2FuIGJlIHVzZWQgaW4gcmdiYSBvciBoc2xhIGNvbG9yc1xuICovXG5cbmV4cG9ydCBjb25zdCBjb2xvckNoYW5uZWwgPSBjb2xvciA9PiB7XG4gIGNvbnN0IGRlY29tcG9zZWRDb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgcmV0dXJuIGRlY29tcG9zZWRDb2xvci52YWx1ZXMuc2xpY2UoMCwgMykubWFwKCh2YWwsIGlkeCkgPT4gZGVjb21wb3NlZENvbG9yLnR5cGUuaW5kZXhPZignaHNsJykgIT09IC0xICYmIGlkeCAhPT0gMCA/IGAke3ZhbH0lYCA6IHZhbCkuam9pbignICcpO1xufTtcbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBvYmplY3Qgd2l0aCB0eXBlIGFuZCB2YWx1ZXMgdG8gYSBzdHJpbmcuXG4gKiBAcGFyYW0ge29iamVjdH0gY29sb3IgLSBEZWNvbXBvc2VkIGNvbG9yXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IudHlwZSAtIE9uZSBvZjogJ3JnYicsICdyZ2JhJywgJ2hzbCcsICdoc2xhJywgJ2NvbG9yJ1xuICogQHBhcmFtIHthcnJheX0gY29sb3IudmFsdWVzIC0gW24sbixuXSBvciBbbixuLG4sbl1cbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIGNvbG9yIHN0cmluZ1xuICovXG5cbmV4cG9ydCBmdW5jdGlvbiByZWNvbXBvc2VDb2xvcihjb2xvcikge1xuICBjb25zdCB7XG4gICAgdHlwZSxcbiAgICBjb2xvclNwYWNlXG4gIH0gPSBjb2xvcjtcbiAgbGV0IHtcbiAgICB2YWx1ZXNcbiAgfSA9IGNvbG9yO1xuXG4gIGlmICh0eXBlLmluZGV4T2YoJ3JnYicpICE9PSAtMSkge1xuICAgIC8vIE9ubHkgY29udmVydCB0aGUgZmlyc3QgMyB2YWx1ZXMgdG8gaW50IChpLmUuIG5vdCBhbHBoYSlcbiAgICB2YWx1ZXMgPSB2YWx1ZXMubWFwKChuLCBpKSA9PiBpIDwgMyA/IHBhcnNlSW50KG4sIDEwKSA6IG4pO1xuICB9IGVsc2UgaWYgKHR5cGUuaW5kZXhPZignaHNsJykgIT09IC0xKSB7XG4gICAgdmFsdWVzWzFdID0gYCR7dmFsdWVzWzFdfSVgO1xuICAgIHZhbHVlc1syXSA9IGAke3ZhbHVlc1syXX0lYDtcbiAgfVxuXG4gIGlmICh0eXBlLmluZGV4T2YoJ2NvbG9yJykgIT09IC0xKSB7XG4gICAgdmFsdWVzID0gYCR7Y29sb3JTcGFjZX0gJHt2YWx1ZXMuam9pbignICcpfWA7XG4gIH0gZWxzZSB7XG4gICAgdmFsdWVzID0gYCR7dmFsdWVzLmpvaW4oJywgJyl9YDtcbiAgfVxuXG4gIHJldHVybiBgJHt0eXBlfSgke3ZhbHVlc30pYDtcbn1cbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBmcm9tIENTUyByZ2IgZm9ybWF0IHRvIENTUyBoZXggZm9ybWF0LlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gUkdCIGNvbG9yLCBpLmUuIHJnYihuLCBuLCBuKVxuICogQHJldHVybnMge3N0cmluZ30gQSBDU1MgcmdiIGNvbG9yIHN0cmluZywgaS5lLiAjbm5ubm5uXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIHJnYlRvSGV4KGNvbG9yKSB7XG4gIC8vIElkZW1wb3RlbnRcbiAgaWYgKGNvbG9yLmluZGV4T2YoJyMnKSA9PT0gMCkge1xuICAgIHJldHVybiBjb2xvcjtcbiAgfVxuXG4gIGNvbnN0IHtcbiAgICB2YWx1ZXNcbiAgfSA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgcmV0dXJuIGAjJHt2YWx1ZXMubWFwKChuLCBpKSA9PiBpbnRUb0hleChpID09PSAzID8gTWF0aC5yb3VuZCgyNTUgKiBuKSA6IG4pKS5qb2luKCcnKX1gO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhIGNvbG9yIGZyb20gaHNsIGZvcm1hdCB0byByZ2IgZm9ybWF0LlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gSFNMIGNvbG9yIHZhbHVlc1xuICogQHJldHVybnMge3N0cmluZ30gcmdiIGNvbG9yIHZhbHVlc1xuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBoc2xUb1JnYihjb2xvcikge1xuICBjb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgY29uc3Qge1xuICAgIHZhbHVlc1xuICB9ID0gY29sb3I7XG4gIGNvbnN0IGggPSB2YWx1ZXNbMF07XG4gIGNvbnN0IHMgPSB2YWx1ZXNbMV0gLyAxMDA7XG4gIGNvbnN0IGwgPSB2YWx1ZXNbMl0gLyAxMDA7XG4gIGNvbnN0IGEgPSBzICogTWF0aC5taW4obCwgMSAtIGwpO1xuXG4gIGNvbnN0IGYgPSAobiwgayA9IChuICsgaCAvIDMwKSAlIDEyKSA9PiBsIC0gYSAqIE1hdGgubWF4KE1hdGgubWluKGsgLSAzLCA5IC0gaywgMSksIC0xKTtcblxuICBsZXQgdHlwZSA9ICdyZ2InO1xuICBjb25zdCByZ2IgPSBbTWF0aC5yb3VuZChmKDApICogMjU1KSwgTWF0aC5yb3VuZChmKDgpICogMjU1KSwgTWF0aC5yb3VuZChmKDQpICogMjU1KV07XG5cbiAgaWYgKGNvbG9yLnR5cGUgPT09ICdoc2xhJykge1xuICAgIHR5cGUgKz0gJ2EnO1xuICAgIHJnYi5wdXNoKHZhbHVlc1szXSk7XG4gIH1cblxuICByZXR1cm4gcmVjb21wb3NlQ29sb3Ioe1xuICAgIHR5cGUsXG4gICAgdmFsdWVzOiByZ2JcbiAgfSk7XG59XG4vKipcbiAqIFRoZSByZWxhdGl2ZSBicmlnaHRuZXNzIG9mIGFueSBwb2ludCBpbiBhIGNvbG9yIHNwYWNlLFxuICogbm9ybWFsaXplZCB0byAwIGZvciBkYXJrZXN0IGJsYWNrIGFuZCAxIGZvciBsaWdodGVzdCB3aGl0ZS5cbiAqXG4gKiBGb3JtdWxhOiBodHRwczovL3d3dy53My5vcmcvVFIvV0NBRzIwLVRFQ0hTL0cxNy5odG1sI0cxNy10ZXN0c1xuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKSwgY29sb3IoKVxuICogQHJldHVybnMge251bWJlcn0gVGhlIHJlbGF0aXZlIGJyaWdodG5lc3Mgb2YgdGhlIGNvbG9yIGluIHRoZSByYW5nZSAwIC0gMVxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRMdW1pbmFuY2UoY29sb3IpIHtcbiAgY29sb3IgPSBkZWNvbXBvc2VDb2xvcihjb2xvcik7XG4gIGxldCByZ2IgPSBjb2xvci50eXBlID09PSAnaHNsJyA/IGRlY29tcG9zZUNvbG9yKGhzbFRvUmdiKGNvbG9yKSkudmFsdWVzIDogY29sb3IudmFsdWVzO1xuICByZ2IgPSByZ2IubWFwKHZhbCA9PiB7XG4gICAgaWYgKGNvbG9yLnR5cGUgIT09ICdjb2xvcicpIHtcbiAgICAgIHZhbCAvPSAyNTU7IC8vIG5vcm1hbGl6ZWRcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsIDw9IDAuMDM5MjggPyB2YWwgLyAxMi45MiA6ICgodmFsICsgMC4wNTUpIC8gMS4wNTUpICoqIDIuNDtcbiAgfSk7IC8vIFRydW5jYXRlIGF0IDMgZGlnaXRzXG5cbiAgcmV0dXJuIE51bWJlcigoMC4yMTI2ICogcmdiWzBdICsgMC43MTUyICogcmdiWzFdICsgMC4wNzIyICogcmdiWzJdKS50b0ZpeGVkKDMpKTtcbn1cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgY29udHJhc3QgcmF0aW8gYmV0d2VlbiB0d28gY29sb3JzLlxuICpcbiAqIEZvcm11bGE6IGh0dHBzOi8vd3d3LnczLm9yZy9UUi9XQ0FHMjAtVEVDSFMvRzE3Lmh0bWwjRzE3LXRlc3RzXG4gKiBAcGFyYW0ge3N0cmluZ30gZm9yZWdyb3VuZCAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYWNrZ3JvdW5kIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKVxuICogQHJldHVybnMge251bWJlcn0gQSBjb250cmFzdCByYXRpbyB2YWx1ZSBpbiB0aGUgcmFuZ2UgMCAtIDIxLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250cmFzdFJhdGlvKGZvcmVncm91bmQsIGJhY2tncm91bmQpIHtcbiAgY29uc3QgbHVtQSA9IGdldEx1bWluYW5jZShmb3JlZ3JvdW5kKTtcbiAgY29uc3QgbHVtQiA9IGdldEx1bWluYW5jZShiYWNrZ3JvdW5kKTtcbiAgcmV0dXJuIChNYXRoLm1heChsdW1BLCBsdW1CKSArIDAuMDUpIC8gKE1hdGgubWluKGx1bUEsIGx1bUIpICsgMC4wNSk7XG59XG4vKipcbiAqIFNldHMgdGhlIGFic29sdXRlIHRyYW5zcGFyZW5jeSBvZiBhIGNvbG9yLlxuICogQW55IGV4aXN0aW5nIGFscGhhIHZhbHVlcyBhcmUgb3ZlcndyaXR0ZW4uXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLCBjb2xvcigpXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgLSB2YWx1ZSB0byBzZXQgdGhlIGFscGhhIGNoYW5uZWwgdG8gaW4gdGhlIHJhbmdlIDAgLSAxXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmcuIEhleCBpbnB1dCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzIHJnYlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBhbHBoYShjb2xvciwgdmFsdWUpIHtcbiAgY29sb3IgPSBkZWNvbXBvc2VDb2xvcihjb2xvcik7XG4gIHZhbHVlID0gY2xhbXAodmFsdWUpO1xuXG4gIGlmIChjb2xvci50eXBlID09PSAncmdiJyB8fCBjb2xvci50eXBlID09PSAnaHNsJykge1xuICAgIGNvbG9yLnR5cGUgKz0gJ2EnO1xuICB9XG5cbiAgaWYgKGNvbG9yLnR5cGUgPT09ICdjb2xvcicpIHtcbiAgICBjb2xvci52YWx1ZXNbM10gPSBgLyR7dmFsdWV9YDtcbiAgfSBlbHNlIHtcbiAgICBjb2xvci52YWx1ZXNbM10gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiByZWNvbXBvc2VDb2xvcihjb2xvcik7XG59XG4vKipcbiAqIERhcmtlbnMgYSBjb2xvci5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKCksIGNvbG9yKClcbiAqIEBwYXJhbSB7bnVtYmVyfSBjb2VmZmljaWVudCAtIG11bHRpcGxpZXIgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmcuIEhleCBpbnB1dCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzIHJnYlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBkYXJrZW4oY29sb3IsIGNvZWZmaWNpZW50KSB7XG4gIGNvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICBjb2VmZmljaWVudCA9IGNsYW1wKGNvZWZmaWNpZW50KTtcblxuICBpZiAoY29sb3IudHlwZS5pbmRleE9mKCdoc2wnKSAhPT0gLTEpIHtcbiAgICBjb2xvci52YWx1ZXNbMl0gKj0gMSAtIGNvZWZmaWNpZW50O1xuICB9IGVsc2UgaWYgKGNvbG9yLnR5cGUuaW5kZXhPZigncmdiJykgIT09IC0xIHx8IGNvbG9yLnR5cGUuaW5kZXhPZignY29sb3InKSAhPT0gLTEpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDM7IGkgKz0gMSkge1xuICAgICAgY29sb3IudmFsdWVzW2ldICo9IDEgLSBjb2VmZmljaWVudDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVjb21wb3NlQ29sb3IoY29sb3IpO1xufVxuLyoqXG4gKiBMaWdodGVucyBhIGNvbG9yLlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKSwgY29sb3IoKVxuICogQHBhcmFtIHtudW1iZXJ9IGNvZWZmaWNpZW50IC0gbXVsdGlwbGllciBpbiB0aGUgcmFuZ2UgMCAtIDFcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIGNvbG9yIHN0cmluZy4gSGV4IGlucHV0IHZhbHVlcyBhcmUgcmV0dXJuZWQgYXMgcmdiXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGxpZ2h0ZW4oY29sb3IsIGNvZWZmaWNpZW50KSB7XG4gIGNvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICBjb2VmZmljaWVudCA9IGNsYW1wKGNvZWZmaWNpZW50KTtcblxuICBpZiAoY29sb3IudHlwZS5pbmRleE9mKCdoc2wnKSAhPT0gLTEpIHtcbiAgICBjb2xvci52YWx1ZXNbMl0gKz0gKDEwMCAtIGNvbG9yLnZhbHVlc1syXSkgKiBjb2VmZmljaWVudDtcbiAgfSBlbHNlIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ3JnYicpICE9PSAtMSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSArPSAxKSB7XG4gICAgICBjb2xvci52YWx1ZXNbaV0gKz0gKDI1NSAtIGNvbG9yLnZhbHVlc1tpXSkgKiBjb2VmZmljaWVudDtcbiAgICB9XG4gIH0gZWxzZSBpZiAoY29sb3IudHlwZS5pbmRleE9mKCdjb2xvcicpICE9PSAtMSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSArPSAxKSB7XG4gICAgICBjb2xvci52YWx1ZXNbaV0gKz0gKDEgLSBjb2xvci52YWx1ZXNbaV0pICogY29lZmZpY2llbnQ7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlY29tcG9zZUNvbG9yKGNvbG9yKTtcbn1cbi8qKlxuICogRGFya2VuIG9yIGxpZ2h0ZW4gYSBjb2xvciwgZGVwZW5kaW5nIG9uIGl0cyBsdW1pbmFuY2UuXG4gKiBMaWdodCBjb2xvcnMgYXJlIGRhcmtlbmVkLCBkYXJrIGNvbG9ycyBhcmUgbGlnaHRlbmVkLlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKSwgY29sb3IoKVxuICogQHBhcmFtIHtudW1iZXJ9IGNvZWZmaWNpZW50PTAuMTUgLSBtdWx0aXBsaWVyIGluIHRoZSByYW5nZSAwIC0gMVxuICogQHJldHVybnMge3N0cmluZ30gQSBDU1MgY29sb3Igc3RyaW5nLiBIZXggaW5wdXQgdmFsdWVzIGFyZSByZXR1cm5lZCBhcyByZ2JcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZW1waGFzaXplKGNvbG9yLCBjb2VmZmljaWVudCA9IDAuMTUpIHtcbiAgcmV0dXJuIGdldEx1bWluYW5jZShjb2xvcikgPiAwLjUgPyBkYXJrZW4oY29sb3IsIGNvZWZmaWNpZW50KSA6IGxpZ2h0ZW4oY29sb3IsIGNvZWZmaWNpZW50KTtcbn0iLCJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgaWYgKGNhY2hlW2FyZ10gPT09IHVuZGVmaW5lZCkgY2FjaGVbYXJnXSA9IGZuKGFyZyk7XG4gICAgcmV0dXJuIGNhY2hlW2FyZ107XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemU7XG4iLCJpbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcblxudmFyIHJlYWN0UHJvcHNSZWdleCA9IC9eKChjaGlsZHJlbnxkYW5nZXJvdXNseVNldElubmVySFRNTHxrZXl8cmVmfGF1dG9Gb2N1c3xkZWZhdWx0VmFsdWV8ZGVmYXVsdENoZWNrZWR8aW5uZXJIVE1MfHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ3xzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmd8dmFsdWVMaW5rfGFiYnJ8YWNjZXB0fGFjY2VwdENoYXJzZXR8YWNjZXNzS2V5fGFjdGlvbnxhbGxvd3xhbGxvd1VzZXJNZWRpYXxhbGxvd1BheW1lbnRSZXF1ZXN0fGFsbG93RnVsbFNjcmVlbnxhbGxvd1RyYW5zcGFyZW5jeXxhbHR8YXN5bmN8YXV0b0NvbXBsZXRlfGF1dG9QbGF5fGNhcHR1cmV8Y2VsbFBhZGRpbmd8Y2VsbFNwYWNpbmd8Y2hhbGxlbmdlfGNoYXJTZXR8Y2hlY2tlZHxjaXRlfGNsYXNzSUR8Y2xhc3NOYW1lfGNvbHN8Y29sU3Bhbnxjb250ZW50fGNvbnRlbnRFZGl0YWJsZXxjb250ZXh0TWVudXxjb250cm9sc3xjb250cm9sc0xpc3R8Y29vcmRzfGNyb3NzT3JpZ2lufGRhdGF8ZGF0ZVRpbWV8ZGVjb2Rpbmd8ZGVmYXVsdHxkZWZlcnxkaXJ8ZGlzYWJsZWR8ZGlzYWJsZVBpY3R1cmVJblBpY3R1cmV8ZG93bmxvYWR8ZHJhZ2dhYmxlfGVuY1R5cGV8ZW50ZXJLZXlIaW50fGZvcm18Zm9ybUFjdGlvbnxmb3JtRW5jVHlwZXxmb3JtTWV0aG9kfGZvcm1Ob1ZhbGlkYXRlfGZvcm1UYXJnZXR8ZnJhbWVCb3JkZXJ8aGVhZGVyc3xoZWlnaHR8aGlkZGVufGhpZ2h8aHJlZnxocmVmTGFuZ3xodG1sRm9yfGh0dHBFcXVpdnxpZHxpbnB1dE1vZGV8aW50ZWdyaXR5fGlzfGtleVBhcmFtc3xrZXlUeXBlfGtpbmR8bGFiZWx8bGFuZ3xsaXN0fGxvYWRpbmd8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHJhbnNsYXRlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5jcmVtZW50YWx8ZmFsbGJhY2t8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufG9wdGlvbnxyZXN1bHRzfHNlY3VyaXR5fHVuc2VsZWN0YWJsZXxhY2NlbnRIZWlnaHR8YWNjdW11bGF0ZXxhZGRpdGl2ZXxhbGlnbm1lbnRCYXNlbGluZXxhbGxvd1Jlb3JkZXJ8YWxwaGFiZXRpY3xhbXBsaXR1ZGV8YXJhYmljRm9ybXxhc2NlbnR8YXR0cmlidXRlTmFtZXxhdHRyaWJ1dGVUeXBlfGF1dG9SZXZlcnNlfGF6aW11dGh8YmFzZUZyZXF1ZW5jeXxiYXNlbGluZVNoaWZ0fGJhc2VQcm9maWxlfGJib3h8YmVnaW58Ymlhc3xieXxjYWxjTW9kZXxjYXBIZWlnaHR8Y2xpcHxjbGlwUGF0aFVuaXRzfGNsaXBQYXRofGNsaXBSdWxlfGNvbG9ySW50ZXJwb2xhdGlvbnxjb2xvckludGVycG9sYXRpb25GaWx0ZXJzfGNvbG9yUHJvZmlsZXxjb2xvclJlbmRlcmluZ3xjb250ZW50U2NyaXB0VHlwZXxjb250ZW50U3R5bGVUeXBlfGN1cnNvcnxjeHxjeXxkfGRlY2VsZXJhdGV8ZGVzY2VudHxkaWZmdXNlQ29uc3RhbnR8ZGlyZWN0aW9ufGRpc3BsYXl8ZGl2aXNvcnxkb21pbmFudEJhc2VsaW5lfGR1cnxkeHxkeXxlZGdlTW9kZXxlbGV2YXRpb258ZW5hYmxlQmFja2dyb3VuZHxlbmR8ZXhwb25lbnR8ZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZHxmaWxsfGZpbGxPcGFjaXR5fGZpbGxSdWxlfGZpbHRlcnxmaWx0ZXJSZXN8ZmlsdGVyVW5pdHN8Zmxvb2RDb2xvcnxmbG9vZE9wYWNpdHl8Zm9jdXNhYmxlfGZvbnRGYW1pbHl8Zm9udFNpemV8Zm9udFNpemVBZGp1c3R8Zm9udFN0cmV0Y2h8Zm9udFN0eWxlfGZvbnRWYXJpYW50fGZvbnRXZWlnaHR8Zm9ybWF0fGZyb218ZnJ8Znh8Znl8ZzF8ZzJ8Z2x5cGhOYW1lfGdseXBoT3JpZW50YXRpb25Ib3Jpem9udGFsfGdseXBoT3JpZW50YXRpb25WZXJ0aWNhbHxnbHlwaFJlZnxncmFkaWVudFRyYW5zZm9ybXxncmFkaWVudFVuaXRzfGhhbmdpbmd8aG9yaXpBZHZYfGhvcml6T3JpZ2luWHxpZGVvZ3JhcGhpY3xpbWFnZVJlbmRlcmluZ3xpbnxpbjJ8aW50ZXJjZXB0fGt8azF8azJ8azN8azR8a2VybmVsTWF0cml4fGtlcm5lbFVuaXRMZW5ndGh8a2VybmluZ3xrZXlQb2ludHN8a2V5U3BsaW5lc3xrZXlUaW1lc3xsZW5ndGhBZGp1c3R8bGV0dGVyU3BhY2luZ3xsaWdodGluZ0NvbG9yfGxpbWl0aW5nQ29uZUFuZ2xlfGxvY2FsfG1hcmtlckVuZHxtYXJrZXJNaWR8bWFya2VyU3RhcnR8bWFya2VySGVpZ2h0fG1hcmtlclVuaXRzfG1hcmtlcldpZHRofG1hc2t8bWFza0NvbnRlbnRVbml0c3xtYXNrVW5pdHN8bWF0aGVtYXRpY2FsfG1vZGV8bnVtT2N0YXZlc3xvZmZzZXR8b3BhY2l0eXxvcGVyYXRvcnxvcmRlcnxvcmllbnR8b3JpZW50YXRpb258b3JpZ2lufG92ZXJmbG93fG92ZXJsaW5lUG9zaXRpb258b3ZlcmxpbmVUaGlja25lc3N8cGFub3NlMXxwYWludE9yZGVyfHBhdGhMZW5ndGh8cGF0dGVybkNvbnRlbnRVbml0c3xwYXR0ZXJuVHJhbnNmb3JtfHBhdHRlcm5Vbml0c3xwb2ludGVyRXZlbnRzfHBvaW50c3xwb2ludHNBdFh8cG9pbnRzQXRZfHBvaW50c0F0WnxwcmVzZXJ2ZUFscGhhfHByZXNlcnZlQXNwZWN0UmF0aW98cHJpbWl0aXZlVW5pdHN8cnxyYWRpdXN8cmVmWHxyZWZZfHJlbmRlcmluZ0ludGVudHxyZXBlYXRDb3VudHxyZXBlYXREdXJ8cmVxdWlyZWRFeHRlbnNpb25zfHJlcXVpcmVkRmVhdHVyZXN8cmVzdGFydHxyZXN1bHR8cm90YXRlfHJ4fHJ5fHNjYWxlfHNlZWR8c2hhcGVSZW5kZXJpbmd8c2xvcGV8c3BhY2luZ3xzcGVjdWxhckNvbnN0YW50fHNwZWN1bGFyRXhwb25lbnR8c3BlZWR8c3ByZWFkTWV0aG9kfHN0YXJ0T2Zmc2V0fHN0ZERldmlhdGlvbnxzdGVtaHxzdGVtdnxzdGl0Y2hUaWxlc3xzdG9wQ29sb3J8c3RvcE9wYWNpdHl8c3RyaWtldGhyb3VnaFBvc2l0aW9ufHN0cmlrZXRocm91Z2hUaGlja25lc3N8c3RyaW5nfHN0cm9rZXxzdHJva2VEYXNoYXJyYXl8c3Ryb2tlRGFzaG9mZnNldHxzdHJva2VMaW5lY2FwfHN0cm9rZUxpbmVqb2lufHN0cm9rZU1pdGVybGltaXR8c3Ryb2tlT3BhY2l0eXxzdHJva2VXaWR0aHxzdXJmYWNlU2NhbGV8c3lzdGVtTGFuZ3VhZ2V8dGFibGVWYWx1ZXN8dGFyZ2V0WHx0YXJnZXRZfHRleHRBbmNob3J8dGV4dERlY29yYXRpb258dGV4dFJlbmRlcmluZ3x0ZXh0TGVuZ3RofHRvfHRyYW5zZm9ybXx1MXx1Mnx1bmRlcmxpbmVQb3NpdGlvbnx1bmRlcmxpbmVUaGlja25lc3N8dW5pY29kZXx1bmljb2RlQmlkaXx1bmljb2RlUmFuZ2V8dW5pdHNQZXJFbXx2QWxwaGFiZXRpY3x2SGFuZ2luZ3x2SWRlb2dyYXBoaWN8dk1hdGhlbWF0aWNhbHx2YWx1ZXN8dmVjdG9yRWZmZWN0fHZlcnNpb258dmVydEFkdll8dmVydE9yaWdpblh8dmVydE9yaWdpbll8dmlld0JveHx2aWV3VGFyZ2V0fHZpc2liaWxpdHl8d2lkdGhzfHdvcmRTcGFjaW5nfHdyaXRpbmdNb2RlfHh8eEhlaWdodHx4MXx4Mnx4Q2hhbm5lbFNlbGVjdG9yfHhsaW5rQWN0dWF0ZXx4bGlua0FyY3JvbGV8eGxpbmtIcmVmfHhsaW5rUm9sZXx4bGlua1Nob3d8eGxpbmtUaXRsZXx4bGlua1R5cGV8eG1sQmFzZXx4bWxuc3x4bWxuc1hsaW5rfHhtbExhbmd8eG1sU3BhY2V8eXx5MXx5Mnx5Q2hhbm5lbFNlbGVjdG9yfHp8em9vbUFuZFBhbnxmb3J8Y2xhc3N8YXV0b2ZvY3VzKXwoKFtEZF1bQWFdW1R0XVtBYV18W0FhXVtScl1bSWldW0FhXXx4KS0uKikpJC87IC8vIGh0dHBzOi8vZXNiZW5jaC5jb20vYmVuY2gvNWJmZWU2OGE0Y2Q3ZTYwMDllZjYxZDIzXG5cbnZhciBpc1Byb3BWYWxpZCA9IC8qICNfX1BVUkVfXyAqL21lbW9pemUoZnVuY3Rpb24gKHByb3ApIHtcbiAgcmV0dXJuIHJlYWN0UHJvcHNSZWdleC50ZXN0KHByb3ApIHx8IHByb3AuY2hhckNvZGVBdCgwKSA9PT0gMTExXG4gIC8qIG8gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDEpID09PSAxMTBcbiAgLyogbiAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMikgPCA5MTtcbn1cbi8qIForMSAqL1xuKTtcblxuZXhwb3J0IGRlZmF1bHQgaXNQcm9wVmFsaWQ7XG4iLCIvKlxuXG5CYXNlZCBvZmYgZ2xhbW9yJ3MgU3R5bGVTaGVldCwgdGhhbmtzIFN1bmlsIOKdpO+4j1xuXG5oaWdoIHBlcmZvcm1hbmNlIFN0eWxlU2hlZXQgZm9yIGNzcy1pbi1qcyBzeXN0ZW1zXG5cbi0gdXNlcyBtdWx0aXBsZSBzdHlsZSB0YWdzIGJlaGluZCB0aGUgc2NlbmVzIGZvciBtaWxsaW9ucyBvZiBydWxlc1xuLSB1c2VzIGBpbnNlcnRSdWxlYCBmb3IgYXBwZW5kaW5nIGluIHByb2R1Y3Rpb24gZm9yICptdWNoKiBmYXN0ZXIgcGVyZm9ybWFuY2VcblxuLy8gdXNhZ2VcblxuaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ0BlbW90aW9uL3NoZWV0J1xuXG5sZXQgc3R5bGVTaGVldCA9IG5ldyBTdHlsZVNoZWV0KHsga2V5OiAnJywgY29udGFpbmVyOiBkb2N1bWVudC5oZWFkIH0pXG5cbnN0eWxlU2hlZXQuaW5zZXJ0KCcjYm94IHsgYm9yZGVyOiAxcHggc29saWQgcmVkOyB9Jylcbi0gYXBwZW5kcyBhIGNzcyBydWxlIGludG8gdGhlIHN0eWxlc2hlZXRcblxuc3R5bGVTaGVldC5mbHVzaCgpXG4tIGVtcHRpZXMgdGhlIHN0eWxlc2hlZXQgb2YgYWxsIGl0cyBjb250ZW50c1xuXG4qL1xuLy8gJEZsb3dGaXhNZVxuZnVuY3Rpb24gc2hlZXRGb3JUYWcodGFnKSB7XG4gIGlmICh0YWcuc2hlZXQpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgcmV0dXJuIHRhZy5zaGVldDtcbiAgfSAvLyB0aGlzIHdlaXJkbmVzcyBicm91Z2h0IHRvIHlvdSBieSBmaXJlZm94XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cblxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZG9jdW1lbnQuc3R5bGVTaGVldHNbaV0ub3duZXJOb2RlID09PSB0YWcpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHJldHVybiBkb2N1bWVudC5zdHlsZVNoZWV0c1tpXTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHRhZy5zZXRBdHRyaWJ1dGUoJ2RhdGEtZW1vdGlvbicsIG9wdGlvbnMua2V5KTtcblxuICBpZiAob3B0aW9ucy5ub25jZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdGFnLnNldEF0dHJpYnV0ZSgnbm9uY2UnLCBvcHRpb25zLm5vbmNlKTtcbiAgfVxuXG4gIHRhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJykpO1xuICB0YWcuc2V0QXR0cmlidXRlKCdkYXRhLXMnLCAnJyk7XG4gIHJldHVybiB0YWc7XG59XG5cbnZhciBTdHlsZVNoZWV0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgLy8gVXNpbmcgTm9kZSBpbnN0ZWFkIG9mIEhUTUxFbGVtZW50IHNpbmNlIGNvbnRhaW5lciBtYXkgYmUgYSBTaGFkb3dSb290XG4gIGZ1bmN0aW9uIFN0eWxlU2hlZXQob3B0aW9ucykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB0aGlzLl9pbnNlcnRUYWcgPSBmdW5jdGlvbiAodGFnKSB7XG4gICAgICB2YXIgYmVmb3JlO1xuXG4gICAgICBpZiAoX3RoaXMudGFncy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgaWYgKF90aGlzLmluc2VydGlvblBvaW50KSB7XG4gICAgICAgICAgYmVmb3JlID0gX3RoaXMuaW5zZXJ0aW9uUG9pbnQubmV4dFNpYmxpbmc7XG4gICAgICAgIH0gZWxzZSBpZiAoX3RoaXMucHJlcGVuZCkge1xuICAgICAgICAgIGJlZm9yZSA9IF90aGlzLmNvbnRhaW5lci5maXJzdENoaWxkO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGJlZm9yZSA9IF90aGlzLmJlZm9yZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYmVmb3JlID0gX3RoaXMudGFnc1tfdGhpcy50YWdzLmxlbmd0aCAtIDFdLm5leHRTaWJsaW5nO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy5jb250YWluZXIuaW5zZXJ0QmVmb3JlKHRhZywgYmVmb3JlKTtcblxuICAgICAgX3RoaXMudGFncy5wdXNoKHRhZyk7XG4gICAgfTtcblxuICAgIHRoaXMuaXNTcGVlZHkgPSBvcHRpb25zLnNwZWVkeSA9PT0gdW5kZWZpbmVkID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA6IG9wdGlvbnMuc3BlZWR5O1xuICAgIHRoaXMudGFncyA9IFtdO1xuICAgIHRoaXMuY3RyID0gMDtcbiAgICB0aGlzLm5vbmNlID0gb3B0aW9ucy5ub25jZTsgLy8ga2V5IGlzIHRoZSB2YWx1ZSBvZiB0aGUgZGF0YS1lbW90aW9uIGF0dHJpYnV0ZSwgaXQncyB1c2VkIHRvIGlkZW50aWZ5IGRpZmZlcmVudCBzaGVldHNcblxuICAgIHRoaXMua2V5ID0gb3B0aW9ucy5rZXk7XG4gICAgdGhpcy5jb250YWluZXIgPSBvcHRpb25zLmNvbnRhaW5lcjtcbiAgICB0aGlzLnByZXBlbmQgPSBvcHRpb25zLnByZXBlbmQ7XG4gICAgdGhpcy5pbnNlcnRpb25Qb2ludCA9IG9wdGlvbnMuaW5zZXJ0aW9uUG9pbnQ7XG4gICAgdGhpcy5iZWZvcmUgPSBudWxsO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0eWxlU2hlZXQucHJvdG90eXBlO1xuXG4gIF9wcm90by5oeWRyYXRlID0gZnVuY3Rpb24gaHlkcmF0ZShub2Rlcykge1xuICAgIG5vZGVzLmZvckVhY2godGhpcy5faW5zZXJ0VGFnKTtcbiAgfTtcblxuICBfcHJvdG8uaW5zZXJ0ID0gZnVuY3Rpb24gaW5zZXJ0KHJ1bGUpIHtcbiAgICAvLyB0aGUgbWF4IGxlbmd0aCBpcyBob3cgbWFueSBydWxlcyB3ZSBoYXZlIHBlciBzdHlsZSB0YWcsIGl0J3MgNjUwMDAgaW4gc3BlZWR5IG1vZGVcbiAgICAvLyBpdCdzIDEgaW4gZGV2IGJlY2F1c2Ugd2UgaW5zZXJ0IHNvdXJjZSBtYXBzIHRoYXQgbWFwIGEgc2luZ2xlIHJ1bGUgdG8gYSBsb2NhdGlvblxuICAgIC8vIGFuZCB5b3UgY2FuIG9ubHkgaGF2ZSBvbmUgc291cmNlIG1hcCBwZXIgc3R5bGUgdGFnXG4gICAgaWYgKHRoaXMuY3RyICUgKHRoaXMuaXNTcGVlZHkgPyA2NTAwMCA6IDEpID09PSAwKSB7XG4gICAgICB0aGlzLl9pbnNlcnRUYWcoY3JlYXRlU3R5bGVFbGVtZW50KHRoaXMpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFnID0gdGhpcy50YWdzW3RoaXMudGFncy5sZW5ndGggLSAxXTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgaXNJbXBvcnRSdWxlID0gcnVsZS5jaGFyQ29kZUF0KDApID09PSA2NCAmJiBydWxlLmNoYXJDb2RlQXQoMSkgPT09IDEwNTtcblxuICAgICAgaWYgKGlzSW1wb3J0UnVsZSAmJiB0aGlzLl9hbHJlYWR5SW5zZXJ0ZWRPcmRlckluc2Vuc2l0aXZlUnVsZSkge1xuICAgICAgICAvLyB0aGlzIHdvdWxkIG9ubHkgY2F1c2UgcHJvYmxlbSBpbiBzcGVlZHkgbW9kZVxuICAgICAgICAvLyBidXQgd2UgZG9uJ3Qgd2FudCBlbmFibGluZyBzcGVlZHkgdG8gYWZmZWN0IHRoZSBvYnNlcnZhYmxlIGJlaGF2aW9yXG4gICAgICAgIC8vIHNvIHdlIHJlcG9ydCB0aGlzIGVycm9yIGF0IGFsbCB0aW1lc1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiWW91J3JlIGF0dGVtcHRpbmcgdG8gaW5zZXJ0IHRoZSBmb2xsb3dpbmcgcnVsZTpcXG5cIiArIHJ1bGUgKyAnXFxuXFxuYEBpbXBvcnRgIHJ1bGVzIG11c3QgYmUgYmVmb3JlIGFsbCBvdGhlciB0eXBlcyBvZiBydWxlcyBpbiBhIHN0eWxlc2hlZXQgYnV0IG90aGVyIHJ1bGVzIGhhdmUgYWxyZWFkeSBiZWVuIGluc2VydGVkLiBQbGVhc2UgZW5zdXJlIHRoYXQgYEBpbXBvcnRgIHJ1bGVzIGFyZSBiZWZvcmUgYWxsIG90aGVyIHJ1bGVzLicpO1xuICAgICAgfVxuICAgICAgdGhpcy5fYWxyZWFkeUluc2VydGVkT3JkZXJJbnNlbnNpdGl2ZVJ1bGUgPSB0aGlzLl9hbHJlYWR5SW5zZXJ0ZWRPcmRlckluc2Vuc2l0aXZlUnVsZSB8fCAhaXNJbXBvcnRSdWxlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmlzU3BlZWR5KSB7XG4gICAgICB2YXIgc2hlZXQgPSBzaGVldEZvclRhZyh0YWcpO1xuXG4gICAgICB0cnkge1xuICAgICAgICAvLyB0aGlzIGlzIHRoZSB1bHRyYWZhc3QgdmVyc2lvbiwgd29ya3MgYWNyb3NzIGJyb3dzZXJzXG4gICAgICAgIC8vIHRoZSBiaWcgZHJhd2JhY2sgaXMgdGhhdCB0aGUgY3NzIHdvbid0IGJlIGVkaXRhYmxlIGluIGRldnRvb2xzXG4gICAgICAgIHNoZWV0Lmluc2VydFJ1bGUocnVsZSwgc2hlZXQuY3NzUnVsZXMubGVuZ3RoKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIS86KC1tb3otcGxhY2Vob2xkZXJ8LW1vei1mb2N1cy1pbm5lcnwtbW96LWZvY3VzcmluZ3wtbXMtaW5wdXQtcGxhY2Vob2xkZXJ8LW1vei1yZWFkLXdyaXRlfC1tb3otcmVhZC1vbmx5fC1tcy1jbGVhcil7Ly50ZXN0KHJ1bGUpKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIlRoZXJlIHdhcyBhIHByb2JsZW0gaW5zZXJ0aW5nIHRoZSBmb2xsb3dpbmcgcnVsZTogXFxcIlwiICsgcnVsZSArIFwiXFxcIlwiLCBlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0YWcuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocnVsZSkpO1xuICAgIH1cblxuICAgIHRoaXMuY3RyKys7XG4gIH07XG5cbiAgX3Byb3RvLmZsdXNoID0gZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHRoaXMudGFncy5mb3JFYWNoKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgIHJldHVybiB0YWcucGFyZW50Tm9kZSAmJiB0YWcucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0YWcpO1xuICAgIH0pO1xuICAgIHRoaXMudGFncyA9IFtdO1xuICAgIHRoaXMuY3RyID0gMDtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB0aGlzLl9hbHJlYWR5SW5zZXJ0ZWRPcmRlckluc2Vuc2l0aXZlUnVsZSA9IGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gU3R5bGVTaGVldDtcbn0oKTtcblxuZXhwb3J0IHsgU3R5bGVTaGVldCB9O1xuIiwiLyoqXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IHZhciBhYnMgPSBNYXRoLmFic1xuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgdmFyIGZyb20gPSBTdHJpbmcuZnJvbUNoYXJDb2RlXG5cbi8qKlxuICogQHBhcmFtIHtvYmplY3R9XG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbmV4cG9ydCB2YXIgYXNzaWduID0gT2JqZWN0LmFzc2lnblxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzaCAodmFsdWUsIGxlbmd0aCkge1xuXHRyZXR1cm4gKCgoKCgoKGxlbmd0aCA8PCAyKSBeIGNoYXJhdCh2YWx1ZSwgMCkpIDw8IDIpIF4gY2hhcmF0KHZhbHVlLCAxKSkgPDwgMikgXiBjaGFyYXQodmFsdWUsIDIpKSA8PCAyKSBeIGNoYXJhdCh2YWx1ZSwgMylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyaW0gKHZhbHVlKSB7XG5cdHJldHVybiB2YWx1ZS50cmltKClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7UmVnRXhwfSBwYXR0ZXJuXG4gKiBAcmV0dXJuIHtzdHJpbmc/fVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWF0Y2ggKHZhbHVlLCBwYXR0ZXJuKSB7XG5cdHJldHVybiAodmFsdWUgPSBwYXR0ZXJuLmV4ZWModmFsdWUpKSA/IHZhbHVlWzBdIDogdmFsdWVcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7KHN0cmluZ3xSZWdFeHApfSBwYXR0ZXJuXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVwbGFjZW1lbnRcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2UgKHZhbHVlLCBwYXR0ZXJuLCByZXBsYWNlbWVudCkge1xuXHRyZXR1cm4gdmFsdWUucmVwbGFjZShwYXR0ZXJuLCByZXBsYWNlbWVudClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWFyY2hcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluZGV4b2YgKHZhbHVlLCBzZWFyY2gpIHtcblx0cmV0dXJuIHZhbHVlLmluZGV4T2Yoc2VhcmNoKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtIHtudW1iZXJ9IGluZGV4XG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjaGFyYXQgKHZhbHVlLCBpbmRleCkge1xuXHRyZXR1cm4gdmFsdWUuY2hhckNvZGVBdChpbmRleCkgfCAwXG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcGFyYW0ge251bWJlcn0gYmVnaW5cbiAqIEBwYXJhbSB7bnVtYmVyfSBlbmRcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN1YnN0ciAodmFsdWUsIGJlZ2luLCBlbmQpIHtcblx0cmV0dXJuIHZhbHVlLnNsaWNlKGJlZ2luLCBlbmQpXG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJsZW4gKHZhbHVlKSB7XG5cdHJldHVybiB2YWx1ZS5sZW5ndGhcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueVtdfSB2YWx1ZVxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2l6ZW9mICh2YWx1ZSkge1xuXHRyZXR1cm4gdmFsdWUubGVuZ3RoXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcGFyYW0ge2FueVtdfSBhcnJheVxuICogQHJldHVybiB7YW55fVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kICh2YWx1ZSwgYXJyYXkpIHtcblx0cmV0dXJuIGFycmF5LnB1c2godmFsdWUpLCB2YWx1ZVxufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nW119IGFycmF5XG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tYmluZSAoYXJyYXksIGNhbGxiYWNrKSB7XG5cdHJldHVybiBhcnJheS5tYXAoY2FsbGJhY2spLmpvaW4oJycpXG59XG4iLCJpbXBvcnQge2Zyb20sIHRyaW0sIGNoYXJhdCwgc3RybGVuLCBzdWJzdHIsIGFwcGVuZCwgYXNzaWdufSBmcm9tICcuL1V0aWxpdHkuanMnXG5cbmV4cG9ydCB2YXIgbGluZSA9IDFcbmV4cG9ydCB2YXIgY29sdW1uID0gMVxuZXhwb3J0IHZhciBsZW5ndGggPSAwXG5leHBvcnQgdmFyIHBvc2l0aW9uID0gMFxuZXhwb3J0IHZhciBjaGFyYWN0ZXIgPSAwXG5leHBvcnQgdmFyIGNoYXJhY3RlcnMgPSAnJ1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtIHtvYmplY3QgfCBudWxsfSByb290XG4gKiBAcGFyYW0ge29iamVjdCB8IG51bGx9IHBhcmVudFxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqIEBwYXJhbSB7c3RyaW5nW10gfCBzdHJpbmd9IHByb3BzXG4gKiBAcGFyYW0ge29iamVjdFtdIHwgc3RyaW5nfSBjaGlsZHJlblxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICovXG5leHBvcnQgZnVuY3Rpb24gbm9kZSAodmFsdWUsIHJvb3QsIHBhcmVudCwgdHlwZSwgcHJvcHMsIGNoaWxkcmVuLCBsZW5ndGgpIHtcblx0cmV0dXJuIHt2YWx1ZTogdmFsdWUsIHJvb3Q6IHJvb3QsIHBhcmVudDogcGFyZW50LCB0eXBlOiB0eXBlLCBwcm9wczogcHJvcHMsIGNoaWxkcmVuOiBjaGlsZHJlbiwgbGluZTogbGluZSwgY29sdW1uOiBjb2x1bW4sIGxlbmd0aDogbGVuZ3RoLCByZXR1cm46ICcnfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7b2JqZWN0fSByb290XG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHNcbiAqIEByZXR1cm4ge29iamVjdH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvcHkgKHJvb3QsIHByb3BzKSB7XG5cdHJldHVybiBhc3NpZ24obm9kZSgnJywgbnVsbCwgbnVsbCwgJycsIG51bGwsIG51bGwsIDApLCByb290LCB7bGVuZ3RoOiAtcm9vdC5sZW5ndGh9LCBwcm9wcylcbn1cblxuLyoqXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjaGFyICgpIHtcblx0cmV0dXJuIGNoYXJhY3RlclxufVxuXG4vKipcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByZXYgKCkge1xuXHRjaGFyYWN0ZXIgPSBwb3NpdGlvbiA+IDAgPyBjaGFyYXQoY2hhcmFjdGVycywgLS1wb3NpdGlvbikgOiAwXG5cblx0aWYgKGNvbHVtbi0tLCBjaGFyYWN0ZXIgPT09IDEwKVxuXHRcdGNvbHVtbiA9IDEsIGxpbmUtLVxuXG5cdHJldHVybiBjaGFyYWN0ZXJcbn1cblxuLyoqXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBuZXh0ICgpIHtcblx0Y2hhcmFjdGVyID0gcG9zaXRpb24gPCBsZW5ndGggPyBjaGFyYXQoY2hhcmFjdGVycywgcG9zaXRpb24rKykgOiAwXG5cblx0aWYgKGNvbHVtbisrLCBjaGFyYWN0ZXIgPT09IDEwKVxuXHRcdGNvbHVtbiA9IDEsIGxpbmUrK1xuXG5cdHJldHVybiBjaGFyYWN0ZXJcbn1cblxuLyoqXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwZWVrICgpIHtcblx0cmV0dXJuIGNoYXJhdChjaGFyYWN0ZXJzLCBwb3NpdGlvbilcbn1cblxuLyoqXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjYXJldCAoKSB7XG5cdHJldHVybiBwb3NpdGlvblxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBiZWdpblxuICogQHBhcmFtIHtudW1iZXJ9IGVuZFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2xpY2UgKGJlZ2luLCBlbmQpIHtcblx0cmV0dXJuIHN1YnN0cihjaGFyYWN0ZXJzLCBiZWdpbiwgZW5kKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB0eXBlXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b2tlbiAodHlwZSkge1xuXHRzd2l0Y2ggKHR5cGUpIHtcblx0XHQvLyBcXDAgXFx0IFxcbiBcXHIgXFxzIHdoaXRlc3BhY2UgdG9rZW5cblx0XHRjYXNlIDA6IGNhc2UgOTogY2FzZSAxMDogY2FzZSAxMzogY2FzZSAzMjpcblx0XHRcdHJldHVybiA1XG5cdFx0Ly8gISArICwgLyA+IEAgfiBpc29sYXRlIHRva2VuXG5cdFx0Y2FzZSAzMzogY2FzZSA0MzogY2FzZSA0NDogY2FzZSA0NzogY2FzZSA2MjogY2FzZSA2NDogY2FzZSAxMjY6XG5cdFx0Ly8gOyB7IH0gYnJlYWtwb2ludCB0b2tlblxuXHRcdGNhc2UgNTk6IGNhc2UgMTIzOiBjYXNlIDEyNTpcblx0XHRcdHJldHVybiA0XG5cdFx0Ly8gOiBhY2NvbXBhbmllZCB0b2tlblxuXHRcdGNhc2UgNTg6XG5cdFx0XHRyZXR1cm4gM1xuXHRcdC8vIFwiICcgKCBbIG9wZW5pbmcgZGVsaW1pdCB0b2tlblxuXHRcdGNhc2UgMzQ6IGNhc2UgMzk6IGNhc2UgNDA6IGNhc2UgOTE6XG5cdFx0XHRyZXR1cm4gMlxuXHRcdC8vICkgXSBjbG9zaW5nIGRlbGltaXQgdG9rZW5cblx0XHRjYXNlIDQxOiBjYXNlIDkzOlxuXHRcdFx0cmV0dXJuIDFcblx0fVxuXG5cdHJldHVybiAwXG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJuIHthbnlbXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFsbG9jICh2YWx1ZSkge1xuXHRyZXR1cm4gbGluZSA9IGNvbHVtbiA9IDEsIGxlbmd0aCA9IHN0cmxlbihjaGFyYWN0ZXJzID0gdmFsdWUpLCBwb3NpdGlvbiA9IDAsIFtdXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcmV0dXJuIHthbnl9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWFsbG9jICh2YWx1ZSkge1xuXHRyZXR1cm4gY2hhcmFjdGVycyA9ICcnLCB2YWx1ZVxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB0eXBlXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWxpbWl0ICh0eXBlKSB7XG5cdHJldHVybiB0cmltKHNsaWNlKHBvc2l0aW9uIC0gMSwgZGVsaW1pdGVyKHR5cGUgPT09IDkxID8gdHlwZSArIDIgOiB0eXBlID09PSA0MCA/IHR5cGUgKyAxIDogdHlwZSkpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHJldHVybiB7c3RyaW5nW119XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b2tlbml6ZSAodmFsdWUpIHtcblx0cmV0dXJuIGRlYWxsb2ModG9rZW5pemVyKGFsbG9jKHZhbHVlKSkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IHR5cGVcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdoaXRlc3BhY2UgKHR5cGUpIHtcblx0d2hpbGUgKGNoYXJhY3RlciA9IHBlZWsoKSlcblx0XHRpZiAoY2hhcmFjdGVyIDwgMzMpXG5cdFx0XHRuZXh0KClcblx0XHRlbHNlXG5cdFx0XHRicmVha1xuXG5cdHJldHVybiB0b2tlbih0eXBlKSA+IDIgfHwgdG9rZW4oY2hhcmFjdGVyKSA+IDMgPyAnJyA6ICcgJ1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nW119IGNoaWxkcmVuXG4gKiBAcmV0dXJuIHtzdHJpbmdbXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRva2VuaXplciAoY2hpbGRyZW4pIHtcblx0d2hpbGUgKG5leHQoKSlcblx0XHRzd2l0Y2ggKHRva2VuKGNoYXJhY3RlcikpIHtcblx0XHRcdGNhc2UgMDogYXBwZW5kKGlkZW50aWZpZXIocG9zaXRpb24gLSAxKSwgY2hpbGRyZW4pXG5cdFx0XHRcdGJyZWFrXG5cdFx0XHRjYXNlIDI6IGFwcGVuZChkZWxpbWl0KGNoYXJhY3RlciksIGNoaWxkcmVuKVxuXHRcdFx0XHRicmVha1xuXHRcdFx0ZGVmYXVsdDogYXBwZW5kKGZyb20oY2hhcmFjdGVyKSwgY2hpbGRyZW4pXG5cdFx0fVxuXG5cdHJldHVybiBjaGlsZHJlblxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICogQHBhcmFtIHtudW1iZXJ9IGNvdW50XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlc2NhcGluZyAoaW5kZXgsIGNvdW50KSB7XG5cdHdoaWxlICgtLWNvdW50ICYmIG5leHQoKSlcblx0XHQvLyBub3QgMC05IEEtRiBhLWZcblx0XHRpZiAoY2hhcmFjdGVyIDwgNDggfHwgY2hhcmFjdGVyID4gMTAyIHx8IChjaGFyYWN0ZXIgPiA1NyAmJiBjaGFyYWN0ZXIgPCA2NSkgfHwgKGNoYXJhY3RlciA+IDcwICYmIGNoYXJhY3RlciA8IDk3KSlcblx0XHRcdGJyZWFrXG5cblx0cmV0dXJuIHNsaWNlKGluZGV4LCBjYXJldCgpICsgKGNvdW50IDwgNiAmJiBwZWVrKCkgPT0gMzIgJiYgbmV4dCgpID09IDMyKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gdHlwZVxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVsaW1pdGVyICh0eXBlKSB7XG5cdHdoaWxlIChuZXh0KCkpXG5cdFx0c3dpdGNoIChjaGFyYWN0ZXIpIHtcblx0XHRcdC8vIF0gKSBcIiAnXG5cdFx0XHRjYXNlIHR5cGU6XG5cdFx0XHRcdHJldHVybiBwb3NpdGlvblxuXHRcdFx0Ly8gXCIgJ1xuXHRcdFx0Y2FzZSAzNDogY2FzZSAzOTpcblx0XHRcdFx0aWYgKHR5cGUgIT09IDM0ICYmIHR5cGUgIT09IDM5KVxuXHRcdFx0XHRcdGRlbGltaXRlcihjaGFyYWN0ZXIpXG5cdFx0XHRcdGJyZWFrXG5cdFx0XHQvLyAoXG5cdFx0XHRjYXNlIDQwOlxuXHRcdFx0XHRpZiAodHlwZSA9PT0gNDEpXG5cdFx0XHRcdFx0ZGVsaW1pdGVyKHR5cGUpXG5cdFx0XHRcdGJyZWFrXG5cdFx0XHQvLyBcXFxuXHRcdFx0Y2FzZSA5Mjpcblx0XHRcdFx0bmV4dCgpXG5cdFx0XHRcdGJyZWFrXG5cdFx0fVxuXG5cdHJldHVybiBwb3NpdGlvblxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB0eXBlXG4gKiBAcGFyYW0ge251bWJlcn0gaW5kZXhcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbW1lbnRlciAodHlwZSwgaW5kZXgpIHtcblx0d2hpbGUgKG5leHQoKSlcblx0XHQvLyAvL1xuXHRcdGlmICh0eXBlICsgY2hhcmFjdGVyID09PSA0NyArIDEwKVxuXHRcdFx0YnJlYWtcblx0XHQvLyAvKlxuXHRcdGVsc2UgaWYgKHR5cGUgKyBjaGFyYWN0ZXIgPT09IDQyICsgNDIgJiYgcGVlaygpID09PSA0Nylcblx0XHRcdGJyZWFrXG5cblx0cmV0dXJuICcvKicgKyBzbGljZShpbmRleCwgcG9zaXRpb24gLSAxKSArICcqJyArIGZyb20odHlwZSA9PT0gNDcgPyB0eXBlIDogbmV4dCgpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaWRlbnRpZmllciAoaW5kZXgpIHtcblx0d2hpbGUgKCF0b2tlbihwZWVrKCkpKVxuXHRcdG5leHQoKVxuXG5cdHJldHVybiBzbGljZShpbmRleCwgcG9zaXRpb24pXG59XG4iLCJleHBvcnQgdmFyIE1TID0gJy1tcy0nXG5leHBvcnQgdmFyIE1PWiA9ICctbW96LSdcbmV4cG9ydCB2YXIgV0VCS0lUID0gJy13ZWJraXQtJ1xuXG5leHBvcnQgdmFyIENPTU1FTlQgPSAnY29tbSdcbmV4cG9ydCB2YXIgUlVMRVNFVCA9ICdydWxlJ1xuZXhwb3J0IHZhciBERUNMQVJBVElPTiA9ICdkZWNsJ1xuXG5leHBvcnQgdmFyIFBBR0UgPSAnQHBhZ2UnXG5leHBvcnQgdmFyIE1FRElBID0gJ0BtZWRpYSdcbmV4cG9ydCB2YXIgSU1QT1JUID0gJ0BpbXBvcnQnXG5leHBvcnQgdmFyIENIQVJTRVQgPSAnQGNoYXJzZXQnXG5leHBvcnQgdmFyIFZJRVdQT1JUID0gJ0B2aWV3cG9ydCdcbmV4cG9ydCB2YXIgU1VQUE9SVFMgPSAnQHN1cHBvcnRzJ1xuZXhwb3J0IHZhciBET0NVTUVOVCA9ICdAZG9jdW1lbnQnXG5leHBvcnQgdmFyIE5BTUVTUEFDRSA9ICdAbmFtZXNwYWNlJ1xuZXhwb3J0IHZhciBLRVlGUkFNRVMgPSAnQGtleWZyYW1lcydcbmV4cG9ydCB2YXIgRk9OVF9GQUNFID0gJ0Bmb250LWZhY2UnXG5leHBvcnQgdmFyIENPVU5URVJfU1RZTEUgPSAnQGNvdW50ZXItc3R5bGUnXG5leHBvcnQgdmFyIEZPTlRfRkVBVFVSRV9WQUxVRVMgPSAnQGZvbnQtZmVhdHVyZS12YWx1ZXMnXG4iLCJpbXBvcnQge0lNUE9SVCwgQ09NTUVOVCwgUlVMRVNFVCwgREVDTEFSQVRJT04sIEtFWUZSQU1FU30gZnJvbSAnLi9FbnVtLmpzJ1xuaW1wb3J0IHtzdHJsZW4sIHNpemVvZn0gZnJvbSAnLi9VdGlsaXR5LmpzJ1xuXG4vKipcbiAqIEBwYXJhbSB7b2JqZWN0W119IGNoaWxkcmVuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplIChjaGlsZHJlbiwgY2FsbGJhY2spIHtcblx0dmFyIG91dHB1dCA9ICcnXG5cdHZhciBsZW5ndGggPSBzaXplb2YoY2hpbGRyZW4pXG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKylcblx0XHRvdXRwdXQgKz0gY2FsbGJhY2soY2hpbGRyZW5baV0sIGksIGNoaWxkcmVuLCBjYWxsYmFjaykgfHwgJydcblxuXHRyZXR1cm4gb3V0cHV0XG59XG5cbi8qKlxuICogQHBhcmFtIHtvYmplY3R9IGVsZW1lbnRcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICogQHBhcmFtIHtvYmplY3RbXX0gY2hpbGRyZW5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnkgKGVsZW1lbnQsIGluZGV4LCBjaGlsZHJlbiwgY2FsbGJhY2spIHtcblx0c3dpdGNoIChlbGVtZW50LnR5cGUpIHtcblx0XHRjYXNlIElNUE9SVDogY2FzZSBERUNMQVJBVElPTjogcmV0dXJuIGVsZW1lbnQucmV0dXJuID0gZWxlbWVudC5yZXR1cm4gfHwgZWxlbWVudC52YWx1ZVxuXHRcdGNhc2UgQ09NTUVOVDogcmV0dXJuICcnXG5cdFx0Y2FzZSBLRVlGUkFNRVM6IHJldHVybiBlbGVtZW50LnJldHVybiA9IGVsZW1lbnQudmFsdWUgKyAneycgKyBzZXJpYWxpemUoZWxlbWVudC5jaGlsZHJlbiwgY2FsbGJhY2spICsgJ30nXG5cdFx0Y2FzZSBSVUxFU0VUOiBlbGVtZW50LnZhbHVlID0gZWxlbWVudC5wcm9wcy5qb2luKCcsJylcblx0fVxuXG5cdHJldHVybiBzdHJsZW4oY2hpbGRyZW4gPSBzZXJpYWxpemUoZWxlbWVudC5jaGlsZHJlbiwgY2FsbGJhY2spKSA/IGVsZW1lbnQucmV0dXJuID0gZWxlbWVudC52YWx1ZSArICd7JyArIGNoaWxkcmVuICsgJ30nIDogJydcbn1cbiIsImltcG9ydCB7TVMsIE1PWiwgV0VCS0lUfSBmcm9tICcuL0VudW0uanMnXG5pbXBvcnQge2hhc2gsIGNoYXJhdCwgc3RybGVuLCBpbmRleG9mLCByZXBsYWNlfSBmcm9tICcuL1V0aWxpdHkuanMnXG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmVmaXggKHZhbHVlLCBsZW5ndGgpIHtcblx0c3dpdGNoIChoYXNoKHZhbHVlLCBsZW5ndGgpKSB7XG5cdFx0Ly8gY29sb3ItYWRqdXN0XG5cdFx0Y2FzZSA1MTAzOlxuXHRcdFx0cmV0dXJuIFdFQktJVCArICdwcmludC0nICsgdmFsdWUgKyB2YWx1ZVxuXHRcdC8vIGFuaW1hdGlvbiwgYW5pbWF0aW9uLShkZWxheXxkaXJlY3Rpb258ZHVyYXRpb258ZmlsbC1tb2RlfGl0ZXJhdGlvbi1jb3VudHxuYW1lfHBsYXktc3RhdGV8dGltaW5nLWZ1bmN0aW9uKVxuXHRcdGNhc2UgNTczNzogY2FzZSA0MjAxOiBjYXNlIDMxNzc6IGNhc2UgMzQzMzogY2FzZSAxNjQxOiBjYXNlIDQ0NTc6IGNhc2UgMjkyMTpcblx0XHQvLyB0ZXh0LWRlY29yYXRpb24sIGZpbHRlciwgY2xpcC1wYXRoLCBiYWNrZmFjZS12aXNpYmlsaXR5LCBjb2x1bW4sIGJveC1kZWNvcmF0aW9uLWJyZWFrXG5cdFx0Y2FzZSA1NTcyOiBjYXNlIDYzNTY6IGNhc2UgNTg0NDogY2FzZSAzMTkxOiBjYXNlIDY2NDU6IGNhc2UgMzAwNTpcblx0XHQvLyBtYXNrLCBtYXNrLWltYWdlLCBtYXNrLShtb2RlfGNsaXB8c2l6ZSksIG1hc2stKHJlcGVhdHxvcmlnaW4pLCBtYXNrLXBvc2l0aW9uLCBtYXNrLWNvbXBvc2l0ZSxcblx0XHRjYXNlIDYzOTE6IGNhc2UgNTg3OTogY2FzZSA1NjIzOiBjYXNlIDYxMzU6IGNhc2UgNDU5OTogY2FzZSA0ODU1OlxuXHRcdC8vIGJhY2tncm91bmQtY2xpcCwgY29sdW1ucywgY29sdW1uLShjb3VudHxmaWxsfGdhcHxydWxlfHJ1bGUtY29sb3J8cnVsZS1zdHlsZXxydWxlLXdpZHRofHNwYW58d2lkdGgpXG5cdFx0Y2FzZSA0MjE1OiBjYXNlIDYzODk6IGNhc2UgNTEwOTogY2FzZSA1MzY1OiBjYXNlIDU2MjE6IGNhc2UgMzgyOTpcblx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIHZhbHVlXG5cdFx0Ly8gYXBwZWFyYW5jZSwgdXNlci1zZWxlY3QsIHRyYW5zZm9ybSwgaHlwaGVucywgdGV4dC1zaXplLWFkanVzdFxuXHRcdGNhc2UgNTM0OTogY2FzZSA0MjQ2OiBjYXNlIDQ4MTA6IGNhc2UgNjk2ODogY2FzZSAyNzU2OlxuXHRcdFx0cmV0dXJuIFdFQktJVCArIHZhbHVlICsgTU9aICsgdmFsdWUgKyBNUyArIHZhbHVlICsgdmFsdWVcblx0XHQvLyBmbGV4LCBmbGV4LWRpcmVjdGlvblxuXHRcdGNhc2UgNjgyODogY2FzZSA0MjY4OlxuXHRcdFx0cmV0dXJuIFdFQktJVCArIHZhbHVlICsgTVMgKyB2YWx1ZSArIHZhbHVlXG5cdFx0Ly8gb3JkZXJcblx0XHRjYXNlIDYxNjU6XG5cdFx0XHRyZXR1cm4gV0VCS0lUICsgdmFsdWUgKyBNUyArICdmbGV4LScgKyB2YWx1ZSArIHZhbHVlXG5cdFx0Ly8gYWxpZ24taXRlbXNcblx0XHRjYXNlIDUxODc6XG5cdFx0XHRyZXR1cm4gV0VCS0lUICsgdmFsdWUgKyByZXBsYWNlKHZhbHVlLCAvKFxcdyspLisoOlteXSspLywgV0VCS0lUICsgJ2JveC0kMSQyJyArIE1TICsgJ2ZsZXgtJDEkMicpICsgdmFsdWVcblx0XHQvLyBhbGlnbi1zZWxmXG5cdFx0Y2FzZSA1NDQzOlxuXHRcdFx0cmV0dXJuIFdFQktJVCArIHZhbHVlICsgTVMgKyAnZmxleC1pdGVtLScgKyByZXBsYWNlKHZhbHVlLCAvZmxleC18LXNlbGYvLCAnJykgKyB2YWx1ZVxuXHRcdC8vIGFsaWduLWNvbnRlbnRcblx0XHRjYXNlIDQ2NzU6XG5cdFx0XHRyZXR1cm4gV0VCS0lUICsgdmFsdWUgKyBNUyArICdmbGV4LWxpbmUtcGFjaycgKyByZXBsYWNlKHZhbHVlLCAvYWxpZ24tY29udGVudHxmbGV4LXwtc2VsZi8sICcnKSArIHZhbHVlXG5cdFx0Ly8gZmxleC1zaHJpbmtcblx0XHRjYXNlIDU1NDg6XG5cdFx0XHRyZXR1cm4gV0VCS0lUICsgdmFsdWUgKyBNUyArIHJlcGxhY2UodmFsdWUsICdzaHJpbmsnLCAnbmVnYXRpdmUnKSArIHZhbHVlXG5cdFx0Ly8gZmxleC1iYXNpc1xuXHRcdGNhc2UgNTI5Mjpcblx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgcmVwbGFjZSh2YWx1ZSwgJ2Jhc2lzJywgJ3ByZWZlcnJlZC1zaXplJykgKyB2YWx1ZVxuXHRcdC8vIGZsZXgtZ3Jvd1xuXHRcdGNhc2UgNjA2MDpcblx0XHRcdHJldHVybiBXRUJLSVQgKyAnYm94LScgKyByZXBsYWNlKHZhbHVlLCAnLWdyb3cnLCAnJykgKyBXRUJLSVQgKyB2YWx1ZSArIE1TICsgcmVwbGFjZSh2YWx1ZSwgJ2dyb3cnLCAncG9zaXRpdmUnKSArIHZhbHVlXG5cdFx0Ly8gdHJhbnNpdGlvblxuXHRcdGNhc2UgNDU1NDpcblx0XHRcdHJldHVybiBXRUJLSVQgKyByZXBsYWNlKHZhbHVlLCAvKFteLV0pKHRyYW5zZm9ybSkvZywgJyQxJyArIFdFQktJVCArICckMicpICsgdmFsdWVcblx0XHQvLyBjdXJzb3Jcblx0XHRjYXNlIDYxODc6XG5cdFx0XHRyZXR1cm4gcmVwbGFjZShyZXBsYWNlKHJlcGxhY2UodmFsdWUsIC8oem9vbS18Z3JhYikvLCBXRUJLSVQgKyAnJDEnKSwgLyhpbWFnZS1zZXQpLywgV0VCS0lUICsgJyQxJyksIHZhbHVlLCAnJykgKyB2YWx1ZVxuXHRcdC8vIGJhY2tncm91bmQsIGJhY2tncm91bmQtaW1hZ2Vcblx0XHRjYXNlIDU0OTU6IGNhc2UgMzk1OTpcblx0XHRcdHJldHVybiByZXBsYWNlKHZhbHVlLCAvKGltYWdlLXNldFxcKFteXSopLywgV0VCS0lUICsgJyQxJyArICckYCQxJylcblx0XHQvLyBqdXN0aWZ5LWNvbnRlbnRcblx0XHRjYXNlIDQ5Njg6XG5cdFx0XHRyZXR1cm4gcmVwbGFjZShyZXBsYWNlKHZhbHVlLCAvKC4rOikoZmxleC0pPyguKikvLCBXRUJLSVQgKyAnYm94LXBhY2s6JDMnICsgTVMgKyAnZmxleC1wYWNrOiQzJyksIC9zListYlteO10rLywgJ2p1c3RpZnknKSArIFdFQktJVCArIHZhbHVlICsgdmFsdWVcblx0XHQvLyAobWFyZ2lufHBhZGRpbmcpLWlubGluZS0oc3RhcnR8ZW5kKVxuXHRcdGNhc2UgNDA5NTogY2FzZSAzNTgzOiBjYXNlIDQwNjg6IGNhc2UgMjUzMjpcblx0XHRcdHJldHVybiByZXBsYWNlKHZhbHVlLCAvKC4rKS1pbmxpbmUoLispLywgV0VCS0lUICsgJyQxJDInKSArIHZhbHVlXG5cdFx0Ly8gKG1pbnxtYXgpPyh3aWR0aHxoZWlnaHR8aW5saW5lLXNpemV8YmxvY2stc2l6ZSlcblx0XHRjYXNlIDgxMTY6IGNhc2UgNzA1OTogY2FzZSA1NzUzOiBjYXNlIDU1MzU6XG5cdFx0Y2FzZSA1NDQ1OiBjYXNlIDU3MDE6IGNhc2UgNDkzMzogY2FzZSA0Njc3OlxuXHRcdGNhc2UgNTUzMzogY2FzZSA1Nzg5OiBjYXNlIDUwMjE6IGNhc2UgNDc2NTpcblx0XHRcdC8vIHN0cmV0Y2gsIG1heC1jb250ZW50LCBtaW4tY29udGVudCwgZmlsbC1hdmFpbGFibGVcblx0XHRcdGlmIChzdHJsZW4odmFsdWUpIC0gMSAtIGxlbmd0aCA+IDYpXG5cdFx0XHRcdHN3aXRjaCAoY2hhcmF0KHZhbHVlLCBsZW5ndGggKyAxKSkge1xuXHRcdFx0XHRcdC8vIChtKWF4LWNvbnRlbnQsIChtKWluLWNvbnRlbnRcblx0XHRcdFx0XHRjYXNlIDEwOTpcblx0XHRcdFx0XHRcdC8vIC1cblx0XHRcdFx0XHRcdGlmIChjaGFyYXQodmFsdWUsIGxlbmd0aCArIDQpICE9PSA0NSlcblx0XHRcdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0XHQvLyAoZilpbGwtYXZhaWxhYmxlLCAoZilpdC1jb250ZW50XG5cdFx0XHRcdFx0Y2FzZSAxMDI6XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVwbGFjZSh2YWx1ZSwgLyguKzopKC4rKS0oW15dKykvLCAnJDEnICsgV0VCS0lUICsgJyQyLSQzJyArICckMScgKyBNT1ogKyAoY2hhcmF0KHZhbHVlLCBsZW5ndGggKyAzKSA9PSAxMDggPyAnJDMnIDogJyQyLSQzJykpICsgdmFsdWVcblx0XHRcdFx0XHQvLyAocyl0cmV0Y2hcblx0XHRcdFx0XHRjYXNlIDExNTpcblx0XHRcdFx0XHRcdHJldHVybiB+aW5kZXhvZih2YWx1ZSwgJ3N0cmV0Y2gnKSA/IHByZWZpeChyZXBsYWNlKHZhbHVlLCAnc3RyZXRjaCcsICdmaWxsLWF2YWlsYWJsZScpLCBsZW5ndGgpICsgdmFsdWUgOiB2YWx1ZVxuXHRcdFx0XHR9XG5cdFx0XHRicmVha1xuXHRcdC8vIHBvc2l0aW9uOiBzdGlja3lcblx0XHRjYXNlIDQ5NDk6XG5cdFx0XHQvLyAocyl0aWNreT9cblx0XHRcdGlmIChjaGFyYXQodmFsdWUsIGxlbmd0aCArIDEpICE9PSAxMTUpXG5cdFx0XHRcdGJyZWFrXG5cdFx0Ly8gZGlzcGxheTogKGZsZXh8aW5saW5lLWZsZXgpXG5cdFx0Y2FzZSA2NDQ0OlxuXHRcdFx0c3dpdGNoIChjaGFyYXQodmFsdWUsIHN0cmxlbih2YWx1ZSkgLSAzIC0gKH5pbmRleG9mKHZhbHVlLCAnIWltcG9ydGFudCcpICYmIDEwKSkpIHtcblx0XHRcdFx0Ly8gc3RpYyhrKXlcblx0XHRcdFx0Y2FzZSAxMDc6XG5cdFx0XHRcdFx0cmV0dXJuIHJlcGxhY2UodmFsdWUsICc6JywgJzonICsgV0VCS0lUKSArIHZhbHVlXG5cdFx0XHRcdC8vIChpbmxpbmUtKT9mbChlKXhcblx0XHRcdFx0Y2FzZSAxMDE6XG5cdFx0XHRcdFx0cmV0dXJuIHJlcGxhY2UodmFsdWUsIC8oLis6KShbXjshXSspKDt8IS4rKT8vLCAnJDEnICsgV0VCS0lUICsgKGNoYXJhdCh2YWx1ZSwgMTQpID09PSA0NSA/ICdpbmxpbmUtJyA6ICcnKSArICdib3gkMycgKyAnJDEnICsgV0VCS0lUICsgJyQyJDMnICsgJyQxJyArIE1TICsgJyQyYm94JDMnKSArIHZhbHVlXG5cdFx0XHR9XG5cdFx0XHRicmVha1xuXHRcdC8vIHdyaXRpbmctbW9kZVxuXHRcdGNhc2UgNTkzNjpcblx0XHRcdHN3aXRjaCAoY2hhcmF0KHZhbHVlLCBsZW5ndGggKyAxMSkpIHtcblx0XHRcdFx0Ly8gdmVydGljYWwtbChyKVxuXHRcdFx0XHRjYXNlIDExNDpcblx0XHRcdFx0XHRyZXR1cm4gV0VCS0lUICsgdmFsdWUgKyBNUyArIHJlcGxhY2UodmFsdWUsIC9bc3ZoXVxcdystW3RibHJdezJ9LywgJ3RiJykgKyB2YWx1ZVxuXHRcdFx0XHQvLyB2ZXJ0aWNhbC1yKGwpXG5cdFx0XHRcdGNhc2UgMTA4OlxuXHRcdFx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgcmVwbGFjZSh2YWx1ZSwgL1tzdmhdXFx3Ky1bdGJscl17Mn0vLCAndGItcmwnKSArIHZhbHVlXG5cdFx0XHRcdC8vIGhvcml6b250YWwoLSl0YlxuXHRcdFx0XHRjYXNlIDQ1OlxuXHRcdFx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgcmVwbGFjZSh2YWx1ZSwgL1tzdmhdXFx3Ky1bdGJscl17Mn0vLCAnbHInKSArIHZhbHVlXG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgdmFsdWUgKyB2YWx1ZVxuXHR9XG5cblx0cmV0dXJuIHZhbHVlXG59XG4iLCJpbXBvcnQge01TLCBNT1osIFdFQktJVCwgUlVMRVNFVCwgS0VZRlJBTUVTLCBERUNMQVJBVElPTn0gZnJvbSAnLi9FbnVtLmpzJ1xuaW1wb3J0IHttYXRjaCwgY2hhcmF0LCBzdWJzdHIsIHN0cmxlbiwgc2l6ZW9mLCByZXBsYWNlLCBjb21iaW5lfSBmcm9tICcuL1V0aWxpdHkuanMnXG5pbXBvcnQge2NvcHksIHRva2VuaXplfSBmcm9tICcuL1Rva2VuaXplci5qcydcbmltcG9ydCB7c2VyaWFsaXplfSBmcm9tICcuL1NlcmlhbGl6ZXIuanMnXG5pbXBvcnQge3ByZWZpeH0gZnJvbSAnLi9QcmVmaXhlci5qcydcblxuLyoqXG4gKiBAcGFyYW0ge2Z1bmN0aW9uW119IGNvbGxlY3Rpb25cbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWlkZGxld2FyZSAoY29sbGVjdGlvbikge1xuXHR2YXIgbGVuZ3RoID0gc2l6ZW9mKGNvbGxlY3Rpb24pXG5cblx0cmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50LCBpbmRleCwgY2hpbGRyZW4sIGNhbGxiYWNrKSB7XG5cdFx0dmFyIG91dHB1dCA9ICcnXG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKVxuXHRcdFx0b3V0cHV0ICs9IGNvbGxlY3Rpb25baV0oZWxlbWVudCwgaW5kZXgsIGNoaWxkcmVuLCBjYWxsYmFjaykgfHwgJydcblxuXHRcdHJldHVybiBvdXRwdXRcblx0fVxufVxuXG4vKipcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJuIHtmdW5jdGlvbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJ1bGVzaGVldCAoY2FsbGJhY2spIHtcblx0cmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7XG5cdFx0aWYgKCFlbGVtZW50LnJvb3QpXG5cdFx0XHRpZiAoZWxlbWVudCA9IGVsZW1lbnQucmV0dXJuKVxuXHRcdFx0XHRjYWxsYmFjayhlbGVtZW50KVxuXHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtvYmplY3R9IGVsZW1lbnRcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICogQHBhcmFtIHtvYmplY3RbXX0gY2hpbGRyZW5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmVmaXhlciAoZWxlbWVudCwgaW5kZXgsIGNoaWxkcmVuLCBjYWxsYmFjaykge1xuXHRpZiAoZWxlbWVudC5sZW5ndGggPiAtMSlcblx0XHRpZiAoIWVsZW1lbnQucmV0dXJuKVxuXHRcdFx0c3dpdGNoIChlbGVtZW50LnR5cGUpIHtcblx0XHRcdFx0Y2FzZSBERUNMQVJBVElPTjogZWxlbWVudC5yZXR1cm4gPSBwcmVmaXgoZWxlbWVudC52YWx1ZSwgZWxlbWVudC5sZW5ndGgpXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Y2FzZSBLRVlGUkFNRVM6XG5cdFx0XHRcdFx0cmV0dXJuIHNlcmlhbGl6ZShbY29weShlbGVtZW50LCB7dmFsdWU6IHJlcGxhY2UoZWxlbWVudC52YWx1ZSwgJ0AnLCAnQCcgKyBXRUJLSVQpfSldLCBjYWxsYmFjaylcblx0XHRcdFx0Y2FzZSBSVUxFU0VUOlxuXHRcdFx0XHRcdGlmIChlbGVtZW50Lmxlbmd0aClcblx0XHRcdFx0XHRcdHJldHVybiBjb21iaW5lKGVsZW1lbnQucHJvcHMsIGZ1bmN0aW9uICh2YWx1ZSkge1xuXHRcdFx0XHRcdFx0XHRzd2l0Y2ggKG1hdGNoKHZhbHVlLCAvKDo6cGxhY1xcdyt8OnJlYWQtXFx3KykvKSkge1xuXHRcdFx0XHRcdFx0XHRcdC8vIDpyZWFkLShvbmx5fHdyaXRlKVxuXHRcdFx0XHRcdFx0XHRcdGNhc2UgJzpyZWFkLW9ubHknOiBjYXNlICc6cmVhZC13cml0ZSc6XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gc2VyaWFsaXplKFtjb3B5KGVsZW1lbnQsIHtwcm9wczogW3JlcGxhY2UodmFsdWUsIC86KHJlYWQtXFx3KykvLCAnOicgKyBNT1ogKyAnJDEnKV19KV0sIGNhbGxiYWNrKVxuXHRcdFx0XHRcdFx0XHRcdC8vIDpwbGFjZWhvbGRlclxuXHRcdFx0XHRcdFx0XHRcdGNhc2UgJzo6cGxhY2Vob2xkZXInOlxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHNlcmlhbGl6ZShbXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNvcHkoZWxlbWVudCwge3Byb3BzOiBbcmVwbGFjZSh2YWx1ZSwgLzoocGxhY1xcdyspLywgJzonICsgV0VCS0lUICsgJ2lucHV0LSQxJyldfSksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNvcHkoZWxlbWVudCwge3Byb3BzOiBbcmVwbGFjZSh2YWx1ZSwgLzoocGxhY1xcdyspLywgJzonICsgTU9aICsgJyQxJyldfSksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNvcHkoZWxlbWVudCwge3Byb3BzOiBbcmVwbGFjZSh2YWx1ZSwgLzoocGxhY1xcdyspLywgTVMgKyAnaW5wdXQtJDEnKV19KVxuXHRcdFx0XHRcdFx0XHRcdFx0XSwgY2FsbGJhY2spXG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gJydcblx0XHRcdFx0XHRcdH0pXG5cdFx0XHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtvYmplY3R9IGVsZW1lbnRcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICogQHBhcmFtIHtvYmplY3RbXX0gY2hpbGRyZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5hbWVzcGFjZSAoZWxlbWVudCkge1xuXHRzd2l0Y2ggKGVsZW1lbnQudHlwZSkge1xuXHRcdGNhc2UgUlVMRVNFVDpcblx0XHRcdGVsZW1lbnQucHJvcHMgPSBlbGVtZW50LnByb3BzLm1hcChmdW5jdGlvbiAodmFsdWUpIHtcblx0XHRcdFx0cmV0dXJuIGNvbWJpbmUodG9rZW5pemUodmFsdWUpLCBmdW5jdGlvbiAodmFsdWUsIGluZGV4LCBjaGlsZHJlbikge1xuXHRcdFx0XHRcdHN3aXRjaCAoY2hhcmF0KHZhbHVlLCAwKSkge1xuXHRcdFx0XHRcdFx0Ly8gXFxmXG5cdFx0XHRcdFx0XHRjYXNlIDEyOlxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gc3Vic3RyKHZhbHVlLCAxLCBzdHJsZW4odmFsdWUpKVxuXHRcdFx0XHRcdFx0Ly8gXFwwICggKyA+IH5cblx0XHRcdFx0XHRcdGNhc2UgMDogY2FzZSA0MDogY2FzZSA0MzogY2FzZSA2MjogY2FzZSAxMjY6XG5cdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZVxuXHRcdFx0XHRcdFx0Ly8gOlxuXHRcdFx0XHRcdFx0Y2FzZSA1ODpcblx0XHRcdFx0XHRcdFx0aWYgKGNoaWxkcmVuWysraW5kZXhdID09PSAnZ2xvYmFsJylcblx0XHRcdFx0XHRcdFx0XHRjaGlsZHJlbltpbmRleF0gPSAnJywgY2hpbGRyZW5bKytpbmRleF0gPSAnXFxmJyArIHN1YnN0cihjaGlsZHJlbltpbmRleF0sIGluZGV4ID0gMSwgLTEpXG5cdFx0XHRcdFx0XHQvLyBcXHNcblx0XHRcdFx0XHRcdGNhc2UgMzI6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbmRleCA9PT0gMSA/ICcnIDogdmFsdWVcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdHN3aXRjaCAoaW5kZXgpIHtcblx0XHRcdFx0XHRcdFx0XHRjYXNlIDA6IGVsZW1lbnQgPSB2YWx1ZVxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHNpemVvZihjaGlsZHJlbikgPiAxID8gJycgOiB2YWx1ZVxuXHRcdFx0XHRcdFx0XHRcdGNhc2UgaW5kZXggPSBzaXplb2YoY2hpbGRyZW4pIC0gMTogY2FzZSAyOlxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIGluZGV4ID09PSAyID8gdmFsdWUgKyBlbGVtZW50ICsgZWxlbWVudCA6IHZhbHVlICsgZWxlbWVudFxuXHRcdFx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gdmFsdWVcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSlcblx0XHRcdH0pXG5cdH1cbn1cbiIsImltcG9ydCB7Q09NTUVOVCwgUlVMRVNFVCwgREVDTEFSQVRJT059IGZyb20gJy4vRW51bS5qcydcbmltcG9ydCB7YWJzLCB0cmltLCBmcm9tLCBzaXplb2YsIHN0cmxlbiwgc3Vic3RyLCBhcHBlbmQsIHJlcGxhY2UsIGluZGV4b2Z9IGZyb20gJy4vVXRpbGl0eS5qcydcbmltcG9ydCB7bm9kZSwgY2hhciwgcHJldiwgbmV4dCwgcGVlaywgY2FyZXQsIGFsbG9jLCBkZWFsbG9jLCBkZWxpbWl0LCB3aGl0ZXNwYWNlLCBlc2NhcGluZywgaWRlbnRpZmllciwgY29tbWVudGVyfSBmcm9tICcuL1Rva2VuaXplci5qcydcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEByZXR1cm4ge29iamVjdFtdfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGlsZSAodmFsdWUpIHtcblx0cmV0dXJuIGRlYWxsb2MocGFyc2UoJycsIG51bGwsIG51bGwsIG51bGwsIFsnJ10sIHZhbHVlID0gYWxsb2ModmFsdWUpLCAwLCBbMF0sIHZhbHVlKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7b2JqZWN0fSByb290XG4gKiBAcGFyYW0ge29iamVjdD99IHBhcmVudFxuICogQHBhcmFtIHtzdHJpbmdbXX0gcnVsZVxuICogQHBhcmFtIHtzdHJpbmdbXX0gcnVsZXNcbiAqIEBwYXJhbSB7c3RyaW5nW119IHJ1bGVzZXRzXG4gKiBAcGFyYW0ge251bWJlcltdfSBwc2V1ZG9cbiAqIEBwYXJhbSB7bnVtYmVyW119IHBvaW50c1xuICogQHBhcmFtIHtzdHJpbmdbXX0gZGVjbGFyYXRpb25zXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZSAodmFsdWUsIHJvb3QsIHBhcmVudCwgcnVsZSwgcnVsZXMsIHJ1bGVzZXRzLCBwc2V1ZG8sIHBvaW50cywgZGVjbGFyYXRpb25zKSB7XG5cdHZhciBpbmRleCA9IDBcblx0dmFyIG9mZnNldCA9IDBcblx0dmFyIGxlbmd0aCA9IHBzZXVkb1xuXHR2YXIgYXRydWxlID0gMFxuXHR2YXIgcHJvcGVydHkgPSAwXG5cdHZhciBwcmV2aW91cyA9IDBcblx0dmFyIHZhcmlhYmxlID0gMVxuXHR2YXIgc2Nhbm5pbmcgPSAxXG5cdHZhciBhbXBlcnNhbmQgPSAxXG5cdHZhciBjaGFyYWN0ZXIgPSAwXG5cdHZhciB0eXBlID0gJydcblx0dmFyIHByb3BzID0gcnVsZXNcblx0dmFyIGNoaWxkcmVuID0gcnVsZXNldHNcblx0dmFyIHJlZmVyZW5jZSA9IHJ1bGVcblx0dmFyIGNoYXJhY3RlcnMgPSB0eXBlXG5cblx0d2hpbGUgKHNjYW5uaW5nKVxuXHRcdHN3aXRjaCAocHJldmlvdXMgPSBjaGFyYWN0ZXIsIGNoYXJhY3RlciA9IG5leHQoKSkge1xuXHRcdFx0Ly8gKFxuXHRcdFx0Y2FzZSA0MDpcblx0XHRcdFx0aWYgKHByZXZpb3VzICE9IDEwOCAmJiBjaGFyYWN0ZXJzLmNoYXJDb2RlQXQobGVuZ3RoIC0gMSkgPT0gNTgpIHtcblx0XHRcdFx0XHRpZiAoaW5kZXhvZihjaGFyYWN0ZXJzICs9IHJlcGxhY2UoZGVsaW1pdChjaGFyYWN0ZXIpLCAnJicsICcmXFxmJyksICcmXFxmJykgIT0gLTEpXG5cdFx0XHRcdFx0XHRhbXBlcnNhbmQgPSAtMVxuXHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdH1cblx0XHRcdC8vIFwiICcgW1xuXHRcdFx0Y2FzZSAzNDogY2FzZSAzOTogY2FzZSA5MTpcblx0XHRcdFx0Y2hhcmFjdGVycyArPSBkZWxpbWl0KGNoYXJhY3Rlcilcblx0XHRcdFx0YnJlYWtcblx0XHRcdC8vIFxcdCBcXG4gXFxyIFxcc1xuXHRcdFx0Y2FzZSA5OiBjYXNlIDEwOiBjYXNlIDEzOiBjYXNlIDMyOlxuXHRcdFx0XHRjaGFyYWN0ZXJzICs9IHdoaXRlc3BhY2UocHJldmlvdXMpXG5cdFx0XHRcdGJyZWFrXG5cdFx0XHQvLyBcXFxuXHRcdFx0Y2FzZSA5Mjpcblx0XHRcdFx0Y2hhcmFjdGVycyArPSBlc2NhcGluZyhjYXJldCgpIC0gMSwgNylcblx0XHRcdFx0Y29udGludWVcblx0XHRcdC8vIC9cblx0XHRcdGNhc2UgNDc6XG5cdFx0XHRcdHN3aXRjaCAocGVlaygpKSB7XG5cdFx0XHRcdFx0Y2FzZSA0MjogY2FzZSA0Nzpcblx0XHRcdFx0XHRcdGFwcGVuZChjb21tZW50KGNvbW1lbnRlcihuZXh0KCksIGNhcmV0KCkpLCByb290LCBwYXJlbnQpLCBkZWNsYXJhdGlvbnMpXG5cdFx0XHRcdFx0XHRicmVha1xuXHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRjaGFyYWN0ZXJzICs9ICcvJ1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrXG5cdFx0XHQvLyB7XG5cdFx0XHRjYXNlIDEyMyAqIHZhcmlhYmxlOlxuXHRcdFx0XHRwb2ludHNbaW5kZXgrK10gPSBzdHJsZW4oY2hhcmFjdGVycykgKiBhbXBlcnNhbmRcblx0XHRcdC8vIH0gOyBcXDBcblx0XHRcdGNhc2UgMTI1ICogdmFyaWFibGU6IGNhc2UgNTk6IGNhc2UgMDpcblx0XHRcdFx0c3dpdGNoIChjaGFyYWN0ZXIpIHtcblx0XHRcdFx0XHQvLyBcXDAgfVxuXHRcdFx0XHRcdGNhc2UgMDogY2FzZSAxMjU6IHNjYW5uaW5nID0gMFxuXHRcdFx0XHRcdC8vIDtcblx0XHRcdFx0XHRjYXNlIDU5ICsgb2Zmc2V0OlxuXHRcdFx0XHRcdFx0aWYgKHByb3BlcnR5ID4gMCAmJiAoc3RybGVuKGNoYXJhY3RlcnMpIC0gbGVuZ3RoKSlcblx0XHRcdFx0XHRcdFx0YXBwZW5kKHByb3BlcnR5ID4gMzIgPyBkZWNsYXJhdGlvbihjaGFyYWN0ZXJzICsgJzsnLCBydWxlLCBwYXJlbnQsIGxlbmd0aCAtIDEpIDogZGVjbGFyYXRpb24ocmVwbGFjZShjaGFyYWN0ZXJzLCAnICcsICcnKSArICc7JywgcnVsZSwgcGFyZW50LCBsZW5ndGggLSAyKSwgZGVjbGFyYXRpb25zKVxuXHRcdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0XHQvLyBAIDtcblx0XHRcdFx0XHRjYXNlIDU5OiBjaGFyYWN0ZXJzICs9ICc7J1xuXHRcdFx0XHRcdC8vIHsgcnVsZS9hdC1ydWxlXG5cdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdGFwcGVuZChyZWZlcmVuY2UgPSBydWxlc2V0KGNoYXJhY3RlcnMsIHJvb3QsIHBhcmVudCwgaW5kZXgsIG9mZnNldCwgcnVsZXMsIHBvaW50cywgdHlwZSwgcHJvcHMgPSBbXSwgY2hpbGRyZW4gPSBbXSwgbGVuZ3RoKSwgcnVsZXNldHMpXG5cblx0XHRcdFx0XHRcdGlmIChjaGFyYWN0ZXIgPT09IDEyMylcblx0XHRcdFx0XHRcdFx0aWYgKG9mZnNldCA9PT0gMClcblx0XHRcdFx0XHRcdFx0XHRwYXJzZShjaGFyYWN0ZXJzLCByb290LCByZWZlcmVuY2UsIHJlZmVyZW5jZSwgcHJvcHMsIHJ1bGVzZXRzLCBsZW5ndGgsIHBvaW50cywgY2hpbGRyZW4pXG5cdFx0XHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRcdFx0XHRzd2l0Y2ggKGF0cnVsZSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gZCBtIHNcblx0XHRcdFx0XHRcdFx0XHRcdGNhc2UgMTAwOiBjYXNlIDEwOTogY2FzZSAxMTU6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHBhcnNlKHZhbHVlLCByZWZlcmVuY2UsIHJlZmVyZW5jZSwgcnVsZSAmJiBhcHBlbmQocnVsZXNldCh2YWx1ZSwgcmVmZXJlbmNlLCByZWZlcmVuY2UsIDAsIDAsIHJ1bGVzLCBwb2ludHMsIHR5cGUsIHJ1bGVzLCBwcm9wcyA9IFtdLCBsZW5ndGgpLCBjaGlsZHJlbiksIHJ1bGVzLCBjaGlsZHJlbiwgbGVuZ3RoLCBwb2ludHMsIHJ1bGUgPyBwcm9wcyA6IGNoaWxkcmVuKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRicmVha1xuXHRcdFx0XHRcdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0cGFyc2UoY2hhcmFjdGVycywgcmVmZXJlbmNlLCByZWZlcmVuY2UsIHJlZmVyZW5jZSwgWycnXSwgY2hpbGRyZW4sIDAsIHBvaW50cywgY2hpbGRyZW4pXG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0aW5kZXggPSBvZmZzZXQgPSBwcm9wZXJ0eSA9IDAsIHZhcmlhYmxlID0gYW1wZXJzYW5kID0gMSwgdHlwZSA9IGNoYXJhY3RlcnMgPSAnJywgbGVuZ3RoID0gcHNldWRvXG5cdFx0XHRcdGJyZWFrXG5cdFx0XHQvLyA6XG5cdFx0XHRjYXNlIDU4OlxuXHRcdFx0XHRsZW5ndGggPSAxICsgc3RybGVuKGNoYXJhY3RlcnMpLCBwcm9wZXJ0eSA9IHByZXZpb3VzXG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRpZiAodmFyaWFibGUgPCAxKVxuXHRcdFx0XHRcdGlmIChjaGFyYWN0ZXIgPT0gMTIzKVxuXHRcdFx0XHRcdFx0LS12YXJpYWJsZVxuXHRcdFx0XHRcdGVsc2UgaWYgKGNoYXJhY3RlciA9PSAxMjUgJiYgdmFyaWFibGUrKyA9PSAwICYmIHByZXYoKSA9PSAxMjUpXG5cdFx0XHRcdFx0XHRjb250aW51ZVxuXG5cdFx0XHRcdHN3aXRjaCAoY2hhcmFjdGVycyArPSBmcm9tKGNoYXJhY3RlciksIGNoYXJhY3RlciAqIHZhcmlhYmxlKSB7XG5cdFx0XHRcdFx0Ly8gJlxuXHRcdFx0XHRcdGNhc2UgMzg6XG5cdFx0XHRcdFx0XHRhbXBlcnNhbmQgPSBvZmZzZXQgPiAwID8gMSA6IChjaGFyYWN0ZXJzICs9ICdcXGYnLCAtMSlcblx0XHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdFx0Ly8gLFxuXHRcdFx0XHRcdGNhc2UgNDQ6XG5cdFx0XHRcdFx0XHRwb2ludHNbaW5kZXgrK10gPSAoc3RybGVuKGNoYXJhY3RlcnMpIC0gMSkgKiBhbXBlcnNhbmQsIGFtcGVyc2FuZCA9IDFcblx0XHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdFx0Ly8gQFxuXHRcdFx0XHRcdGNhc2UgNjQ6XG5cdFx0XHRcdFx0XHQvLyAtXG5cdFx0XHRcdFx0XHRpZiAocGVlaygpID09PSA0NSlcblx0XHRcdFx0XHRcdFx0Y2hhcmFjdGVycyArPSBkZWxpbWl0KG5leHQoKSlcblxuXHRcdFx0XHRcdFx0YXRydWxlID0gcGVlaygpLCBvZmZzZXQgPSBsZW5ndGggPSBzdHJsZW4odHlwZSA9IGNoYXJhY3RlcnMgKz0gaWRlbnRpZmllcihjYXJldCgpKSksIGNoYXJhY3RlcisrXG5cdFx0XHRcdFx0XHRicmVha1xuXHRcdFx0XHRcdC8vIC1cblx0XHRcdFx0XHRjYXNlIDQ1OlxuXHRcdFx0XHRcdFx0aWYgKHByZXZpb3VzID09PSA0NSAmJiBzdHJsZW4oY2hhcmFjdGVycykgPT0gMilcblx0XHRcdFx0XHRcdFx0dmFyaWFibGUgPSAwXG5cdFx0XHRcdH1cblx0XHR9XG5cblx0cmV0dXJuIHJ1bGVzZXRzXG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcGFyYW0ge29iamVjdH0gcm9vdFxuICogQHBhcmFtIHtvYmplY3Q/fSBwYXJlbnRcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICogQHBhcmFtIHtzdHJpbmdbXX0gcnVsZXNcbiAqIEBwYXJhbSB7bnVtYmVyW119IHBvaW50c1xuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqIEBwYXJhbSB7c3RyaW5nW119IHByb3BzXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBjaGlsZHJlblxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybiB7b2JqZWN0fVxuICovXG5leHBvcnQgZnVuY3Rpb24gcnVsZXNldCAodmFsdWUsIHJvb3QsIHBhcmVudCwgaW5kZXgsIG9mZnNldCwgcnVsZXMsIHBvaW50cywgdHlwZSwgcHJvcHMsIGNoaWxkcmVuLCBsZW5ndGgpIHtcblx0dmFyIHBvc3QgPSBvZmZzZXQgLSAxXG5cdHZhciBydWxlID0gb2Zmc2V0ID09PSAwID8gcnVsZXMgOiBbJyddXG5cdHZhciBzaXplID0gc2l6ZW9mKHJ1bGUpXG5cblx0Zm9yICh2YXIgaSA9IDAsIGogPSAwLCBrID0gMDsgaSA8IGluZGV4OyArK2kpXG5cdFx0Zm9yICh2YXIgeCA9IDAsIHkgPSBzdWJzdHIodmFsdWUsIHBvc3QgKyAxLCBwb3N0ID0gYWJzKGogPSBwb2ludHNbaV0pKSwgeiA9IHZhbHVlOyB4IDwgc2l6ZTsgKyt4KVxuXHRcdFx0aWYgKHogPSB0cmltKGogPiAwID8gcnVsZVt4XSArICcgJyArIHkgOiByZXBsYWNlKHksIC8mXFxmL2csIHJ1bGVbeF0pKSlcblx0XHRcdFx0cHJvcHNbaysrXSA9IHpcblxuXHRyZXR1cm4gbm9kZSh2YWx1ZSwgcm9vdCwgcGFyZW50LCBvZmZzZXQgPT09IDAgPyBSVUxFU0VUIDogdHlwZSwgcHJvcHMsIGNoaWxkcmVuLCBsZW5ndGgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlXG4gKiBAcGFyYW0ge29iamVjdH0gcm9vdFxuICogQHBhcmFtIHtvYmplY3Q/fSBwYXJlbnRcbiAqIEByZXR1cm4ge29iamVjdH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbW1lbnQgKHZhbHVlLCByb290LCBwYXJlbnQpIHtcblx0cmV0dXJuIG5vZGUodmFsdWUsIHJvb3QsIHBhcmVudCwgQ09NTUVOVCwgZnJvbShjaGFyKCkpLCBzdWJzdHIodmFsdWUsIDIsIC0yKSwgMClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7b2JqZWN0fSByb290XG4gKiBAcGFyYW0ge29iamVjdD99IHBhcmVudFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybiB7b2JqZWN0fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjbGFyYXRpb24gKHZhbHVlLCByb290LCBwYXJlbnQsIGxlbmd0aCkge1xuXHRyZXR1cm4gbm9kZSh2YWx1ZSwgcm9vdCwgcGFyZW50LCBERUNMQVJBVElPTiwgc3Vic3RyKHZhbHVlLCAwLCBsZW5ndGgpLCBzdWJzdHIodmFsdWUsIGxlbmd0aCArIDEsIC0xKSwgbGVuZ3RoKVxufVxuIiwiaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ0BlbW90aW9uL3NoZWV0JztcbmltcG9ydCB7IGRlYWxsb2MsIGFsbG9jLCBuZXh0LCB0b2tlbiwgZnJvbSwgcGVlaywgZGVsaW1pdCwgc2xpY2UsIHBvc2l0aW9uLCBzdHJpbmdpZnksIENPTU1FTlQsIHJ1bGVzaGVldCwgbWlkZGxld2FyZSwgcHJlZml4ZXIsIHNlcmlhbGl6ZSwgY29tcGlsZSB9IGZyb20gJ3N0eWxpcyc7XG5pbXBvcnQgJ0BlbW90aW9uL3dlYWstbWVtb2l6ZSc7XG5pbXBvcnQgJ0BlbW90aW9uL21lbW9pemUnO1xuXG52YXIgbGFzdCA9IGZ1bmN0aW9uIGxhc3QoYXJyKSB7XG4gIHJldHVybiBhcnIubGVuZ3RoID8gYXJyW2Fyci5sZW5ndGggLSAxXSA6IG51bGw7XG59OyAvLyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vdGh5c3VsdGFuL3N0eWxpcy5qcy9ibG9iL2U2ODQzYzM3M2ViY2JiZmFkZTI1ZWJjYzIzZjU0MGVkODUwOGRhMGEvc3JjL1Rva2VuaXplci5qcyNMMjM5LUwyNDRcblxuXG52YXIgaWRlbnRpZmllcldpdGhQb2ludFRyYWNraW5nID0gZnVuY3Rpb24gaWRlbnRpZmllcldpdGhQb2ludFRyYWNraW5nKGJlZ2luLCBwb2ludHMsIGluZGV4KSB7XG4gIHZhciBwcmV2aW91cyA9IDA7XG4gIHZhciBjaGFyYWN0ZXIgPSAwO1xuXG4gIHdoaWxlICh0cnVlKSB7XG4gICAgcHJldmlvdXMgPSBjaGFyYWN0ZXI7XG4gICAgY2hhcmFjdGVyID0gcGVlaygpOyAvLyAmXFxmXG5cbiAgICBpZiAocHJldmlvdXMgPT09IDM4ICYmIGNoYXJhY3RlciA9PT0gMTIpIHtcbiAgICAgIHBvaW50c1tpbmRleF0gPSAxO1xuICAgIH1cblxuICAgIGlmICh0b2tlbihjaGFyYWN0ZXIpKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBuZXh0KCk7XG4gIH1cblxuICByZXR1cm4gc2xpY2UoYmVnaW4sIHBvc2l0aW9uKTtcbn07XG5cbnZhciB0b1J1bGVzID0gZnVuY3Rpb24gdG9SdWxlcyhwYXJzZWQsIHBvaW50cykge1xuICAvLyBwcmV0ZW5kIHdlJ3ZlIHN0YXJ0ZWQgd2l0aCBhIGNvbW1hXG4gIHZhciBpbmRleCA9IC0xO1xuICB2YXIgY2hhcmFjdGVyID0gNDQ7XG5cbiAgZG8ge1xuICAgIHN3aXRjaCAodG9rZW4oY2hhcmFjdGVyKSkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICAvLyAmXFxmXG4gICAgICAgIGlmIChjaGFyYWN0ZXIgPT09IDM4ICYmIHBlZWsoKSA9PT0gMTIpIHtcbiAgICAgICAgICAvLyB0aGlzIGlzIG5vdCAxMDAlIGNvcnJlY3QsIHdlIGRvbid0IGFjY291bnQgZm9yIGxpdGVyYWwgc2VxdWVuY2VzIGhlcmUgLSBsaWtlIGZvciBleGFtcGxlIHF1b3RlZCBzdHJpbmdzXG4gICAgICAgICAgLy8gc3R5bGlzIGluc2VydHMgXFxmIGFmdGVyICYgdG8ga25vdyB3aGVuICYgd2hlcmUgaXQgc2hvdWxkIHJlcGxhY2UgdGhpcyBzZXF1ZW5jZSB3aXRoIHRoZSBjb250ZXh0IHNlbGVjdG9yXG4gICAgICAgICAgLy8gYW5kIHdoZW4gaXQgc2hvdWxkIGp1c3QgY29uY2F0ZW5hdGUgdGhlIG91dGVyIGFuZCBpbm5lciBzZWxlY3RvcnNcbiAgICAgICAgICAvLyBpdCdzIHZlcnkgdW5saWtlbHkgZm9yIHRoaXMgc2VxdWVuY2UgdG8gYWN0dWFsbHkgYXBwZWFyIGluIGEgZGlmZmVyZW50IGNvbnRleHQsIHNvIHdlIGp1c3QgbGV2ZXJhZ2UgdGhpcyBmYWN0IGhlcmVcbiAgICAgICAgICBwb2ludHNbaW5kZXhdID0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIHBhcnNlZFtpbmRleF0gKz0gaWRlbnRpZmllcldpdGhQb2ludFRyYWNraW5nKHBvc2l0aW9uIC0gMSwgcG9pbnRzLCBpbmRleCk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDI6XG4gICAgICAgIHBhcnNlZFtpbmRleF0gKz0gZGVsaW1pdChjaGFyYWN0ZXIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA0OlxuICAgICAgICAvLyBjb21tYVxuICAgICAgICBpZiAoY2hhcmFjdGVyID09PSA0NCkge1xuICAgICAgICAgIC8vIGNvbG9uXG4gICAgICAgICAgcGFyc2VkWysraW5kZXhdID0gcGVlaygpID09PSA1OCA/ICcmXFxmJyA6ICcnO1xuICAgICAgICAgIHBvaW50c1tpbmRleF0gPSBwYXJzZWRbaW5kZXhdLmxlbmd0aDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAvLyBmYWxsdGhyb3VnaFxuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBwYXJzZWRbaW5kZXhdICs9IGZyb20oY2hhcmFjdGVyKTtcbiAgICB9XG4gIH0gd2hpbGUgKGNoYXJhY3RlciA9IG5leHQoKSk7XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn07XG5cbnZhciBnZXRSdWxlcyA9IGZ1bmN0aW9uIGdldFJ1bGVzKHZhbHVlLCBwb2ludHMpIHtcbiAgcmV0dXJuIGRlYWxsb2ModG9SdWxlcyhhbGxvYyh2YWx1ZSksIHBvaW50cykpO1xufTsgLy8gV2Vha1NldCB3b3VsZCBiZSBtb3JlIGFwcHJvcHJpYXRlLCBidXQgb25seSBXZWFrTWFwIGlzIHN1cHBvcnRlZCBpbiBJRTExXG5cblxudmFyIGZpeGVkRWxlbWVudHMgPSAvKiAjX19QVVJFX18gKi9uZXcgV2Vha01hcCgpO1xudmFyIGNvbXBhdCA9IGZ1bmN0aW9uIGNvbXBhdChlbGVtZW50KSB7XG4gIGlmIChlbGVtZW50LnR5cGUgIT09ICdydWxlJyB8fCAhZWxlbWVudC5wYXJlbnQgfHwgLy8gcG9zaXRpdmUgLmxlbmd0aCBpbmRpY2F0ZXMgdGhhdCB0aGlzIHJ1bGUgY29udGFpbnMgcHNldWRvXG4gIC8vIG5lZ2F0aXZlIC5sZW5ndGggaW5kaWNhdGVzIHRoYXQgdGhpcyBydWxlIGhhcyBiZWVuIGFscmVhZHkgcHJlZml4ZWRcbiAgZWxlbWVudC5sZW5ndGggPCAxKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHZhbHVlID0gZWxlbWVudC52YWx1ZSxcbiAgICAgIHBhcmVudCA9IGVsZW1lbnQucGFyZW50O1xuICB2YXIgaXNJbXBsaWNpdFJ1bGUgPSBlbGVtZW50LmNvbHVtbiA9PT0gcGFyZW50LmNvbHVtbiAmJiBlbGVtZW50LmxpbmUgPT09IHBhcmVudC5saW5lO1xuXG4gIHdoaWxlIChwYXJlbnQudHlwZSAhPT0gJ3J1bGUnKSB7XG4gICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcbiAgICBpZiAoIXBhcmVudCkgcmV0dXJuO1xuICB9IC8vIHNob3J0LWNpcmN1aXQgZm9yIHRoZSBzaW1wbGVzdCBjYXNlXG5cblxuICBpZiAoZWxlbWVudC5wcm9wcy5sZW5ndGggPT09IDEgJiYgdmFsdWUuY2hhckNvZGVBdCgwKSAhPT0gNThcbiAgLyogY29sb24gKi9cbiAgJiYgIWZpeGVkRWxlbWVudHMuZ2V0KHBhcmVudCkpIHtcbiAgICByZXR1cm47XG4gIH0gLy8gaWYgdGhpcyBpcyBhbiBpbXBsaWNpdGx5IGluc2VydGVkIHJ1bGUgKHRoZSBvbmUgZWFnZXJseSBpbnNlcnRlZCBhdCB0aGUgZWFjaCBuZXcgbmVzdGVkIGxldmVsKVxuICAvLyB0aGVuIHRoZSBwcm9wcyBoYXMgYWxyZWFkeSBiZWVuIG1hbmlwdWxhdGVkIGJlZm9yZWhhbmQgYXMgdGhleSB0aGF0IGFycmF5IGlzIHNoYXJlZCBiZXR3ZWVuIGl0IGFuZCBpdHMgXCJydWxlIHBhcmVudFwiXG5cblxuICBpZiAoaXNJbXBsaWNpdFJ1bGUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBmaXhlZEVsZW1lbnRzLnNldChlbGVtZW50LCB0cnVlKTtcbiAgdmFyIHBvaW50cyA9IFtdO1xuICB2YXIgcnVsZXMgPSBnZXRSdWxlcyh2YWx1ZSwgcG9pbnRzKTtcbiAgdmFyIHBhcmVudFJ1bGVzID0gcGFyZW50LnByb3BzO1xuXG4gIGZvciAodmFyIGkgPSAwLCBrID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBwYXJlbnRSdWxlcy5sZW5ndGg7IGorKywgaysrKSB7XG4gICAgICBlbGVtZW50LnByb3BzW2tdID0gcG9pbnRzW2ldID8gcnVsZXNbaV0ucmVwbGFjZSgvJlxcZi9nLCBwYXJlbnRSdWxlc1tqXSkgOiBwYXJlbnRSdWxlc1tqXSArIFwiIFwiICsgcnVsZXNbaV07XG4gICAgfVxuICB9XG59O1xudmFyIHJlbW92ZUxhYmVsID0gZnVuY3Rpb24gcmVtb3ZlTGFiZWwoZWxlbWVudCkge1xuICBpZiAoZWxlbWVudC50eXBlID09PSAnZGVjbCcpIHtcbiAgICB2YXIgdmFsdWUgPSBlbGVtZW50LnZhbHVlO1xuXG4gICAgaWYgKCAvLyBjaGFyY29kZSBmb3IgbFxuICAgIHZhbHVlLmNoYXJDb2RlQXQoMCkgPT09IDEwOCAmJiAvLyBjaGFyY29kZSBmb3IgYlxuICAgIHZhbHVlLmNoYXJDb2RlQXQoMikgPT09IDk4KSB7XG4gICAgICAvLyB0aGlzIGlnbm9yZXMgbGFiZWxcbiAgICAgIGVsZW1lbnRbXCJyZXR1cm5cIl0gPSAnJztcbiAgICAgIGVsZW1lbnQudmFsdWUgPSAnJztcbiAgICB9XG4gIH1cbn07XG52YXIgaWdub3JlRmxhZyA9ICdlbW90aW9uLWRpc2FibGUtc2VydmVyLXJlbmRlcmluZy11bnNhZmUtc2VsZWN0b3Itd2FybmluZy1wbGVhc2UtZG8tbm90LXVzZS10aGlzLXRoZS13YXJuaW5nLWV4aXN0cy1mb3ItYS1yZWFzb24nO1xuXG52YXIgaXNJZ25vcmluZ0NvbW1lbnQgPSBmdW5jdGlvbiBpc0lnbm9yaW5nQ29tbWVudChlbGVtZW50KSB7XG4gIHJldHVybiAhIWVsZW1lbnQgJiYgZWxlbWVudC50eXBlID09PSAnY29tbScgJiYgZWxlbWVudC5jaGlsZHJlbi5pbmRleE9mKGlnbm9yZUZsYWcpID4gLTE7XG59O1xuXG52YXIgY3JlYXRlVW5zYWZlU2VsZWN0b3JzQWxhcm0gPSBmdW5jdGlvbiBjcmVhdGVVbnNhZmVTZWxlY3RvcnNBbGFybShjYWNoZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4LCBjaGlsZHJlbikge1xuICAgIGlmIChlbGVtZW50LnR5cGUgIT09ICdydWxlJykgcmV0dXJuO1xuICAgIHZhciB1bnNhZmVQc2V1ZG9DbGFzc2VzID0gZWxlbWVudC52YWx1ZS5tYXRjaCgvKDpmaXJzdHw6bnRofDpudGgtbGFzdCktY2hpbGQvZyk7XG5cbiAgICBpZiAodW5zYWZlUHNldWRvQ2xhc3NlcyAmJiBjYWNoZS5jb21wYXQgIT09IHRydWUpIHtcbiAgICAgIHZhciBwcmV2RWxlbWVudCA9IGluZGV4ID4gMCA/IGNoaWxkcmVuW2luZGV4IC0gMV0gOiBudWxsO1xuXG4gICAgICBpZiAocHJldkVsZW1lbnQgJiYgaXNJZ25vcmluZ0NvbW1lbnQobGFzdChwcmV2RWxlbWVudC5jaGlsZHJlbikpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdW5zYWZlUHNldWRvQ2xhc3Nlcy5mb3JFYWNoKGZ1bmN0aW9uICh1bnNhZmVQc2V1ZG9DbGFzcykge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhlIHBzZXVkbyBjbGFzcyBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcyArIFwiXFxcIiBpcyBwb3RlbnRpYWxseSB1bnNhZmUgd2hlbiBkb2luZyBzZXJ2ZXItc2lkZSByZW5kZXJpbmcuIFRyeSBjaGFuZ2luZyBpdCB0byBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcy5zcGxpdCgnLWNoaWxkJylbMF0gKyBcIi1vZi10eXBlXFxcIi5cIik7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59O1xuXG52YXIgaXNJbXBvcnRSdWxlID0gZnVuY3Rpb24gaXNJbXBvcnRSdWxlKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsZW1lbnQudHlwZS5jaGFyQ29kZUF0KDEpID09PSAxMDUgJiYgZWxlbWVudC50eXBlLmNoYXJDb2RlQXQoMCkgPT09IDY0O1xufTtcblxudmFyIGlzUHJlcGVuZGVkV2l0aFJlZ3VsYXJSdWxlcyA9IGZ1bmN0aW9uIGlzUHJlcGVuZGVkV2l0aFJlZ3VsYXJSdWxlcyhpbmRleCwgY2hpbGRyZW4pIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4IC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBpZiAoIWlzSW1wb3J0UnVsZShjaGlsZHJlbltpXSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07IC8vIHVzZSB0aGlzIHRvIHJlbW92ZSBpbmNvcnJlY3QgZWxlbWVudHMgZnJvbSBmdXJ0aGVyIHByb2Nlc3Npbmdcbi8vIHNvIHRoZXkgZG9uJ3QgZ2V0IGhhbmRlZCB0byB0aGUgYHNoZWV0YCAob3IgYW55dGhpbmcgZWxzZSlcbi8vIGFzIHRoYXQgY291bGQgcG90ZW50aWFsbHkgbGVhZCB0byBhZGRpdGlvbmFsIGxvZ3Mgd2hpY2ggaW4gdHVybiBjb3VsZCBiZSBvdmVyaGVsbWluZyB0byB0aGUgdXNlclxuXG5cbnZhciBudWxsaWZ5RWxlbWVudCA9IGZ1bmN0aW9uIG51bGxpZnlFbGVtZW50KGVsZW1lbnQpIHtcbiAgZWxlbWVudC50eXBlID0gJyc7XG4gIGVsZW1lbnQudmFsdWUgPSAnJztcbiAgZWxlbWVudFtcInJldHVyblwiXSA9ICcnO1xuICBlbGVtZW50LmNoaWxkcmVuID0gJyc7XG4gIGVsZW1lbnQucHJvcHMgPSAnJztcbn07XG5cbnZhciBpbmNvcnJlY3RJbXBvcnRBbGFybSA9IGZ1bmN0aW9uIGluY29ycmVjdEltcG9ydEFsYXJtKGVsZW1lbnQsIGluZGV4LCBjaGlsZHJlbikge1xuICBpZiAoIWlzSW1wb3J0UnVsZShlbGVtZW50KSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChlbGVtZW50LnBhcmVudCkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJgQGltcG9ydGAgcnVsZXMgY2FuJ3QgYmUgbmVzdGVkIGluc2lkZSBvdGhlciBydWxlcy4gUGxlYXNlIG1vdmUgaXQgdG8gdGhlIHRvcCBsZXZlbCBhbmQgcHV0IGl0IGJlZm9yZSByZWd1bGFyIHJ1bGVzLiBLZWVwIGluIG1pbmQgdGhhdCB0aGV5IGNhbiBvbmx5IGJlIHVzZWQgd2l0aGluIGdsb2JhbCBzdHlsZXMuXCIpO1xuICAgIG51bGxpZnlFbGVtZW50KGVsZW1lbnQpO1xuICB9IGVsc2UgaWYgKGlzUHJlcGVuZGVkV2l0aFJlZ3VsYXJSdWxlcyhpbmRleCwgY2hpbGRyZW4pKSB7XG4gICAgY29uc29sZS5lcnJvcihcImBAaW1wb3J0YCBydWxlcyBjYW4ndCBiZSBhZnRlciBvdGhlciBydWxlcy4gUGxlYXNlIHB1dCB5b3VyIGBAaW1wb3J0YCBydWxlcyBiZWZvcmUgeW91ciBvdGhlciBydWxlcy5cIik7XG4gICAgbnVsbGlmeUVsZW1lbnQoZWxlbWVudCk7XG4gIH1cbn07XG5cbnZhciBkZWZhdWx0U3R5bGlzUGx1Z2lucyA9IFtwcmVmaXhlcl07XG5cbnZhciBjcmVhdGVDYWNoZSA9IGZ1bmN0aW9uIGNyZWF0ZUNhY2hlKG9wdGlvbnMpIHtcbiAgdmFyIGtleSA9IG9wdGlvbnMua2V5O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFrZXkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgaGF2ZSB0byBjb25maWd1cmUgYGtleWAgZm9yIHlvdXIgY2FjaGUuIFBsZWFzZSBtYWtlIHN1cmUgaXQncyB1bmlxdWUgKGFuZCBub3QgZXF1YWwgdG8gJ2NzcycpIGFzIGl0J3MgdXNlZCBmb3IgbGlua2luZyBzdHlsZXMgdG8geW91ciBjYWNoZS5cXG5cIiArIFwiSWYgbXVsdGlwbGUgY2FjaGVzIHNoYXJlIHRoZSBzYW1lIGtleSB0aGV5IG1pZ2h0IFxcXCJmaWdodFxcXCIgZm9yIGVhY2ggb3RoZXIncyBzdHlsZSBlbGVtZW50cy5cIik7XG4gIH1cblxuICBpZiAoIGtleSA9PT0gJ2NzcycpIHtcbiAgICB2YXIgc3NyU3R5bGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcInN0eWxlW2RhdGEtZW1vdGlvbl06bm90KFtkYXRhLXNdKVwiKTsgLy8gZ2V0IFNTUmVkIHN0eWxlcyBvdXQgb2YgdGhlIHdheSBvZiBSZWFjdCdzIGh5ZHJhdGlvblxuICAgIC8vIGRvY3VtZW50LmhlYWQgaXMgYSBzYWZlIHBsYWNlIHRvIG1vdmUgdGhlbSB0byh0aG91Z2ggbm90ZSBkb2N1bWVudC5oZWFkIGlzIG5vdCBuZWNlc3NhcmlseSB0aGUgbGFzdCBwbGFjZSB0aGV5IHdpbGwgYmUpXG4gICAgLy8gbm90ZSB0aGlzIHZlcnkgdmVyeSBpbnRlbnRpb25hbGx5IHRhcmdldHMgYWxsIHN0eWxlIGVsZW1lbnRzIHJlZ2FyZGxlc3Mgb2YgdGhlIGtleSB0byBlbnN1cmVcbiAgICAvLyB0aGF0IGNyZWF0aW5nIGEgY2FjaGUgd29ya3MgaW5zaWRlIG9mIHJlbmRlciBvZiBhIFJlYWN0IGNvbXBvbmVudFxuXG4gICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChzc3JTdHlsZXMsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAvLyB3ZSB3YW50IHRvIG9ubHkgbW92ZSBlbGVtZW50cyB3aGljaCBoYXZlIGEgc3BhY2UgaW4gdGhlIGRhdGEtZW1vdGlvbiBhdHRyaWJ1dGUgdmFsdWVcbiAgICAgIC8vIGJlY2F1c2UgdGhhdCBpbmRpY2F0ZXMgdGhhdCBpdCBpcyBhbiBFbW90aW9uIDExIHNlcnZlci1zaWRlIHJlbmRlcmVkIHN0eWxlIGVsZW1lbnRzXG4gICAgICAvLyB3aGlsZSB3ZSB3aWxsIGFscmVhZHkgaWdub3JlIEVtb3Rpb24gMTEgY2xpZW50LXNpZGUgaW5zZXJ0ZWQgc3R5bGVzIGJlY2F1c2Ugb2YgdGhlIDpub3QoW2RhdGEtc10pIHBhcnQgaW4gdGhlIHNlbGVjdG9yXG4gICAgICAvLyBFbW90aW9uIDEwIGNsaWVudC1zaWRlIGluc2VydGVkIHN0eWxlcyBkaWQgbm90IGhhdmUgZGF0YS1zIChidXQgaW1wb3J0YW50bHkgZGlkIG5vdCBoYXZlIGEgc3BhY2UgaW4gdGhlaXIgZGF0YS1lbW90aW9uIGF0dHJpYnV0ZXMpXG4gICAgICAvLyBzbyBjaGVja2luZyBmb3IgdGhlIHNwYWNlIGVuc3VyZXMgdGhhdCBsb2FkaW5nIEVtb3Rpb24gMTEgYWZ0ZXIgRW1vdGlvbiAxMCBoYXMgaW5zZXJ0ZWQgc29tZSBzdHlsZXNcbiAgICAgIC8vIHdpbGwgbm90IHJlc3VsdCBpbiB0aGUgRW1vdGlvbiAxMCBzdHlsZXMgYmVpbmcgZGVzdHJveWVkXG4gICAgICB2YXIgZGF0YUVtb3Rpb25BdHRyaWJ1dGUgPSBub2RlLmdldEF0dHJpYnV0ZSgnZGF0YS1lbW90aW9uJyk7XG5cbiAgICAgIGlmIChkYXRhRW1vdGlvbkF0dHJpYnV0ZS5pbmRleE9mKCcgJykgPT09IC0xKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQobm9kZSk7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZSgnZGF0YS1zJywgJycpO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIHN0eWxpc1BsdWdpbnMgPSBvcHRpb25zLnN0eWxpc1BsdWdpbnMgfHwgZGVmYXVsdFN0eWxpc1BsdWdpbnM7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgaWYgKC9bXmEtei1dLy50ZXN0KGtleSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkVtb3Rpb24ga2V5IG11c3Qgb25seSBjb250YWluIGxvd2VyIGNhc2UgYWxwaGFiZXRpY2FsIGNoYXJhY3RlcnMgYW5kIC0gYnV0IFxcXCJcIiArIGtleSArIFwiXFxcIiB3YXMgcGFzc2VkXCIpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbnNlcnRlZCA9IHt9O1xuICB2YXIgY29udGFpbmVyO1xuICB2YXIgbm9kZXNUb0h5ZHJhdGUgPSBbXTtcblxuICB7XG4gICAgY29udGFpbmVyID0gb3B0aW9ucy5jb250YWluZXIgfHwgZG9jdW1lbnQuaGVhZDtcbiAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKCAvLyB0aGlzIG1lYW5zIHdlIHdpbGwgaWdub3JlIGVsZW1lbnRzIHdoaWNoIGRvbid0IGhhdmUgYSBzcGFjZSBpbiB0aGVtIHdoaWNoXG4gICAgLy8gbWVhbnMgdGhhdCB0aGUgc3R5bGUgZWxlbWVudHMgd2UncmUgbG9va2luZyBhdCBhcmUgb25seSBFbW90aW9uIDExIHNlcnZlci1yZW5kZXJlZCBzdHlsZSBlbGVtZW50c1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJzdHlsZVtkYXRhLWVtb3Rpb25ePVxcXCJcIiArIGtleSArIFwiIFxcXCJdXCIpLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgdmFyIGF0dHJpYiA9IG5vZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1lbW90aW9uXCIpLnNwbGl0KCcgJyk7IC8vICRGbG93Rml4TWVcblxuICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhdHRyaWIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaW5zZXJ0ZWRbYXR0cmliW2ldXSA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIG5vZGVzVG9IeWRyYXRlLnB1c2gobm9kZSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgX2luc2VydDtcblxuICB2YXIgb21uaXByZXNlbnRQbHVnaW5zID0gW2NvbXBhdCwgcmVtb3ZlTGFiZWxdO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgb21uaXByZXNlbnRQbHVnaW5zLnB1c2goY3JlYXRlVW5zYWZlU2VsZWN0b3JzQWxhcm0oe1xuICAgICAgZ2V0IGNvbXBhdCgpIHtcbiAgICAgICAgcmV0dXJuIGNhY2hlLmNvbXBhdDtcbiAgICAgIH1cblxuICAgIH0pLCBpbmNvcnJlY3RJbXBvcnRBbGFybSk7XG4gIH1cblxuICB7XG4gICAgdmFyIGN1cnJlbnRTaGVldDtcbiAgICB2YXIgZmluYWxpemluZ1BsdWdpbnMgPSBbc3RyaW5naWZ5LCBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIGlmICghZWxlbWVudC5yb290KSB7XG4gICAgICAgIGlmIChlbGVtZW50W1wicmV0dXJuXCJdKSB7XG4gICAgICAgICAgY3VycmVudFNoZWV0Lmluc2VydChlbGVtZW50W1wicmV0dXJuXCJdKTtcbiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50LnZhbHVlICYmIGVsZW1lbnQudHlwZSAhPT0gQ09NTUVOVCkge1xuICAgICAgICAgIC8vIGluc2VydCBlbXB0eSBydWxlIGluIG5vbi1wcm9kdWN0aW9uIGVudmlyb25tZW50c1xuICAgICAgICAgIC8vIHNvIEBlbW90aW9uL2plc3QgY2FuIGdyYWIgYGtleWAgZnJvbSB0aGUgKEpTKURPTSBmb3IgY2FjaGVzIHdpdGhvdXQgYW55IHJ1bGVzIGluc2VydGVkIHlldFxuICAgICAgICAgIGN1cnJlbnRTaGVldC5pbnNlcnQoZWxlbWVudC52YWx1ZSArIFwie31cIik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IDogcnVsZXNoZWV0KGZ1bmN0aW9uIChydWxlKSB7XG4gICAgICBjdXJyZW50U2hlZXQuaW5zZXJ0KHJ1bGUpO1xuICAgIH0pXTtcbiAgICB2YXIgc2VyaWFsaXplciA9IG1pZGRsZXdhcmUob21uaXByZXNlbnRQbHVnaW5zLmNvbmNhdChzdHlsaXNQbHVnaW5zLCBmaW5hbGl6aW5nUGx1Z2lucykpO1xuXG4gICAgdmFyIHN0eWxpcyA9IGZ1bmN0aW9uIHN0eWxpcyhzdHlsZXMpIHtcbiAgICAgIHJldHVybiBzZXJpYWxpemUoY29tcGlsZShzdHlsZXMpLCBzZXJpYWxpemVyKTtcbiAgICB9O1xuXG4gICAgX2luc2VydCA9IGZ1bmN0aW9uIGluc2VydChzZWxlY3Rvciwgc2VyaWFsaXplZCwgc2hlZXQsIHNob3VsZENhY2hlKSB7XG4gICAgICBjdXJyZW50U2hlZXQgPSBzaGVldDtcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgc2VyaWFsaXplZC5tYXAgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjdXJyZW50U2hlZXQgPSB7XG4gICAgICAgICAgaW5zZXJ0OiBmdW5jdGlvbiBpbnNlcnQocnVsZSkge1xuICAgICAgICAgICAgc2hlZXQuaW5zZXJ0KHJ1bGUgKyBzZXJpYWxpemVkLm1hcCk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBzdHlsaXMoc2VsZWN0b3IgPyBzZWxlY3RvciArIFwie1wiICsgc2VyaWFsaXplZC5zdHlsZXMgKyBcIn1cIiA6IHNlcmlhbGl6ZWQuc3R5bGVzKTtcblxuICAgICAgaWYgKHNob3VsZENhY2hlKSB7XG4gICAgICAgIGNhY2hlLmluc2VydGVkW3NlcmlhbGl6ZWQubmFtZV0gPSB0cnVlO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICB2YXIgY2FjaGUgPSB7XG4gICAga2V5OiBrZXksXG4gICAgc2hlZXQ6IG5ldyBTdHlsZVNoZWV0KHtcbiAgICAgIGtleToga2V5LFxuICAgICAgY29udGFpbmVyOiBjb250YWluZXIsXG4gICAgICBub25jZTogb3B0aW9ucy5ub25jZSxcbiAgICAgIHNwZWVkeTogb3B0aW9ucy5zcGVlZHksXG4gICAgICBwcmVwZW5kOiBvcHRpb25zLnByZXBlbmQsXG4gICAgICBpbnNlcnRpb25Qb2ludDogb3B0aW9ucy5pbnNlcnRpb25Qb2ludFxuICAgIH0pLFxuICAgIG5vbmNlOiBvcHRpb25zLm5vbmNlLFxuICAgIGluc2VydGVkOiBpbnNlcnRlZCxcbiAgICByZWdpc3RlcmVkOiB7fSxcbiAgICBpbnNlcnQ6IF9pbnNlcnRcbiAgfTtcbiAgY2FjaGUuc2hlZXQuaHlkcmF0ZShub2Rlc1RvSHlkcmF0ZSk7XG4gIHJldHVybiBjYWNoZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUNhY2hlO1xuIiwiLyogZXNsaW50LWRpc2FibGUgKi9cbi8vIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9nYXJ5Y291cnQvbXVybXVyaGFzaC1qc1xuLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2FhcHBsZWJ5L3NtaGFzaGVyL2Jsb2IvNjFhMDUzMGYyODI3N2YyZTg1MGJmYzM5NjAwY2U2MWQwMmI1MThkZS9zcmMvTXVybXVySGFzaDIuY3BwI0wzNy1MODZcbmZ1bmN0aW9uIG11cm11cjIoc3RyKSB7XG4gIC8vICdtJyBhbmQgJ3InIGFyZSBtaXhpbmcgY29uc3RhbnRzIGdlbmVyYXRlZCBvZmZsaW5lLlxuICAvLyBUaGV5J3JlIG5vdCByZWFsbHkgJ21hZ2ljJywgdGhleSBqdXN0IGhhcHBlbiB0byB3b3JrIHdlbGwuXG4gIC8vIGNvbnN0IG0gPSAweDViZDFlOTk1O1xuICAvLyBjb25zdCByID0gMjQ7XG4gIC8vIEluaXRpYWxpemUgdGhlIGhhc2hcbiAgdmFyIGggPSAwOyAvLyBNaXggNCBieXRlcyBhdCBhIHRpbWUgaW50byB0aGUgaGFzaFxuXG4gIHZhciBrLFxuICAgICAgaSA9IDAsXG4gICAgICBsZW4gPSBzdHIubGVuZ3RoO1xuXG4gIGZvciAoOyBsZW4gPj0gNDsgKytpLCBsZW4gLT0gNCkge1xuICAgIGsgPSBzdHIuY2hhckNvZGVBdChpKSAmIDB4ZmYgfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDggfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDE2IHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCAyNDtcbiAgICBrID1cbiAgICAvKiBNYXRoLmltdWwoaywgbSk6ICovXG4gICAgKGsgJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoayA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgICBrIF49XG4gICAgLyogayA+Pj4gcjogKi9cbiAgICBrID4+PiAyNDtcbiAgICBoID1cbiAgICAvKiBNYXRoLmltdWwoaywgbSk6ICovXG4gICAgKGsgJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoayA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KSBeXG4gICAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAgIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIH0gLy8gSGFuZGxlIHRoZSBsYXN0IGZldyBieXRlcyBvZiB0aGUgaW5wdXQgYXJyYXlcblxuXG4gIHN3aXRjaCAobGVuKSB7XG4gICAgY2FzZSAzOlxuICAgICAgaCBePSAoc3RyLmNoYXJDb2RlQXQoaSArIDIpICYgMHhmZikgPDwgMTY7XG5cbiAgICBjYXNlIDI6XG4gICAgICBoIF49IChzdHIuY2hhckNvZGVBdChpICsgMSkgJiAweGZmKSA8PCA4O1xuXG4gICAgY2FzZSAxOlxuICAgICAgaCBePSBzdHIuY2hhckNvZGVBdChpKSAmIDB4ZmY7XG4gICAgICBoID1cbiAgICAgIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgICAgIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIH0gLy8gRG8gYSBmZXcgZmluYWwgbWl4ZXMgb2YgdGhlIGhhc2ggdG8gZW5zdXJlIHRoZSBsYXN0IGZld1xuICAvLyBieXRlcyBhcmUgd2VsbC1pbmNvcnBvcmF0ZWQuXG5cblxuICBoIF49IGggPj4+IDEzO1xuICBoID1cbiAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICByZXR1cm4gKChoIF4gaCA+Pj4gMTUpID4+PiAwKS50b1N0cmluZygzNik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG11cm11cjI7XG4iLCJ2YXIgdW5pdGxlc3NLZXlzID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IDEsXG4gIGJvcmRlckltYWdlU2xpY2U6IDEsXG4gIGJvcmRlckltYWdlV2lkdGg6IDEsXG4gIGJveEZsZXg6IDEsXG4gIGJveEZsZXhHcm91cDogMSxcbiAgYm94T3JkaW5hbEdyb3VwOiAxLFxuICBjb2x1bW5Db3VudDogMSxcbiAgY29sdW1uczogMSxcbiAgZmxleDogMSxcbiAgZmxleEdyb3c6IDEsXG4gIGZsZXhQb3NpdGl2ZTogMSxcbiAgZmxleFNocmluazogMSxcbiAgZmxleE5lZ2F0aXZlOiAxLFxuICBmbGV4T3JkZXI6IDEsXG4gIGdyaWRSb3c6IDEsXG4gIGdyaWRSb3dFbmQ6IDEsXG4gIGdyaWRSb3dTcGFuOiAxLFxuICBncmlkUm93U3RhcnQ6IDEsXG4gIGdyaWRDb2x1bW46IDEsXG4gIGdyaWRDb2x1bW5FbmQ6IDEsXG4gIGdyaWRDb2x1bW5TcGFuOiAxLFxuICBncmlkQ29sdW1uU3RhcnQ6IDEsXG4gIG1zR3JpZFJvdzogMSxcbiAgbXNHcmlkUm93U3BhbjogMSxcbiAgbXNHcmlkQ29sdW1uOiAxLFxuICBtc0dyaWRDb2x1bW5TcGFuOiAxLFxuICBmb250V2VpZ2h0OiAxLFxuICBsaW5lSGVpZ2h0OiAxLFxuICBvcGFjaXR5OiAxLFxuICBvcmRlcjogMSxcbiAgb3JwaGFuczogMSxcbiAgdGFiU2l6ZTogMSxcbiAgd2lkb3dzOiAxLFxuICB6SW5kZXg6IDEsXG4gIHpvb206IDEsXG4gIFdlYmtpdExpbmVDbGFtcDogMSxcbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICBzdG9wT3BhY2l0eTogMSxcbiAgc3Ryb2tlRGFzaGFycmF5OiAxLFxuICBzdHJva2VEYXNob2Zmc2V0OiAxLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxLFxuICBzdHJva2VPcGFjaXR5OiAxLFxuICBzdHJva2VXaWR0aDogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdW5pdGxlc3NLZXlzO1xuIiwiaW1wb3J0IGhhc2hTdHJpbmcgZnJvbSAnQGVtb3Rpb24vaGFzaCc7XG5pbXBvcnQgdW5pdGxlc3MgZnJvbSAnQGVtb3Rpb24vdW5pdGxlc3MnO1xuaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciBJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUiA9IFwiWW91IGhhdmUgaWxsZWdhbCBlc2NhcGUgc2VxdWVuY2UgaW4geW91ciB0ZW1wbGF0ZSBsaXRlcmFsLCBtb3N0IGxpa2VseSBpbnNpZGUgY29udGVudCdzIHByb3BlcnR5IHZhbHVlLlxcbkJlY2F1c2UgeW91IHdyaXRlIHlvdXIgQ1NTIGluc2lkZSBhIEphdmFTY3JpcHQgc3RyaW5nIHlvdSBhY3R1YWxseSBoYXZlIHRvIGRvIGRvdWJsZSBlc2NhcGluZywgc28gZm9yIGV4YW1wbGUgXFxcImNvbnRlbnQ6ICdcXFxcMDBkNyc7XFxcIiBzaG91bGQgYmVjb21lIFxcXCJjb250ZW50OiAnXFxcXFxcXFwwMGQ3JztcXFwiLlxcbllvdSBjYW4gcmVhZCBtb3JlIGFib3V0IHRoaXMgaGVyZTpcXG5odHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9UZW1wbGF0ZV9saXRlcmFscyNFUzIwMThfcmV2aXNpb25fb2ZfaWxsZWdhbF9lc2NhcGVfc2VxdWVuY2VzXCI7XG52YXIgVU5ERUZJTkVEX0FTX09CSkVDVF9LRVlfRVJST1IgPSBcIllvdSBoYXZlIHBhc3NlZCBpbiBmYWxzeSB2YWx1ZSBhcyBzdHlsZSBvYmplY3QncyBrZXkgKGNhbiBoYXBwZW4gd2hlbiBpbiBleGFtcGxlIHlvdSBwYXNzIHVuZXhwb3J0ZWQgY29tcG9uZW50IGFzIGNvbXB1dGVkIGtleSkuXCI7XG52YXIgaHlwaGVuYXRlUmVnZXggPSAvW0EtWl18Xm1zL2c7XG52YXIgYW5pbWF0aW9uUmVnZXggPSAvX0VNT18oW15fXSs/KV8oW15dKj8pX0VNT18vZztcblxudmFyIGlzQ3VzdG9tUHJvcGVydHkgPSBmdW5jdGlvbiBpc0N1c3RvbVByb3BlcnR5KHByb3BlcnR5KSB7XG4gIHJldHVybiBwcm9wZXJ0eS5jaGFyQ29kZUF0KDEpID09PSA0NTtcbn07XG5cbnZhciBpc1Byb2Nlc3NhYmxlVmFsdWUgPSBmdW5jdGlvbiBpc1Byb2Nlc3NhYmxlVmFsdWUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlICE9PSAnYm9vbGVhbic7XG59O1xuXG52YXIgcHJvY2Vzc1N0eWxlTmFtZSA9IC8qICNfX1BVUkVfXyAqL21lbW9pemUoZnVuY3Rpb24gKHN0eWxlTmFtZSkge1xuICByZXR1cm4gaXNDdXN0b21Qcm9wZXJ0eShzdHlsZU5hbWUpID8gc3R5bGVOYW1lIDogc3R5bGVOYW1lLnJlcGxhY2UoaHlwaGVuYXRlUmVnZXgsICctJCYnKS50b0xvd2VyQ2FzZSgpO1xufSk7XG5cbnZhciBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgc3dpdGNoIChrZXkpIHtcbiAgICBjYXNlICdhbmltYXRpb24nOlxuICAgIGNhc2UgJ2FuaW1hdGlvbk5hbWUnOlxuICAgICAge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKGFuaW1hdGlvblJlZ2V4LCBmdW5jdGlvbiAobWF0Y2gsIHAxLCBwMikge1xuICAgICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgICBuYW1lOiBwMSxcbiAgICAgICAgICAgICAgc3R5bGVzOiBwMixcbiAgICAgICAgICAgICAgbmV4dDogY3Vyc29yXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHAxO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gIH1cblxuICBpZiAodW5pdGxlc3Nba2V5XSAhPT0gMSAmJiAhaXNDdXN0b21Qcm9wZXJ0eShrZXkpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgIT09IDApIHtcbiAgICByZXR1cm4gdmFsdWUgKyAncHgnO1xuICB9XG5cbiAgcmV0dXJuIHZhbHVlO1xufTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIGNvbnRlbnRWYWx1ZVBhdHRlcm4gPSAvKHZhcnxhdHRyfGNvdW50ZXJzP3x1cmx8KCgocmVwZWF0aW5nLSk/KGxpbmVhcnxyYWRpYWwpKXxjb25pYyktZ3JhZGllbnQpXFwofChuby0pPyhvcGVufGNsb3NlKS1xdW90ZS87XG4gIHZhciBjb250ZW50VmFsdWVzID0gWydub3JtYWwnLCAnbm9uZScsICdpbml0aWFsJywgJ2luaGVyaXQnLCAndW5zZXQnXTtcbiAgdmFyIG9sZFByb2Nlc3NTdHlsZVZhbHVlID0gcHJvY2Vzc1N0eWxlVmFsdWU7XG4gIHZhciBtc1BhdHRlcm4gPSAvXi1tcy0vO1xuICB2YXIgaHlwaGVuUGF0dGVybiA9IC8tKC4pL2c7XG4gIHZhciBoeXBoZW5hdGVkQ2FjaGUgPSB7fTtcblxuICBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5ID09PSAnY29udGVudCcpIHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnIHx8IGNvbnRlbnRWYWx1ZXMuaW5kZXhPZih2YWx1ZSkgPT09IC0xICYmICFjb250ZW50VmFsdWVQYXR0ZXJuLnRlc3QodmFsdWUpICYmICh2YWx1ZS5jaGFyQXQoMCkgIT09IHZhbHVlLmNoYXJBdCh2YWx1ZS5sZW5ndGggLSAxKSB8fCB2YWx1ZS5jaGFyQXQoMCkgIT09ICdcIicgJiYgdmFsdWUuY2hhckF0KDApICE9PSBcIidcIikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IHNlZW0gdG8gYmUgdXNpbmcgYSB2YWx1ZSBmb3IgJ2NvbnRlbnQnIHdpdGhvdXQgcXVvdGVzLCB0cnkgcmVwbGFjaW5nIGl0IHdpdGggYGNvbnRlbnQ6ICdcXFwiXCIgKyB2YWx1ZSArIFwiXFxcIidgXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcm9jZXNzZWQgPSBvbGRQcm9jZXNzU3R5bGVWYWx1ZShrZXksIHZhbHVlKTtcblxuICAgIGlmIChwcm9jZXNzZWQgIT09ICcnICYmICFpc0N1c3RvbVByb3BlcnR5KGtleSkgJiYga2V5LmluZGV4T2YoJy0nKSAhPT0gLTEgJiYgaHlwaGVuYXRlZENhY2hlW2tleV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgaHlwaGVuYXRlZENhY2hlW2tleV0gPSB0cnVlO1xuICAgICAgY29uc29sZS5lcnJvcihcIlVzaW5nIGtlYmFiLWNhc2UgZm9yIGNzcyBwcm9wZXJ0aWVzIGluIG9iamVjdHMgaXMgbm90IHN1cHBvcnRlZC4gRGlkIHlvdSBtZWFuIFwiICsga2V5LnJlcGxhY2UobXNQYXR0ZXJuLCAnbXMtJykucmVwbGFjZShoeXBoZW5QYXR0ZXJuLCBmdW5jdGlvbiAoc3RyLCBfY2hhcikge1xuICAgICAgICByZXR1cm4gX2NoYXIudG9VcHBlckNhc2UoKTtcbiAgICAgIH0pICsgXCI/XCIpO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9jZXNzZWQ7XG4gIH07XG59XG5cbnZhciBub0NvbXBvbmVudFNlbGVjdG9yTWVzc2FnZSA9ICdDb21wb25lbnQgc2VsZWN0b3JzIGNhbiBvbmx5IGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCAnICsgJ0BlbW90aW9uL2JhYmVsLXBsdWdpbiwgdGhlIHN3YyBFbW90aW9uIHBsdWdpbiwgb3IgYW5vdGhlciBFbW90aW9uLWF3YXJlICcgKyAnY29tcGlsZXIgdHJhbnNmb3JtLic7XG5cbmZ1bmN0aW9uIGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIGludGVycG9sYXRpb24pIHtcbiAgaWYgKGludGVycG9sYXRpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGlmIChpbnRlcnBvbGF0aW9uLl9fZW1vdGlvbl9zdHlsZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGludGVycG9sYXRpb24udG9TdHJpbmcoKSA9PT0gJ05PX0NPTVBPTkVOVF9TRUxFQ1RPUicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihub0NvbXBvbmVudFNlbGVjdG9yTWVzc2FnZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGludGVycG9sYXRpb247XG4gIH1cblxuICBzd2l0Y2ggKHR5cGVvZiBpbnRlcnBvbGF0aW9uKSB7XG4gICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICAgIH1cblxuICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICB7XG4gICAgICAgIGlmIChpbnRlcnBvbGF0aW9uLmFuaW0gPT09IDEpIHtcbiAgICAgICAgICBjdXJzb3IgPSB7XG4gICAgICAgICAgICBuYW1lOiBpbnRlcnBvbGF0aW9uLm5hbWUsXG4gICAgICAgICAgICBzdHlsZXM6IGludGVycG9sYXRpb24uc3R5bGVzLFxuICAgICAgICAgICAgbmV4dDogY3Vyc29yXG4gICAgICAgICAgfTtcbiAgICAgICAgICByZXR1cm4gaW50ZXJwb2xhdGlvbi5uYW1lO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGludGVycG9sYXRpb24uc3R5bGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB2YXIgbmV4dCA9IGludGVycG9sYXRpb24ubmV4dDtcblxuICAgICAgICAgIGlmIChuZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIG5vdCB0aGUgbW9zdCBlZmZpY2llbnQgdGhpbmcgZXZlciBidXQgdGhpcyBpcyBhIHByZXR0eSByYXJlIGNhc2VcbiAgICAgICAgICAgIC8vIGFuZCB0aGVyZSB3aWxsIGJlIHZlcnkgZmV3IGl0ZXJhdGlvbnMgb2YgdGhpcyBnZW5lcmFsbHlcbiAgICAgICAgICAgIHdoaWxlIChuZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgICAgIG5hbWU6IG5leHQubmFtZSxcbiAgICAgICAgICAgICAgICBzdHlsZXM6IG5leHQuc3R5bGVzLFxuICAgICAgICAgICAgICAgIG5leHQ6IGN1cnNvclxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBuZXh0ID0gbmV4dC5uZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhciBzdHlsZXMgPSBpbnRlcnBvbGF0aW9uLnN0eWxlcyArIFwiO1wiO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgaW50ZXJwb2xhdGlvbi5tYXAgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc3R5bGVzICs9IGludGVycG9sYXRpb24ubWFwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBzdHlsZXM7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY3JlYXRlU3RyaW5nRnJvbU9iamVjdChtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgaW50ZXJwb2xhdGlvbik7XG4gICAgICB9XG5cbiAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICB7XG4gICAgICAgIGlmIChtZXJnZWRQcm9wcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmFyIHByZXZpb3VzQ3Vyc29yID0gY3Vyc29yO1xuICAgICAgICAgIHZhciByZXN1bHQgPSBpbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzKTtcbiAgICAgICAgICBjdXJzb3IgPSBwcmV2aW91c0N1cnNvcjtcbiAgICAgICAgICByZXR1cm4gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgcmVzdWx0KTtcbiAgICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRnVuY3Rpb25zIHRoYXQgYXJlIGludGVycG9sYXRlZCBpbiBjc3MgY2FsbHMgd2lsbCBiZSBzdHJpbmdpZmllZC5cXG4nICsgJ0lmIHlvdSB3YW50IHRvIGhhdmUgYSBjc3MgY2FsbCBiYXNlZCBvbiBwcm9wcywgY3JlYXRlIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgY3NzIGNhbGwgbGlrZSB0aGlzXFxuJyArICdsZXQgZHluYW1pY1N0eWxlID0gKHByb3BzKSA9PiBjc3NgY29sb3I6ICR7cHJvcHMuY29sb3J9YFxcbicgKyAnSXQgY2FuIGJlIGNhbGxlZCBkaXJlY3RseSB3aXRoIHByb3BzIG9yIGludGVycG9sYXRlZCBpbiBhIHN0eWxlZCBjYWxsIGxpa2UgdGhpc1xcbicgKyBcImxldCBTb21lQ29tcG9uZW50ID0gc3R5bGVkKCdkaXYnKWAke2R5bmFtaWNTdHlsZX1gXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgdmFyIG1hdGNoZWQgPSBbXTtcbiAgICAgICAgdmFyIHJlcGxhY2VkID0gaW50ZXJwb2xhdGlvbi5yZXBsYWNlKGFuaW1hdGlvblJlZ2V4LCBmdW5jdGlvbiAobWF0Y2gsIHAxLCBwMikge1xuICAgICAgICAgIHZhciBmYWtlVmFyTmFtZSA9IFwiYW5pbWF0aW9uXCIgKyBtYXRjaGVkLmxlbmd0aDtcbiAgICAgICAgICBtYXRjaGVkLnB1c2goXCJjb25zdCBcIiArIGZha2VWYXJOYW1lICsgXCIgPSBrZXlmcmFtZXNgXCIgKyBwMi5yZXBsYWNlKC9eQGtleWZyYW1lcyBhbmltYXRpb24tXFx3Ky8sICcnKSArIFwiYFwiKTtcbiAgICAgICAgICByZXR1cm4gXCIke1wiICsgZmFrZVZhck5hbWUgKyBcIn1cIjtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKG1hdGNoZWQubGVuZ3RoKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignYGtleWZyYW1lc2Agb3V0cHV0IGdvdCBpbnRlcnBvbGF0ZWQgaW50byBwbGFpbiBzdHJpbmcsIHBsZWFzZSB3cmFwIGl0IHdpdGggYGNzc2AuXFxuXFxuJyArICdJbnN0ZWFkIG9mIGRvaW5nIHRoaXM6XFxuXFxuJyArIFtdLmNvbmNhdChtYXRjaGVkLCBbXCJgXCIgKyByZXBsYWNlZCArIFwiYFwiXSkuam9pbignXFxuJykgKyAnXFxuXFxuWW91IHNob3VsZCB3cmFwIGl0IHdpdGggYGNzc2AgbGlrZSB0aGlzOlxcblxcbicgKyAoXCJjc3NgXCIgKyByZXBsYWNlZCArIFwiYFwiKSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgYnJlYWs7XG4gIH0gLy8gZmluYWxpemUgc3RyaW5nIHZhbHVlcyAocmVndWxhciBzdHJpbmdzIGFuZCBmdW5jdGlvbnMgaW50ZXJwb2xhdGVkIGludG8gY3NzIGNhbGxzKVxuXG5cbiAgaWYgKHJlZ2lzdGVyZWQgPT0gbnVsbCkge1xuICAgIHJldHVybiBpbnRlcnBvbGF0aW9uO1xuICB9XG5cbiAgdmFyIGNhY2hlZCA9IHJlZ2lzdGVyZWRbaW50ZXJwb2xhdGlvbl07XG4gIHJldHVybiBjYWNoZWQgIT09IHVuZGVmaW5lZCA/IGNhY2hlZCA6IGludGVycG9sYXRpb247XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0cmluZ0Zyb21PYmplY3QobWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIG9iaikge1xuICB2YXIgc3RyaW5nID0gJyc7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2JqLmxlbmd0aDsgaSsrKSB7XG4gICAgICBzdHJpbmcgKz0gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgb2JqW2ldKSArIFwiO1wiO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKHZhciBfa2V5IGluIG9iaikge1xuICAgICAgdmFyIHZhbHVlID0gb2JqW19rZXldO1xuXG4gICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAocmVnaXN0ZXJlZCAhPSBudWxsICYmIHJlZ2lzdGVyZWRbdmFsdWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBzdHJpbmcgKz0gX2tleSArIFwie1wiICsgcmVnaXN0ZXJlZFt2YWx1ZV0gKyBcIn1cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc1Byb2Nlc3NhYmxlVmFsdWUodmFsdWUpKSB7XG4gICAgICAgICAgc3RyaW5nICs9IHByb2Nlc3NTdHlsZU5hbWUoX2tleSkgKyBcIjpcIiArIHByb2Nlc3NTdHlsZVZhbHVlKF9rZXksIHZhbHVlKSArIFwiO1wiO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoX2tleSA9PT0gJ05PX0NPTVBPTkVOVF9TRUxFQ1RPUicgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihub0NvbXBvbmVudFNlbGVjdG9yTWVzc2FnZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdHlwZW9mIHZhbHVlWzBdID09PSAnc3RyaW5nJyAmJiAocmVnaXN0ZXJlZCA9PSBudWxsIHx8IHJlZ2lzdGVyZWRbdmFsdWVbMF1dID09PSB1bmRlZmluZWQpKSB7XG4gICAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IHZhbHVlLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgaWYgKGlzUHJvY2Vzc2FibGVWYWx1ZSh2YWx1ZVtfaV0pKSB7XG4gICAgICAgICAgICAgIHN0cmluZyArPSBwcm9jZXNzU3R5bGVOYW1lKF9rZXkpICsgXCI6XCIgKyBwcm9jZXNzU3R5bGVWYWx1ZShfa2V5LCB2YWx1ZVtfaV0pICsgXCI7XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBpbnRlcnBvbGF0ZWQgPSBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCB2YWx1ZSk7XG5cbiAgICAgICAgICBzd2l0Y2ggKF9rZXkpIHtcbiAgICAgICAgICAgIGNhc2UgJ2FuaW1hdGlvbic6XG4gICAgICAgICAgICBjYXNlICdhbmltYXRpb25OYW1lJzpcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0cmluZyArPSBwcm9jZXNzU3R5bGVOYW1lKF9rZXkpICsgXCI6XCIgKyBpbnRlcnBvbGF0ZWQgKyBcIjtcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgX2tleSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoVU5ERUZJTkVEX0FTX09CSkVDVF9LRVlfRVJST1IpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHN0cmluZyArPSBfa2V5ICsgXCJ7XCIgKyBpbnRlcnBvbGF0ZWQgKyBcIn1cIjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdHJpbmc7XG59XG5cbnZhciBsYWJlbFBhdHRlcm4gPSAvbGFiZWw6XFxzKihbXlxccztcXG57XSspXFxzKig7fCQpL2c7XG52YXIgc291cmNlTWFwUGF0dGVybjtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgc291cmNlTWFwUGF0dGVybiA9IC9cXC9cXCojXFxzc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uXFwvanNvbjtcXFMrXFxzK1xcKlxcLy9nO1xufSAvLyB0aGlzIGlzIHRoZSBjdXJzb3IgZm9yIGtleWZyYW1lc1xuLy8ga2V5ZnJhbWVzIGFyZSBzdG9yZWQgb24gdGhlIFNlcmlhbGl6ZWRTdHlsZXMgb2JqZWN0IGFzIGEgbGlua2VkIGxpc3RcblxuXG52YXIgY3Vyc29yO1xudmFyIHNlcmlhbGl6ZVN0eWxlcyA9IGZ1bmN0aW9uIHNlcmlhbGl6ZVN0eWxlcyhhcmdzLCByZWdpc3RlcmVkLCBtZXJnZWRQcm9wcykge1xuICBpZiAoYXJncy5sZW5ndGggPT09IDEgJiYgdHlwZW9mIGFyZ3NbMF0gPT09ICdvYmplY3QnICYmIGFyZ3NbMF0gIT09IG51bGwgJiYgYXJnc1swXS5zdHlsZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBhcmdzWzBdO1xuICB9XG5cbiAgdmFyIHN0cmluZ01vZGUgPSB0cnVlO1xuICB2YXIgc3R5bGVzID0gJyc7XG4gIGN1cnNvciA9IHVuZGVmaW5lZDtcbiAgdmFyIHN0cmluZ3MgPSBhcmdzWzBdO1xuXG4gIGlmIChzdHJpbmdzID09IG51bGwgfHwgc3RyaW5ncy5yYXcgPT09IHVuZGVmaW5lZCkge1xuICAgIHN0cmluZ01vZGUgPSBmYWxzZTtcbiAgICBzdHlsZXMgKz0gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgc3RyaW5ncyk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgc3RyaW5nc1swXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zb2xlLmVycm9yKElMTEVHQUxfRVNDQVBFX1NFUVVFTkNFX0VSUk9SKTtcbiAgICB9XG5cbiAgICBzdHlsZXMgKz0gc3RyaW5nc1swXTtcbiAgfSAvLyB3ZSBzdGFydCBhdCAxIHNpbmNlIHdlJ3ZlIGFscmVhZHkgaGFuZGxlZCB0aGUgZmlyc3QgYXJnXG5cblxuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICBzdHlsZXMgKz0gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgYXJnc1tpXSk7XG5cbiAgICBpZiAoc3RyaW5nTW9kZSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgc3RyaW5nc1tpXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoSUxMRUdBTF9FU0NBUEVfU0VRVUVOQ0VfRVJST1IpO1xuICAgICAgfVxuXG4gICAgICBzdHlsZXMgKz0gc3RyaW5nc1tpXTtcbiAgICB9XG4gIH1cblxuICB2YXIgc291cmNlTWFwO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgc3R5bGVzID0gc3R5bGVzLnJlcGxhY2Uoc291cmNlTWFwUGF0dGVybiwgZnVuY3Rpb24gKG1hdGNoKSB7XG4gICAgICBzb3VyY2VNYXAgPSBtYXRjaDtcbiAgICAgIHJldHVybiAnJztcbiAgICB9KTtcbiAgfSAvLyB1c2luZyBhIGdsb2JhbCByZWdleCB3aXRoIC5leGVjIGlzIHN0YXRlZnVsIHNvIGxhc3RJbmRleCBoYXMgdG8gYmUgcmVzZXQgZWFjaCB0aW1lXG5cblxuICBsYWJlbFBhdHRlcm4ubGFzdEluZGV4ID0gMDtcbiAgdmFyIGlkZW50aWZpZXJOYW1lID0gJyc7XG4gIHZhciBtYXRjaDsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YjgwOWMyY2YyOTQ5ODAwYTBmNjFmYjVcblxuICB3aGlsZSAoKG1hdGNoID0gbGFiZWxQYXR0ZXJuLmV4ZWMoc3R5bGVzKSkgIT09IG51bGwpIHtcbiAgICBpZGVudGlmaWVyTmFtZSArPSAnLScgKyAvLyAkRmxvd0ZpeE1lIHdlIGtub3cgaXQncyBub3QgbnVsbFxuICAgIG1hdGNoWzFdO1xuICB9XG5cbiAgdmFyIG5hbWUgPSBoYXNoU3RyaW5nKHN0eWxlcykgKyBpZGVudGlmaWVyTmFtZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vICRGbG93Rml4TWUgU2VyaWFsaXplZFN0eWxlcyB0eXBlIGRvZXNuJ3QgaGF2ZSB0b1N0cmluZyBwcm9wZXJ0eSAoYW5kIHdlIGRvbid0IHdhbnQgdG8gYWRkIGl0KVxuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAgc3R5bGVzOiBzdHlsZXMsXG4gICAgICBtYXA6IHNvdXJjZU1hcCxcbiAgICAgIG5leHQ6IGN1cnNvcixcbiAgICAgIHRvU3RyaW5nOiBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIFwiWW91IGhhdmUgdHJpZWQgdG8gc3RyaW5naWZ5IG9iamVjdCByZXR1cm5lZCBmcm9tIGBjc3NgIGZ1bmN0aW9uLiBJdCBpc24ndCBzdXBwb3NlZCB0byBiZSB1c2VkIGRpcmVjdGx5IChlLmcuIGFzIHZhbHVlIG9mIHRoZSBgY2xhc3NOYW1lYCBwcm9wKSwgYnV0IHJhdGhlciBoYW5kZWQgdG8gZW1vdGlvbiBzbyBpdCBjYW4gaGFuZGxlIGl0IChlLmcuIGFzIHZhbHVlIG9mIGBjc3NgIHByb3ApLlwiO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgc3R5bGVzOiBzdHlsZXMsXG4gICAgbmV4dDogY3Vyc29yXG4gIH07XG59O1xuXG5leHBvcnQgeyBzZXJpYWxpemVTdHlsZXMgfTtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIGZvcndhcmRSZWYsIGNyZWF0ZUVsZW1lbnQsIEZyYWdtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNyZWF0ZUNhY2hlIGZyb20gJ0BlbW90aW9uL2NhY2hlJztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCB3ZWFrTWVtb2l6ZSBmcm9tICdAZW1vdGlvbi93ZWFrLW1lbW9pemUnO1xuaW1wb3J0IGhvaXN0Tm9uUmVhY3RTdGF0aWNzIGZyb20gJy4uL19pc29sYXRlZC1obnJzL2Rpc3QvZW1vdGlvbi1yZWFjdC1faXNvbGF0ZWQtaG5ycy5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBnZXRSZWdpc3RlcmVkU3R5bGVzLCByZWdpc3RlclN0eWxlcywgaW5zZXJ0U3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vdXRpbHMnO1xuaW1wb3J0IHsgc2VyaWFsaXplU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJztcblxudmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5cbnZhciBFbW90aW9uQ2FjaGVDb250ZXh0ID0gLyogI19fUFVSRV9fICovY3JlYXRlQ29udGV4dCggLy8gd2UncmUgZG9pbmcgdGhpcyB0byBhdm9pZCBwcmVjb25zdHJ1Y3QncyBkZWFkIGNvZGUgZWxpbWluYXRpb24gaW4gdGhpcyBvbmUgY2FzZVxuLy8gYmVjYXVzZSB0aGlzIG1vZHVsZSBpcyBwcmltYXJpbHkgaW50ZW5kZWQgZm9yIHRoZSBicm93c2VyIGFuZCBub2RlXG4vLyBidXQgaXQncyBhbHNvIHJlcXVpcmVkIGluIHJlYWN0IG5hdGl2ZSBhbmQgc2ltaWxhciBlbnZpcm9ubWVudHMgc29tZXRpbWVzXG4vLyBhbmQgd2UgY291bGQgaGF2ZSBhIHNwZWNpYWwgYnVpbGQganVzdCBmb3IgdGhhdFxuLy8gYnV0IHRoaXMgaXMgbXVjaCBlYXNpZXIgYW5kIHRoZSBuYXRpdmUgcGFja2FnZXNcbi8vIG1pZ2h0IHVzZSBhIGRpZmZlcmVudCB0aGVtZSBjb250ZXh0IGluIHRoZSBmdXR1cmUgYW55d2F5XG50eXBlb2YgSFRNTEVsZW1lbnQgIT09ICd1bmRlZmluZWQnID8gLyogI19fUFVSRV9fICovY3JlYXRlQ2FjaGUoe1xuICBrZXk6ICdjc3MnXG59KSA6IG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBFbW90aW9uQ2FjaGVDb250ZXh0LmRpc3BsYXlOYW1lID0gJ0Vtb3Rpb25DYWNoZUNvbnRleHQnO1xufVxuXG52YXIgQ2FjaGVQcm92aWRlciA9IEVtb3Rpb25DYWNoZUNvbnRleHQuUHJvdmlkZXI7XG52YXIgX191bnNhZmVfdXNlRW1vdGlvbkNhY2hlID0gZnVuY3Rpb24gdXNlRW1vdGlvbkNhY2hlKCkge1xuICByZXR1cm4gdXNlQ29udGV4dChFbW90aW9uQ2FjaGVDb250ZXh0KTtcbn07XG5cbnZhciB3aXRoRW1vdGlvbkNhY2hlID0gZnVuY3Rpb24gd2l0aEVtb3Rpb25DYWNoZShmdW5jKSB7XG4gIC8vICRGbG93Rml4TWVcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgLy8gdGhlIGNhY2hlIHdpbGwgbmV2ZXIgYmUgbnVsbCBpbiB0aGUgYnJvd3NlclxuICAgIHZhciBjYWNoZSA9IHVzZUNvbnRleHQoRW1vdGlvbkNhY2hlQ29udGV4dCk7XG4gICAgcmV0dXJuIGZ1bmMocHJvcHMsIGNhY2hlLCByZWYpO1xuICB9KTtcbn07XG5cbnZhciBUaGVtZUNvbnRleHQgPSAvKiAjX19QVVJFX18gKi9jcmVhdGVDb250ZXh0KHt9KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgVGhlbWVDb250ZXh0LmRpc3BsYXlOYW1lID0gJ0Vtb3Rpb25UaGVtZUNvbnRleHQnO1xufVxuXG52YXIgdXNlVGhlbWUgPSBmdW5jdGlvbiB1c2VUaGVtZSgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcbn07XG5cbnZhciBnZXRUaGVtZSA9IGZ1bmN0aW9uIGdldFRoZW1lKG91dGVyVGhlbWUsIHRoZW1lKSB7XG4gIGlmICh0eXBlb2YgdGhlbWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgbWVyZ2VkVGhlbWUgPSB0aGVtZShvdXRlclRoZW1lKTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIChtZXJnZWRUaGVtZSA9PSBudWxsIHx8IHR5cGVvZiBtZXJnZWRUaGVtZSAhPT0gJ29iamVjdCcgfHwgQXJyYXkuaXNBcnJheShtZXJnZWRUaGVtZSkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1tUaGVtZVByb3ZpZGVyXSBQbGVhc2UgcmV0dXJuIGFuIG9iamVjdCBmcm9tIHlvdXIgdGhlbWUgZnVuY3Rpb24sIGkuZS4gdGhlbWU9eygpID0+ICh7fSl9IScpO1xuICAgIH1cblxuICAgIHJldHVybiBtZXJnZWRUaGVtZTtcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICh0aGVtZSA9PSBudWxsIHx8IHR5cGVvZiB0aGVtZSAhPT0gJ29iamVjdCcgfHwgQXJyYXkuaXNBcnJheSh0aGVtZSkpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdbVGhlbWVQcm92aWRlcl0gUGxlYXNlIG1ha2UgeW91ciB0aGVtZSBwcm9wIGEgcGxhaW4gb2JqZWN0Jyk7XG4gIH1cblxuICByZXR1cm4gX2V4dGVuZHMoe30sIG91dGVyVGhlbWUsIHRoZW1lKTtcbn07XG5cbnZhciBjcmVhdGVDYWNoZVdpdGhUaGVtZSA9IC8qICNfX1BVUkVfXyAqL3dlYWtNZW1vaXplKGZ1bmN0aW9uIChvdXRlclRoZW1lKSB7XG4gIHJldHVybiB3ZWFrTWVtb2l6ZShmdW5jdGlvbiAodGhlbWUpIHtcbiAgICByZXR1cm4gZ2V0VGhlbWUob3V0ZXJUaGVtZSwgdGhlbWUpO1xuICB9KTtcbn0pO1xudmFyIFRoZW1lUHJvdmlkZXIgPSBmdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHByb3BzKSB7XG4gIHZhciB0aGVtZSA9IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcblxuICBpZiAocHJvcHMudGhlbWUgIT09IHRoZW1lKSB7XG4gICAgdGhlbWUgPSBjcmVhdGVDYWNoZVdpdGhUaGVtZSh0aGVtZSkocHJvcHMudGhlbWUpO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KFRoZW1lQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB0aGVtZVxuICB9LCBwcm9wcy5jaGlsZHJlbik7XG59O1xuZnVuY3Rpb24gd2l0aFRoZW1lKENvbXBvbmVudCkge1xuICB2YXIgY29tcG9uZW50TmFtZSA9IENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50JztcblxuICB2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKHByb3BzLCByZWYpIHtcbiAgICB2YXIgdGhlbWUgPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgICAgdGhlbWU6IHRoZW1lLFxuICAgICAgcmVmOiByZWZcbiAgICB9LCBwcm9wcykpO1xuICB9OyAvLyAkRmxvd0ZpeE1lXG5cblxuICB2YXIgV2l0aFRoZW1lID0gLyojX19QVVJFX18qL2ZvcndhcmRSZWYocmVuZGVyKTtcbiAgV2l0aFRoZW1lLmRpc3BsYXlOYW1lID0gXCJXaXRoVGhlbWUoXCIgKyBjb21wb25lbnROYW1lICsgXCIpXCI7XG4gIHJldHVybiBob2lzdE5vblJlYWN0U3RhdGljcyhXaXRoVGhlbWUsIENvbXBvbmVudCk7XG59XG5cbnZhciBnZXRMYXN0UGFydCA9IGZ1bmN0aW9uIGdldExhc3RQYXJ0KGZ1bmN0aW9uTmFtZSkge1xuICAvLyBUaGUgbWF0Y2ggbWF5IGJlIHNvbWV0aGluZyBsaWtlICdPYmplY3QuY3JlYXRlRW1vdGlvblByb3BzJyBvclxuICAvLyAnTG9hZGVyLnByb3RvdHlwZS5yZW5kZXInXG4gIHZhciBwYXJ0cyA9IGZ1bmN0aW9uTmFtZS5zcGxpdCgnLicpO1xuICByZXR1cm4gcGFydHNbcGFydHMubGVuZ3RoIC0gMV07XG59O1xuXG52YXIgZ2V0RnVuY3Rpb25OYW1lRnJvbVN0YWNrVHJhY2VMaW5lID0gZnVuY3Rpb24gZ2V0RnVuY3Rpb25OYW1lRnJvbVN0YWNrVHJhY2VMaW5lKGxpbmUpIHtcbiAgLy8gVjhcbiAgdmFyIG1hdGNoID0gL15cXHMrYXRcXHMrKFtBLVphLXowLTkkLl0rKVxccy8uZXhlYyhsaW5lKTtcbiAgaWYgKG1hdGNoKSByZXR1cm4gZ2V0TGFzdFBhcnQobWF0Y2hbMV0pOyAvLyBTYWZhcmkgLyBGaXJlZm94XG5cbiAgbWF0Y2ggPSAvXihbQS1aYS16MC05JC5dKylALy5leGVjKGxpbmUpO1xuICBpZiAobWF0Y2gpIHJldHVybiBnZXRMYXN0UGFydChtYXRjaFsxXSk7XG4gIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG52YXIgaW50ZXJuYWxSZWFjdEZ1bmN0aW9uTmFtZXMgPSAvKiAjX19QVVJFX18gKi9uZXcgU2V0KFsncmVuZGVyV2l0aEhvb2tzJywgJ3Byb2Nlc3NDaGlsZCcsICdmaW5pc2hDbGFzc0NvbXBvbmVudCcsICdyZW5kZXJUb1N0cmluZyddKTsgLy8gVGhlc2UgaWRlbnRpZmllcnMgY29tZSBmcm9tIGVycm9yIHN0YWNrcywgc28gdGhleSBoYXZlIHRvIGJlIHZhbGlkIEpTXG4vLyBpZGVudGlmaWVycywgdGh1cyB3ZSBvbmx5IG5lZWQgdG8gcmVwbGFjZSB3aGF0IGlzIGEgdmFsaWQgY2hhcmFjdGVyIGZvciBKUyxcbi8vIGJ1dCBub3QgZm9yIENTUy5cblxudmFyIHNhbml0aXplSWRlbnRpZmllciA9IGZ1bmN0aW9uIHNhbml0aXplSWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHJldHVybiBpZGVudGlmaWVyLnJlcGxhY2UoL1xcJC9nLCAnLScpO1xufTtcblxudmFyIGdldExhYmVsRnJvbVN0YWNrVHJhY2UgPSBmdW5jdGlvbiBnZXRMYWJlbEZyb21TdGFja1RyYWNlKHN0YWNrVHJhY2UpIHtcbiAgaWYgKCFzdGFja1RyYWNlKSByZXR1cm4gdW5kZWZpbmVkO1xuICB2YXIgbGluZXMgPSBzdGFja1RyYWNlLnNwbGl0KCdcXG4nKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGZ1bmN0aW9uTmFtZSA9IGdldEZ1bmN0aW9uTmFtZUZyb21TdGFja1RyYWNlTGluZShsaW5lc1tpXSk7IC8vIFRoZSBmaXJzdCBsaW5lIG9mIFY4IHN0YWNrIHRyYWNlcyBpcyBqdXN0IFwiRXJyb3JcIlxuXG4gICAgaWYgKCFmdW5jdGlvbk5hbWUpIGNvbnRpbnVlOyAvLyBJZiB3ZSByZWFjaCBvbmUgb2YgdGhlc2UsIHdlIGhhdmUgZ29uZSB0b28gZmFyIGFuZCBzaG91bGQgcXVpdFxuXG4gICAgaWYgKGludGVybmFsUmVhY3RGdW5jdGlvbk5hbWVzLmhhcyhmdW5jdGlvbk5hbWUpKSBicmVhazsgLy8gVGhlIGNvbXBvbmVudCBuYW1lIGlzIHRoZSBmaXJzdCBmdW5jdGlvbiBpbiB0aGUgc3RhY2sgdGhhdCBzdGFydHMgd2l0aCBhblxuICAgIC8vIHVwcGVyY2FzZSBsZXR0ZXJcblxuICAgIGlmICgvXltBLVpdLy50ZXN0KGZ1bmN0aW9uTmFtZSkpIHJldHVybiBzYW5pdGl6ZUlkZW50aWZpZXIoZnVuY3Rpb25OYW1lKTtcbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG52YXIgdXNlSW5zZXJ0aW9uRWZmZWN0ID0gUmVhY3RbJ3VzZUluc2VydGlvbicgKyAnRWZmZWN0J10gPyBSZWFjdFsndXNlSW5zZXJ0aW9uJyArICdFZmZlY3QnXSA6IGZ1bmN0aW9uIHVzZUluc2VydGlvbkVmZmVjdChjcmVhdGUpIHtcbiAgY3JlYXRlKCk7XG59O1xuZnVuY3Rpb24gdXNlSW5zZXJ0aW9uRWZmZWN0TWF5YmUoY3JlYXRlKSB7XG5cbiAgdXNlSW5zZXJ0aW9uRWZmZWN0KGNyZWF0ZSk7XG59XG5cbnZhciB0eXBlUHJvcE5hbWUgPSAnX19FTU9USU9OX1RZUEVfUExFQVNFX0RPX05PVF9VU0VfXyc7XG52YXIgbGFiZWxQcm9wTmFtZSA9ICdfX0VNT1RJT05fTEFCRUxfUExFQVNFX0RPX05PVF9VU0VfXyc7XG52YXIgY3JlYXRlRW1vdGlvblByb3BzID0gZnVuY3Rpb24gY3JlYXRlRW1vdGlvblByb3BzKHR5cGUsIHByb3BzKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBwcm9wcy5jc3MgPT09ICdzdHJpbmcnICYmIC8vIGNoZWNrIGlmIHRoZXJlIGlzIGEgY3NzIGRlY2xhcmF0aW9uXG4gIHByb3BzLmNzcy5pbmRleE9mKCc6JykgIT09IC0xKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiU3RyaW5ncyBhcmUgbm90IGFsbG93ZWQgYXMgY3NzIHByb3AgdmFsdWVzLCBwbGVhc2Ugd3JhcCBpdCBpbiBhIGNzcyB0ZW1wbGF0ZSBsaXRlcmFsIGZyb20gJ0BlbW90aW9uL3JlYWN0JyBsaWtlIHRoaXM6IGNzc2BcIiArIHByb3BzLmNzcyArIFwiYFwiKTtcbiAgfVxuXG4gIHZhciBuZXdQcm9wcyA9IHt9O1xuXG4gIGZvciAodmFyIGtleSBpbiBwcm9wcykge1xuICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHByb3BzLCBrZXkpKSB7XG4gICAgICBuZXdQcm9wc1trZXldID0gcHJvcHNba2V5XTtcbiAgICB9XG4gIH1cblxuICBuZXdQcm9wc1t0eXBlUHJvcE5hbWVdID0gdHlwZTsgLy8gRm9yIHBlcmZvcm1hbmNlLCBvbmx5IGNhbGwgZ2V0TGFiZWxGcm9tU3RhY2tUcmFjZSBpbiBkZXZlbG9wbWVudCBhbmQgd2hlblxuICAvLyB0aGUgbGFiZWwgaGFzbid0IGFscmVhZHkgYmVlbiBjb21wdXRlZFxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICEhcHJvcHMuY3NzICYmICh0eXBlb2YgcHJvcHMuY3NzICE9PSAnb2JqZWN0JyB8fCB0eXBlb2YgcHJvcHMuY3NzLm5hbWUgIT09ICdzdHJpbmcnIHx8IHByb3BzLmNzcy5uYW1lLmluZGV4T2YoJy0nKSA9PT0gLTEpKSB7XG4gICAgdmFyIGxhYmVsID0gZ2V0TGFiZWxGcm9tU3RhY2tUcmFjZShuZXcgRXJyb3IoKS5zdGFjayk7XG4gICAgaWYgKGxhYmVsKSBuZXdQcm9wc1tsYWJlbFByb3BOYW1lXSA9IGxhYmVsO1xuICB9XG5cbiAgcmV0dXJuIG5ld1Byb3BzO1xufTtcblxudmFyIEluc2VydGlvbiA9IGZ1bmN0aW9uIEluc2VydGlvbihfcmVmKSB7XG4gIHZhciBjYWNoZSA9IF9yZWYuY2FjaGUsXG4gICAgICBzZXJpYWxpemVkID0gX3JlZi5zZXJpYWxpemVkLFxuICAgICAgaXNTdHJpbmdUYWcgPSBfcmVmLmlzU3RyaW5nVGFnO1xuICByZWdpc3RlclN0eWxlcyhjYWNoZSwgc2VyaWFsaXplZCwgaXNTdHJpbmdUYWcpO1xuICB2YXIgcnVsZXMgPSB1c2VJbnNlcnRpb25FZmZlY3RNYXliZShmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGluc2VydFN0eWxlcyhjYWNoZSwgc2VyaWFsaXplZCwgaXNTdHJpbmdUYWcpO1xuICB9KTtcblxuICByZXR1cm4gbnVsbDtcbn07XG5cbnZhciBFbW90aW9uID0gLyogI19fUFVSRV9fICovd2l0aEVtb3Rpb25DYWNoZShmdW5jdGlvbiAocHJvcHMsIGNhY2hlLCByZWYpIHtcbiAgdmFyIGNzc1Byb3AgPSBwcm9wcy5jc3M7IC8vIHNvIHRoYXQgdXNpbmcgYGNzc2AgZnJvbSBgZW1vdGlvbmAgYW5kIHBhc3NpbmcgdGhlIHJlc3VsdCB0byB0aGUgY3NzIHByb3Agd29ya3NcbiAgLy8gbm90IHBhc3NpbmcgdGhlIHJlZ2lzdGVyZWQgY2FjaGUgdG8gc2VyaWFsaXplU3R5bGVzIGJlY2F1c2UgaXQgd291bGRcbiAgLy8gbWFrZSBjZXJ0YWluIGJhYmVsIG9wdGltaXNhdGlvbnMgbm90IHBvc3NpYmxlXG5cbiAgaWYgKHR5cGVvZiBjc3NQcm9wID09PSAnc3RyaW5nJyAmJiBjYWNoZS5yZWdpc3RlcmVkW2Nzc1Byb3BdICE9PSB1bmRlZmluZWQpIHtcbiAgICBjc3NQcm9wID0gY2FjaGUucmVnaXN0ZXJlZFtjc3NQcm9wXTtcbiAgfVxuXG4gIHZhciBXcmFwcGVkQ29tcG9uZW50ID0gcHJvcHNbdHlwZVByb3BOYW1lXTtcbiAgdmFyIHJlZ2lzdGVyZWRTdHlsZXMgPSBbY3NzUHJvcF07XG4gIHZhciBjbGFzc05hbWUgPSAnJztcblxuICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICBjbGFzc05hbWUgPSBnZXRSZWdpc3RlcmVkU3R5bGVzKGNhY2hlLnJlZ2lzdGVyZWQsIHJlZ2lzdGVyZWRTdHlsZXMsIHByb3BzLmNsYXNzTmFtZSk7XG4gIH0gZWxzZSBpZiAocHJvcHMuY2xhc3NOYW1lICE9IG51bGwpIHtcbiAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUgKyBcIiBcIjtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKHJlZ2lzdGVyZWRTdHlsZXMsIHVuZGVmaW5lZCwgdXNlQ29udGV4dChUaGVtZUNvbnRleHQpKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzZXJpYWxpemVkLm5hbWUuaW5kZXhPZignLScpID09PSAtMSkge1xuICAgIHZhciBsYWJlbEZyb21TdGFjayA9IHByb3BzW2xhYmVsUHJvcE5hbWVdO1xuXG4gICAgaWYgKGxhYmVsRnJvbVN0YWNrKSB7XG4gICAgICBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKFtzZXJpYWxpemVkLCAnbGFiZWw6JyArIGxhYmVsRnJvbVN0YWNrICsgJzsnXSk7XG4gICAgfVxuICB9XG5cbiAgY2xhc3NOYW1lICs9IGNhY2hlLmtleSArIFwiLVwiICsgc2VyaWFsaXplZC5uYW1lO1xuICB2YXIgbmV3UHJvcHMgPSB7fTtcblxuICBmb3IgKHZhciBrZXkgaW4gcHJvcHMpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChwcm9wcywga2V5KSAmJiBrZXkgIT09ICdjc3MnICYmIGtleSAhPT0gdHlwZVByb3BOYW1lICYmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIHx8IGtleSAhPT0gbGFiZWxQcm9wTmFtZSkpIHtcbiAgICAgIG5ld1Byb3BzW2tleV0gPSBwcm9wc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIG5ld1Byb3BzLnJlZiA9IHJlZjtcbiAgbmV3UHJvcHMuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KEluc2VydGlvbiwge1xuICAgIGNhY2hlOiBjYWNoZSxcbiAgICBzZXJpYWxpemVkOiBzZXJpYWxpemVkLFxuICAgIGlzU3RyaW5nVGFnOiB0eXBlb2YgV3JhcHBlZENvbXBvbmVudCA9PT0gJ3N0cmluZydcbiAgfSksIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIG5ld1Byb3BzKSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgRW1vdGlvbi5kaXNwbGF5TmFtZSA9ICdFbW90aW9uQ3NzUHJvcEludGVybmFsJztcbn1cblxuZXhwb3J0IHsgQ2FjaGVQcm92aWRlciBhcyBDLCBFbW90aW9uIGFzIEUsIFRoZW1lQ29udGV4dCBhcyBULCBfX3Vuc2FmZV91c2VFbW90aW9uQ2FjaGUgYXMgXywgdXNlVGhlbWUgYXMgYSwgVGhlbWVQcm92aWRlciBhcyBiLCBjcmVhdGVFbW90aW9uUHJvcHMgYXMgYywgd2l0aFRoZW1lIGFzIGQsIGhhc093blByb3BlcnR5IGFzIGgsIHVzZUluc2VydGlvbkVmZmVjdE1heWJlIGFzIHUsIHdpdGhFbW90aW9uQ2FjaGUgYXMgdyB9O1xuIiwidmFyIGlzQnJvd3NlciA9IFwib2JqZWN0XCIgIT09ICd1bmRlZmluZWQnO1xuZnVuY3Rpb24gZ2V0UmVnaXN0ZXJlZFN0eWxlcyhyZWdpc3RlcmVkLCByZWdpc3RlcmVkU3R5bGVzLCBjbGFzc05hbWVzKSB7XG4gIHZhciByYXdDbGFzc05hbWUgPSAnJztcbiAgY2xhc3NOYW1lcy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGlmIChyZWdpc3RlcmVkW2NsYXNzTmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmVnaXN0ZXJlZFN0eWxlcy5wdXNoKHJlZ2lzdGVyZWRbY2xhc3NOYW1lXSArIFwiO1wiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmF3Q2xhc3NOYW1lICs9IGNsYXNzTmFtZSArIFwiIFwiO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByYXdDbGFzc05hbWU7XG59XG52YXIgcmVnaXN0ZXJTdHlsZXMgPSBmdW5jdGlvbiByZWdpc3RlclN0eWxlcyhjYWNoZSwgc2VyaWFsaXplZCwgaXNTdHJpbmdUYWcpIHtcbiAgdmFyIGNsYXNzTmFtZSA9IGNhY2hlLmtleSArIFwiLVwiICsgc2VyaWFsaXplZC5uYW1lO1xuXG4gIGlmICggLy8gd2Ugb25seSBuZWVkIHRvIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSByZWdpc3RlcmVkIGNhY2hlIGlmIHRoZVxuICAvLyBjbGFzcyBuYW1lIGNvdWxkIGJlIHVzZWQgZnVydGhlciBkb3duXG4gIC8vIHRoZSB0cmVlIGJ1dCBpZiBpdCdzIGEgc3RyaW5nIHRhZywgd2Uga25vdyBpdCB3b24ndFxuICAvLyBzbyB3ZSBkb24ndCBoYXZlIHRvIGFkZCBpdCB0byByZWdpc3RlcmVkIGNhY2hlLlxuICAvLyB0aGlzIGltcHJvdmVzIG1lbW9yeSB1c2FnZSBzaW5jZSB3ZSBjYW4gYXZvaWQgc3RvcmluZyB0aGUgd2hvbGUgc3R5bGUgc3RyaW5nXG4gIChpc1N0cmluZ1RhZyA9PT0gZmFsc2UgfHwgLy8gd2UgbmVlZCB0byBhbHdheXMgc3RvcmUgaXQgaWYgd2UncmUgaW4gY29tcGF0IG1vZGUgYW5kXG4gIC8vIGluIG5vZGUgc2luY2UgZW1vdGlvbi1zZXJ2ZXIgcmVsaWVzIG9uIHdoZXRoZXIgYSBzdHlsZSBpcyBpblxuICAvLyB0aGUgcmVnaXN0ZXJlZCBjYWNoZSB0byBrbm93IHdoZXRoZXIgYSBzdHlsZSBpcyBnbG9iYWwgb3Igbm90XG4gIC8vIGFsc28sIG5vdGUgdGhhdCB0aGlzIGNoZWNrIHdpbGwgYmUgZGVhZCBjb2RlIGVsaW1pbmF0ZWQgaW4gdGhlIGJyb3dzZXJcbiAgaXNCcm93c2VyID09PSBmYWxzZSApICYmIGNhY2hlLnJlZ2lzdGVyZWRbY2xhc3NOYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2FjaGUucmVnaXN0ZXJlZFtjbGFzc05hbWVdID0gc2VyaWFsaXplZC5zdHlsZXM7XG4gIH1cbn07XG52YXIgaW5zZXJ0U3R5bGVzID0gZnVuY3Rpb24gaW5zZXJ0U3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBpc1N0cmluZ1RhZykge1xuICByZWdpc3RlclN0eWxlcyhjYWNoZSwgc2VyaWFsaXplZCwgaXNTdHJpbmdUYWcpO1xuICB2YXIgY2xhc3NOYW1lID0gY2FjaGUua2V5ICsgXCItXCIgKyBzZXJpYWxpemVkLm5hbWU7XG5cbiAgaWYgKGNhY2hlLmluc2VydGVkW3NlcmlhbGl6ZWQubmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBjdXJyZW50ID0gc2VyaWFsaXplZDtcblxuICAgIGRvIHtcbiAgICAgIHZhciBtYXliZVN0eWxlcyA9IGNhY2hlLmluc2VydChzZXJpYWxpemVkID09PSBjdXJyZW50ID8gXCIuXCIgKyBjbGFzc05hbWUgOiAnJywgY3VycmVudCwgY2FjaGUuc2hlZXQsIHRydWUpO1xuXG4gICAgICBjdXJyZW50ID0gY3VycmVudC5uZXh0O1xuICAgIH0gd2hpbGUgKGN1cnJlbnQgIT09IHVuZGVmaW5lZCk7XG4gIH1cbn07XG5cbmV4cG9ydCB7IGdldFJlZ2lzdGVyZWRTdHlsZXMsIGluc2VydFN0eWxlcywgcmVnaXN0ZXJTdHlsZXMgfTtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUNvbnRleHQsIGNyZWF0ZUVsZW1lbnQsIEZyYWdtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGlzUHJvcFZhbGlkIGZyb20gJ0BlbW90aW9uL2lzLXByb3AtdmFsaWQnO1xuaW1wb3J0IHsgd2l0aEVtb3Rpb25DYWNoZSwgVGhlbWVDb250ZXh0IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZ2V0UmVnaXN0ZXJlZFN0eWxlcywgcmVnaXN0ZXJTdHlsZXMsIGluc2VydFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3V0aWxzJztcbmltcG9ydCB7IHNlcmlhbGl6ZVN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3NlcmlhbGl6ZSc7XG5cbnZhciB0ZXN0T21pdFByb3BzT25TdHJpbmdUYWcgPSBpc1Byb3BWYWxpZDtcblxudmFyIHRlc3RPbWl0UHJvcHNPbkNvbXBvbmVudCA9IGZ1bmN0aW9uIHRlc3RPbWl0UHJvcHNPbkNvbXBvbmVudChrZXkpIHtcbiAgcmV0dXJuIGtleSAhPT0gJ3RoZW1lJztcbn07XG5cbnZhciBnZXREZWZhdWx0U2hvdWxkRm9yd2FyZFByb3AgPSBmdW5jdGlvbiBnZXREZWZhdWx0U2hvdWxkRm9yd2FyZFByb3AodGFnKSB7XG4gIHJldHVybiB0eXBlb2YgdGFnID09PSAnc3RyaW5nJyAmJiAvLyA5NiBpcyBvbmUgbGVzcyB0aGFuIHRoZSBjaGFyIGNvZGVcbiAgLy8gZm9yIFwiYVwiIHNvIHRoaXMgaXMgY2hlY2tpbmcgdGhhdFxuICAvLyBpdCdzIGEgbG93ZXJjYXNlIGNoYXJhY3RlclxuICB0YWcuY2hhckNvZGVBdCgwKSA+IDk2ID8gdGVzdE9taXRQcm9wc09uU3RyaW5nVGFnIDogdGVzdE9taXRQcm9wc09uQ29tcG9uZW50O1xufTtcbnZhciBjb21wb3NlU2hvdWxkRm9yd2FyZFByb3BzID0gZnVuY3Rpb24gY29tcG9zZVNob3VsZEZvcndhcmRQcm9wcyh0YWcsIG9wdGlvbnMsIGlzUmVhbCkge1xuICB2YXIgc2hvdWxkRm9yd2FyZFByb3A7XG5cbiAgaWYgKG9wdGlvbnMpIHtcbiAgICB2YXIgb3B0aW9uc1Nob3VsZEZvcndhcmRQcm9wID0gb3B0aW9ucy5zaG91bGRGb3J3YXJkUHJvcDtcbiAgICBzaG91bGRGb3J3YXJkUHJvcCA9IHRhZy5fX2Vtb3Rpb25fZm9yd2FyZFByb3AgJiYgb3B0aW9uc1Nob3VsZEZvcndhcmRQcm9wID8gZnVuY3Rpb24gKHByb3BOYW1lKSB7XG4gICAgICByZXR1cm4gdGFnLl9fZW1vdGlvbl9mb3J3YXJkUHJvcChwcm9wTmFtZSkgJiYgb3B0aW9uc1Nob3VsZEZvcndhcmRQcm9wKHByb3BOYW1lKTtcbiAgICB9IDogb3B0aW9uc1Nob3VsZEZvcndhcmRQcm9wO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBzaG91bGRGb3J3YXJkUHJvcCAhPT0gJ2Z1bmN0aW9uJyAmJiBpc1JlYWwpIHtcbiAgICBzaG91bGRGb3J3YXJkUHJvcCA9IHRhZy5fX2Vtb3Rpb25fZm9yd2FyZFByb3A7XG4gIH1cblxuICByZXR1cm4gc2hvdWxkRm9yd2FyZFByb3A7XG59O1xuXG52YXIgdXNlSW5zZXJ0aW9uRWZmZWN0ID0gUmVhY3RbJ3VzZUluc2VydGlvbicgKyAnRWZmZWN0J10gPyBSZWFjdFsndXNlSW5zZXJ0aW9uJyArICdFZmZlY3QnXSA6IGZ1bmN0aW9uIHVzZUluc2VydGlvbkVmZmVjdChjcmVhdGUpIHtcbiAgY3JlYXRlKCk7XG59O1xuZnVuY3Rpb24gdXNlSW5zZXJ0aW9uRWZmZWN0TWF5YmUoY3JlYXRlKSB7XG5cbiAgdXNlSW5zZXJ0aW9uRWZmZWN0KGNyZWF0ZSk7XG59XG5cbnZhciBJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUiA9IFwiWW91IGhhdmUgaWxsZWdhbCBlc2NhcGUgc2VxdWVuY2UgaW4geW91ciB0ZW1wbGF0ZSBsaXRlcmFsLCBtb3N0IGxpa2VseSBpbnNpZGUgY29udGVudCdzIHByb3BlcnR5IHZhbHVlLlxcbkJlY2F1c2UgeW91IHdyaXRlIHlvdXIgQ1NTIGluc2lkZSBhIEphdmFTY3JpcHQgc3RyaW5nIHlvdSBhY3R1YWxseSBoYXZlIHRvIGRvIGRvdWJsZSBlc2NhcGluZywgc28gZm9yIGV4YW1wbGUgXFxcImNvbnRlbnQ6ICdcXFxcMDBkNyc7XFxcIiBzaG91bGQgYmVjb21lIFxcXCJjb250ZW50OiAnXFxcXFxcXFwwMGQ3JztcXFwiLlxcbllvdSBjYW4gcmVhZCBtb3JlIGFib3V0IHRoaXMgaGVyZTpcXG5odHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9UZW1wbGF0ZV9saXRlcmFscyNFUzIwMThfcmV2aXNpb25fb2ZfaWxsZWdhbF9lc2NhcGVfc2VxdWVuY2VzXCI7XG5cbnZhciBJbnNlcnRpb24gPSBmdW5jdGlvbiBJbnNlcnRpb24oX3JlZikge1xuICB2YXIgY2FjaGUgPSBfcmVmLmNhY2hlLFxuICAgICAgc2VyaWFsaXplZCA9IF9yZWYuc2VyaWFsaXplZCxcbiAgICAgIGlzU3RyaW5nVGFnID0gX3JlZi5pc1N0cmluZ1RhZztcbiAgcmVnaXN0ZXJTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIGlzU3RyaW5nVGFnKTtcbiAgdmFyIHJ1bGVzID0gdXNlSW5zZXJ0aW9uRWZmZWN0TWF5YmUoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIGlzU3RyaW5nVGFnKTtcbiAgfSk7XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG52YXIgY3JlYXRlU3R5bGVkID0gZnVuY3Rpb24gY3JlYXRlU3R5bGVkKHRhZywgb3B0aW9ucykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICh0YWcgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgYXJlIHRyeWluZyB0byBjcmVhdGUgYSBzdHlsZWQgZWxlbWVudCB3aXRoIGFuIHVuZGVmaW5lZCBjb21wb25lbnQuXFxuWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBpbXBvcnQgaXQuJyk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzUmVhbCA9IHRhZy5fX2Vtb3Rpb25fcmVhbCA9PT0gdGFnO1xuICB2YXIgYmFzZVRhZyA9IGlzUmVhbCAmJiB0YWcuX19lbW90aW9uX2Jhc2UgfHwgdGFnO1xuICB2YXIgaWRlbnRpZmllck5hbWU7XG4gIHZhciB0YXJnZXRDbGFzc05hbWU7XG5cbiAgaWYgKG9wdGlvbnMgIT09IHVuZGVmaW5lZCkge1xuICAgIGlkZW50aWZpZXJOYW1lID0gb3B0aW9ucy5sYWJlbDtcbiAgICB0YXJnZXRDbGFzc05hbWUgPSBvcHRpb25zLnRhcmdldDtcbiAgfVxuXG4gIHZhciBzaG91bGRGb3J3YXJkUHJvcCA9IGNvbXBvc2VTaG91bGRGb3J3YXJkUHJvcHModGFnLCBvcHRpb25zLCBpc1JlYWwpO1xuICB2YXIgZGVmYXVsdFNob3VsZEZvcndhcmRQcm9wID0gc2hvdWxkRm9yd2FyZFByb3AgfHwgZ2V0RGVmYXVsdFNob3VsZEZvcndhcmRQcm9wKGJhc2VUYWcpO1xuICB2YXIgc2hvdWxkVXNlQXMgPSAhZGVmYXVsdFNob3VsZEZvcndhcmRQcm9wKCdhcycpO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgIHZhciBzdHlsZXMgPSBpc1JlYWwgJiYgdGFnLl9fZW1vdGlvbl9zdHlsZXMgIT09IHVuZGVmaW5lZCA/IHRhZy5fX2Vtb3Rpb25fc3R5bGVzLnNsaWNlKDApIDogW107XG5cbiAgICBpZiAoaWRlbnRpZmllck5hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgc3R5bGVzLnB1c2goXCJsYWJlbDpcIiArIGlkZW50aWZpZXJOYW1lICsgXCI7XCIpO1xuICAgIH1cblxuICAgIGlmIChhcmdzWzBdID09IG51bGwgfHwgYXJnc1swXS5yYXcgPT09IHVuZGVmaW5lZCkge1xuICAgICAgc3R5bGVzLnB1c2guYXBwbHkoc3R5bGVzLCBhcmdzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgYXJnc1swXVswXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoSUxMRUdBTF9FU0NBUEVfU0VRVUVOQ0VfRVJST1IpO1xuICAgICAgfVxuXG4gICAgICBzdHlsZXMucHVzaChhcmdzWzBdWzBdKTtcbiAgICAgIHZhciBsZW4gPSBhcmdzLmxlbmd0aDtcbiAgICAgIHZhciBpID0gMTtcblxuICAgICAgZm9yICg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBhcmdzWzBdW2ldID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKElMTEVHQUxfRVNDQVBFX1NFUVVFTkNFX0VSUk9SKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0eWxlcy5wdXNoKGFyZ3NbaV0sIGFyZ3NbMF1baV0pO1xuICAgICAgfVxuICAgIH0gLy8gJEZsb3dGaXhNZTogd2UgbmVlZCB0byBjYXN0IFN0YXRlbGVzc0Z1bmN0aW9uYWxDb21wb25lbnQgdG8gb3VyIFByaXZhdGVTdHlsZWRDb21wb25lbnQgY2xhc3NcblxuXG4gICAgdmFyIFN0eWxlZCA9IHdpdGhFbW90aW9uQ2FjaGUoZnVuY3Rpb24gKHByb3BzLCBjYWNoZSwgcmVmKSB7XG4gICAgICB2YXIgRmluYWxUYWcgPSBzaG91bGRVc2VBcyAmJiBwcm9wcy5hcyB8fCBiYXNlVGFnO1xuICAgICAgdmFyIGNsYXNzTmFtZSA9ICcnO1xuICAgICAgdmFyIGNsYXNzSW50ZXJwb2xhdGlvbnMgPSBbXTtcbiAgICAgIHZhciBtZXJnZWRQcm9wcyA9IHByb3BzO1xuXG4gICAgICBpZiAocHJvcHMudGhlbWUgPT0gbnVsbCkge1xuICAgICAgICBtZXJnZWRQcm9wcyA9IHt9O1xuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBwcm9wcykge1xuICAgICAgICAgIG1lcmdlZFByb3BzW2tleV0gPSBwcm9wc1trZXldO1xuICAgICAgICB9XG5cbiAgICAgICAgbWVyZ2VkUHJvcHMudGhlbWUgPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICBjbGFzc05hbWUgPSBnZXRSZWdpc3RlcmVkU3R5bGVzKGNhY2hlLnJlZ2lzdGVyZWQsIGNsYXNzSW50ZXJwb2xhdGlvbnMsIHByb3BzLmNsYXNzTmFtZSk7XG4gICAgICB9IGVsc2UgaWYgKHByb3BzLmNsYXNzTmFtZSAhPSBudWxsKSB7XG4gICAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSArIFwiIFwiO1xuICAgICAgfVxuXG4gICAgICB2YXIgc2VyaWFsaXplZCA9IHNlcmlhbGl6ZVN0eWxlcyhzdHlsZXMuY29uY2F0KGNsYXNzSW50ZXJwb2xhdGlvbnMpLCBjYWNoZS5yZWdpc3RlcmVkLCBtZXJnZWRQcm9wcyk7XG4gICAgICBjbGFzc05hbWUgKz0gY2FjaGUua2V5ICsgXCItXCIgKyBzZXJpYWxpemVkLm5hbWU7XG5cbiAgICAgIGlmICh0YXJnZXRDbGFzc05hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjbGFzc05hbWUgKz0gXCIgXCIgKyB0YXJnZXRDbGFzc05hbWU7XG4gICAgICB9XG5cbiAgICAgIHZhciBmaW5hbFNob3VsZEZvcndhcmRQcm9wID0gc2hvdWxkVXNlQXMgJiYgc2hvdWxkRm9yd2FyZFByb3AgPT09IHVuZGVmaW5lZCA/IGdldERlZmF1bHRTaG91bGRGb3J3YXJkUHJvcChGaW5hbFRhZykgOiBkZWZhdWx0U2hvdWxkRm9yd2FyZFByb3A7XG4gICAgICB2YXIgbmV3UHJvcHMgPSB7fTtcblxuICAgICAgZm9yICh2YXIgX2tleSBpbiBwcm9wcykge1xuICAgICAgICBpZiAoc2hvdWxkVXNlQXMgJiYgX2tleSA9PT0gJ2FzJykgY29udGludWU7XG5cbiAgICAgICAgaWYgKCAvLyAkRmxvd0ZpeE1lXG4gICAgICAgIGZpbmFsU2hvdWxkRm9yd2FyZFByb3AoX2tleSkpIHtcbiAgICAgICAgICBuZXdQcm9wc1tfa2V5XSA9IHByb3BzW19rZXldO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG5ld1Byb3BzLmNsYXNzTmFtZSA9IGNsYXNzTmFtZTtcbiAgICAgIG5ld1Byb3BzLnJlZiA9IHJlZjtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChGcmFnbWVudCwgbnVsbCwgLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoSW5zZXJ0aW9uLCB7XG4gICAgICAgIGNhY2hlOiBjYWNoZSxcbiAgICAgICAgc2VyaWFsaXplZDogc2VyaWFsaXplZCxcbiAgICAgICAgaXNTdHJpbmdUYWc6IHR5cGVvZiBGaW5hbFRhZyA9PT0gJ3N0cmluZydcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChGaW5hbFRhZywgbmV3UHJvcHMpKTtcbiAgICB9KTtcbiAgICBTdHlsZWQuZGlzcGxheU5hbWUgPSBpZGVudGlmaWVyTmFtZSAhPT0gdW5kZWZpbmVkID8gaWRlbnRpZmllck5hbWUgOiBcIlN0eWxlZChcIiArICh0eXBlb2YgYmFzZVRhZyA9PT0gJ3N0cmluZycgPyBiYXNlVGFnIDogYmFzZVRhZy5kaXNwbGF5TmFtZSB8fCBiYXNlVGFnLm5hbWUgfHwgJ0NvbXBvbmVudCcpICsgXCIpXCI7XG4gICAgU3R5bGVkLmRlZmF1bHRQcm9wcyA9IHRhZy5kZWZhdWx0UHJvcHM7XG4gICAgU3R5bGVkLl9fZW1vdGlvbl9yZWFsID0gU3R5bGVkO1xuICAgIFN0eWxlZC5fX2Vtb3Rpb25fYmFzZSA9IGJhc2VUYWc7XG4gICAgU3R5bGVkLl9fZW1vdGlvbl9zdHlsZXMgPSBzdHlsZXM7XG4gICAgU3R5bGVkLl9fZW1vdGlvbl9mb3J3YXJkUHJvcCA9IHNob3VsZEZvcndhcmRQcm9wO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTdHlsZWQsICd0b1N0cmluZycsIHtcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSgpIHtcbiAgICAgICAgaWYgKHRhcmdldENsYXNzTmFtZSA9PT0gdW5kZWZpbmVkICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICByZXR1cm4gJ05PX0NPTVBPTkVOVF9TRUxFQ1RPUic7XG4gICAgICAgIH0gLy8gJEZsb3dGaXhNZTogY29lcmNlIHVuZGVmaW5lZCB0byBzdHJpbmdcblxuXG4gICAgICAgIHJldHVybiBcIi5cIiArIHRhcmdldENsYXNzTmFtZTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIFN0eWxlZC53aXRoQ29tcG9uZW50ID0gZnVuY3Rpb24gKG5leHRUYWcsIG5leHRPcHRpb25zKSB7XG4gICAgICByZXR1cm4gY3JlYXRlU3R5bGVkKG5leHRUYWcsIF9leHRlbmRzKHt9LCBvcHRpb25zLCBuZXh0T3B0aW9ucywge1xuICAgICAgICBzaG91bGRGb3J3YXJkUHJvcDogY29tcG9zZVNob3VsZEZvcndhcmRQcm9wcyhTdHlsZWQsIG5leHRPcHRpb25zLCB0cnVlKVxuICAgICAgfSkpLmFwcGx5KHZvaWQgMCwgc3R5bGVzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFN0eWxlZDtcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN0eWxlZDtcbiIsImltcG9ydCAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzJztcbmltcG9ydCAncmVhY3QnO1xuaW1wb3J0ICdAZW1vdGlvbi9pcy1wcm9wLXZhbGlkJztcbmltcG9ydCBjcmVhdGVTdHlsZWQgZnJvbSAnLi4vYmFzZS9kaXN0L2Vtb3Rpb24tc3R5bGVkLWJhc2UuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0ICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgJ0BlbW90aW9uL3V0aWxzJztcbmltcG9ydCAnQGVtb3Rpb24vc2VyaWFsaXplJztcblxudmFyIHRhZ3MgPSBbJ2EnLCAnYWJicicsICdhZGRyZXNzJywgJ2FyZWEnLCAnYXJ0aWNsZScsICdhc2lkZScsICdhdWRpbycsICdiJywgJ2Jhc2UnLCAnYmRpJywgJ2JkbycsICdiaWcnLCAnYmxvY2txdW90ZScsICdib2R5JywgJ2JyJywgJ2J1dHRvbicsICdjYW52YXMnLCAnY2FwdGlvbicsICdjaXRlJywgJ2NvZGUnLCAnY29sJywgJ2NvbGdyb3VwJywgJ2RhdGEnLCAnZGF0YWxpc3QnLCAnZGQnLCAnZGVsJywgJ2RldGFpbHMnLCAnZGZuJywgJ2RpYWxvZycsICdkaXYnLCAnZGwnLCAnZHQnLCAnZW0nLCAnZW1iZWQnLCAnZmllbGRzZXQnLCAnZmlnY2FwdGlvbicsICdmaWd1cmUnLCAnZm9vdGVyJywgJ2Zvcm0nLCAnaDEnLCAnaDInLCAnaDMnLCAnaDQnLCAnaDUnLCAnaDYnLCAnaGVhZCcsICdoZWFkZXInLCAnaGdyb3VwJywgJ2hyJywgJ2h0bWwnLCAnaScsICdpZnJhbWUnLCAnaW1nJywgJ2lucHV0JywgJ2lucycsICdrYmQnLCAna2V5Z2VuJywgJ2xhYmVsJywgJ2xlZ2VuZCcsICdsaScsICdsaW5rJywgJ21haW4nLCAnbWFwJywgJ21hcmsnLCAnbWFycXVlZScsICdtZW51JywgJ21lbnVpdGVtJywgJ21ldGEnLCAnbWV0ZXInLCAnbmF2JywgJ25vc2NyaXB0JywgJ29iamVjdCcsICdvbCcsICdvcHRncm91cCcsICdvcHRpb24nLCAnb3V0cHV0JywgJ3AnLCAncGFyYW0nLCAncGljdHVyZScsICdwcmUnLCAncHJvZ3Jlc3MnLCAncScsICdycCcsICdydCcsICdydWJ5JywgJ3MnLCAnc2FtcCcsICdzY3JpcHQnLCAnc2VjdGlvbicsICdzZWxlY3QnLCAnc21hbGwnLCAnc291cmNlJywgJ3NwYW4nLCAnc3Ryb25nJywgJ3N0eWxlJywgJ3N1YicsICdzdW1tYXJ5JywgJ3N1cCcsICd0YWJsZScsICd0Ym9keScsICd0ZCcsICd0ZXh0YXJlYScsICd0Zm9vdCcsICd0aCcsICd0aGVhZCcsICd0aW1lJywgJ3RpdGxlJywgJ3RyJywgJ3RyYWNrJywgJ3UnLCAndWwnLCAndmFyJywgJ3ZpZGVvJywgJ3dicicsIC8vIFNWR1xuJ2NpcmNsZScsICdjbGlwUGF0aCcsICdkZWZzJywgJ2VsbGlwc2UnLCAnZm9yZWlnbk9iamVjdCcsICdnJywgJ2ltYWdlJywgJ2xpbmUnLCAnbGluZWFyR3JhZGllbnQnLCAnbWFzaycsICdwYXRoJywgJ3BhdHRlcm4nLCAncG9seWdvbicsICdwb2x5bGluZScsICdyYWRpYWxHcmFkaWVudCcsICdyZWN0JywgJ3N0b3AnLCAnc3ZnJywgJ3RleHQnLCAndHNwYW4nXTtcblxudmFyIG5ld1N0eWxlZCA9IGNyZWF0ZVN0eWxlZC5iaW5kKCk7XG50YWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZ05hbWUpIHtcbiAgLy8gJEZsb3dGaXhNZTogd2UgY2FuIGlnbm9yZSB0aGlzIGJlY2F1c2UgaXRzIGV4cG9zZWQgdHlwZSBpcyBkZWZpbmVkIGJ5IHRoZSBDcmVhdGVTdHlsZWQgdHlwZVxuICBuZXdTdHlsZWRbdGFnTmFtZV0gPSBuZXdTdHlsZWQodGFnTmFtZSk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgbmV3U3R5bGVkO1xuIiwiLyoqIEBsaWNlbnNlIE1VSSB2NS44LjBcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuaW1wb3J0IGVtU3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdHlsZWQodGFnLCBvcHRpb25zKSB7XG4gIGNvbnN0IHN0eWxlc0ZhY3RvcnkgPSBlbVN0eWxlZCh0YWcsIG9wdGlvbnMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgcmV0dXJuICguLi5zdHlsZXMpID0+IHtcbiAgICAgIGNvbnN0IGNvbXBvbmVudCA9IHR5cGVvZiB0YWcgPT09ICdzdHJpbmcnID8gYFwiJHt0YWd9XCJgIDogJ2NvbXBvbmVudCc7XG5cbiAgICAgIGlmIChzdHlsZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoW2BNVUk6IFNlZW1zIGxpa2UgeW91IGNhbGxlZCBcXGBzdHlsZWQoJHtjb21wb25lbnR9KSgpXFxgIHdpdGhvdXQgYSBcXGBzdHlsZVxcYCBhcmd1bWVudC5gLCAnWW91IG11c3QgcHJvdmlkZSBhIGBzdHlsZXNgIGFyZ3VtZW50OiBgc3R5bGVkKFwiZGl2XCIpKHN0eWxlWW91Rm9yZ290VG9QYXNzKWAuJ10uam9pbignXFxuJykpO1xuICAgICAgfSBlbHNlIGlmIChzdHlsZXMuc29tZShzdHlsZSA9PiBzdHlsZSA9PT0gdW5kZWZpbmVkKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBNVUk6IHRoZSBzdHlsZWQoJHtjb21wb25lbnR9KSguLi5hcmdzKSBBUEkgcmVxdWlyZXMgYWxsIGl0cyBhcmdzIHRvIGJlIGRlZmluZWQuYCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdHlsZXNGYWN0b3J5KC4uLnN0eWxlcyk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZXNGYWN0b3J5O1xufVxuZXhwb3J0IHsgVGhlbWVDb250ZXh0LCBrZXlmcmFtZXMsIGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU3R5bGVkRW5naW5lUHJvdmlkZXIgfSBmcm9tICcuL1N0eWxlZEVuZ2luZVByb3ZpZGVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2xvYmFsU3R5bGVzIH0gZnJvbSAnLi9HbG9iYWxTdHlsZXMnOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3QoaXRlbSkge1xuICByZXR1cm4gaXRlbSAhPT0gbnVsbCAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgaXRlbS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGVlcG1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zID0ge1xuICBjbG9uZTogdHJ1ZVxufSkge1xuICBjb25zdCBvdXRwdXQgPSBvcHRpb25zLmNsb25lID8gX2V4dGVuZHMoe30sIHRhcmdldCkgOiB0YXJnZXQ7XG5cbiAgaWYgKGlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiBpc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICBPYmplY3Qua2V5cyhzb3VyY2UpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIC8vIEF2b2lkIHByb3RvdHlwZSBwb2xsdXRpb25cbiAgICAgIGlmIChrZXkgPT09ICdfX3Byb3RvX18nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzUGxhaW5PYmplY3Qoc291cmNlW2tleV0pICYmIGtleSBpbiB0YXJnZXQgJiYgaXNQbGFpbk9iamVjdCh0YXJnZXRba2V5XSkpIHtcbiAgICAgICAgLy8gU2luY2UgYG91dHB1dGAgaXMgYSBjbG9uZSBvZiBgdGFyZ2V0YCBhbmQgd2UgaGF2ZSBuYXJyb3dlZCBgdGFyZ2V0YCBpbiB0aGlzIGJsb2NrIHdlIGNhbiBjYXN0IHRvIHRoZSBzYW1lIHR5cGUuXG4gICAgICAgIG91dHB1dFtrZXldID0gZGVlcG1lcmdlKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSwgb3B0aW9ucyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXRwdXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIG91dHB1dDtcbn0iLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1widmFsdWVzXCIsIFwidW5pdFwiLCBcInN0ZXBcIl07XG4vLyBTb3J0ZWQgQVNDIGJ5IHNpemUuIFRoYXQncyBpbXBvcnRhbnQuXG4vLyBJdCBjYW4ndCBiZSBjb25maWd1cmVkIGFzIGl0J3MgdXNlZCBzdGF0aWNhbGx5IGZvciBwcm9wVHlwZXMuXG5leHBvcnQgY29uc3QgYnJlYWtwb2ludEtleXMgPSBbJ3hzJywgJ3NtJywgJ21kJywgJ2xnJywgJ3hsJ107XG5cbmNvbnN0IHNvcnRCcmVha3BvaW50c1ZhbHVlcyA9IHZhbHVlcyA9PiB7XG4gIGNvbnN0IGJyZWFrcG9pbnRzQXNBcnJheSA9IE9iamVjdC5rZXlzKHZhbHVlcykubWFwKGtleSA9PiAoe1xuICAgIGtleSxcbiAgICB2YWw6IHZhbHVlc1trZXldXG4gIH0pKSB8fCBbXTsgLy8gU29ydCBpbiBhc2NlbmRpbmcgb3JkZXJcblxuICBicmVha3BvaW50c0FzQXJyYXkuc29ydCgoYnJlYWtwb2ludDEsIGJyZWFrcG9pbnQyKSA9PiBicmVha3BvaW50MS52YWwgLSBicmVha3BvaW50Mi52YWwpO1xuICByZXR1cm4gYnJlYWtwb2ludHNBc0FycmF5LnJlZHVjZSgoYWNjLCBvYmopID0+IHtcbiAgICByZXR1cm4gX2V4dGVuZHMoe30sIGFjYywge1xuICAgICAgW29iai5rZXldOiBvYmoudmFsXG4gICAgfSk7XG4gIH0sIHt9KTtcbn07IC8vIEtlZXAgaW4gbWluZCB0aGF0IEBtZWRpYSBpcyBpbmNsdXNpdmUgYnkgdGhlIENTUyBzcGVjaWZpY2F0aW9uLlxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUJyZWFrcG9pbnRzKGJyZWFrcG9pbnRzKSB7XG4gIGNvbnN0IHtcbiAgICAvLyBUaGUgYnJlYWtwb2ludCAqKnN0YXJ0KiogYXQgdGhpcyB2YWx1ZS5cbiAgICAvLyBGb3IgaW5zdGFuY2Ugd2l0aCB0aGUgZmlyc3QgYnJlYWtwb2ludCB4czogW3hzLCBzbSkuXG4gICAgdmFsdWVzID0ge1xuICAgICAgeHM6IDAsXG4gICAgICAvLyBwaG9uZVxuICAgICAgc206IDYwMCxcbiAgICAgIC8vIHRhYmxldFxuICAgICAgbWQ6IDkwMCxcbiAgICAgIC8vIHNtYWxsIGxhcHRvcFxuICAgICAgbGc6IDEyMDAsXG4gICAgICAvLyBkZXNrdG9wXG4gICAgICB4bDogMTUzNiAvLyBsYXJnZSBzY3JlZW5cblxuICAgIH0sXG4gICAgdW5pdCA9ICdweCcsXG4gICAgc3RlcCA9IDVcbiAgfSA9IGJyZWFrcG9pbnRzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKGJyZWFrcG9pbnRzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IHNvcnRlZFZhbHVlcyA9IHNvcnRCcmVha3BvaW50c1ZhbHVlcyh2YWx1ZXMpO1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoc29ydGVkVmFsdWVzKTtcblxuICBmdW5jdGlvbiB1cChrZXkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHR5cGVvZiB2YWx1ZXNba2V5XSA9PT0gJ251bWJlcicgPyB2YWx1ZXNba2V5XSA6IGtleTtcbiAgICByZXR1cm4gYEBtZWRpYSAobWluLXdpZHRoOiR7dmFsdWV9JHt1bml0fSlgO1xuICB9XG5cbiAgZnVuY3Rpb24gZG93bihrZXkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHR5cGVvZiB2YWx1ZXNba2V5XSA9PT0gJ251bWJlcicgPyB2YWx1ZXNba2V5XSA6IGtleTtcbiAgICByZXR1cm4gYEBtZWRpYSAobWF4LXdpZHRoOiR7dmFsdWUgLSBzdGVwIC8gMTAwfSR7dW5pdH0pYDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJldHdlZW4oc3RhcnQsIGVuZCkge1xuICAgIGNvbnN0IGVuZEluZGV4ID0ga2V5cy5pbmRleE9mKGVuZCk7XG4gICAgcmV0dXJuIGBAbWVkaWEgKG1pbi13aWR0aDoke3R5cGVvZiB2YWx1ZXNbc3RhcnRdID09PSAnbnVtYmVyJyA/IHZhbHVlc1tzdGFydF0gOiBzdGFydH0ke3VuaXR9KSBhbmQgYCArIGAobWF4LXdpZHRoOiR7KGVuZEluZGV4ICE9PSAtMSAmJiB0eXBlb2YgdmFsdWVzW2tleXNbZW5kSW5kZXhdXSA9PT0gJ251bWJlcicgPyB2YWx1ZXNba2V5c1tlbmRJbmRleF1dIDogZW5kKSAtIHN0ZXAgLyAxMDB9JHt1bml0fSlgO1xuICB9XG5cbiAgZnVuY3Rpb24gb25seShrZXkpIHtcbiAgICBpZiAoa2V5cy5pbmRleE9mKGtleSkgKyAxIDwga2V5cy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBiZXR3ZWVuKGtleSwga2V5c1trZXlzLmluZGV4T2Yoa2V5KSArIDFdKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXAoa2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdChrZXkpIHtcbiAgICAvLyBoYW5kbGUgZmlyc3QgYW5kIGxhc3Qga2V5IHNlcGFyYXRlbHksIGZvciBiZXR0ZXIgcmVhZGFiaWxpdHlcbiAgICBjb25zdCBrZXlJbmRleCA9IGtleXMuaW5kZXhPZihrZXkpO1xuXG4gICAgaWYgKGtleUluZGV4ID09PSAwKSB7XG4gICAgICByZXR1cm4gdXAoa2V5c1sxXSk7XG4gICAgfVxuXG4gICAgaWYgKGtleUluZGV4ID09PSBrZXlzLmxlbmd0aCAtIDEpIHtcbiAgICAgIHJldHVybiBkb3duKGtleXNba2V5SW5kZXhdKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYmV0d2VlbihrZXksIGtleXNba2V5cy5pbmRleE9mKGtleSkgKyAxXSkucmVwbGFjZSgnQG1lZGlhJywgJ0BtZWRpYSBub3QgYWxsIGFuZCcpO1xuICB9XG5cbiAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICBrZXlzLFxuICAgIHZhbHVlczogc29ydGVkVmFsdWVzLFxuICAgIHVwLFxuICAgIGRvd24sXG4gICAgYmV0d2VlbixcbiAgICBvbmx5LFxuICAgIG5vdCxcbiAgICB1bml0XG4gIH0sIG90aGVyKTtcbn0iLCJjb25zdCBzaGFwZSA9IHtcbiAgYm9yZGVyUmFkaXVzOiA0XG59O1xuZXhwb3J0IGRlZmF1bHQgc2hhcGU7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi9tZXJnZSc7IC8vIFRoZSBicmVha3BvaW50ICoqc3RhcnQqKiBhdCB0aGlzIHZhbHVlLlxuLy8gRm9yIGluc3RhbmNlIHdpdGggdGhlIGZpcnN0IGJyZWFrcG9pbnQgeHM6IFt4cywgc21bLlxuXG5leHBvcnQgY29uc3QgdmFsdWVzID0ge1xuICB4czogMCxcbiAgLy8gcGhvbmVcbiAgc206IDYwMCxcbiAgLy8gdGFibGV0XG4gIG1kOiA5MDAsXG4gIC8vIHNtYWxsIGxhcHRvcFxuICBsZzogMTIwMCxcbiAgLy8gZGVza3RvcFxuICB4bDogMTUzNiAvLyBsYXJnZSBzY3JlZW5cblxufTtcbmNvbnN0IGRlZmF1bHRCcmVha3BvaW50cyA9IHtcbiAgLy8gU29ydGVkIEFTQyBieSBzaXplLiBUaGF0J3MgaW1wb3J0YW50LlxuICAvLyBJdCBjYW4ndCBiZSBjb25maWd1cmVkIGFzIGl0J3MgdXNlZCBzdGF0aWNhbGx5IGZvciBwcm9wVHlwZXMuXG4gIGtleXM6IFsneHMnLCAnc20nLCAnbWQnLCAnbGcnLCAneGwnXSxcbiAgdXA6IGtleSA9PiBgQG1lZGlhIChtaW4td2lkdGg6JHt2YWx1ZXNba2V5XX1weClgXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZUJyZWFrcG9pbnRzKHByb3BzLCBwcm9wVmFsdWUsIHN0eWxlRnJvbVByb3BWYWx1ZSkge1xuICBjb25zdCB0aGVtZSA9IHByb3BzLnRoZW1lIHx8IHt9O1xuXG4gIGlmIChBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHtcbiAgICBjb25zdCB0aGVtZUJyZWFrcG9pbnRzID0gdGhlbWUuYnJlYWtwb2ludHMgfHwgZGVmYXVsdEJyZWFrcG9pbnRzO1xuICAgIHJldHVybiBwcm9wVmFsdWUucmVkdWNlKChhY2MsIGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICBhY2NbdGhlbWVCcmVha3BvaW50cy51cCh0aGVtZUJyZWFrcG9pbnRzLmtleXNbaW5kZXhdKV0gPSBzdHlsZUZyb21Qcm9wVmFsdWUocHJvcFZhbHVlW2luZGV4XSk7XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgcHJvcFZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IHRoZW1lQnJlYWtwb2ludHMgPSB0aGVtZS5icmVha3BvaW50cyB8fCBkZWZhdWx0QnJlYWtwb2ludHM7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BWYWx1ZSkucmVkdWNlKChhY2MsIGJyZWFrcG9pbnQpID0+IHtcbiAgICAgIC8vIGtleSBpcyBicmVha3BvaW50XG4gICAgICBpZiAoT2JqZWN0LmtleXModGhlbWVCcmVha3BvaW50cy52YWx1ZXMgfHwgdmFsdWVzKS5pbmRleE9mKGJyZWFrcG9pbnQpICE9PSAtMSkge1xuICAgICAgICBjb25zdCBtZWRpYUtleSA9IHRoZW1lQnJlYWtwb2ludHMudXAoYnJlYWtwb2ludCk7XG4gICAgICAgIGFjY1ttZWRpYUtleV0gPSBzdHlsZUZyb21Qcm9wVmFsdWUocHJvcFZhbHVlW2JyZWFrcG9pbnRdLCBicmVha3BvaW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGNzc0tleSA9IGJyZWFrcG9pbnQ7XG4gICAgICAgIGFjY1tjc3NLZXldID0gcHJvcFZhbHVlW2Nzc0tleV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICB9XG5cbiAgY29uc3Qgb3V0cHV0ID0gc3R5bGVGcm9tUHJvcFZhbHVlKHByb3BWYWx1ZSk7XG4gIHJldHVybiBvdXRwdXQ7XG59XG5cbmZ1bmN0aW9uIGJyZWFrcG9pbnRzKHN0eWxlRnVuY3Rpb24pIHtcbiAgY29uc3QgbmV3U3R5bGVGdW5jdGlvbiA9IHByb3BzID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHByb3BzLnRoZW1lIHx8IHt9O1xuICAgIGNvbnN0IGJhc2UgPSBzdHlsZUZ1bmN0aW9uKHByb3BzKTtcbiAgICBjb25zdCB0aGVtZUJyZWFrcG9pbnRzID0gdGhlbWUuYnJlYWtwb2ludHMgfHwgZGVmYXVsdEJyZWFrcG9pbnRzO1xuICAgIGNvbnN0IGV4dGVuZGVkID0gdGhlbWVCcmVha3BvaW50cy5rZXlzLnJlZHVjZSgoYWNjLCBrZXkpID0+IHtcbiAgICAgIGlmIChwcm9wc1trZXldKSB7XG4gICAgICAgIGFjYyA9IGFjYyB8fCB7fTtcbiAgICAgICAgYWNjW3RoZW1lQnJlYWtwb2ludHMudXAoa2V5KV0gPSBzdHlsZUZ1bmN0aW9uKF9leHRlbmRzKHtcbiAgICAgICAgICB0aGVtZVxuICAgICAgICB9LCBwcm9wc1trZXldKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgbnVsbCk7XG4gICAgcmV0dXJuIG1lcmdlKGJhc2UsIGV4dGVuZGVkKTtcbiAgfTtcblxuICBuZXdTdHlsZUZ1bmN0aW9uLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBfZXh0ZW5kcyh7fSwgc3R5bGVGdW5jdGlvbi5wcm9wVHlwZXMsIHtcbiAgICB4czogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzbTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBtZDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsZzogUHJvcFR5cGVzLm9iamVjdCxcbiAgICB4bDogUHJvcFR5cGVzLm9iamVjdFxuICB9KSA6IHt9O1xuICBuZXdTdHlsZUZ1bmN0aW9uLmZpbHRlclByb3BzID0gWyd4cycsICdzbScsICdtZCcsICdsZycsICd4bCcsIC4uLnN0eWxlRnVuY3Rpb24uZmlsdGVyUHJvcHNdO1xuICByZXR1cm4gbmV3U3R5bGVGdW5jdGlvbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVtcHR5QnJlYWtwb2ludE9iamVjdChicmVha3BvaW50c0lucHV0ID0ge30pIHtcbiAgdmFyIF9icmVha3BvaW50c0lucHV0JGtleTtcblxuICBjb25zdCBicmVha3BvaW50c0luT3JkZXIgPSBicmVha3BvaW50c0lucHV0ID09IG51bGwgPyB2b2lkIDAgOiAoX2JyZWFrcG9pbnRzSW5wdXQka2V5ID0gYnJlYWtwb2ludHNJbnB1dC5rZXlzKSA9PSBudWxsID8gdm9pZCAwIDogX2JyZWFrcG9pbnRzSW5wdXQka2V5LnJlZHVjZSgoYWNjLCBrZXkpID0+IHtcbiAgICBjb25zdCBicmVha3BvaW50U3R5bGVLZXkgPSBicmVha3BvaW50c0lucHV0LnVwKGtleSk7XG4gICAgYWNjW2JyZWFrcG9pbnRTdHlsZUtleV0gPSB7fTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG4gIHJldHVybiBicmVha3BvaW50c0luT3JkZXIgfHwge307XG59XG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlVW51c2VkQnJlYWtwb2ludHMoYnJlYWtwb2ludEtleXMsIHN0eWxlKSB7XG4gIHJldHVybiBicmVha3BvaW50S2V5cy5yZWR1Y2UoKGFjYywga2V5KSA9PiB7XG4gICAgY29uc3QgYnJlYWtwb2ludE91dHB1dCA9IGFjY1trZXldO1xuICAgIGNvbnN0IGlzQnJlYWtwb2ludFVudXNlZCA9ICFicmVha3BvaW50T3V0cHV0IHx8IE9iamVjdC5rZXlzKGJyZWFrcG9pbnRPdXRwdXQpLmxlbmd0aCA9PT0gMDtcblxuICAgIGlmIChpc0JyZWFrcG9pbnRVbnVzZWQpIHtcbiAgICAgIGRlbGV0ZSBhY2Nba2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWNjO1xuICB9LCBzdHlsZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VCcmVha3BvaW50c0luT3JkZXIoYnJlYWtwb2ludHNJbnB1dCwgLi4uc3R5bGVzKSB7XG4gIGNvbnN0IGVtcHR5QnJlYWtwb2ludHMgPSBjcmVhdGVFbXB0eUJyZWFrcG9pbnRPYmplY3QoYnJlYWtwb2ludHNJbnB1dCk7XG4gIGNvbnN0IG1lcmdlZE91dHB1dCA9IFtlbXB0eUJyZWFrcG9pbnRzLCAuLi5zdHlsZXNdLnJlZHVjZSgocHJldiwgbmV4dCkgPT4gZGVlcG1lcmdlKHByZXYsIG5leHQpLCB7fSk7XG4gIHJldHVybiByZW1vdmVVbnVzZWRCcmVha3BvaW50cyhPYmplY3Qua2V5cyhlbXB0eUJyZWFrcG9pbnRzKSwgbWVyZ2VkT3V0cHV0KTtcbn0gLy8gY29tcHV0ZSBiYXNlIGZvciByZXNwb25zaXZlIHZhbHVlczsgZS5nLixcbi8vIFsxLDIsM10gPT4ge3hzOiB0cnVlLCBzbTogdHJ1ZSwgbWQ6IHRydWV9XG4vLyB7eHM6IDEsIHNtOiAyLCBtZDogM30gPT4ge3hzOiB0cnVlLCBzbTogdHJ1ZSwgbWQ6IHRydWV9XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wdXRlQnJlYWtwb2ludHNCYXNlKGJyZWFrcG9pbnRWYWx1ZXMsIHRoZW1lQnJlYWtwb2ludHMpIHtcbiAgLy8gZml4ZWQgdmFsdWVcbiAgaWYgKHR5cGVvZiBicmVha3BvaW50VmFsdWVzICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIGNvbnN0IGJhc2UgPSB7fTtcbiAgY29uc3QgYnJlYWtwb2ludHNLZXlzID0gT2JqZWN0LmtleXModGhlbWVCcmVha3BvaW50cyk7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYnJlYWtwb2ludFZhbHVlcykpIHtcbiAgICBicmVha3BvaW50c0tleXMuZm9yRWFjaCgoYnJlYWtwb2ludCwgaSkgPT4ge1xuICAgICAgaWYgKGkgPCBicmVha3BvaW50VmFsdWVzLmxlbmd0aCkge1xuICAgICAgICBiYXNlW2JyZWFrcG9pbnRdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBicmVha3BvaW50c0tleXMuZm9yRWFjaChicmVha3BvaW50ID0+IHtcbiAgICAgIGlmIChicmVha3BvaW50VmFsdWVzW2JyZWFrcG9pbnRdICE9IG51bGwpIHtcbiAgICAgICAgYmFzZVticmVha3BvaW50XSA9IHRydWU7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gYmFzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlQnJlYWtwb2ludFZhbHVlcyh7XG4gIHZhbHVlczogYnJlYWtwb2ludFZhbHVlcyxcbiAgYnJlYWtwb2ludHM6IHRoZW1lQnJlYWtwb2ludHMsXG4gIGJhc2U6IGN1c3RvbUJhc2Vcbn0pIHtcbiAgY29uc3QgYmFzZSA9IGN1c3RvbUJhc2UgfHwgY29tcHV0ZUJyZWFrcG9pbnRzQmFzZShicmVha3BvaW50VmFsdWVzLCB0aGVtZUJyZWFrcG9pbnRzKTtcbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGJhc2UpO1xuXG4gIGlmIChrZXlzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBicmVha3BvaW50VmFsdWVzO1xuICB9XG5cbiAgbGV0IHByZXZpb3VzO1xuICByZXR1cm4ga2V5cy5yZWR1Y2UoKGFjYywgYnJlYWtwb2ludCwgaSkgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGJyZWFrcG9pbnRWYWx1ZXMpKSB7XG4gICAgICBhY2NbYnJlYWtwb2ludF0gPSBicmVha3BvaW50VmFsdWVzW2ldICE9IG51bGwgPyBicmVha3BvaW50VmFsdWVzW2ldIDogYnJlYWtwb2ludFZhbHVlc1twcmV2aW91c107XG4gICAgICBwcmV2aW91cyA9IGk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgYnJlYWtwb2ludFZhbHVlcyA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGFjY1ticmVha3BvaW50XSA9IGJyZWFrcG9pbnRWYWx1ZXNbYnJlYWtwb2ludF0gIT0gbnVsbCA/IGJyZWFrcG9pbnRWYWx1ZXNbYnJlYWtwb2ludF0gOiBicmVha3BvaW50VmFsdWVzW3ByZXZpb3VzXTtcbiAgICAgIHByZXZpb3VzID0gYnJlYWtwb2ludDtcbiAgICB9IGVsc2Uge1xuICAgICAgYWNjW2JyZWFrcG9pbnRdID0gYnJlYWtwb2ludFZhbHVlcztcbiAgICB9XG5cbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG59XG5leHBvcnQgZGVmYXVsdCBicmVha3BvaW50czsiLCJpbXBvcnQgX2Zvcm1hdE11aUVycm9yTWVzc2FnZSBmcm9tIFwiLi9mb3JtYXRNdWlFcnJvck1lc3NhZ2VcIjtcbi8vIEl0IHNob3VsZCB0byBiZSBub3RlZCB0aGF0IHRoaXMgZnVuY3Rpb24gaXNuJ3QgZXF1aXZhbGVudCB0byBgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemVgLlxuLy9cbi8vIEEgc3RyaWN0IGNhcGl0YWxpemF0aW9uIHNob3VsZCB1cHBlcmNhc2UgdGhlIGZpcnN0IGxldHRlciBvZiBlYWNoIHdvcmQgaW4gdGhlIHNlbnRlbmNlLlxuLy8gV2Ugb25seSBoYW5kbGUgdGhlIGZpcnN0IHdvcmQuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjYXBpdGFsaXplKHN0cmluZykge1xuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gYE1VSTogXFxgY2FwaXRhbGl6ZShzdHJpbmcpXFxgIGV4cGVjdHMgYSBzdHJpbmcgYXJndW1lbnQuYCA6IF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UoNykpO1xuICB9XG5cbiAgcmV0dXJuIHN0cmluZy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0cmluZy5zbGljZSgxKTtcbn0iLCJpbXBvcnQgeyB1bnN0YWJsZV9jYXBpdGFsaXplIGFzIGNhcGl0YWxpemUgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCByZXNwb25zaXZlUHJvcFR5cGUgZnJvbSAnLi9yZXNwb25zaXZlUHJvcFR5cGUnO1xuaW1wb3J0IHsgaGFuZGxlQnJlYWtwb2ludHMgfSBmcm9tICcuL2JyZWFrcG9pbnRzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXRoKG9iaiwgcGF0aCwgY2hlY2tWYXJzID0gdHJ1ZSkge1xuICBpZiAoIXBhdGggfHwgdHlwZW9mIHBhdGggIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gLy8gQ2hlY2sgaWYgQ1NTIHZhcmlhYmxlcyBhcmUgdXNlZFxuXG5cbiAgaWYgKG9iaiAmJiBvYmoudmFycyAmJiBjaGVja1ZhcnMpIHtcbiAgICBjb25zdCB2YWwgPSBgdmFycy4ke3BhdGh9YC5zcGxpdCgnLicpLnJlZHVjZSgoYWNjLCBpdGVtKSA9PiBhY2MgJiYgYWNjW2l0ZW1dID8gYWNjW2l0ZW1dIDogbnVsbCwgb2JqKTtcblxuICAgIGlmICh2YWwgIT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGF0aC5zcGxpdCgnLicpLnJlZHVjZSgoYWNjLCBpdGVtKSA9PiB7XG4gICAgaWYgKGFjYyAmJiBhY2NbaXRlbV0gIT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGFjY1tpdGVtXTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfSwgb2JqKTtcbn1cblxuZnVuY3Rpb24gZ2V0VmFsdWUodGhlbWVNYXBwaW5nLCB0cmFuc2Zvcm0sIHByb3BWYWx1ZUZpbmFsLCB1c2VyVmFsdWUgPSBwcm9wVmFsdWVGaW5hbCkge1xuICBsZXQgdmFsdWU7XG5cbiAgaWYgKHR5cGVvZiB0aGVtZU1hcHBpbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YWx1ZSA9IHRoZW1lTWFwcGluZyhwcm9wVmFsdWVGaW5hbCk7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh0aGVtZU1hcHBpbmcpKSB7XG4gICAgdmFsdWUgPSB0aGVtZU1hcHBpbmdbcHJvcFZhbHVlRmluYWxdIHx8IHVzZXJWYWx1ZTtcbiAgfSBlbHNlIHtcbiAgICB2YWx1ZSA9IGdldFBhdGgodGhlbWVNYXBwaW5nLCBwcm9wVmFsdWVGaW5hbCkgfHwgdXNlclZhbHVlO1xuICB9XG5cbiAgaWYgKHRyYW5zZm9ybSkge1xuICAgIHZhbHVlID0gdHJhbnNmb3JtKHZhbHVlKTtcbiAgfVxuXG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gc3R5bGUob3B0aW9ucykge1xuICBjb25zdCB7XG4gICAgcHJvcCxcbiAgICBjc3NQcm9wZXJ0eSA9IG9wdGlvbnMucHJvcCxcbiAgICB0aGVtZUtleSxcbiAgICB0cmFuc2Zvcm1cbiAgfSA9IG9wdGlvbnM7XG5cbiAgY29uc3QgZm4gPSBwcm9wcyA9PiB7XG4gICAgaWYgKHByb3BzW3Byb3BdID09IG51bGwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IHByb3BWYWx1ZSA9IHByb3BzW3Byb3BdO1xuICAgIGNvbnN0IHRoZW1lID0gcHJvcHMudGhlbWU7XG4gICAgY29uc3QgdGhlbWVNYXBwaW5nID0gZ2V0UGF0aCh0aGVtZSwgdGhlbWVLZXkpIHx8IHt9O1xuXG4gICAgY29uc3Qgc3R5bGVGcm9tUHJvcFZhbHVlID0gcHJvcFZhbHVlRmluYWwgPT4ge1xuICAgICAgbGV0IHZhbHVlID0gZ2V0VmFsdWUodGhlbWVNYXBwaW5nLCB0cmFuc2Zvcm0sIHByb3BWYWx1ZUZpbmFsKTtcblxuICAgICAgaWYgKHByb3BWYWx1ZUZpbmFsID09PSB2YWx1ZSAmJiB0eXBlb2YgcHJvcFZhbHVlRmluYWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8vIEhhdmVuJ3QgZm91bmQgdmFsdWVcbiAgICAgICAgdmFsdWUgPSBnZXRWYWx1ZSh0aGVtZU1hcHBpbmcsIHRyYW5zZm9ybSwgYCR7cHJvcH0ke3Byb3BWYWx1ZUZpbmFsID09PSAnZGVmYXVsdCcgPyAnJyA6IGNhcGl0YWxpemUocHJvcFZhbHVlRmluYWwpfWAsIHByb3BWYWx1ZUZpbmFsKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNzc1Byb3BlcnR5ID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIFtjc3NQcm9wZXJ0eV06IHZhbHVlXG4gICAgICB9O1xuICAgIH07XG5cbiAgICByZXR1cm4gaGFuZGxlQnJlYWtwb2ludHMocHJvcHMsIHByb3BWYWx1ZSwgc3R5bGVGcm9tUHJvcFZhbHVlKTtcbiAgfTtcblxuICBmbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8ge1xuICAgIFtwcm9wXTogcmVzcG9uc2l2ZVByb3BUeXBlXG4gIH0gOiB7fTtcbiAgZm4uZmlsdGVyUHJvcHMgPSBbcHJvcF07XG4gIHJldHVybiBmbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGU7IiwiaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG11aS91dGlscyc7XG5cbmZ1bmN0aW9uIG1lcmdlKGFjYywgaXRlbSkge1xuICBpZiAoIWl0ZW0pIHtcbiAgICByZXR1cm4gYWNjO1xuICB9XG5cbiAgcmV0dXJuIGRlZXBtZXJnZShhY2MsIGl0ZW0sIHtcbiAgICBjbG9uZTogZmFsc2UgLy8gTm8gbmVlZCB0byBjbG9uZSBkZWVwLCBpdCdzIHdheSBmYXN0ZXIuXG5cbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lcmdlOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1lbW9pemUoZm4pIHtcbiAgY29uc3QgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGFyZyA9PiB7XG4gICAgaWYgKGNhY2hlW2FyZ10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgY2FjaGVbYXJnXSA9IGZuKGFyZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNhY2hlW2FyZ107XG4gIH07XG59IiwiaW1wb3J0IHJlc3BvbnNpdmVQcm9wVHlwZSBmcm9tICcuL3Jlc3BvbnNpdmVQcm9wVHlwZSc7XG5pbXBvcnQgeyBoYW5kbGVCcmVha3BvaW50cyB9IGZyb20gJy4vYnJlYWtwb2ludHMnO1xuaW1wb3J0IHsgZ2V0UGF0aCB9IGZyb20gJy4vc3R5bGUnO1xuaW1wb3J0IG1lcmdlIGZyb20gJy4vbWVyZ2UnO1xuaW1wb3J0IG1lbW9pemUgZnJvbSAnLi9tZW1vaXplJztcbmNvbnN0IHByb3BlcnRpZXMgPSB7XG4gIG06ICdtYXJnaW4nLFxuICBwOiAncGFkZGluZydcbn07XG5jb25zdCBkaXJlY3Rpb25zID0ge1xuICB0OiAnVG9wJyxcbiAgcjogJ1JpZ2h0JyxcbiAgYjogJ0JvdHRvbScsXG4gIGw6ICdMZWZ0JyxcbiAgeDogWydMZWZ0JywgJ1JpZ2h0J10sXG4gIHk6IFsnVG9wJywgJ0JvdHRvbSddXG59O1xuY29uc3QgYWxpYXNlcyA9IHtcbiAgbWFyZ2luWDogJ214JyxcbiAgbWFyZ2luWTogJ215JyxcbiAgcGFkZGluZ1g6ICdweCcsXG4gIHBhZGRpbmdZOiAncHknXG59OyAvLyBtZW1vaXplKCkgaW1wYWN0OlxuLy8gRnJvbSAzMDAsMDAwIG9wcy9zZWNcbi8vIFRvIDM1MCwwMDAgb3BzL3NlY1xuXG5jb25zdCBnZXRDc3NQcm9wZXJ0aWVzID0gbWVtb2l6ZShwcm9wID0+IHtcbiAgLy8gSXQncyBub3QgYSBzaG9ydGhhbmQgbm90YXRpb24uXG4gIGlmIChwcm9wLmxlbmd0aCA+IDIpIHtcbiAgICBpZiAoYWxpYXNlc1twcm9wXSkge1xuICAgICAgcHJvcCA9IGFsaWFzZXNbcHJvcF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBbcHJvcF07XG4gICAgfVxuICB9XG5cbiAgY29uc3QgW2EsIGJdID0gcHJvcC5zcGxpdCgnJyk7XG4gIGNvbnN0IHByb3BlcnR5ID0gcHJvcGVydGllc1thXTtcbiAgY29uc3QgZGlyZWN0aW9uID0gZGlyZWN0aW9uc1tiXSB8fCAnJztcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoZGlyZWN0aW9uKSA/IGRpcmVjdGlvbi5tYXAoZGlyID0+IHByb3BlcnR5ICsgZGlyKSA6IFtwcm9wZXJ0eSArIGRpcmVjdGlvbl07XG59KTtcbmNvbnN0IG1hcmdpbktleXMgPSBbJ20nLCAnbXQnLCAnbXInLCAnbWInLCAnbWwnLCAnbXgnLCAnbXknLCAnbWFyZ2luJywgJ21hcmdpblRvcCcsICdtYXJnaW5SaWdodCcsICdtYXJnaW5Cb3R0b20nLCAnbWFyZ2luTGVmdCcsICdtYXJnaW5YJywgJ21hcmdpblknLCAnbWFyZ2luSW5saW5lJywgJ21hcmdpbklubGluZVN0YXJ0JywgJ21hcmdpbklubGluZUVuZCcsICdtYXJnaW5CbG9jaycsICdtYXJnaW5CbG9ja1N0YXJ0JywgJ21hcmdpbkJsb2NrRW5kJ107XG5jb25zdCBwYWRkaW5nS2V5cyA9IFsncCcsICdwdCcsICdwcicsICdwYicsICdwbCcsICdweCcsICdweScsICdwYWRkaW5nJywgJ3BhZGRpbmdUb3AnLCAncGFkZGluZ1JpZ2h0JywgJ3BhZGRpbmdCb3R0b20nLCAncGFkZGluZ0xlZnQnLCAncGFkZGluZ1gnLCAncGFkZGluZ1knLCAncGFkZGluZ0lubGluZScsICdwYWRkaW5nSW5saW5lU3RhcnQnLCAncGFkZGluZ0lubGluZUVuZCcsICdwYWRkaW5nQmxvY2snLCAncGFkZGluZ0Jsb2NrU3RhcnQnLCAncGFkZGluZ0Jsb2NrRW5kJ107XG5jb25zdCBzcGFjaW5nS2V5cyA9IFsuLi5tYXJnaW5LZXlzLCAuLi5wYWRkaW5nS2V5c107XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVW5hcnlVbml0KHRoZW1lLCB0aGVtZUtleSwgZGVmYXVsdFZhbHVlLCBwcm9wTmFtZSkge1xuICB2YXIgX2dldFBhdGg7XG5cbiAgY29uc3QgdGhlbWVTcGFjaW5nID0gKF9nZXRQYXRoID0gZ2V0UGF0aCh0aGVtZSwgdGhlbWVLZXksIGZhbHNlKSkgIT0gbnVsbCA/IF9nZXRQYXRoIDogZGVmYXVsdFZhbHVlO1xuXG4gIGlmICh0eXBlb2YgdGhlbWVTcGFjaW5nID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBhYnMgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBhYnMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBhYnM7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYWJzICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYE1VSTogRXhwZWN0ZWQgJHtwcm9wTmFtZX0gYXJndW1lbnQgdG8gYmUgYSBudW1iZXIgb3IgYSBzdHJpbmcsIGdvdCAke2Fic30uYCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoZW1lU3BhY2luZyAqIGFicztcbiAgICB9O1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkodGhlbWVTcGFjaW5nKSkge1xuICAgIHJldHVybiBhYnMgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBhYnMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBhYnM7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmICghTnVtYmVyLmlzSW50ZWdlcihhYnMpKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihbYE1VSTogVGhlIFxcYHRoZW1lLiR7dGhlbWVLZXl9XFxgIGFycmF5IHR5cGUgY2Fubm90IGJlIGNvbWJpbmVkIHdpdGggbm9uIGludGVnZXIgdmFsdWVzLmAgKyBgWW91IHNob3VsZCBlaXRoZXIgdXNlIGFuIGludGVnZXIgdmFsdWUgdGhhdCBjYW4gYmUgdXNlZCBhcyBpbmRleCwgb3IgZGVmaW5lIHRoZSBcXGB0aGVtZS4ke3RoZW1lS2V5fVxcYCBhcyBhIG51bWJlci5gXS5qb2luKCdcXG4nKSk7XG4gICAgICAgIH0gZWxzZSBpZiAoYWJzID4gdGhlbWVTcGFjaW5nLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFtgTVVJOiBUaGUgdmFsdWUgcHJvdmlkZWQgKCR7YWJzfSkgb3ZlcmZsb3dzLmAsIGBUaGUgc3VwcG9ydGVkIHZhbHVlcyBhcmU6ICR7SlNPTi5zdHJpbmdpZnkodGhlbWVTcGFjaW5nKX0uYCwgYCR7YWJzfSA+ICR7dGhlbWVTcGFjaW5nLmxlbmd0aCAtIDF9LCB5b3UgbmVlZCB0byBhZGQgdGhlIG1pc3NpbmcgdmFsdWVzLmBdLmpvaW4oJ1xcbicpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhlbWVTcGFjaW5nW2Fic107XG4gICAgfTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdGhlbWVTcGFjaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHRoZW1lU3BhY2luZztcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgY29uc29sZS5lcnJvcihbYE1VSTogVGhlIFxcYHRoZW1lLiR7dGhlbWVLZXl9XFxgIHZhbHVlICgke3RoZW1lU3BhY2luZ30pIGlzIGludmFsaWQuYCwgJ0l0IHNob3VsZCBiZSBhIG51bWJlciwgYW4gYXJyYXkgb3IgYSBmdW5jdGlvbi4nXS5qb2luKCdcXG4nKSk7XG4gIH1cblxuICByZXR1cm4gKCkgPT4gdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVVuYXJ5U3BhY2luZyh0aGVtZSkge1xuICByZXR1cm4gY3JlYXRlVW5hcnlVbml0KHRoZW1lLCAnc3BhY2luZycsIDgsICdzcGFjaW5nJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0VmFsdWUodHJhbnNmb3JtZXIsIHByb3BWYWx1ZSkge1xuICBpZiAodHlwZW9mIHByb3BWYWx1ZSA9PT0gJ3N0cmluZycgfHwgcHJvcFZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gcHJvcFZhbHVlO1xuICB9XG5cbiAgY29uc3QgYWJzID0gTWF0aC5hYnMocHJvcFZhbHVlKTtcbiAgY29uc3QgdHJhbnNmb3JtZWQgPSB0cmFuc2Zvcm1lcihhYnMpO1xuXG4gIGlmIChwcm9wVmFsdWUgPj0gMCkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1lZDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHJhbnNmb3JtZWQgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIC10cmFuc2Zvcm1lZDtcbiAgfVxuXG4gIHJldHVybiBgLSR7dHJhbnNmb3JtZWR9YDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdHlsZUZyb21Qcm9wVmFsdWUoY3NzUHJvcGVydGllcywgdHJhbnNmb3JtZXIpIHtcbiAgcmV0dXJuIHByb3BWYWx1ZSA9PiBjc3NQcm9wZXJ0aWVzLnJlZHVjZSgoYWNjLCBjc3NQcm9wZXJ0eSkgPT4ge1xuICAgIGFjY1tjc3NQcm9wZXJ0eV0gPSBnZXRWYWx1ZSh0cmFuc2Zvcm1lciwgcHJvcFZhbHVlKTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVDc3NQcm9wZXJ0eShwcm9wcywga2V5cywgcHJvcCwgdHJhbnNmb3JtZXIpIHtcbiAgLy8gVXNpbmcgYSBoYXNoIGNvbXB1dGF0aW9uIG92ZXIgYW4gYXJyYXkgaXRlcmF0aW9uIGNvdWxkIGJlIGZhc3RlciwgYnV0IHdpdGggb25seSAyOCBpdGVtcyxcbiAgLy8gaXQncyBkb2Vzbid0IHdvcnRoIHRoZSBidW5kbGUgc2l6ZS5cbiAgaWYgKGtleXMuaW5kZXhPZihwcm9wKSA9PT0gLTEpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IGNzc1Byb3BlcnRpZXMgPSBnZXRDc3NQcm9wZXJ0aWVzKHByb3ApO1xuICBjb25zdCBzdHlsZUZyb21Qcm9wVmFsdWUgPSBnZXRTdHlsZUZyb21Qcm9wVmFsdWUoY3NzUHJvcGVydGllcywgdHJhbnNmb3JtZXIpO1xuICBjb25zdCBwcm9wVmFsdWUgPSBwcm9wc1twcm9wXTtcbiAgcmV0dXJuIGhhbmRsZUJyZWFrcG9pbnRzKHByb3BzLCBwcm9wVmFsdWUsIHN0eWxlRnJvbVByb3BWYWx1ZSk7XG59XG5cbmZ1bmN0aW9uIHN0eWxlKHByb3BzLCBrZXlzKSB7XG4gIGNvbnN0IHRyYW5zZm9ybWVyID0gY3JlYXRlVW5hcnlTcGFjaW5nKHByb3BzLnRoZW1lKTtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BzKS5tYXAocHJvcCA9PiByZXNvbHZlQ3NzUHJvcGVydHkocHJvcHMsIGtleXMsIHByb3AsIHRyYW5zZm9ybWVyKSkucmVkdWNlKG1lcmdlLCB7fSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYXJnaW4ocHJvcHMpIHtcbiAgcmV0dXJuIHN0eWxlKHByb3BzLCBtYXJnaW5LZXlzKTtcbn1cbm1hcmdpbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gbWFyZ2luS2V5cy5yZWR1Y2UoKG9iaiwga2V5KSA9PiB7XG4gIG9ialtrZXldID0gcmVzcG9uc2l2ZVByb3BUeXBlO1xuICByZXR1cm4gb2JqO1xufSwge30pIDoge307XG5tYXJnaW4uZmlsdGVyUHJvcHMgPSBtYXJnaW5LZXlzO1xuZXhwb3J0IGZ1bmN0aW9uIHBhZGRpbmcocHJvcHMpIHtcbiAgcmV0dXJuIHN0eWxlKHByb3BzLCBwYWRkaW5nS2V5cyk7XG59XG5wYWRkaW5nLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBwYWRkaW5nS2V5cy5yZWR1Y2UoKG9iaiwga2V5KSA9PiB7XG4gIG9ialtrZXldID0gcmVzcG9uc2l2ZVByb3BUeXBlO1xuICByZXR1cm4gb2JqO1xufSwge30pIDoge307XG5wYWRkaW5nLmZpbHRlclByb3BzID0gcGFkZGluZ0tleXM7XG5cbmZ1bmN0aW9uIHNwYWNpbmcocHJvcHMpIHtcbiAgcmV0dXJuIHN0eWxlKHByb3BzLCBzcGFjaW5nS2V5cyk7XG59XG5cbnNwYWNpbmcucHJvcFR5cGVzID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHNwYWNpbmdLZXlzLnJlZHVjZSgob2JqLCBrZXkpID0+IHtcbiAgb2JqW2tleV0gPSByZXNwb25zaXZlUHJvcFR5cGU7XG4gIHJldHVybiBvYmo7XG59LCB7fSkgOiB7fTtcbnNwYWNpbmcuZmlsdGVyUHJvcHMgPSBzcGFjaW5nS2V5cztcbmV4cG9ydCBkZWZhdWx0IHNwYWNpbmc7IiwiaW1wb3J0IHsgY3JlYXRlVW5hcnlTcGFjaW5nIH0gZnJvbSAnLi4vc3BhY2luZyc7XG5cbi8qIHRzbGludDplbmFibGU6dW5pZmllZC1zaWduYXR1cmVzICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTcGFjaW5nKHNwYWNpbmdJbnB1dCA9IDgpIHtcbiAgLy8gQWxyZWFkeSB0cmFuc2Zvcm1lZC5cbiAgaWYgKHNwYWNpbmdJbnB1dC5tdWkpIHtcbiAgICByZXR1cm4gc3BhY2luZ0lucHV0O1xuICB9IC8vIE1hdGVyaWFsIERlc2lnbiBsYXlvdXRzIGFyZSB2aXN1YWxseSBiYWxhbmNlZC4gTW9zdCBtZWFzdXJlbWVudHMgYWxpZ24gdG8gYW4gOGRwIGdyaWQsIHdoaWNoIGFsaWducyBib3RoIHNwYWNpbmcgYW5kIHRoZSBvdmVyYWxsIGxheW91dC5cbiAgLy8gU21hbGxlciBjb21wb25lbnRzLCBzdWNoIGFzIGljb25zLCBjYW4gYWxpZ24gdG8gYSA0ZHAgZ3JpZC5cbiAgLy8gaHR0cHM6Ly9tYXRlcmlhbC5pby9kZXNpZ24vbGF5b3V0L3VuZGVyc3RhbmRpbmctbGF5b3V0Lmh0bWwjdXNhZ2VcblxuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IGNyZWF0ZVVuYXJ5U3BhY2luZyh7XG4gICAgc3BhY2luZzogc3BhY2luZ0lucHV0XG4gIH0pO1xuXG4gIGNvbnN0IHNwYWNpbmcgPSAoLi4uYXJnc0lucHV0KSA9PiB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICghKGFyZ3NJbnB1dC5sZW5ndGggPD0gNCkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgTVVJOiBUb28gbWFueSBhcmd1bWVudHMgcHJvdmlkZWQsIGV4cGVjdGVkIGJldHdlZW4gMCBhbmQgNCwgZ290ICR7YXJnc0lucHV0Lmxlbmd0aH1gKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBhcmdzID0gYXJnc0lucHV0Lmxlbmd0aCA9PT0gMCA/IFsxXSA6IGFyZ3NJbnB1dDtcbiAgICByZXR1cm4gYXJncy5tYXAoYXJndW1lbnQgPT4ge1xuICAgICAgY29uc3Qgb3V0cHV0ID0gdHJhbnNmb3JtKGFyZ3VtZW50KTtcbiAgICAgIHJldHVybiB0eXBlb2Ygb3V0cHV0ID09PSAnbnVtYmVyJyA/IGAke291dHB1dH1weGAgOiBvdXRwdXQ7XG4gICAgfSkuam9pbignICcpO1xuICB9O1xuXG4gIHNwYWNpbmcubXVpID0gdHJ1ZTtcbiAgcmV0dXJuIHNwYWNpbmc7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImJyZWFrcG9pbnRzXCIsIFwicGFsZXR0ZVwiLCBcInNwYWNpbmdcIiwgXCJzaGFwZVwiXTtcbmltcG9ydCB7IGRlZXBtZXJnZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IGNyZWF0ZUJyZWFrcG9pbnRzIGZyb20gJy4vY3JlYXRlQnJlYWtwb2ludHMnO1xuaW1wb3J0IHNoYXBlIGZyb20gJy4vc2hhcGUnO1xuaW1wb3J0IGNyZWF0ZVNwYWNpbmcgZnJvbSAnLi9jcmVhdGVTcGFjaW5nJztcblxuZnVuY3Rpb24gY3JlYXRlVGhlbWUob3B0aW9ucyA9IHt9LCAuLi5hcmdzKSB7XG4gIGNvbnN0IHtcbiAgICBicmVha3BvaW50czogYnJlYWtwb2ludHNJbnB1dCA9IHt9LFxuICAgIHBhbGV0dGU6IHBhbGV0dGVJbnB1dCA9IHt9LFxuICAgIHNwYWNpbmc6IHNwYWNpbmdJbnB1dCxcbiAgICBzaGFwZTogc2hhcGVJbnB1dCA9IHt9XG4gIH0gPSBvcHRpb25zLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKG9wdGlvbnMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3QgYnJlYWtwb2ludHMgPSBjcmVhdGVCcmVha3BvaW50cyhicmVha3BvaW50c0lucHV0KTtcbiAgY29uc3Qgc3BhY2luZyA9IGNyZWF0ZVNwYWNpbmcoc3BhY2luZ0lucHV0KTtcbiAgbGV0IG11aVRoZW1lID0gZGVlcG1lcmdlKHtcbiAgICBicmVha3BvaW50cyxcbiAgICBkaXJlY3Rpb246ICdsdHInLFxuICAgIGNvbXBvbmVudHM6IHt9LFxuICAgIC8vIEluamVjdCBjb21wb25lbnQgZGVmaW5pdGlvbnMuXG4gICAgcGFsZXR0ZTogX2V4dGVuZHMoe1xuICAgICAgbW9kZTogJ2xpZ2h0J1xuICAgIH0sIHBhbGV0dGVJbnB1dCksXG4gICAgc3BhY2luZyxcbiAgICBzaGFwZTogX2V4dGVuZHMoe30sIHNoYXBlLCBzaGFwZUlucHV0KVxuICB9LCBvdGhlcik7XG4gIG11aVRoZW1lID0gYXJncy5yZWR1Y2UoKGFjYywgYXJndW1lbnQpID0+IGRlZXBtZXJnZShhY2MsIGFyZ3VtZW50KSwgbXVpVGhlbWUpO1xuICByZXR1cm4gbXVpVGhlbWU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVRoZW1lOyIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1widmFyaWFudFwiXTtcbmltcG9ydCB7IHVuc3RhYmxlX2NhcGl0YWxpemUgYXMgY2FwaXRhbGl6ZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuXG5mdW5jdGlvbiBpc0VtcHR5KHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLmxlbmd0aCA9PT0gMDtcbn1cbi8qKlxuICogR2VuZXJhdGVzIHN0cmluZyBjbGFzc0tleSBiYXNlZCBvbiB0aGUgcHJvcGVydGllcyBwcm92aWRlZC4gSXQgc3RhcnRzIHdpdGggdGhlXG4gKiB2YXJpYW50IGlmIGRlZmluZWQsIGFuZCB0aGVuIGl0IGFwcGVuZHMgYWxsIG90aGVyIHByb3BlcnRpZXMgaW4gYWxwaGFiZXRpY2FsIG9yZGVyLlxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzIC0gdGhlIHByb3BlcnRpZXMgZm9yIHdoaWNoIHRoZSBjbGFzc0tleSBzaG91bGQgYmUgY3JlYXRlZC5cbiAqL1xuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByb3BzVG9DbGFzc0tleShwcm9wcykge1xuICBjb25zdCB7XG4gICAgdmFyaWFudFxuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgbGV0IGNsYXNzS2V5ID0gdmFyaWFudCB8fCAnJztcbiAgT2JqZWN0LmtleXMob3RoZXIpLnNvcnQoKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgaWYgKGtleSA9PT0gJ2NvbG9yJykge1xuICAgICAgY2xhc3NLZXkgKz0gaXNFbXB0eShjbGFzc0tleSkgPyBwcm9wc1trZXldIDogY2FwaXRhbGl6ZShwcm9wc1trZXldKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2xhc3NLZXkgKz0gYCR7aXNFbXB0eShjbGFzc0tleSkgPyBrZXkgOiBjYXBpdGFsaXplKGtleSl9JHtjYXBpdGFsaXplKHByb3BzW2tleV0udG9TdHJpbmcoKSl9YDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gY2xhc3NLZXk7XG59IiwiaW1wb3J0IG1lcmdlIGZyb20gJy4vbWVyZ2UnO1xuXG5mdW5jdGlvbiBjb21wb3NlKC4uLnN0eWxlcykge1xuICBjb25zdCBoYW5kbGVycyA9IHN0eWxlcy5yZWR1Y2UoKGFjYywgc3R5bGUpID0+IHtcbiAgICBzdHlsZS5maWx0ZXJQcm9wcy5mb3JFYWNoKHByb3AgPT4ge1xuICAgICAgYWNjW3Byb3BdID0gc3R5bGU7XG4gICAgfSk7XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuXG4gIGNvbnN0IGZuID0gcHJvcHMgPT4ge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhwcm9wcykucmVkdWNlKChhY2MsIHByb3ApID0+IHtcbiAgICAgIGlmIChoYW5kbGVyc1twcm9wXSkge1xuICAgICAgICByZXR1cm4gbWVyZ2UoYWNjLCBoYW5kbGVyc1twcm9wXShwcm9wcykpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbiAgfTtcblxuICBmbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gc3R5bGVzLnJlZHVjZSgoYWNjLCBzdHlsZSkgPT4gT2JqZWN0LmFzc2lnbihhY2MsIHN0eWxlLnByb3BUeXBlcyksIHt9KSA6IHt9O1xuICBmbi5maWx0ZXJQcm9wcyA9IHN0eWxlcy5yZWR1Y2UoKGFjYywgc3R5bGUpID0+IGFjYy5jb25jYXQoc3R5bGUuZmlsdGVyUHJvcHMpLCBbXSk7XG4gIHJldHVybiBmbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29tcG9zZTsiLCJpbXBvcnQgcmVzcG9uc2l2ZVByb3BUeXBlIGZyb20gJy4vcmVzcG9uc2l2ZVByb3BUeXBlJztcbmltcG9ydCBzdHlsZSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBjb21wb3NlIGZyb20gJy4vY29tcG9zZSc7XG5pbXBvcnQgeyBjcmVhdGVVbmFyeVVuaXQsIGdldFZhbHVlIH0gZnJvbSAnLi9zcGFjaW5nJztcbmltcG9ydCB7IGhhbmRsZUJyZWFrcG9pbnRzIH0gZnJvbSAnLi9icmVha3BvaW50cyc7XG5cbmZ1bmN0aW9uIGdldEJvcmRlcih2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSAnbnVtYmVyJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBgJHt2YWx1ZX1weCBzb2xpZGA7XG59XG5cbmV4cG9ydCBjb25zdCBib3JkZXIgPSBzdHlsZSh7XG4gIHByb3A6ICdib3JkZXInLFxuICB0aGVtZUtleTogJ2JvcmRlcnMnLFxuICB0cmFuc2Zvcm06IGdldEJvcmRlclxufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyVG9wID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyVG9wJyxcbiAgdGhlbWVLZXk6ICdib3JkZXJzJyxcbiAgdHJhbnNmb3JtOiBnZXRCb3JkZXJcbn0pO1xuZXhwb3J0IGNvbnN0IGJvcmRlclJpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyUmlnaHQnLFxuICB0aGVtZUtleTogJ2JvcmRlcnMnLFxuICB0cmFuc2Zvcm06IGdldEJvcmRlclxufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyQm90dG9tID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyQm90dG9tJyxcbiAgdGhlbWVLZXk6ICdib3JkZXJzJyxcbiAgdHJhbnNmb3JtOiBnZXRCb3JkZXJcbn0pO1xuZXhwb3J0IGNvbnN0IGJvcmRlckxlZnQgPSBzdHlsZSh7XG4gIHByb3A6ICdib3JkZXJMZWZ0JyxcbiAgdGhlbWVLZXk6ICdib3JkZXJzJyxcbiAgdHJhbnNmb3JtOiBnZXRCb3JkZXJcbn0pO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9yID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyQ29sb3InLFxuICB0aGVtZUtleTogJ3BhbGV0dGUnXG59KTtcbmV4cG9ydCBjb25zdCBib3JkZXJUb3BDb2xvciA9IHN0eWxlKHtcbiAgcHJvcDogJ2JvcmRlclRvcENvbG9yJyxcbiAgdGhlbWVLZXk6ICdwYWxldHRlJ1xufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyUmlnaHRDb2xvciA9IHN0eWxlKHtcbiAgcHJvcDogJ2JvcmRlclJpZ2h0Q29sb3InLFxuICB0aGVtZUtleTogJ3BhbGV0dGUnXG59KTtcbmV4cG9ydCBjb25zdCBib3JkZXJCb3R0b21Db2xvciA9IHN0eWxlKHtcbiAgcHJvcDogJ2JvcmRlckJvdHRvbUNvbG9yJyxcbiAgdGhlbWVLZXk6ICdwYWxldHRlJ1xufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyTGVmdENvbG9yID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyTGVmdENvbG9yJyxcbiAgdGhlbWVLZXk6ICdwYWxldHRlJ1xufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyUmFkaXVzID0gcHJvcHMgPT4ge1xuICBpZiAocHJvcHMuYm9yZGVyUmFkaXVzICE9PSB1bmRlZmluZWQgJiYgcHJvcHMuYm9yZGVyUmFkaXVzICE9PSBudWxsKSB7XG4gICAgY29uc3QgdHJhbnNmb3JtZXIgPSBjcmVhdGVVbmFyeVVuaXQocHJvcHMudGhlbWUsICdzaGFwZS5ib3JkZXJSYWRpdXMnLCA0LCAnYm9yZGVyUmFkaXVzJyk7XG5cbiAgICBjb25zdCBzdHlsZUZyb21Qcm9wVmFsdWUgPSBwcm9wVmFsdWUgPT4gKHtcbiAgICAgIGJvcmRlclJhZGl1czogZ2V0VmFsdWUodHJhbnNmb3JtZXIsIHByb3BWYWx1ZSlcbiAgICB9KTtcblxuICAgIHJldHVybiBoYW5kbGVCcmVha3BvaW50cyhwcm9wcywgcHJvcHMuYm9yZGVyUmFkaXVzLCBzdHlsZUZyb21Qcm9wVmFsdWUpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuYm9yZGVyUmFkaXVzLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB7XG4gIGJvcmRlclJhZGl1czogcmVzcG9uc2l2ZVByb3BUeXBlXG59IDoge307XG5ib3JkZXJSYWRpdXMuZmlsdGVyUHJvcHMgPSBbJ2JvcmRlclJhZGl1cyddO1xuY29uc3QgYm9yZGVycyA9IGNvbXBvc2UoYm9yZGVyLCBib3JkZXJUb3AsIGJvcmRlclJpZ2h0LCBib3JkZXJCb3R0b20sIGJvcmRlckxlZnQsIGJvcmRlckNvbG9yLCBib3JkZXJUb3BDb2xvciwgYm9yZGVyUmlnaHRDb2xvciwgYm9yZGVyQm90dG9tQ29sb3IsIGJvcmRlckxlZnRDb2xvciwgYm9yZGVyUmFkaXVzKTtcbmV4cG9ydCBkZWZhdWx0IGJvcmRlcnM7IiwiaW1wb3J0IHN0eWxlIGZyb20gJy4vc3R5bGUnO1xuaW1wb3J0IGNvbXBvc2UgZnJvbSAnLi9jb21wb3NlJztcbmV4cG9ydCBjb25zdCBkaXNwbGF5UHJpbnQgPSBzdHlsZSh7XG4gIHByb3A6ICdkaXNwbGF5UHJpbnQnLFxuICBjc3NQcm9wZXJ0eTogZmFsc2UsXG4gIHRyYW5zZm9ybTogdmFsdWUgPT4gKHtcbiAgICAnQG1lZGlhIHByaW50Jzoge1xuICAgICAgZGlzcGxheTogdmFsdWVcbiAgICB9XG4gIH0pXG59KTtcbmV4cG9ydCBjb25zdCBkaXNwbGF5UmF3ID0gc3R5bGUoe1xuICBwcm9wOiAnZGlzcGxheSdcbn0pO1xuZXhwb3J0IGNvbnN0IG92ZXJmbG93ID0gc3R5bGUoe1xuICBwcm9wOiAnb3ZlcmZsb3cnXG59KTtcbmV4cG9ydCBjb25zdCB0ZXh0T3ZlcmZsb3cgPSBzdHlsZSh7XG4gIHByb3A6ICd0ZXh0T3ZlcmZsb3cnXG59KTtcbmV4cG9ydCBjb25zdCB2aXNpYmlsaXR5ID0gc3R5bGUoe1xuICBwcm9wOiAndmlzaWJpbGl0eSdcbn0pO1xuZXhwb3J0IGNvbnN0IHdoaXRlU3BhY2UgPSBzdHlsZSh7XG4gIHByb3A6ICd3aGl0ZVNwYWNlJ1xufSk7XG5leHBvcnQgZGVmYXVsdCBjb21wb3NlKGRpc3BsYXlQcmludCwgZGlzcGxheVJhdywgb3ZlcmZsb3csIHRleHRPdmVyZmxvdywgdmlzaWJpbGl0eSwgd2hpdGVTcGFjZSk7IiwiaW1wb3J0IHN0eWxlIGZyb20gJy4vc3R5bGUnO1xuaW1wb3J0IGNvbXBvc2UgZnJvbSAnLi9jb21wb3NlJztcbmV4cG9ydCBjb25zdCBmbGV4QmFzaXMgPSBzdHlsZSh7XG4gIHByb3A6ICdmbGV4QmFzaXMnXG59KTtcbmV4cG9ydCBjb25zdCBmbGV4RGlyZWN0aW9uID0gc3R5bGUoe1xuICBwcm9wOiAnZmxleERpcmVjdGlvbidcbn0pO1xuZXhwb3J0IGNvbnN0IGZsZXhXcmFwID0gc3R5bGUoe1xuICBwcm9wOiAnZmxleFdyYXAnXG59KTtcbmV4cG9ydCBjb25zdCBqdXN0aWZ5Q29udGVudCA9IHN0eWxlKHtcbiAgcHJvcDogJ2p1c3RpZnlDb250ZW50J1xufSk7XG5leHBvcnQgY29uc3QgYWxpZ25JdGVtcyA9IHN0eWxlKHtcbiAgcHJvcDogJ2FsaWduSXRlbXMnXG59KTtcbmV4cG9ydCBjb25zdCBhbGlnbkNvbnRlbnQgPSBzdHlsZSh7XG4gIHByb3A6ICdhbGlnbkNvbnRlbnQnXG59KTtcbmV4cG9ydCBjb25zdCBvcmRlciA9IHN0eWxlKHtcbiAgcHJvcDogJ29yZGVyJ1xufSk7XG5leHBvcnQgY29uc3QgZmxleCA9IHN0eWxlKHtcbiAgcHJvcDogJ2ZsZXgnXG59KTtcbmV4cG9ydCBjb25zdCBmbGV4R3JvdyA9IHN0eWxlKHtcbiAgcHJvcDogJ2ZsZXhHcm93J1xufSk7XG5leHBvcnQgY29uc3QgZmxleFNocmluayA9IHN0eWxlKHtcbiAgcHJvcDogJ2ZsZXhTaHJpbmsnXG59KTtcbmV4cG9ydCBjb25zdCBhbGlnblNlbGYgPSBzdHlsZSh7XG4gIHByb3A6ICdhbGlnblNlbGYnXG59KTtcbmV4cG9ydCBjb25zdCBqdXN0aWZ5SXRlbXMgPSBzdHlsZSh7XG4gIHByb3A6ICdqdXN0aWZ5SXRlbXMnXG59KTtcbmV4cG9ydCBjb25zdCBqdXN0aWZ5U2VsZiA9IHN0eWxlKHtcbiAgcHJvcDogJ2p1c3RpZnlTZWxmJ1xufSk7XG5jb25zdCBmbGV4Ym94ID0gY29tcG9zZShmbGV4QmFzaXMsIGZsZXhEaXJlY3Rpb24sIGZsZXhXcmFwLCBqdXN0aWZ5Q29udGVudCwgYWxpZ25JdGVtcywgYWxpZ25Db250ZW50LCBvcmRlciwgZmxleCwgZmxleEdyb3csIGZsZXhTaHJpbmssIGFsaWduU2VsZiwganVzdGlmeUl0ZW1zLCBqdXN0aWZ5U2VsZik7XG5leHBvcnQgZGVmYXVsdCBmbGV4Ym94OyIsImltcG9ydCBzdHlsZSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBjb21wb3NlIGZyb20gJy4vY29tcG9zZSc7XG5pbXBvcnQgeyBjcmVhdGVVbmFyeVVuaXQsIGdldFZhbHVlIH0gZnJvbSAnLi9zcGFjaW5nJztcbmltcG9ydCB7IGhhbmRsZUJyZWFrcG9pbnRzIH0gZnJvbSAnLi9icmVha3BvaW50cyc7XG5pbXBvcnQgcmVzcG9uc2l2ZVByb3BUeXBlIGZyb20gJy4vcmVzcG9uc2l2ZVByb3BUeXBlJztcbmV4cG9ydCBjb25zdCBnYXAgPSBwcm9wcyA9PiB7XG4gIGlmIChwcm9wcy5nYXAgIT09IHVuZGVmaW5lZCAmJiBwcm9wcy5nYXAgIT09IG51bGwpIHtcbiAgICBjb25zdCB0cmFuc2Zvcm1lciA9IGNyZWF0ZVVuYXJ5VW5pdChwcm9wcy50aGVtZSwgJ3NwYWNpbmcnLCA4LCAnZ2FwJyk7XG5cbiAgICBjb25zdCBzdHlsZUZyb21Qcm9wVmFsdWUgPSBwcm9wVmFsdWUgPT4gKHtcbiAgICAgIGdhcDogZ2V0VmFsdWUodHJhbnNmb3JtZXIsIHByb3BWYWx1ZSlcbiAgICB9KTtcblxuICAgIHJldHVybiBoYW5kbGVCcmVha3BvaW50cyhwcm9wcywgcHJvcHMuZ2FwLCBzdHlsZUZyb21Qcm9wVmFsdWUpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuZ2FwLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB7XG4gIGdhcDogcmVzcG9uc2l2ZVByb3BUeXBlXG59IDoge307XG5nYXAuZmlsdGVyUHJvcHMgPSBbJ2dhcCddO1xuZXhwb3J0IGNvbnN0IGNvbHVtbkdhcCA9IHByb3BzID0+IHtcbiAgaWYgKHByb3BzLmNvbHVtbkdhcCAhPT0gdW5kZWZpbmVkICYmIHByb3BzLmNvbHVtbkdhcCAhPT0gbnVsbCkge1xuICAgIGNvbnN0IHRyYW5zZm9ybWVyID0gY3JlYXRlVW5hcnlVbml0KHByb3BzLnRoZW1lLCAnc3BhY2luZycsIDgsICdjb2x1bW5HYXAnKTtcblxuICAgIGNvbnN0IHN0eWxlRnJvbVByb3BWYWx1ZSA9IHByb3BWYWx1ZSA9PiAoe1xuICAgICAgY29sdW1uR2FwOiBnZXRWYWx1ZSh0cmFuc2Zvcm1lciwgcHJvcFZhbHVlKVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGhhbmRsZUJyZWFrcG9pbnRzKHByb3BzLCBwcm9wcy5jb2x1bW5HYXAsIHN0eWxlRnJvbVByb3BWYWx1ZSk7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5jb2x1bW5HYXAucHJvcFR5cGVzID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHtcbiAgY29sdW1uR2FwOiByZXNwb25zaXZlUHJvcFR5cGVcbn0gOiB7fTtcbmNvbHVtbkdhcC5maWx0ZXJQcm9wcyA9IFsnY29sdW1uR2FwJ107XG5leHBvcnQgY29uc3Qgcm93R2FwID0gcHJvcHMgPT4ge1xuICBpZiAocHJvcHMucm93R2FwICE9PSB1bmRlZmluZWQgJiYgcHJvcHMucm93R2FwICE9PSBudWxsKSB7XG4gICAgY29uc3QgdHJhbnNmb3JtZXIgPSBjcmVhdGVVbmFyeVVuaXQocHJvcHMudGhlbWUsICdzcGFjaW5nJywgOCwgJ3Jvd0dhcCcpO1xuXG4gICAgY29uc3Qgc3R5bGVGcm9tUHJvcFZhbHVlID0gcHJvcFZhbHVlID0+ICh7XG4gICAgICByb3dHYXA6IGdldFZhbHVlKHRyYW5zZm9ybWVyLCBwcm9wVmFsdWUpXG4gICAgfSk7XG5cbiAgICByZXR1cm4gaGFuZGxlQnJlYWtwb2ludHMocHJvcHMsIHByb3BzLnJvd0dhcCwgc3R5bGVGcm9tUHJvcFZhbHVlKTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufTtcbnJvd0dhcC5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8ge1xuICByb3dHYXA6IHJlc3BvbnNpdmVQcm9wVHlwZVxufSA6IHt9O1xucm93R2FwLmZpbHRlclByb3BzID0gWydyb3dHYXAnXTtcbmV4cG9ydCBjb25zdCBncmlkQ29sdW1uID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZENvbHVtbidcbn0pO1xuZXhwb3J0IGNvbnN0IGdyaWRSb3cgPSBzdHlsZSh7XG4gIHByb3A6ICdncmlkUm93J1xufSk7XG5leHBvcnQgY29uc3QgZ3JpZEF1dG9GbG93ID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZEF1dG9GbG93J1xufSk7XG5leHBvcnQgY29uc3QgZ3JpZEF1dG9Db2x1bW5zID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZEF1dG9Db2x1bW5zJ1xufSk7XG5leHBvcnQgY29uc3QgZ3JpZEF1dG9Sb3dzID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZEF1dG9Sb3dzJ1xufSk7XG5leHBvcnQgY29uc3QgZ3JpZFRlbXBsYXRlQ29sdW1ucyA9IHN0eWxlKHtcbiAgcHJvcDogJ2dyaWRUZW1wbGF0ZUNvbHVtbnMnXG59KTtcbmV4cG9ydCBjb25zdCBncmlkVGVtcGxhdGVSb3dzID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZFRlbXBsYXRlUm93cydcbn0pO1xuZXhwb3J0IGNvbnN0IGdyaWRUZW1wbGF0ZUFyZWFzID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZFRlbXBsYXRlQXJlYXMnXG59KTtcbmV4cG9ydCBjb25zdCBncmlkQXJlYSA9IHN0eWxlKHtcbiAgcHJvcDogJ2dyaWRBcmVhJ1xufSk7XG5jb25zdCBncmlkID0gY29tcG9zZShnYXAsIGNvbHVtbkdhcCwgcm93R2FwLCBncmlkQ29sdW1uLCBncmlkUm93LCBncmlkQXV0b0Zsb3csIGdyaWRBdXRvQ29sdW1ucywgZ3JpZEF1dG9Sb3dzLCBncmlkVGVtcGxhdGVDb2x1bW5zLCBncmlkVGVtcGxhdGVSb3dzLCBncmlkVGVtcGxhdGVBcmVhcywgZ3JpZEFyZWEpO1xuZXhwb3J0IGRlZmF1bHQgZ3JpZDsiLCJpbXBvcnQgc3R5bGUgZnJvbSAnLi9zdHlsZSc7XG5pbXBvcnQgY29tcG9zZSBmcm9tICcuL2NvbXBvc2UnO1xuZXhwb3J0IGNvbnN0IHBvc2l0aW9uID0gc3R5bGUoe1xuICBwcm9wOiAncG9zaXRpb24nXG59KTtcbmV4cG9ydCBjb25zdCB6SW5kZXggPSBzdHlsZSh7XG4gIHByb3A6ICd6SW5kZXgnLFxuICB0aGVtZUtleTogJ3pJbmRleCdcbn0pO1xuZXhwb3J0IGNvbnN0IHRvcCA9IHN0eWxlKHtcbiAgcHJvcDogJ3RvcCdcbn0pO1xuZXhwb3J0IGNvbnN0IHJpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAncmlnaHQnXG59KTtcbmV4cG9ydCBjb25zdCBib3R0b20gPSBzdHlsZSh7XG4gIHByb3A6ICdib3R0b20nXG59KTtcbmV4cG9ydCBjb25zdCBsZWZ0ID0gc3R5bGUoe1xuICBwcm9wOiAnbGVmdCdcbn0pO1xuZXhwb3J0IGRlZmF1bHQgY29tcG9zZShwb3NpdGlvbiwgekluZGV4LCB0b3AsIHJpZ2h0LCBib3R0b20sIGxlZnQpOyIsImltcG9ydCBzdHlsZSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBjb21wb3NlIGZyb20gJy4vY29tcG9zZSc7XG5leHBvcnQgY29uc3QgY29sb3IgPSBzdHlsZSh7XG4gIHByb3A6ICdjb2xvcicsXG4gIHRoZW1lS2V5OiAncGFsZXR0ZSdcbn0pO1xuZXhwb3J0IGNvbnN0IGJnY29sb3IgPSBzdHlsZSh7XG4gIHByb3A6ICdiZ2NvbG9yJyxcbiAgY3NzUHJvcGVydHk6ICdiYWNrZ3JvdW5kQ29sb3InLFxuICB0aGVtZUtleTogJ3BhbGV0dGUnXG59KTtcbmV4cG9ydCBjb25zdCBiYWNrZ3JvdW5kQ29sb3IgPSBzdHlsZSh7XG4gIHByb3A6ICdiYWNrZ3JvdW5kQ29sb3InLFxuICB0aGVtZUtleTogJ3BhbGV0dGUnXG59KTtcbmNvbnN0IHBhbGV0dGUgPSBjb21wb3NlKGNvbG9yLCBiZ2NvbG9yLCBiYWNrZ3JvdW5kQ29sb3IpO1xuZXhwb3J0IGRlZmF1bHQgcGFsZXR0ZTsiLCJpbXBvcnQgc3R5bGUgZnJvbSAnLi9zdHlsZSc7XG5jb25zdCBib3hTaGFkb3cgPSBzdHlsZSh7XG4gIHByb3A6ICdib3hTaGFkb3cnLFxuICB0aGVtZUtleTogJ3NoYWRvd3MnXG59KTtcbmV4cG9ydCBkZWZhdWx0IGJveFNoYWRvdzsiLCJpbXBvcnQgc3R5bGUgZnJvbSAnLi9zdHlsZSc7XG5pbXBvcnQgY29tcG9zZSBmcm9tICcuL2NvbXBvc2UnO1xuaW1wb3J0IHsgaGFuZGxlQnJlYWtwb2ludHMsIHZhbHVlcyBhcyBicmVha3BvaW50c1ZhbHVlcyB9IGZyb20gJy4vYnJlYWtwb2ludHMnO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm0odmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIDw9IDEgJiYgdmFsdWUgIT09IDAgPyBgJHt2YWx1ZSAqIDEwMH0lYCA6IHZhbHVlO1xufVxuXG5leHBvcnQgY29uc3Qgd2lkdGggPSBzdHlsZSh7XG4gIHByb3A6ICd3aWR0aCcsXG4gIHRyYW5zZm9ybVxufSk7XG5leHBvcnQgY29uc3QgbWF4V2lkdGggPSBwcm9wcyA9PiB7XG4gIGlmIChwcm9wcy5tYXhXaWR0aCAhPT0gdW5kZWZpbmVkICYmIHByb3BzLm1heFdpZHRoICE9PSBudWxsKSB7XG4gICAgY29uc3Qgc3R5bGVGcm9tUHJvcFZhbHVlID0gcHJvcFZhbHVlID0+IHtcbiAgICAgIHZhciBfcHJvcHMkdGhlbWUsIF9wcm9wcyR0aGVtZSRicmVha3BvaSwgX3Byb3BzJHRoZW1lJGJyZWFrcG9pMjtcblxuICAgICAgY29uc3QgYnJlYWtwb2ludCA9ICgoX3Byb3BzJHRoZW1lID0gcHJvcHMudGhlbWUpID09IG51bGwgPyB2b2lkIDAgOiAoX3Byb3BzJHRoZW1lJGJyZWFrcG9pID0gX3Byb3BzJHRoZW1lLmJyZWFrcG9pbnRzKSA9PSBudWxsID8gdm9pZCAwIDogKF9wcm9wcyR0aGVtZSRicmVha3BvaTIgPSBfcHJvcHMkdGhlbWUkYnJlYWtwb2kudmFsdWVzKSA9PSBudWxsID8gdm9pZCAwIDogX3Byb3BzJHRoZW1lJGJyZWFrcG9pMltwcm9wVmFsdWVdKSB8fCBicmVha3BvaW50c1ZhbHVlc1twcm9wVmFsdWVdO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWF4V2lkdGg6IGJyZWFrcG9pbnQgfHwgdHJhbnNmb3JtKHByb3BWYWx1ZSlcbiAgICAgIH07XG4gICAgfTtcblxuICAgIHJldHVybiBoYW5kbGVCcmVha3BvaW50cyhwcm9wcywgcHJvcHMubWF4V2lkdGgsIHN0eWxlRnJvbVByb3BWYWx1ZSk7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5tYXhXaWR0aC5maWx0ZXJQcm9wcyA9IFsnbWF4V2lkdGgnXTtcbmV4cG9ydCBjb25zdCBtaW5XaWR0aCA9IHN0eWxlKHtcbiAgcHJvcDogJ21pbldpZHRoJyxcbiAgdHJhbnNmb3JtXG59KTtcbmV4cG9ydCBjb25zdCBoZWlnaHQgPSBzdHlsZSh7XG4gIHByb3A6ICdoZWlnaHQnLFxuICB0cmFuc2Zvcm1cbn0pO1xuZXhwb3J0IGNvbnN0IG1heEhlaWdodCA9IHN0eWxlKHtcbiAgcHJvcDogJ21heEhlaWdodCcsXG4gIHRyYW5zZm9ybVxufSk7XG5leHBvcnQgY29uc3QgbWluSGVpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAnbWluSGVpZ2h0JyxcbiAgdHJhbnNmb3JtXG59KTtcbmV4cG9ydCBjb25zdCBzaXplV2lkdGggPSBzdHlsZSh7XG4gIHByb3A6ICdzaXplJyxcbiAgY3NzUHJvcGVydHk6ICd3aWR0aCcsXG4gIHRyYW5zZm9ybVxufSk7XG5leHBvcnQgY29uc3Qgc2l6ZUhlaWdodCA9IHN0eWxlKHtcbiAgcHJvcDogJ3NpemUnLFxuICBjc3NQcm9wZXJ0eTogJ2hlaWdodCcsXG4gIHRyYW5zZm9ybVxufSk7XG5leHBvcnQgY29uc3QgYm94U2l6aW5nID0gc3R5bGUoe1xuICBwcm9wOiAnYm94U2l6aW5nJ1xufSk7XG5jb25zdCBzaXppbmcgPSBjb21wb3NlKHdpZHRoLCBtYXhXaWR0aCwgbWluV2lkdGgsIGhlaWdodCwgbWF4SGVpZ2h0LCBtaW5IZWlnaHQsIGJveFNpemluZyk7XG5leHBvcnQgZGVmYXVsdCBzaXppbmc7IiwiaW1wb3J0IHN0eWxlIGZyb20gJy4vc3R5bGUnO1xuaW1wb3J0IGNvbXBvc2UgZnJvbSAnLi9jb21wb3NlJztcbmV4cG9ydCBjb25zdCBmb250RmFtaWx5ID0gc3R5bGUoe1xuICBwcm9wOiAnZm9udEZhbWlseScsXG4gIHRoZW1lS2V5OiAndHlwb2dyYXBoeSdcbn0pO1xuZXhwb3J0IGNvbnN0IGZvbnRTaXplID0gc3R5bGUoe1xuICBwcm9wOiAnZm9udFNpemUnLFxuICB0aGVtZUtleTogJ3R5cG9ncmFwaHknXG59KTtcbmV4cG9ydCBjb25zdCBmb250U3R5bGUgPSBzdHlsZSh7XG4gIHByb3A6ICdmb250U3R5bGUnLFxuICB0aGVtZUtleTogJ3R5cG9ncmFwaHknXG59KTtcbmV4cG9ydCBjb25zdCBmb250V2VpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAnZm9udFdlaWdodCcsXG4gIHRoZW1lS2V5OiAndHlwb2dyYXBoeSdcbn0pO1xuZXhwb3J0IGNvbnN0IGxldHRlclNwYWNpbmcgPSBzdHlsZSh7XG4gIHByb3A6ICdsZXR0ZXJTcGFjaW5nJ1xufSk7XG5leHBvcnQgY29uc3QgdGV4dFRyYW5zZm9ybSA9IHN0eWxlKHtcbiAgcHJvcDogJ3RleHRUcmFuc2Zvcm0nXG59KTtcbmV4cG9ydCBjb25zdCBsaW5lSGVpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAnbGluZUhlaWdodCdcbn0pO1xuZXhwb3J0IGNvbnN0IHRleHRBbGlnbiA9IHN0eWxlKHtcbiAgcHJvcDogJ3RleHRBbGlnbidcbn0pO1xuZXhwb3J0IGNvbnN0IHR5cG9ncmFwaHlWYXJpYW50ID0gc3R5bGUoe1xuICBwcm9wOiAndHlwb2dyYXBoeScsXG4gIGNzc1Byb3BlcnR5OiBmYWxzZSxcbiAgdGhlbWVLZXk6ICd0eXBvZ3JhcGh5J1xufSk7XG5jb25zdCB0eXBvZ3JhcGh5ID0gY29tcG9zZSh0eXBvZ3JhcGh5VmFyaWFudCwgZm9udEZhbWlseSwgZm9udFNpemUsIGZvbnRTdHlsZSwgZm9udFdlaWdodCwgbGV0dGVyU3BhY2luZywgbGluZUhlaWdodCwgdGV4dEFsaWduLCB0ZXh0VHJhbnNmb3JtKTtcbmV4cG9ydCBkZWZhdWx0IHR5cG9ncmFwaHk7IiwiaW1wb3J0IGJvcmRlcnMgZnJvbSAnLi9ib3JkZXJzJztcbmltcG9ydCBkaXNwbGF5IGZyb20gJy4vZGlzcGxheSc7XG5pbXBvcnQgZmxleGJveCBmcm9tICcuL2ZsZXhib3gnO1xuaW1wb3J0IGdyaWQgZnJvbSAnLi9ncmlkJztcbmltcG9ydCBwb3NpdGlvbnMgZnJvbSAnLi9wb3NpdGlvbnMnO1xuaW1wb3J0IHBhbGV0dGUgZnJvbSAnLi9wYWxldHRlJztcbmltcG9ydCBzaGFkb3dzIGZyb20gJy4vc2hhZG93cyc7XG5pbXBvcnQgc2l6aW5nIGZyb20gJy4vc2l6aW5nJztcbmltcG9ydCBzcGFjaW5nIGZyb20gJy4vc3BhY2luZyc7XG5pbXBvcnQgdHlwb2dyYXBoeSBmcm9tICcuL3R5cG9ncmFwaHknO1xuY29uc3QgZmlsdGVyUHJvcHNNYXBwaW5nID0ge1xuICBib3JkZXJzOiBib3JkZXJzLmZpbHRlclByb3BzLFxuICBkaXNwbGF5OiBkaXNwbGF5LmZpbHRlclByb3BzLFxuICBmbGV4Ym94OiBmbGV4Ym94LmZpbHRlclByb3BzLFxuICBncmlkOiBncmlkLmZpbHRlclByb3BzLFxuICBwb3NpdGlvbnM6IHBvc2l0aW9ucy5maWx0ZXJQcm9wcyxcbiAgcGFsZXR0ZTogcGFsZXR0ZS5maWx0ZXJQcm9wcyxcbiAgc2hhZG93czogc2hhZG93cy5maWx0ZXJQcm9wcyxcbiAgc2l6aW5nOiBzaXppbmcuZmlsdGVyUHJvcHMsXG4gIHNwYWNpbmc6IHNwYWNpbmcuZmlsdGVyUHJvcHMsXG4gIHR5cG9ncmFwaHk6IHR5cG9ncmFwaHkuZmlsdGVyUHJvcHNcbn07XG5leHBvcnQgY29uc3Qgc3R5bGVGdW5jdGlvbk1hcHBpbmcgPSB7XG4gIGJvcmRlcnMsXG4gIGRpc3BsYXksXG4gIGZsZXhib3gsXG4gIGdyaWQsXG4gIHBvc2l0aW9ucyxcbiAgcGFsZXR0ZSxcbiAgc2hhZG93cyxcbiAgc2l6aW5nLFxuICBzcGFjaW5nLFxuICB0eXBvZ3JhcGh5XG59O1xuZXhwb3J0IGNvbnN0IHByb3BUb1N0eWxlRnVuY3Rpb24gPSBPYmplY3Qua2V5cyhmaWx0ZXJQcm9wc01hcHBpbmcpLnJlZHVjZSgoYWNjLCBzdHlsZUZuTmFtZSkgPT4ge1xuICBmaWx0ZXJQcm9wc01hcHBpbmdbc3R5bGVGbk5hbWVdLmZvckVhY2gocHJvcE5hbWUgPT4ge1xuICAgIGFjY1twcm9wTmFtZV0gPSBzdHlsZUZ1bmN0aW9uTWFwcGluZ1tzdHlsZUZuTmFtZV07XG4gIH0pO1xuICByZXR1cm4gYWNjO1xufSwge30pO1xuXG5mdW5jdGlvbiBnZXRUaGVtZVZhbHVlKHByb3AsIHZhbHVlLCB0aGVtZSkge1xuICBjb25zdCBpbnB1dFByb3BzID0ge1xuICAgIFtwcm9wXTogdmFsdWUsXG4gICAgdGhlbWVcbiAgfTtcbiAgY29uc3Qgc3R5bGVGdW5jdGlvbiA9IHByb3BUb1N0eWxlRnVuY3Rpb25bcHJvcF07XG4gIHJldHVybiBzdHlsZUZ1bmN0aW9uID8gc3R5bGVGdW5jdGlvbihpbnB1dFByb3BzKSA6IHtcbiAgICBbcHJvcF06IHZhbHVlXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldFRoZW1lVmFsdWU7IiwiaW1wb3J0IG1lcmdlIGZyb20gJy4uL21lcmdlJztcbmltcG9ydCB7IHN0eWxlRnVuY3Rpb25NYXBwaW5nIGFzIGRlZmF1bHRTdHlsZUZ1bmN0aW9uTWFwcGluZyB9IGZyb20gJy4uL2dldFRoZW1lVmFsdWUnO1xuaW1wb3J0IHsgaGFuZGxlQnJlYWtwb2ludHMsIGNyZWF0ZUVtcHR5QnJlYWtwb2ludE9iamVjdCwgcmVtb3ZlVW51c2VkQnJlYWtwb2ludHMgfSBmcm9tICcuLi9icmVha3BvaW50cyc7XG5cbmZ1bmN0aW9uIG9iamVjdHNIYXZlU2FtZUtleXMoLi4ub2JqZWN0cykge1xuICBjb25zdCBhbGxLZXlzID0gb2JqZWN0cy5yZWR1Y2UoKGtleXMsIG9iamVjdCkgPT4ga2V5cy5jb25jYXQoT2JqZWN0LmtleXMob2JqZWN0KSksIFtdKTtcbiAgY29uc3QgdW5pb24gPSBuZXcgU2V0KGFsbEtleXMpO1xuICByZXR1cm4gb2JqZWN0cy5ldmVyeShvYmplY3QgPT4gdW5pb24uc2l6ZSA9PT0gT2JqZWN0LmtleXMob2JqZWN0KS5sZW5ndGgpO1xufVxuXG5mdW5jdGlvbiBjYWxsSWZGbihtYXliZUZuLCBhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBtYXliZUZuID09PSAnZnVuY3Rpb24nID8gbWF5YmVGbihhcmcpIDogbWF5YmVGbjtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuXG5cbmV4cG9ydCBmdW5jdGlvbiB1bnN0YWJsZV9jcmVhdGVTdHlsZUZ1bmN0aW9uU3goc3R5bGVGdW5jdGlvbk1hcHBpbmcgPSBkZWZhdWx0U3R5bGVGdW5jdGlvbk1hcHBpbmcpIHtcbiAgY29uc3QgcHJvcFRvU3R5bGVGdW5jdGlvbiA9IE9iamVjdC5rZXlzKHN0eWxlRnVuY3Rpb25NYXBwaW5nKS5yZWR1Y2UoKGFjYywgc3R5bGVGbk5hbWUpID0+IHtcbiAgICBzdHlsZUZ1bmN0aW9uTWFwcGluZ1tzdHlsZUZuTmFtZV0uZmlsdGVyUHJvcHMuZm9yRWFjaChwcm9wTmFtZSA9PiB7XG4gICAgICBhY2NbcHJvcE5hbWVdID0gc3R5bGVGdW5jdGlvbk1hcHBpbmdbc3R5bGVGbk5hbWVdO1xuICAgIH0pO1xuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcblxuICBmdW5jdGlvbiBnZXRUaGVtZVZhbHVlKHByb3AsIHZhbHVlLCB0aGVtZSkge1xuICAgIGNvbnN0IGlucHV0UHJvcHMgPSB7XG4gICAgICBbcHJvcF06IHZhbHVlLFxuICAgICAgdGhlbWVcbiAgICB9O1xuICAgIGNvbnN0IHN0eWxlRnVuY3Rpb24gPSBwcm9wVG9TdHlsZUZ1bmN0aW9uW3Byb3BdO1xuICAgIHJldHVybiBzdHlsZUZ1bmN0aW9uID8gc3R5bGVGdW5jdGlvbihpbnB1dFByb3BzKSA6IHtcbiAgICAgIFtwcm9wXTogdmFsdWVcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gc3R5bGVGdW5jdGlvblN4KHByb3BzKSB7XG4gICAgY29uc3Qge1xuICAgICAgc3gsXG4gICAgICB0aGVtZSA9IHt9XG4gICAgfSA9IHByb3BzIHx8IHt9O1xuXG4gICAgaWYgKCFzeCkge1xuICAgICAgcmV0dXJuIG51bGw7IC8vIEVtb3Rpb24gJiBzdHlsZWQtY29tcG9uZW50cyB3aWxsIG5lZ2xlY3QgbnVsbFxuICAgIH1cbiAgICAvKlxuICAgICAqIFJlY2VpdmUgYHN4SW5wdXRgIGFzIG9iamVjdCBvciBjYWxsYmFja1xuICAgICAqIGFuZCB0aGVuIHJlY3Vyc2l2ZWx5IGNoZWNrIGtleXMgJiB2YWx1ZXMgdG8gY3JlYXRlIG1lZGlhIHF1ZXJ5IG9iamVjdCBzdHlsZXMuXG4gICAgICogKHRoZSByZXN1bHQgd2lsbCBiZSB1c2VkIGluIGBzdHlsZWRgKVxuICAgICAqL1xuXG5cbiAgICBmdW5jdGlvbiB0cmF2ZXJzZShzeElucHV0KSB7XG4gICAgICBsZXQgc3hPYmplY3QgPSBzeElucHV0O1xuXG4gICAgICBpZiAodHlwZW9mIHN4SW5wdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgc3hPYmplY3QgPSBzeElucHV0KHRoZW1lKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHN4SW5wdXQgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIC8vIHZhbHVlXG4gICAgICAgIHJldHVybiBzeElucHV0O1xuICAgICAgfVxuXG4gICAgICBpZiAoIXN4T2JqZWN0KSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBlbXB0eUJyZWFrcG9pbnRzID0gY3JlYXRlRW1wdHlCcmVha3BvaW50T2JqZWN0KHRoZW1lLmJyZWFrcG9pbnRzKTtcbiAgICAgIGNvbnN0IGJyZWFrcG9pbnRzS2V5cyA9IE9iamVjdC5rZXlzKGVtcHR5QnJlYWtwb2ludHMpO1xuICAgICAgbGV0IGNzcyA9IGVtcHR5QnJlYWtwb2ludHM7XG4gICAgICBPYmplY3Qua2V5cyhzeE9iamVjdCkuZm9yRWFjaChzdHlsZUtleSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gY2FsbElmRm4oc3hPYmplY3Rbc3R5bGVLZXldLCB0aGVtZSk7XG5cbiAgICAgICAgaWYgKHZhbHVlICE9PSBudWxsICYmIHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKHByb3BUb1N0eWxlRnVuY3Rpb25bc3R5bGVLZXldKSB7XG4gICAgICAgICAgICAgIGNzcyA9IG1lcmdlKGNzcywgZ2V0VGhlbWVWYWx1ZShzdHlsZUtleSwgdmFsdWUsIHRoZW1lKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb25zdCBicmVha3BvaW50c1ZhbHVlcyA9IGhhbmRsZUJyZWFrcG9pbnRzKHtcbiAgICAgICAgICAgICAgICB0aGVtZVxuICAgICAgICAgICAgICB9LCB2YWx1ZSwgeCA9PiAoe1xuICAgICAgICAgICAgICAgIFtzdHlsZUtleV06IHhcbiAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgIGlmIChvYmplY3RzSGF2ZVNhbWVLZXlzKGJyZWFrcG9pbnRzVmFsdWVzLCB2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBjc3Nbc3R5bGVLZXldID0gc3R5bGVGdW5jdGlvblN4KHtcbiAgICAgICAgICAgICAgICAgIHN4OiB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgIHRoZW1lXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY3NzID0gbWVyZ2UoY3NzLCBicmVha3BvaW50c1ZhbHVlcyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY3NzID0gbWVyZ2UoY3NzLCBnZXRUaGVtZVZhbHVlKHN0eWxlS2V5LCB2YWx1ZSwgdGhlbWUpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlbW92ZVVudXNlZEJyZWFrcG9pbnRzKGJyZWFrcG9pbnRzS2V5cywgY3NzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShzeCkgPyBzeC5tYXAodHJhdmVyc2UpIDogdHJhdmVyc2Uoc3gpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlRnVuY3Rpb25TeDtcbn1cbmNvbnN0IHN0eWxlRnVuY3Rpb25TeCA9IHVuc3RhYmxlX2NyZWF0ZVN0eWxlRnVuY3Rpb25TeCgpO1xuc3R5bGVGdW5jdGlvblN4LmZpbHRlclByb3BzID0gWydzeCddO1xuZXhwb3J0IGRlZmF1bHQgc3R5bGVGdW5jdGlvblN4OyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJuYW1lXCIsIFwic2xvdFwiLCBcInNraXBWYXJpYW50c1Jlc29sdmVyXCIsIFwic2tpcFN4XCIsIFwib3ZlcnJpZGVzUmVzb2x2ZXJcIl0sXG4gICAgICBfZXhjbHVkZWQyID0gW1widGhlbWVcIl0sXG4gICAgICBfZXhjbHVkZWQzID0gW1widGhlbWVcIl07XG5pbXBvcnQgc3R5bGVkRW5naW5lU3R5bGVkIGZyb20gJ0BtdWkvc3R5bGVkLWVuZ2luZSc7XG5pbXBvcnQgeyBnZXREaXNwbGF5TmFtZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRoZW1lIGZyb20gJy4vY3JlYXRlVGhlbWUnO1xuaW1wb3J0IHByb3BzVG9DbGFzc0tleSBmcm9tICcuL3Byb3BzVG9DbGFzc0tleSc7XG5pbXBvcnQgZGVmYXVsdFN0eWxlRnVuY3Rpb25TeCBmcm9tICcuL3N0eWxlRnVuY3Rpb25TeCc7XG5cbmZ1bmN0aW9uIGlzRW1wdHkob2JqKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gMDtcbn1cblxuY29uc3QgZ2V0U3R5bGVPdmVycmlkZXMgPSAobmFtZSwgdGhlbWUpID0+IHtcbiAgaWYgKHRoZW1lLmNvbXBvbmVudHMgJiYgdGhlbWUuY29tcG9uZW50c1tuYW1lXSAmJiB0aGVtZS5jb21wb25lbnRzW25hbWVdLnN0eWxlT3ZlcnJpZGVzKSB7XG4gICAgcmV0dXJuIHRoZW1lLmNvbXBvbmVudHNbbmFtZV0uc3R5bGVPdmVycmlkZXM7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5cbmNvbnN0IGdldFZhcmlhbnRTdHlsZXMgPSAobmFtZSwgdGhlbWUpID0+IHtcbiAgbGV0IHZhcmlhbnRzID0gW107XG5cbiAgaWYgKHRoZW1lICYmIHRoZW1lLmNvbXBvbmVudHMgJiYgdGhlbWUuY29tcG9uZW50c1tuYW1lXSAmJiB0aGVtZS5jb21wb25lbnRzW25hbWVdLnZhcmlhbnRzKSB7XG4gICAgdmFyaWFudHMgPSB0aGVtZS5jb21wb25lbnRzW25hbWVdLnZhcmlhbnRzO1xuICB9XG5cbiAgY29uc3QgdmFyaWFudHNTdHlsZXMgPSB7fTtcbiAgdmFyaWFudHMuZm9yRWFjaChkZWZpbml0aW9uID0+IHtcbiAgICBjb25zdCBrZXkgPSBwcm9wc1RvQ2xhc3NLZXkoZGVmaW5pdGlvbi5wcm9wcyk7XG4gICAgdmFyaWFudHNTdHlsZXNba2V5XSA9IGRlZmluaXRpb24uc3R5bGU7XG4gIH0pO1xuICByZXR1cm4gdmFyaWFudHNTdHlsZXM7XG59O1xuXG5jb25zdCB2YXJpYW50c1Jlc29sdmVyID0gKHByb3BzLCBzdHlsZXMsIHRoZW1lLCBuYW1lKSA9PiB7XG4gIHZhciBfdGhlbWUkY29tcG9uZW50cywgX3RoZW1lJGNvbXBvbmVudHMkbmFtO1xuXG4gIGNvbnN0IHtcbiAgICBvd25lclN0YXRlID0ge31cbiAgfSA9IHByb3BzO1xuICBjb25zdCB2YXJpYW50c1N0eWxlcyA9IFtdO1xuICBjb25zdCB0aGVtZVZhcmlhbnRzID0gdGhlbWUgPT0gbnVsbCA/IHZvaWQgMCA6IChfdGhlbWUkY29tcG9uZW50cyA9IHRoZW1lLmNvbXBvbmVudHMpID09IG51bGwgPyB2b2lkIDAgOiAoX3RoZW1lJGNvbXBvbmVudHMkbmFtID0gX3RoZW1lJGNvbXBvbmVudHNbbmFtZV0pID09IG51bGwgPyB2b2lkIDAgOiBfdGhlbWUkY29tcG9uZW50cyRuYW0udmFyaWFudHM7XG5cbiAgaWYgKHRoZW1lVmFyaWFudHMpIHtcbiAgICB0aGVtZVZhcmlhbnRzLmZvckVhY2godGhlbWVWYXJpYW50ID0+IHtcbiAgICAgIGxldCBpc01hdGNoID0gdHJ1ZTtcbiAgICAgIE9iamVjdC5rZXlzKHRoZW1lVmFyaWFudC5wcm9wcykuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICBpZiAob3duZXJTdGF0ZVtrZXldICE9PSB0aGVtZVZhcmlhbnQucHJvcHNba2V5XSAmJiBwcm9wc1trZXldICE9PSB0aGVtZVZhcmlhbnQucHJvcHNba2V5XSkge1xuICAgICAgICAgIGlzTWF0Y2ggPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChpc01hdGNoKSB7XG4gICAgICAgIHZhcmlhbnRzU3R5bGVzLnB1c2goc3R5bGVzW3Byb3BzVG9DbGFzc0tleSh0aGVtZVZhcmlhbnQucHJvcHMpXSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gdmFyaWFudHNTdHlsZXM7XG59OyAvLyBVcGRhdGUgL3N5c3RlbS9zdHlsZWQvI2FwaSBpbiBjYXNlIGlmIHRoaXMgY2hhbmdlc1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBzaG91bGRGb3J3YXJkUHJvcChwcm9wKSB7XG4gIHJldHVybiBwcm9wICE9PSAnb3duZXJTdGF0ZScgJiYgcHJvcCAhPT0gJ3RoZW1lJyAmJiBwcm9wICE9PSAnc3gnICYmIHByb3AgIT09ICdhcyc7XG59XG5leHBvcnQgY29uc3Qgc3lzdGVtRGVmYXVsdFRoZW1lID0gY3JlYXRlVGhlbWUoKTtcblxuY29uc3QgbG93ZXJjYXNlRmlyc3RMZXR0ZXIgPSBzdHJpbmcgPT4ge1xuICByZXR1cm4gc3RyaW5nLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsgc3RyaW5nLnNsaWNlKDEpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlU3R5bGVkKGlucHV0ID0ge30pIHtcbiAgY29uc3Qge1xuICAgIGRlZmF1bHRUaGVtZSA9IHN5c3RlbURlZmF1bHRUaGVtZSxcbiAgICByb290U2hvdWxkRm9yd2FyZFByb3AgPSBzaG91bGRGb3J3YXJkUHJvcCxcbiAgICBzbG90U2hvdWxkRm9yd2FyZFByb3AgPSBzaG91bGRGb3J3YXJkUHJvcCxcbiAgICBzdHlsZUZ1bmN0aW9uU3ggPSBkZWZhdWx0U3R5bGVGdW5jdGlvblN4XG4gIH0gPSBpbnB1dDtcbiAgcmV0dXJuICh0YWcsIGlucHV0T3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgbmFtZTogY29tcG9uZW50TmFtZSxcbiAgICAgIHNsb3Q6IGNvbXBvbmVudFNsb3QsXG4gICAgICBza2lwVmFyaWFudHNSZXNvbHZlcjogaW5wdXRTa2lwVmFyaWFudHNSZXNvbHZlcixcbiAgICAgIHNraXBTeDogaW5wdXRTa2lwU3gsXG4gICAgICBvdmVycmlkZXNSZXNvbHZlclxuICAgIH0gPSBpbnB1dE9wdGlvbnMsXG4gICAgICAgICAgb3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKGlucHV0T3B0aW9ucywgX2V4Y2x1ZGVkKTsgLy8gaWYgc2tpcFZhcmlhbnRzUmVzb2x2ZXIgb3B0aW9uIGlzIGRlZmluZWQsIHRha2UgdGhlIHZhbHVlLCBvdGhlcndpc2UsIHRydWUgZm9yIHJvb3QgYW5kIGZhbHNlIGZvciBvdGhlciBzbG90cy5cblxuXG4gICAgY29uc3Qgc2tpcFZhcmlhbnRzUmVzb2x2ZXIgPSBpbnB1dFNraXBWYXJpYW50c1Jlc29sdmVyICE9PSB1bmRlZmluZWQgPyBpbnB1dFNraXBWYXJpYW50c1Jlc29sdmVyIDogY29tcG9uZW50U2xvdCAmJiBjb21wb25lbnRTbG90ICE9PSAnUm9vdCcgfHwgZmFsc2U7XG4gICAgY29uc3Qgc2tpcFN4ID0gaW5wdXRTa2lwU3ggfHwgZmFsc2U7XG4gICAgbGV0IGxhYmVsO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChjb21wb25lbnROYW1lKSB7XG4gICAgICAgIGxhYmVsID0gYCR7Y29tcG9uZW50TmFtZX0tJHtsb3dlcmNhc2VGaXJzdExldHRlcihjb21wb25lbnRTbG90IHx8ICdSb290Jyl9YDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgc2hvdWxkRm9yd2FyZFByb3BPcHRpb24gPSBzaG91bGRGb3J3YXJkUHJvcDtcblxuICAgIGlmIChjb21wb25lbnRTbG90ID09PSAnUm9vdCcpIHtcbiAgICAgIHNob3VsZEZvcndhcmRQcm9wT3B0aW9uID0gcm9vdFNob3VsZEZvcndhcmRQcm9wO1xuICAgIH0gZWxzZSBpZiAoY29tcG9uZW50U2xvdCkge1xuICAgICAgLy8gYW55IG90aGVyIHNsb3Qgc3BlY2lmaWVkXG4gICAgICBzaG91bGRGb3J3YXJkUHJvcE9wdGlvbiA9IHNsb3RTaG91bGRGb3J3YXJkUHJvcDtcbiAgICB9XG5cbiAgICBjb25zdCBkZWZhdWx0U3R5bGVkUmVzb2x2ZXIgPSBzdHlsZWRFbmdpbmVTdHlsZWQodGFnLCBfZXh0ZW5kcyh7XG4gICAgICBzaG91bGRGb3J3YXJkUHJvcDogc2hvdWxkRm9yd2FyZFByb3BPcHRpb24sXG4gICAgICBsYWJlbFxuICAgIH0sIG9wdGlvbnMpKTtcblxuICAgIGNvbnN0IG11aVN0eWxlZFJlc29sdmVyID0gKHN0eWxlQXJnLCAuLi5leHByZXNzaW9ucykgPT4ge1xuICAgICAgY29uc3QgZXhwcmVzc2lvbnNXaXRoRGVmYXVsdFRoZW1lID0gZXhwcmVzc2lvbnMgPyBleHByZXNzaW9ucy5tYXAoc3R5bGVzQXJnID0+IHtcbiAgICAgICAgLy8gT24gdGhlIHNlcnZlciBFbW90aW9uIGRvZXNuJ3QgdXNlIFJlYWN0LmZvcndhcmRSZWYgZm9yIGNyZWF0aW5nIGNvbXBvbmVudHMsIHNvIHRoZSBjcmVhdGVkXG4gICAgICAgIC8vIGNvbXBvbmVudCBzdGF5cyBhcyBhIGZ1bmN0aW9uLiBUaGlzIGNvbmRpdGlvbiBtYWtlcyBzdXJlIHRoYXQgd2UgZG8gbm90IGludGVycG9sYXRlIGZ1bmN0aW9uc1xuICAgICAgICAvLyB3aGljaCBhcmUgYmFzaWNhbGx5IGNvbXBvbmVudHMgdXNlZCBhcyBhIHNlbGVjdG9ycy5cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVyc2NvcmUtZGFuZ2xlXG4gICAgICAgIHJldHVybiB0eXBlb2Ygc3R5bGVzQXJnID09PSAnZnVuY3Rpb24nICYmIHN0eWxlc0FyZy5fX2Vtb3Rpb25fcmVhbCAhPT0gc3R5bGVzQXJnID8gX3JlZiA9PiB7XG4gICAgICAgICAgbGV0IHtcbiAgICAgICAgICAgIHRoZW1lOiB0aGVtZUlucHV0XG4gICAgICAgICAgfSA9IF9yZWYsXG4gICAgICAgICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgX2V4Y2x1ZGVkMik7XG5cbiAgICAgICAgICByZXR1cm4gc3R5bGVzQXJnKF9leHRlbmRzKHtcbiAgICAgICAgICAgIHRoZW1lOiBpc0VtcHR5KHRoZW1lSW5wdXQpID8gZGVmYXVsdFRoZW1lIDogdGhlbWVJbnB1dFxuICAgICAgICAgIH0sIG90aGVyKSk7XG4gICAgICAgIH0gOiBzdHlsZXNBcmc7XG4gICAgICB9KSA6IFtdO1xuICAgICAgbGV0IHRyYW5zZm9ybWVkU3R5bGVBcmcgPSBzdHlsZUFyZztcblxuICAgICAgaWYgKGNvbXBvbmVudE5hbWUgJiYgb3ZlcnJpZGVzUmVzb2x2ZXIpIHtcbiAgICAgICAgZXhwcmVzc2lvbnNXaXRoRGVmYXVsdFRoZW1lLnB1c2gocHJvcHMgPT4ge1xuICAgICAgICAgIGNvbnN0IHRoZW1lID0gaXNFbXB0eShwcm9wcy50aGVtZSkgPyBkZWZhdWx0VGhlbWUgOiBwcm9wcy50aGVtZTtcbiAgICAgICAgICBjb25zdCBzdHlsZU92ZXJyaWRlcyA9IGdldFN0eWxlT3ZlcnJpZGVzKGNvbXBvbmVudE5hbWUsIHRoZW1lKTtcblxuICAgICAgICAgIGlmIChzdHlsZU92ZXJyaWRlcykge1xuICAgICAgICAgICAgY29uc3QgcmVzb2x2ZWRTdHlsZU92ZXJyaWRlcyA9IHt9O1xuICAgICAgICAgICAgT2JqZWN0LmVudHJpZXMoc3R5bGVPdmVycmlkZXMpLmZvckVhY2goKFtzbG90S2V5LCBzbG90U3R5bGVdKSA9PiB7XG4gICAgICAgICAgICAgIHJlc29sdmVkU3R5bGVPdmVycmlkZXNbc2xvdEtleV0gPSB0eXBlb2Ygc2xvdFN0eWxlID09PSAnZnVuY3Rpb24nID8gc2xvdFN0eWxlKF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgICAgICAgIHRoZW1lXG4gICAgICAgICAgICAgIH0pKSA6IHNsb3RTdHlsZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIG92ZXJyaWRlc1Jlc29sdmVyKHByb3BzLCByZXNvbHZlZFN0eWxlT3ZlcnJpZGVzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjb21wb25lbnROYW1lICYmICFza2lwVmFyaWFudHNSZXNvbHZlcikge1xuICAgICAgICBleHByZXNzaW9uc1dpdGhEZWZhdWx0VGhlbWUucHVzaChwcm9wcyA9PiB7XG4gICAgICAgICAgY29uc3QgdGhlbWUgPSBpc0VtcHR5KHByb3BzLnRoZW1lKSA/IGRlZmF1bHRUaGVtZSA6IHByb3BzLnRoZW1lO1xuICAgICAgICAgIHJldHVybiB2YXJpYW50c1Jlc29sdmVyKHByb3BzLCBnZXRWYXJpYW50U3R5bGVzKGNvbXBvbmVudE5hbWUsIHRoZW1lKSwgdGhlbWUsIGNvbXBvbmVudE5hbWUpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFza2lwU3gpIHtcbiAgICAgICAgZXhwcmVzc2lvbnNXaXRoRGVmYXVsdFRoZW1lLnB1c2gocHJvcHMgPT4ge1xuICAgICAgICAgIGNvbnN0IHRoZW1lID0gaXNFbXB0eShwcm9wcy50aGVtZSkgPyBkZWZhdWx0VGhlbWUgOiBwcm9wcy50aGVtZTtcbiAgICAgICAgICByZXR1cm4gc3R5bGVGdW5jdGlvblN4KF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgICAgdGhlbWVcbiAgICAgICAgICB9KSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBudW1PZkN1c3RvbUZuc0FwcGxpZWQgPSBleHByZXNzaW9uc1dpdGhEZWZhdWx0VGhlbWUubGVuZ3RoIC0gZXhwcmVzc2lvbnMubGVuZ3RoO1xuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShzdHlsZUFyZykgJiYgbnVtT2ZDdXN0b21GbnNBcHBsaWVkID4gMCkge1xuICAgICAgICBjb25zdCBwbGFjZWhvbGRlcnMgPSBuZXcgQXJyYXkobnVtT2ZDdXN0b21GbnNBcHBsaWVkKS5maWxsKCcnKTsgLy8gSWYgdGhlIHR5cGUgaXMgYXJyYXksIHRoYW4gd2UgbmVlZCB0byBhZGQgcGxhY2Vob2xkZXJzIGluIHRoZSB0ZW1wbGF0ZSBmb3IgdGhlIG92ZXJyaWRlcywgdmFyaWFudHMgYW5kIHRoZSBzeCBzdHlsZXMuXG5cbiAgICAgICAgdHJhbnNmb3JtZWRTdHlsZUFyZyA9IFsuLi5zdHlsZUFyZywgLi4ucGxhY2Vob2xkZXJzXTtcbiAgICAgICAgdHJhbnNmb3JtZWRTdHlsZUFyZy5yYXcgPSBbLi4uc3R5bGVBcmcucmF3LCAuLi5wbGFjZWhvbGRlcnNdO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygc3R5bGVBcmcgPT09ICdmdW5jdGlvbicgJiYgLy8gT24gdGhlIHNlcnZlciBFbW90aW9uIGRvZXNuJ3QgdXNlIFJlYWN0LmZvcndhcmRSZWYgZm9yIGNyZWF0aW5nIGNvbXBvbmVudHMsIHNvIHRoZSBjcmVhdGVkXG4gICAgICAvLyBjb21wb25lbnQgc3RheXMgYXMgYSBmdW5jdGlvbi4gVGhpcyBjb25kaXRpb24gbWFrZXMgc3VyZSB0aGF0IHdlIGRvIG5vdCBpbnRlcnBvbGF0ZSBmdW5jdGlvbnNcbiAgICAgIC8vIHdoaWNoIGFyZSBiYXNpY2FsbHkgY29tcG9uZW50cyB1c2VkIGFzIGEgc2VsZWN0b3JzLlxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVyc2NvcmUtZGFuZ2xlXG4gICAgICBzdHlsZUFyZy5fX2Vtb3Rpb25fcmVhbCAhPT0gc3R5bGVBcmcpIHtcbiAgICAgICAgLy8gSWYgdGhlIHR5cGUgaXMgZnVuY3Rpb24sIHdlIG5lZWQgdG8gZGVmaW5lIHRoZSBkZWZhdWx0IHRoZW1lLlxuICAgICAgICB0cmFuc2Zvcm1lZFN0eWxlQXJnID0gX3JlZjIgPT4ge1xuICAgICAgICAgIGxldCB7XG4gICAgICAgICAgICB0aGVtZTogdGhlbWVJbnB1dFxuICAgICAgICAgIH0gPSBfcmVmMixcbiAgICAgICAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgX2V4Y2x1ZGVkMyk7XG5cbiAgICAgICAgICByZXR1cm4gc3R5bGVBcmcoX2V4dGVuZHMoe1xuICAgICAgICAgICAgdGhlbWU6IGlzRW1wdHkodGhlbWVJbnB1dCkgPyBkZWZhdWx0VGhlbWUgOiB0aGVtZUlucHV0XG4gICAgICAgICAgfSwgb3RoZXIpKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgQ29tcG9uZW50ID0gZGVmYXVsdFN0eWxlZFJlc29sdmVyKHRyYW5zZm9ybWVkU3R5bGVBcmcsIC4uLmV4cHJlc3Npb25zV2l0aERlZmF1bHRUaGVtZSk7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGxldCBkaXNwbGF5TmFtZTtcblxuICAgICAgICBpZiAoY29tcG9uZW50TmFtZSkge1xuICAgICAgICAgIGRpc3BsYXlOYW1lID0gYCR7Y29tcG9uZW50TmFtZX0ke2NvbXBvbmVudFNsb3QgfHwgJyd9YDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkaXNwbGF5TmFtZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgZGlzcGxheU5hbWUgPSBgU3R5bGVkKCR7Z2V0RGlzcGxheU5hbWUodGFnKX0pYDtcbiAgICAgICAgfVxuXG4gICAgICAgIENvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29tcG9uZW50O1xuICAgIH07XG5cbiAgICBpZiAoZGVmYXVsdFN0eWxlZFJlc29sdmVyLndpdGhDb25maWcpIHtcbiAgICAgIG11aVN0eWxlZFJlc29sdmVyLndpdGhDb25maWcgPSBkZWZhdWx0U3R5bGVkUmVzb2x2ZXIud2l0aENvbmZpZztcbiAgICB9XG5cbiAgICByZXR1cm4gbXVpU3R5bGVkUmVzb2x2ZXI7XG4gIH07XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVNaXhpbnMoYnJlYWtwb2ludHMsIG1peGlucykge1xuICByZXR1cm4gX2V4dGVuZHMoe1xuICAgIHRvb2xiYXI6IHtcbiAgICAgIG1pbkhlaWdodDogNTYsXG4gICAgICBbYnJlYWtwb2ludHMudXAoJ3hzJyldOiB7XG4gICAgICAgICdAbWVkaWEgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpJzoge1xuICAgICAgICAgIG1pbkhlaWdodDogNDhcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIFticmVha3BvaW50cy51cCgnc20nKV06IHtcbiAgICAgICAgbWluSGVpZ2h0OiA2NFxuICAgICAgfVxuICAgIH1cbiAgfSwgbWl4aW5zKTtcbn0iLCJjb25zdCBjb21tb24gPSB7XG4gIGJsYWNrOiAnIzAwMCcsXG4gIHdoaXRlOiAnI2ZmZidcbn07XG5leHBvcnQgZGVmYXVsdCBjb21tb247IiwiY29uc3QgZ3JleSA9IHtcbiAgNTA6ICcjZmFmYWZhJyxcbiAgMTAwOiAnI2Y1ZjVmNScsXG4gIDIwMDogJyNlZWVlZWUnLFxuICAzMDA6ICcjZTBlMGUwJyxcbiAgNDAwOiAnI2JkYmRiZCcsXG4gIDUwMDogJyM5ZTllOWUnLFxuICA2MDA6ICcjNzU3NTc1JyxcbiAgNzAwOiAnIzYxNjE2MScsXG4gIDgwMDogJyM0MjQyNDInLFxuICA5MDA6ICcjMjEyMTIxJyxcbiAgQTEwMDogJyNmNWY1ZjUnLFxuICBBMjAwOiAnI2VlZWVlZScsXG4gIEE0MDA6ICcjYmRiZGJkJyxcbiAgQTcwMDogJyM2MTYxNjEnXG59O1xuZXhwb3J0IGRlZmF1bHQgZ3JleTsiLCJjb25zdCBwdXJwbGUgPSB7XG4gIDUwOiAnI2YzZTVmNScsXG4gIDEwMDogJyNlMWJlZTcnLFxuICAyMDA6ICcjY2U5M2Q4JyxcbiAgMzAwOiAnI2JhNjhjOCcsXG4gIDQwMDogJyNhYjQ3YmMnLFxuICA1MDA6ICcjOWMyN2IwJyxcbiAgNjAwOiAnIzhlMjRhYScsXG4gIDcwMDogJyM3YjFmYTInLFxuICA4MDA6ICcjNmExYjlhJyxcbiAgOTAwOiAnIzRhMTQ4YycsXG4gIEExMDA6ICcjZWE4MGZjJyxcbiAgQTIwMDogJyNlMDQwZmInLFxuICBBNDAwOiAnI2Q1MDBmOScsXG4gIEE3MDA6ICcjYWEwMGZmJ1xufTtcbmV4cG9ydCBkZWZhdWx0IHB1cnBsZTsiLCJjb25zdCByZWQgPSB7XG4gIDUwOiAnI2ZmZWJlZScsXG4gIDEwMDogJyNmZmNkZDInLFxuICAyMDA6ICcjZWY5YTlhJyxcbiAgMzAwOiAnI2U1NzM3MycsXG4gIDQwMDogJyNlZjUzNTAnLFxuICA1MDA6ICcjZjQ0MzM2JyxcbiAgNjAwOiAnI2U1MzkzNScsXG4gIDcwMDogJyNkMzJmMmYnLFxuICA4MDA6ICcjYzYyODI4JyxcbiAgOTAwOiAnI2I3MWMxYycsXG4gIEExMDA6ICcjZmY4YTgwJyxcbiAgQTIwMDogJyNmZjUyNTInLFxuICBBNDAwOiAnI2ZmMTc0NCcsXG4gIEE3MDA6ICcjZDUwMDAwJ1xufTtcbmV4cG9ydCBkZWZhdWx0IHJlZDsiLCJjb25zdCBvcmFuZ2UgPSB7XG4gIDUwOiAnI2ZmZjNlMCcsXG4gIDEwMDogJyNmZmUwYjInLFxuICAyMDA6ICcjZmZjYzgwJyxcbiAgMzAwOiAnI2ZmYjc0ZCcsXG4gIDQwMDogJyNmZmE3MjYnLFxuICA1MDA6ICcjZmY5ODAwJyxcbiAgNjAwOiAnI2ZiOGMwMCcsXG4gIDcwMDogJyNmNTdjMDAnLFxuICA4MDA6ICcjZWY2YzAwJyxcbiAgOTAwOiAnI2U2NTEwMCcsXG4gIEExMDA6ICcjZmZkMTgwJyxcbiAgQTIwMDogJyNmZmFiNDAnLFxuICBBNDAwOiAnI2ZmOTEwMCcsXG4gIEE3MDA6ICcjZmY2ZDAwJ1xufTtcbmV4cG9ydCBkZWZhdWx0IG9yYW5nZTsiLCJjb25zdCBibHVlID0ge1xuICA1MDogJyNlM2YyZmQnLFxuICAxMDA6ICcjYmJkZWZiJyxcbiAgMjAwOiAnIzkwY2FmOScsXG4gIDMwMDogJyM2NGI1ZjYnLFxuICA0MDA6ICcjNDJhNWY1JyxcbiAgNTAwOiAnIzIxOTZmMycsXG4gIDYwMDogJyMxZTg4ZTUnLFxuICA3MDA6ICcjMTk3NmQyJyxcbiAgODAwOiAnIzE1NjVjMCcsXG4gIDkwMDogJyMwZDQ3YTEnLFxuICBBMTAwOiAnIzgyYjFmZicsXG4gIEEyMDA6ICcjNDQ4YWZmJyxcbiAgQTQwMDogJyMyOTc5ZmYnLFxuICBBNzAwOiAnIzI5NjJmZidcbn07XG5leHBvcnQgZGVmYXVsdCBibHVlOyIsImNvbnN0IGxpZ2h0Qmx1ZSA9IHtcbiAgNTA6ICcjZTFmNWZlJyxcbiAgMTAwOiAnI2IzZTVmYycsXG4gIDIwMDogJyM4MWQ0ZmEnLFxuICAzMDA6ICcjNGZjM2Y3JyxcbiAgNDAwOiAnIzI5YjZmNicsXG4gIDUwMDogJyMwM2E5ZjQnLFxuICA2MDA6ICcjMDM5YmU1JyxcbiAgNzAwOiAnIzAyODhkMScsXG4gIDgwMDogJyMwMjc3YmQnLFxuICA5MDA6ICcjMDE1NzliJyxcbiAgQTEwMDogJyM4MGQ4ZmYnLFxuICBBMjAwOiAnIzQwYzRmZicsXG4gIEE0MDA6ICcjMDBiMGZmJyxcbiAgQTcwMDogJyMwMDkxZWEnXG59O1xuZXhwb3J0IGRlZmF1bHQgbGlnaHRCbHVlOyIsImNvbnN0IGdyZWVuID0ge1xuICA1MDogJyNlOGY1ZTknLFxuICAxMDA6ICcjYzhlNmM5JyxcbiAgMjAwOiAnI2E1ZDZhNycsXG4gIDMwMDogJyM4MWM3ODQnLFxuICA0MDA6ICcjNjZiYjZhJyxcbiAgNTAwOiAnIzRjYWY1MCcsXG4gIDYwMDogJyM0M2EwNDcnLFxuICA3MDA6ICcjMzg4ZTNjJyxcbiAgODAwOiAnIzJlN2QzMicsXG4gIDkwMDogJyMxYjVlMjAnLFxuICBBMTAwOiAnI2I5ZjZjYScsXG4gIEEyMDA6ICcjNjlmMGFlJyxcbiAgQTQwMDogJyMwMGU2NzYnLFxuICBBNzAwOiAnIzAwYzg1Mydcbn07XG5leHBvcnQgZGVmYXVsdCBncmVlbjsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IHsgZm9ybWF0TXVpRXJyb3JNZXNzYWdlIGFzIF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UgfSBmcm9tIFwiQG11aS91dGlsc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wibW9kZVwiLCBcImNvbnRyYXN0VGhyZXNob2xkXCIsIFwidG9uYWxPZmZzZXRcIl07XG5pbXBvcnQgeyBkZWVwbWVyZ2UgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCB7IGRhcmtlbiwgZ2V0Q29udHJhc3RSYXRpbywgbGlnaHRlbiB9IGZyb20gJ0BtdWkvc3lzdGVtJztcbmltcG9ydCBjb21tb24gZnJvbSAnLi4vY29sb3JzL2NvbW1vbic7XG5pbXBvcnQgZ3JleSBmcm9tICcuLi9jb2xvcnMvZ3JleSc7XG5pbXBvcnQgcHVycGxlIGZyb20gJy4uL2NvbG9ycy9wdXJwbGUnO1xuaW1wb3J0IHJlZCBmcm9tICcuLi9jb2xvcnMvcmVkJztcbmltcG9ydCBvcmFuZ2UgZnJvbSAnLi4vY29sb3JzL29yYW5nZSc7XG5pbXBvcnQgYmx1ZSBmcm9tICcuLi9jb2xvcnMvYmx1ZSc7XG5pbXBvcnQgbGlnaHRCbHVlIGZyb20gJy4uL2NvbG9ycy9saWdodEJsdWUnO1xuaW1wb3J0IGdyZWVuIGZyb20gJy4uL2NvbG9ycy9ncmVlbic7XG5leHBvcnQgY29uc3QgbGlnaHQgPSB7XG4gIC8vIFRoZSBjb2xvcnMgdXNlZCB0byBzdHlsZSB0aGUgdGV4dC5cbiAgdGV4dDoge1xuICAgIC8vIFRoZSBtb3N0IGltcG9ydGFudCB0ZXh0LlxuICAgIHByaW1hcnk6ICdyZ2JhKDAsIDAsIDAsIDAuODcpJyxcbiAgICAvLyBTZWNvbmRhcnkgdGV4dC5cbiAgICBzZWNvbmRhcnk6ICdyZ2JhKDAsIDAsIDAsIDAuNiknLFxuICAgIC8vIERpc2FibGVkIHRleHQgaGF2ZSBldmVuIGxvd2VyIHZpc3VhbCBwcm9taW5lbmNlLlxuICAgIGRpc2FibGVkOiAncmdiYSgwLCAwLCAwLCAwLjM4KSdcbiAgfSxcbiAgLy8gVGhlIGNvbG9yIHVzZWQgdG8gZGl2aWRlIGRpZmZlcmVudCBlbGVtZW50cy5cbiAgZGl2aWRlcjogJ3JnYmEoMCwgMCwgMCwgMC4xMiknLFxuICAvLyBUaGUgYmFja2dyb3VuZCBjb2xvcnMgdXNlZCB0byBzdHlsZSB0aGUgc3VyZmFjZXMuXG4gIC8vIENvbnNpc3RlbmN5IGJldHdlZW4gdGhlc2UgdmFsdWVzIGlzIGltcG9ydGFudC5cbiAgYmFja2dyb3VuZDoge1xuICAgIHBhcGVyOiBjb21tb24ud2hpdGUsXG4gICAgZGVmYXVsdDogY29tbW9uLndoaXRlXG4gIH0sXG4gIC8vIFRoZSBjb2xvcnMgdXNlZCB0byBzdHlsZSB0aGUgYWN0aW9uIGVsZW1lbnRzLlxuICBhY3Rpb246IHtcbiAgICAvLyBUaGUgY29sb3Igb2YgYW4gYWN0aXZlIGFjdGlvbiBsaWtlIGFuIGljb24gYnV0dG9uLlxuICAgIGFjdGl2ZTogJ3JnYmEoMCwgMCwgMCwgMC41NCknLFxuICAgIC8vIFRoZSBjb2xvciBvZiBhbiBob3ZlcmVkIGFjdGlvbi5cbiAgICBob3ZlcjogJ3JnYmEoMCwgMCwgMCwgMC4wNCknLFxuICAgIGhvdmVyT3BhY2l0eTogMC4wNCxcbiAgICAvLyBUaGUgY29sb3Igb2YgYSBzZWxlY3RlZCBhY3Rpb24uXG4gICAgc2VsZWN0ZWQ6ICdyZ2JhKDAsIDAsIDAsIDAuMDgpJyxcbiAgICBzZWxlY3RlZE9wYWNpdHk6IDAuMDgsXG4gICAgLy8gVGhlIGNvbG9yIG9mIGEgZGlzYWJsZWQgYWN0aW9uLlxuICAgIGRpc2FibGVkOiAncmdiYSgwLCAwLCAwLCAwLjI2KScsXG4gICAgLy8gVGhlIGJhY2tncm91bmQgY29sb3Igb2YgYSBkaXNhYmxlZCBhY3Rpb24uXG4gICAgZGlzYWJsZWRCYWNrZ3JvdW5kOiAncmdiYSgwLCAwLCAwLCAwLjEyKScsXG4gICAgZGlzYWJsZWRPcGFjaXR5OiAwLjM4LFxuICAgIGZvY3VzOiAncmdiYSgwLCAwLCAwLCAwLjEyKScsXG4gICAgZm9jdXNPcGFjaXR5OiAwLjEyLFxuICAgIGFjdGl2YXRlZE9wYWNpdHk6IDAuMTJcbiAgfVxufTtcbmV4cG9ydCBjb25zdCBkYXJrID0ge1xuICB0ZXh0OiB7XG4gICAgcHJpbWFyeTogY29tbW9uLndoaXRlLFxuICAgIHNlY29uZGFyeTogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC43KScsXG4gICAgZGlzYWJsZWQ6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSknLFxuICAgIGljb246ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSknXG4gIH0sXG4gIGRpdmlkZXI6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTIpJyxcbiAgYmFja2dyb3VuZDoge1xuICAgIHBhcGVyOiAnIzEyMTIxMicsXG4gICAgZGVmYXVsdDogJyMxMjEyMTInXG4gIH0sXG4gIGFjdGlvbjoge1xuICAgIGFjdGl2ZTogY29tbW9uLndoaXRlLFxuICAgIGhvdmVyOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA4KScsXG4gICAgaG92ZXJPcGFjaXR5OiAwLjA4LFxuICAgIHNlbGVjdGVkOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE2KScsXG4gICAgc2VsZWN0ZWRPcGFjaXR5OiAwLjE2LFxuICAgIGRpc2FibGVkOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpJyxcbiAgICBkaXNhYmxlZEJhY2tncm91bmQ6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTIpJyxcbiAgICBkaXNhYmxlZE9wYWNpdHk6IDAuMzgsXG4gICAgZm9jdXM6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTIpJyxcbiAgICBmb2N1c09wYWNpdHk6IDAuMTIsXG4gICAgYWN0aXZhdGVkT3BhY2l0eTogMC4yNFxuICB9XG59O1xuXG5mdW5jdGlvbiBhZGRMaWdodE9yRGFyayhpbnRlbnQsIGRpcmVjdGlvbiwgc2hhZGUsIHRvbmFsT2Zmc2V0KSB7XG4gIGNvbnN0IHRvbmFsT2Zmc2V0TGlnaHQgPSB0b25hbE9mZnNldC5saWdodCB8fCB0b25hbE9mZnNldDtcbiAgY29uc3QgdG9uYWxPZmZzZXREYXJrID0gdG9uYWxPZmZzZXQuZGFyayB8fCB0b25hbE9mZnNldCAqIDEuNTtcblxuICBpZiAoIWludGVudFtkaXJlY3Rpb25dKSB7XG4gICAgaWYgKGludGVudC5oYXNPd25Qcm9wZXJ0eShzaGFkZSkpIHtcbiAgICAgIGludGVudFtkaXJlY3Rpb25dID0gaW50ZW50W3NoYWRlXTtcbiAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ2xpZ2h0Jykge1xuICAgICAgaW50ZW50LmxpZ2h0ID0gbGlnaHRlbihpbnRlbnQubWFpbiwgdG9uYWxPZmZzZXRMaWdodCk7XG4gICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICdkYXJrJykge1xuICAgICAgaW50ZW50LmRhcmsgPSBkYXJrZW4oaW50ZW50Lm1haW4sIHRvbmFsT2Zmc2V0RGFyayk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRQcmltYXJ5KG1vZGUgPSAnbGlnaHQnKSB7XG4gIGlmIChtb2RlID09PSAnZGFyaycpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWFpbjogYmx1ZVsyMDBdLFxuICAgICAgbGlnaHQ6IGJsdWVbNTBdLFxuICAgICAgZGFyazogYmx1ZVs0MDBdXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbWFpbjogYmx1ZVs3MDBdLFxuICAgIGxpZ2h0OiBibHVlWzQwMF0sXG4gICAgZGFyazogYmx1ZVs4MDBdXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRTZWNvbmRhcnkobW9kZSA9ICdsaWdodCcpIHtcbiAgaWYgKG1vZGUgPT09ICdkYXJrJykge1xuICAgIHJldHVybiB7XG4gICAgICBtYWluOiBwdXJwbGVbMjAwXSxcbiAgICAgIGxpZ2h0OiBwdXJwbGVbNTBdLFxuICAgICAgZGFyazogcHVycGxlWzQwMF1cbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBtYWluOiBwdXJwbGVbNTAwXSxcbiAgICBsaWdodDogcHVycGxlWzMwMF0sXG4gICAgZGFyazogcHVycGxlWzcwMF1cbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEVycm9yKG1vZGUgPSAnbGlnaHQnKSB7XG4gIGlmIChtb2RlID09PSAnZGFyaycpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWFpbjogcmVkWzUwMF0sXG4gICAgICBsaWdodDogcmVkWzMwMF0sXG4gICAgICBkYXJrOiByZWRbNzAwXVxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG1haW46IHJlZFs3MDBdLFxuICAgIGxpZ2h0OiByZWRbNDAwXSxcbiAgICBkYXJrOiByZWRbODAwXVxuICB9O1xufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0SW5mbyhtb2RlID0gJ2xpZ2h0Jykge1xuICBpZiAobW9kZSA9PT0gJ2RhcmsnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1haW46IGxpZ2h0Qmx1ZVs0MDBdLFxuICAgICAgbGlnaHQ6IGxpZ2h0Qmx1ZVszMDBdLFxuICAgICAgZGFyazogbGlnaHRCbHVlWzcwMF1cbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBtYWluOiBsaWdodEJsdWVbNzAwXSxcbiAgICBsaWdodDogbGlnaHRCbHVlWzUwMF0sXG4gICAgZGFyazogbGlnaHRCbHVlWzkwMF1cbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdFN1Y2Nlc3MobW9kZSA9ICdsaWdodCcpIHtcbiAgaWYgKG1vZGUgPT09ICdkYXJrJykge1xuICAgIHJldHVybiB7XG4gICAgICBtYWluOiBncmVlbls0MDBdLFxuICAgICAgbGlnaHQ6IGdyZWVuWzMwMF0sXG4gICAgICBkYXJrOiBncmVlbls3MDBdXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbWFpbjogZ3JlZW5bODAwXSxcbiAgICBsaWdodDogZ3JlZW5bNTAwXSxcbiAgICBkYXJrOiBncmVlbls5MDBdXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRXYXJuaW5nKG1vZGUgPSAnbGlnaHQnKSB7XG4gIGlmIChtb2RlID09PSAnZGFyaycpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWFpbjogb3JhbmdlWzQwMF0sXG4gICAgICBsaWdodDogb3JhbmdlWzMwMF0sXG4gICAgICBkYXJrOiBvcmFuZ2VbNzAwXVxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG1haW46ICcjZWQ2YzAyJyxcbiAgICAvLyBjbG9zZXN0IHRvIG9yYW5nZVs4MDBdIHRoYXQgcGFzcyAzOjEuXG4gICAgbGlnaHQ6IG9yYW5nZVs1MDBdLFxuICAgIGRhcms6IG9yYW5nZVs5MDBdXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVBhbGV0dGUocGFsZXR0ZSkge1xuICBjb25zdCB7XG4gICAgbW9kZSA9ICdsaWdodCcsXG4gICAgY29udHJhc3RUaHJlc2hvbGQgPSAzLFxuICAgIHRvbmFsT2Zmc2V0ID0gMC4yXG4gIH0gPSBwYWxldHRlLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHBhbGV0dGUsIF9leGNsdWRlZCk7XG5cbiAgY29uc3QgcHJpbWFyeSA9IHBhbGV0dGUucHJpbWFyeSB8fCBnZXREZWZhdWx0UHJpbWFyeShtb2RlKTtcbiAgY29uc3Qgc2Vjb25kYXJ5ID0gcGFsZXR0ZS5zZWNvbmRhcnkgfHwgZ2V0RGVmYXVsdFNlY29uZGFyeShtb2RlKTtcbiAgY29uc3QgZXJyb3IgPSBwYWxldHRlLmVycm9yIHx8IGdldERlZmF1bHRFcnJvcihtb2RlKTtcbiAgY29uc3QgaW5mbyA9IHBhbGV0dGUuaW5mbyB8fCBnZXREZWZhdWx0SW5mbyhtb2RlKTtcbiAgY29uc3Qgc3VjY2VzcyA9IHBhbGV0dGUuc3VjY2VzcyB8fCBnZXREZWZhdWx0U3VjY2Vzcyhtb2RlKTtcbiAgY29uc3Qgd2FybmluZyA9IHBhbGV0dGUud2FybmluZyB8fCBnZXREZWZhdWx0V2FybmluZyhtb2RlKTsgLy8gVXNlIHRoZSBzYW1lIGxvZ2ljIGFzXG4gIC8vIEJvb3RzdHJhcDogaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvMWQ2ZTM3MTBkZDQ0N2RlMWEyMDBmMjllOGZhNTIxZjhhMDkwOGY3MC9zY3NzL19mdW5jdGlvbnMuc2NzcyNMNTlcbiAgLy8gYW5kIG1hdGVyaWFsLWNvbXBvbmVudHMtd2ViIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvYWM0NmI4ODYzYzRkYWI5ZmMyMmM0YzY2MmRjNmJkMWI2NWRkNjUyZi9wYWNrYWdlcy9tZGMtdGhlbWUvX2Z1bmN0aW9ucy5zY3NzI0w1NFxuXG4gIGZ1bmN0aW9uIGdldENvbnRyYXN0VGV4dChiYWNrZ3JvdW5kKSB7XG4gICAgY29uc3QgY29udHJhc3RUZXh0ID0gZ2V0Q29udHJhc3RSYXRpbyhiYWNrZ3JvdW5kLCBkYXJrLnRleHQucHJpbWFyeSkgPj0gY29udHJhc3RUaHJlc2hvbGQgPyBkYXJrLnRleHQucHJpbWFyeSA6IGxpZ2h0LnRleHQucHJpbWFyeTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBjb25zdCBjb250cmFzdCA9IGdldENvbnRyYXN0UmF0aW8oYmFja2dyb3VuZCwgY29udHJhc3RUZXh0KTtcblxuICAgICAgaWYgKGNvbnRyYXN0IDwgMykge1xuICAgICAgICBjb25zb2xlLmVycm9yKFtgTVVJOiBUaGUgY29udHJhc3QgcmF0aW8gb2YgJHtjb250cmFzdH06MSBmb3IgJHtjb250cmFzdFRleHR9IG9uICR7YmFja2dyb3VuZH1gLCAnZmFsbHMgYmVsb3cgdGhlIFdDQUcgcmVjb21tZW5kZWQgYWJzb2x1dGUgbWluaW11bSBjb250cmFzdCByYXRpbyBvZiAzOjEuJywgJ2h0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDA4L1JFQy1XQ0FHMjAtMjAwODEyMTEvI3Zpc3VhbC1hdWRpby1jb250cmFzdC1jb250cmFzdCddLmpvaW4oJ1xcbicpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY29udHJhc3RUZXh0O1xuICB9XG5cbiAgY29uc3QgYXVnbWVudENvbG9yID0gKHtcbiAgICBjb2xvcixcbiAgICBuYW1lLFxuICAgIG1haW5TaGFkZSA9IDUwMCxcbiAgICBsaWdodFNoYWRlID0gMzAwLFxuICAgIGRhcmtTaGFkZSA9IDcwMFxuICB9KSA9PiB7XG4gICAgY29sb3IgPSBfZXh0ZW5kcyh7fSwgY29sb3IpO1xuXG4gICAgaWYgKCFjb2xvci5tYWluICYmIGNvbG9yW21haW5TaGFkZV0pIHtcbiAgICAgIGNvbG9yLm1haW4gPSBjb2xvclttYWluU2hhZGVdO1xuICAgIH1cblxuICAgIGlmICghY29sb3IuaGFzT3duUHJvcGVydHkoJ21haW4nKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGBNVUk6IFRoZSBjb2xvciR7bmFtZSA/IGAgKCR7bmFtZX0pYCA6ICcnfSBwcm92aWRlZCB0byBhdWdtZW50Q29sb3IoY29sb3IpIGlzIGludmFsaWQuXG5UaGUgY29sb3Igb2JqZWN0IG5lZWRzIHRvIGhhdmUgYSBcXGBtYWluXFxgIHByb3BlcnR5IG9yIGEgXFxgJHttYWluU2hhZGV9XFxgIHByb3BlcnR5LmAgOiBfZm9ybWF0TXVpRXJyb3JNZXNzYWdlKDExLCBuYW1lID8gYCAoJHtuYW1lfSlgIDogJycsIG1haW5TaGFkZSkpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgY29sb3IubWFpbiAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBgTVVJOiBUaGUgY29sb3Ike25hbWUgPyBgICgke25hbWV9KWAgOiAnJ30gcHJvdmlkZWQgdG8gYXVnbWVudENvbG9yKGNvbG9yKSBpcyBpbnZhbGlkLlxuXFxgY29sb3IubWFpblxcYCBzaG91bGQgYmUgYSBzdHJpbmcsIGJ1dCBcXGAke0pTT04uc3RyaW5naWZ5KGNvbG9yLm1haW4pfVxcYCB3YXMgcHJvdmlkZWQgaW5zdGVhZC5cblxuRGlkIHlvdSBpbnRlbmQgdG8gdXNlIG9uZSBvZiB0aGUgZm9sbG93aW5nIGFwcHJvYWNoZXM/XG5cbmltcG9ydCB7IGdyZWVuIH0gZnJvbSBcIkBtdWkvbWF0ZXJpYWwvY29sb3JzXCI7XG5cbmNvbnN0IHRoZW1lMSA9IGNyZWF0ZVRoZW1lKHsgcGFsZXR0ZToge1xuICBwcmltYXJ5OiBncmVlbixcbn0gfSk7XG5cbmNvbnN0IHRoZW1lMiA9IGNyZWF0ZVRoZW1lKHsgcGFsZXR0ZToge1xuICBwcmltYXJ5OiB7IG1haW46IGdyZWVuWzUwMF0gfSxcbn0gfSk7YCA6IF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UoMTIsIG5hbWUgPyBgICgke25hbWV9KWAgOiAnJywgSlNPTi5zdHJpbmdpZnkoY29sb3IubWFpbikpKTtcbiAgICB9XG5cbiAgICBhZGRMaWdodE9yRGFyayhjb2xvciwgJ2xpZ2h0JywgbGlnaHRTaGFkZSwgdG9uYWxPZmZzZXQpO1xuICAgIGFkZExpZ2h0T3JEYXJrKGNvbG9yLCAnZGFyaycsIGRhcmtTaGFkZSwgdG9uYWxPZmZzZXQpO1xuXG4gICAgaWYgKCFjb2xvci5jb250cmFzdFRleHQpIHtcbiAgICAgIGNvbG9yLmNvbnRyYXN0VGV4dCA9IGdldENvbnRyYXN0VGV4dChjb2xvci5tYWluKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29sb3I7XG4gIH07XG5cbiAgY29uc3QgbW9kZXMgPSB7XG4gICAgZGFyayxcbiAgICBsaWdodFxuICB9O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKCFtb2Rlc1ttb2RlXSkge1xuICAgICAgY29uc29sZS5lcnJvcihgTVVJOiBUaGUgcGFsZXR0ZSBtb2RlIFxcYCR7bW9kZX1cXGAgaXMgbm90IHN1cHBvcnRlZC5gKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBwYWxldHRlT3V0cHV0ID0gZGVlcG1lcmdlKF9leHRlbmRzKHtcbiAgICAvLyBBIGNvbGxlY3Rpb24gb2YgY29tbW9uIGNvbG9ycy5cbiAgICBjb21tb246IF9leHRlbmRzKHt9LCBjb21tb24pLFxuICAgIC8vIHByZXZlbnQgbXV0YWJsZSBvYmplY3QuXG4gICAgLy8gVGhlIHBhbGV0dGUgbW9kZSwgY2FuIGJlIGxpZ2h0IG9yIGRhcmsuXG4gICAgbW9kZSxcbiAgICAvLyBUaGUgY29sb3JzIHVzZWQgdG8gcmVwcmVzZW50IHByaW1hcnkgaW50ZXJmYWNlIGVsZW1lbnRzIGZvciBhIHVzZXIuXG4gICAgcHJpbWFyeTogYXVnbWVudENvbG9yKHtcbiAgICAgIGNvbG9yOiBwcmltYXJ5LFxuICAgICAgbmFtZTogJ3ByaW1hcnknXG4gICAgfSksXG4gICAgLy8gVGhlIGNvbG9ycyB1c2VkIHRvIHJlcHJlc2VudCBzZWNvbmRhcnkgaW50ZXJmYWNlIGVsZW1lbnRzIGZvciBhIHVzZXIuXG4gICAgc2Vjb25kYXJ5OiBhdWdtZW50Q29sb3Ioe1xuICAgICAgY29sb3I6IHNlY29uZGFyeSxcbiAgICAgIG5hbWU6ICdzZWNvbmRhcnknLFxuICAgICAgbWFpblNoYWRlOiAnQTQwMCcsXG4gICAgICBsaWdodFNoYWRlOiAnQTIwMCcsXG4gICAgICBkYXJrU2hhZGU6ICdBNzAwJ1xuICAgIH0pLFxuICAgIC8vIFRoZSBjb2xvcnMgdXNlZCB0byByZXByZXNlbnQgaW50ZXJmYWNlIGVsZW1lbnRzIHRoYXQgdGhlIHVzZXIgc2hvdWxkIGJlIG1hZGUgYXdhcmUgb2YuXG4gICAgZXJyb3I6IGF1Z21lbnRDb2xvcih7XG4gICAgICBjb2xvcjogZXJyb3IsXG4gICAgICBuYW1lOiAnZXJyb3InXG4gICAgfSksXG4gICAgLy8gVGhlIGNvbG9ycyB1c2VkIHRvIHJlcHJlc2VudCBwb3RlbnRpYWxseSBkYW5nZXJvdXMgYWN0aW9ucyBvciBpbXBvcnRhbnQgbWVzc2FnZXMuXG4gICAgd2FybmluZzogYXVnbWVudENvbG9yKHtcbiAgICAgIGNvbG9yOiB3YXJuaW5nLFxuICAgICAgbmFtZTogJ3dhcm5pbmcnXG4gICAgfSksXG4gICAgLy8gVGhlIGNvbG9ycyB1c2VkIHRvIHByZXNlbnQgaW5mb3JtYXRpb24gdG8gdGhlIHVzZXIgdGhhdCBpcyBuZXV0cmFsIGFuZCBub3QgbmVjZXNzYXJpbHkgaW1wb3J0YW50LlxuICAgIGluZm86IGF1Z21lbnRDb2xvcih7XG4gICAgICBjb2xvcjogaW5mbyxcbiAgICAgIG5hbWU6ICdpbmZvJ1xuICAgIH0pLFxuICAgIC8vIFRoZSBjb2xvcnMgdXNlZCB0byBpbmRpY2F0ZSB0aGUgc3VjY2Vzc2Z1bCBjb21wbGV0aW9uIG9mIGFuIGFjdGlvbiB0aGF0IHVzZXIgdHJpZ2dlcmVkLlxuICAgIHN1Y2Nlc3M6IGF1Z21lbnRDb2xvcih7XG4gICAgICBjb2xvcjogc3VjY2VzcyxcbiAgICAgIG5hbWU6ICdzdWNjZXNzJ1xuICAgIH0pLFxuICAgIC8vIFRoZSBncmV5IGNvbG9ycy5cbiAgICBncmV5LFxuICAgIC8vIFVzZWQgYnkgYGdldENvbnRyYXN0VGV4dCgpYCB0byBtYXhpbWl6ZSB0aGUgY29udHJhc3QgYmV0d2VlblxuICAgIC8vIHRoZSBiYWNrZ3JvdW5kIGFuZCB0aGUgdGV4dC5cbiAgICBjb250cmFzdFRocmVzaG9sZCxcbiAgICAvLyBUYWtlcyBhIGJhY2tncm91bmQgY29sb3IgYW5kIHJldHVybnMgdGhlIHRleHQgY29sb3IgdGhhdCBtYXhpbWl6ZXMgdGhlIGNvbnRyYXN0LlxuICAgIGdldENvbnRyYXN0VGV4dCxcbiAgICAvLyBHZW5lcmF0ZSBhIHJpY2ggY29sb3Igb2JqZWN0LlxuICAgIGF1Z21lbnRDb2xvcixcbiAgICAvLyBVc2VkIGJ5IHRoZSBmdW5jdGlvbnMgYmVsb3cgdG8gc2hpZnQgYSBjb2xvcidzIGx1bWluYW5jZSBieSBhcHByb3hpbWF0ZWx5XG4gICAgLy8gdHdvIGluZGV4ZXMgd2l0aGluIGl0cyB0b25hbCBwYWxldHRlLlxuICAgIC8vIEUuZy4sIHNoaWZ0IGZyb20gUmVkIDUwMCB0byBSZWQgMzAwIG9yIFJlZCA3MDAuXG4gICAgdG9uYWxPZmZzZXRcbiAgfSwgbW9kZXNbbW9kZV0pLCBvdGhlcik7XG4gIHJldHVybiBwYWxldHRlT3V0cHV0O1xufSIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJmb250RmFtaWx5XCIsIFwiZm9udFNpemVcIiwgXCJmb250V2VpZ2h0TGlnaHRcIiwgXCJmb250V2VpZ2h0UmVndWxhclwiLCBcImZvbnRXZWlnaHRNZWRpdW1cIiwgXCJmb250V2VpZ2h0Qm9sZFwiLCBcImh0bWxGb250U2l6ZVwiLCBcImFsbFZhcmlhbnRzXCIsIFwicHhUb1JlbVwiXTtcbmltcG9ydCB7IGRlZXBtZXJnZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuXG5mdW5jdGlvbiByb3VuZCh2YWx1ZSkge1xuICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIDFlNSkgLyAxZTU7XG59XG5cbmNvbnN0IGNhc2VBbGxDYXBzID0ge1xuICB0ZXh0VHJhbnNmb3JtOiAndXBwZXJjYXNlJ1xufTtcbmNvbnN0IGRlZmF1bHRGb250RmFtaWx5ID0gJ1wiUm9ib3RvXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZic7XG4vKipcbiAqIEBzZWUgQGxpbmt7aHR0cHM6Ly9tYXRlcmlhbC5pby9kZXNpZ24vdHlwb2dyYXBoeS90aGUtdHlwZS1zeXN0ZW0uaHRtbH1cbiAqIEBzZWUgQGxpbmt7aHR0cHM6Ly9tYXRlcmlhbC5pby9kZXNpZ24vdHlwb2dyYXBoeS91bmRlcnN0YW5kaW5nLXR5cG9ncmFwaHkuaHRtbH1cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVUeXBvZ3JhcGh5KHBhbGV0dGUsIHR5cG9ncmFwaHkpIHtcbiAgY29uc3QgX3JlZiA9IHR5cGVvZiB0eXBvZ3JhcGh5ID09PSAnZnVuY3Rpb24nID8gdHlwb2dyYXBoeShwYWxldHRlKSA6IHR5cG9ncmFwaHksXG4gICAgICAgIHtcbiAgICBmb250RmFtaWx5ID0gZGVmYXVsdEZvbnRGYW1pbHksXG4gICAgLy8gVGhlIGRlZmF1bHQgZm9udCBzaXplIG9mIHRoZSBNYXRlcmlhbCBTcGVjaWZpY2F0aW9uLlxuICAgIGZvbnRTaXplID0gMTQsXG4gICAgLy8gcHhcbiAgICBmb250V2VpZ2h0TGlnaHQgPSAzMDAsXG4gICAgZm9udFdlaWdodFJlZ3VsYXIgPSA0MDAsXG4gICAgZm9udFdlaWdodE1lZGl1bSA9IDUwMCxcbiAgICBmb250V2VpZ2h0Qm9sZCA9IDcwMCxcbiAgICAvLyBUZWxsIE1VSSB3aGF0J3MgdGhlIGZvbnQtc2l6ZSBvbiB0aGUgaHRtbCBlbGVtZW50LlxuICAgIC8vIDE2cHggaXMgdGhlIGRlZmF1bHQgZm9udC1zaXplIHVzZWQgYnkgYnJvd3NlcnMuXG4gICAgaHRtbEZvbnRTaXplID0gMTYsXG4gICAgLy8gQXBwbHkgdGhlIENTUyBwcm9wZXJ0aWVzIHRvIGFsbCB0aGUgdmFyaWFudHMuXG4gICAgYWxsVmFyaWFudHMsXG4gICAgcHhUb1JlbTogcHhUb1JlbTJcbiAgfSA9IF9yZWYsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgX2V4Y2x1ZGVkKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICh0eXBlb2YgZm9udFNpemUgIT09ICdudW1iZXInKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdNVUk6IGBmb250U2l6ZWAgaXMgcmVxdWlyZWQgdG8gYmUgYSBudW1iZXIuJyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBodG1sRm9udFNpemUgIT09ICdudW1iZXInKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdNVUk6IGBodG1sRm9udFNpemVgIGlzIHJlcXVpcmVkIHRvIGJlIGEgbnVtYmVyLicpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGNvZWYgPSBmb250U2l6ZSAvIDE0O1xuXG4gIGNvbnN0IHB4VG9SZW0gPSBweFRvUmVtMiB8fCAoc2l6ZSA9PiBgJHtzaXplIC8gaHRtbEZvbnRTaXplICogY29lZn1yZW1gKTtcblxuICBjb25zdCBidWlsZFZhcmlhbnQgPSAoZm9udFdlaWdodCwgc2l6ZSwgbGluZUhlaWdodCwgbGV0dGVyU3BhY2luZywgY2FzaW5nKSA9PiBfZXh0ZW5kcyh7XG4gICAgZm9udEZhbWlseSxcbiAgICBmb250V2VpZ2h0LFxuICAgIGZvbnRTaXplOiBweFRvUmVtKHNpemUpLFxuICAgIC8vIFVuaXRsZXNzIGZvbGxvd2luZyBodHRwczovL21leWVyd2ViLmNvbS9lcmljL3Rob3VnaHRzLzIwMDYvMDIvMDgvdW5pdGxlc3MtbGluZS1oZWlnaHRzL1xuICAgIGxpbmVIZWlnaHRcbiAgfSwgZm9udEZhbWlseSA9PT0gZGVmYXVsdEZvbnRGYW1pbHkgPyB7XG4gICAgbGV0dGVyU3BhY2luZzogYCR7cm91bmQobGV0dGVyU3BhY2luZyAvIHNpemUpfWVtYFxuICB9IDoge30sIGNhc2luZywgYWxsVmFyaWFudHMpO1xuXG4gIGNvbnN0IHZhcmlhbnRzID0ge1xuICAgIGgxOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodExpZ2h0LCA5NiwgMS4xNjcsIC0xLjUpLFxuICAgIGgyOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodExpZ2h0LCA2MCwgMS4yLCAtMC41KSxcbiAgICBoMzogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRSZWd1bGFyLCA0OCwgMS4xNjcsIDApLFxuICAgIGg0OiBidWlsZFZhcmlhbnQoZm9udFdlaWdodFJlZ3VsYXIsIDM0LCAxLjIzNSwgMC4yNSksXG4gICAgaDU6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0UmVndWxhciwgMjQsIDEuMzM0LCAwKSxcbiAgICBoNjogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRNZWRpdW0sIDIwLCAxLjYsIDAuMTUpLFxuICAgIHN1YnRpdGxlMTogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRSZWd1bGFyLCAxNiwgMS43NSwgMC4xNSksXG4gICAgc3VidGl0bGUyOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodE1lZGl1bSwgMTQsIDEuNTcsIDAuMSksXG4gICAgYm9keTE6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0UmVndWxhciwgMTYsIDEuNSwgMC4xNSksXG4gICAgYm9keTI6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0UmVndWxhciwgMTQsIDEuNDMsIDAuMTUpLFxuICAgIGJ1dHRvbjogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRNZWRpdW0sIDE0LCAxLjc1LCAwLjQsIGNhc2VBbGxDYXBzKSxcbiAgICBjYXB0aW9uOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodFJlZ3VsYXIsIDEyLCAxLjY2LCAwLjQpLFxuICAgIG92ZXJsaW5lOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodFJlZ3VsYXIsIDEyLCAyLjY2LCAxLCBjYXNlQWxsQ2FwcylcbiAgfTtcbiAgcmV0dXJuIGRlZXBtZXJnZShfZXh0ZW5kcyh7XG4gICAgaHRtbEZvbnRTaXplLFxuICAgIHB4VG9SZW0sXG4gICAgZm9udEZhbWlseSxcbiAgICBmb250U2l6ZSxcbiAgICBmb250V2VpZ2h0TGlnaHQsXG4gICAgZm9udFdlaWdodFJlZ3VsYXIsXG4gICAgZm9udFdlaWdodE1lZGl1bSxcbiAgICBmb250V2VpZ2h0Qm9sZFxuICB9LCB2YXJpYW50cyksIG90aGVyLCB7XG4gICAgY2xvbmU6IGZhbHNlIC8vIE5vIG5lZWQgdG8gY2xvbmUgZGVlcFxuXG4gIH0pO1xufSIsImNvbnN0IHNoYWRvd0tleVVtYnJhT3BhY2l0eSA9IDAuMjtcbmNvbnN0IHNoYWRvd0tleVBlbnVtYnJhT3BhY2l0eSA9IDAuMTQ7XG5jb25zdCBzaGFkb3dBbWJpZW50U2hhZG93T3BhY2l0eSA9IDAuMTI7XG5cbmZ1bmN0aW9uIGNyZWF0ZVNoYWRvdyguLi5weCkge1xuICByZXR1cm4gW2Ake3B4WzBdfXB4ICR7cHhbMV19cHggJHtweFsyXX1weCAke3B4WzNdfXB4IHJnYmEoMCwwLDAsJHtzaGFkb3dLZXlVbWJyYU9wYWNpdHl9KWAsIGAke3B4WzRdfXB4ICR7cHhbNV19cHggJHtweFs2XX1weCAke3B4WzddfXB4IHJnYmEoMCwwLDAsJHtzaGFkb3dLZXlQZW51bWJyYU9wYWNpdHl9KWAsIGAke3B4WzhdfXB4ICR7cHhbOV19cHggJHtweFsxMF19cHggJHtweFsxMV19cHggcmdiYSgwLDAsMCwke3NoYWRvd0FtYmllbnRTaGFkb3dPcGFjaXR5fSlgXS5qb2luKCcsJyk7XG59IC8vIFZhbHVlcyBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvYmU4NzQ3Zjk0NTc0NjY5Y2I1ZTdhZGQxYTdjNTRmYTQxYTg5Y2VjNy9wYWNrYWdlcy9tZGMtZWxldmF0aW9uL192YXJpYWJsZXMuc2Nzc1xuXG5cbmNvbnN0IHNoYWRvd3MgPSBbJ25vbmUnLCBjcmVhdGVTaGFkb3coMCwgMiwgMSwgLTEsIDAsIDEsIDEsIDAsIDAsIDEsIDMsIDApLCBjcmVhdGVTaGFkb3coMCwgMywgMSwgLTIsIDAsIDIsIDIsIDAsIDAsIDEsIDUsIDApLCBjcmVhdGVTaGFkb3coMCwgMywgMywgLTIsIDAsIDMsIDQsIDAsIDAsIDEsIDgsIDApLCBjcmVhdGVTaGFkb3coMCwgMiwgNCwgLTEsIDAsIDQsIDUsIDAsIDAsIDEsIDEwLCAwKSwgY3JlYXRlU2hhZG93KDAsIDMsIDUsIC0xLCAwLCA1LCA4LCAwLCAwLCAxLCAxNCwgMCksIGNyZWF0ZVNoYWRvdygwLCAzLCA1LCAtMSwgMCwgNiwgMTAsIDAsIDAsIDEsIDE4LCAwKSwgY3JlYXRlU2hhZG93KDAsIDQsIDUsIC0yLCAwLCA3LCAxMCwgMSwgMCwgMiwgMTYsIDEpLCBjcmVhdGVTaGFkb3coMCwgNSwgNSwgLTMsIDAsIDgsIDEwLCAxLCAwLCAzLCAxNCwgMiksIGNyZWF0ZVNoYWRvdygwLCA1LCA2LCAtMywgMCwgOSwgMTIsIDEsIDAsIDMsIDE2LCAyKSwgY3JlYXRlU2hhZG93KDAsIDYsIDYsIC0zLCAwLCAxMCwgMTQsIDEsIDAsIDQsIDE4LCAzKSwgY3JlYXRlU2hhZG93KDAsIDYsIDcsIC00LCAwLCAxMSwgMTUsIDEsIDAsIDQsIDIwLCAzKSwgY3JlYXRlU2hhZG93KDAsIDcsIDgsIC00LCAwLCAxMiwgMTcsIDIsIDAsIDUsIDIyLCA0KSwgY3JlYXRlU2hhZG93KDAsIDcsIDgsIC00LCAwLCAxMywgMTksIDIsIDAsIDUsIDI0LCA0KSwgY3JlYXRlU2hhZG93KDAsIDcsIDksIC00LCAwLCAxNCwgMjEsIDIsIDAsIDUsIDI2LCA0KSwgY3JlYXRlU2hhZG93KDAsIDgsIDksIC01LCAwLCAxNSwgMjIsIDIsIDAsIDYsIDI4LCA1KSwgY3JlYXRlU2hhZG93KDAsIDgsIDEwLCAtNSwgMCwgMTYsIDI0LCAyLCAwLCA2LCAzMCwgNSksIGNyZWF0ZVNoYWRvdygwLCA4LCAxMSwgLTUsIDAsIDE3LCAyNiwgMiwgMCwgNiwgMzIsIDUpLCBjcmVhdGVTaGFkb3coMCwgOSwgMTEsIC01LCAwLCAxOCwgMjgsIDIsIDAsIDcsIDM0LCA2KSwgY3JlYXRlU2hhZG93KDAsIDksIDEyLCAtNiwgMCwgMTksIDI5LCAyLCAwLCA3LCAzNiwgNiksIGNyZWF0ZVNoYWRvdygwLCAxMCwgMTMsIC02LCAwLCAyMCwgMzEsIDMsIDAsIDgsIDM4LCA3KSwgY3JlYXRlU2hhZG93KDAsIDEwLCAxMywgLTYsIDAsIDIxLCAzMywgMywgMCwgOCwgNDAsIDcpLCBjcmVhdGVTaGFkb3coMCwgMTAsIDE0LCAtNiwgMCwgMjIsIDM1LCAzLCAwLCA4LCA0MiwgNyksIGNyZWF0ZVNoYWRvdygwLCAxMSwgMTQsIC03LCAwLCAyMywgMzYsIDMsIDAsIDksIDQ0LCA4KSwgY3JlYXRlU2hhZG93KDAsIDExLCAxNSwgLTcsIDAsIDI0LCAzOCwgMywgMCwgOSwgNDYsIDgpXTtcbmV4cG9ydCBkZWZhdWx0IHNoYWRvd3M7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImR1cmF0aW9uXCIsIFwiZWFzaW5nXCIsIFwiZGVsYXlcIl07XG4vLyBGb2xsb3cgaHR0cHM6Ly9tYXRlcmlhbC5nb29nbGUuY29tL21vdGlvbi9kdXJhdGlvbi1lYXNpbmcuaHRtbCNkdXJhdGlvbi1lYXNpbmctbmF0dXJhbC1lYXNpbmctY3VydmVzXG4vLyB0byBsZWFybiB0aGUgY29udGV4dCBpbiB3aGljaCBlYWNoIGVhc2luZyBzaG91bGQgYmUgdXNlZC5cbmV4cG9ydCBjb25zdCBlYXNpbmcgPSB7XG4gIC8vIFRoaXMgaXMgdGhlIG1vc3QgY29tbW9uIGVhc2luZyBjdXJ2ZS5cbiAgZWFzZUluT3V0OiAnY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKScsXG4gIC8vIE9iamVjdHMgZW50ZXIgdGhlIHNjcmVlbiBhdCBmdWxsIHZlbG9jaXR5IGZyb20gb2ZmLXNjcmVlbiBhbmRcbiAgLy8gc2xvd2x5IGRlY2VsZXJhdGUgdG8gYSByZXN0aW5nIHBvaW50LlxuICBlYXNlT3V0OiAnY3ViaWMtYmV6aWVyKDAuMCwgMCwgMC4yLCAxKScsXG4gIC8vIE9iamVjdHMgbGVhdmUgdGhlIHNjcmVlbiBhdCBmdWxsIHZlbG9jaXR5LiBUaGV5IGRvIG5vdCBkZWNlbGVyYXRlIHdoZW4gb2ZmLXNjcmVlbi5cbiAgZWFzZUluOiAnY3ViaWMtYmV6aWVyKDAuNCwgMCwgMSwgMSknLFxuICAvLyBUaGUgc2hhcnAgY3VydmUgaXMgdXNlZCBieSBvYmplY3RzIHRoYXQgbWF5IHJldHVybiB0byB0aGUgc2NyZWVuIGF0IGFueSB0aW1lLlxuICBzaGFycDogJ2N1YmljLWJlemllcigwLjQsIDAsIDAuNiwgMSknXG59OyAvLyBGb2xsb3cgaHR0cHM6Ly9tYXRlcmlhbC5pby9ndWlkZWxpbmVzL21vdGlvbi9kdXJhdGlvbi1lYXNpbmcuaHRtbCNkdXJhdGlvbi1lYXNpbmctY29tbW9uLWR1cmF0aW9uc1xuLy8gdG8gbGVhcm4gd2hlbiB1c2Ugd2hhdCB0aW1pbmdcblxuZXhwb3J0IGNvbnN0IGR1cmF0aW9uID0ge1xuICBzaG9ydGVzdDogMTUwLFxuICBzaG9ydGVyOiAyMDAsXG4gIHNob3J0OiAyNTAsXG4gIC8vIG1vc3QgYmFzaWMgcmVjb21tZW5kZWQgdGltaW5nXG4gIHN0YW5kYXJkOiAzMDAsXG4gIC8vIHRoaXMgaXMgdG8gYmUgdXNlZCBpbiBjb21wbGV4IGFuaW1hdGlvbnNcbiAgY29tcGxleDogMzc1LFxuICAvLyByZWNvbW1lbmRlZCB3aGVuIHNvbWV0aGluZyBpcyBlbnRlcmluZyBzY3JlZW5cbiAgZW50ZXJpbmdTY3JlZW46IDIyNSxcbiAgLy8gcmVjb21tZW5kZWQgd2hlbiBzb21ldGhpbmcgaXMgbGVhdmluZyBzY3JlZW5cbiAgbGVhdmluZ1NjcmVlbjogMTk1XG59O1xuXG5mdW5jdGlvbiBmb3JtYXRNcyhtaWxsaXNlY29uZHMpIHtcbiAgcmV0dXJuIGAke01hdGgucm91bmQobWlsbGlzZWNvbmRzKX1tc2A7XG59XG5cbmZ1bmN0aW9uIGdldEF1dG9IZWlnaHREdXJhdGlvbihoZWlnaHQpIHtcbiAgaWYgKCFoZWlnaHQpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIGNvbnN0IGNvbnN0YW50ID0gaGVpZ2h0IC8gMzY7IC8vIGh0dHBzOi8vd3d3LndvbGZyYW1hbHBoYS5jb20vaW5wdXQvP2k9KDQrJTJCKzE1KyorKHgrJTJGKzM2KykrKiorMC4yNSslMkIrKHgrJTJGKzM2KSslMkYrNSkrKisxMFxuXG4gIHJldHVybiBNYXRoLnJvdW5kKCg0ICsgMTUgKiBjb25zdGFudCAqKiAwLjI1ICsgY29uc3RhbnQgLyA1KSAqIDEwKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbnMoaW5wdXRUcmFuc2l0aW9ucykge1xuICBjb25zdCBtZXJnZWRFYXNpbmcgPSBfZXh0ZW5kcyh7fSwgZWFzaW5nLCBpbnB1dFRyYW5zaXRpb25zLmVhc2luZyk7XG5cbiAgY29uc3QgbWVyZ2VkRHVyYXRpb24gPSBfZXh0ZW5kcyh7fSwgZHVyYXRpb24sIGlucHV0VHJhbnNpdGlvbnMuZHVyYXRpb24pO1xuXG4gIGNvbnN0IGNyZWF0ZSA9IChwcm9wcyA9IFsnYWxsJ10sIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbk9wdGlvbiA9IG1lcmdlZER1cmF0aW9uLnN0YW5kYXJkLFxuICAgICAgZWFzaW5nOiBlYXNpbmdPcHRpb24gPSBtZXJnZWRFYXNpbmcuZWFzZUluT3V0LFxuICAgICAgZGVsYXkgPSAwXG4gICAgfSA9IG9wdGlvbnMsXG4gICAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShvcHRpb25zLCBfZXhjbHVkZWQpO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGNvbnN0IGlzU3RyaW5nID0gdmFsdWUgPT4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJzsgLy8gSUUxMSBzdXBwb3J0LCByZXBsYWNlIHdpdGggTnVtYmVyLmlzTmFOXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1nbG9iYWxzXG5cblxuICAgICAgY29uc3QgaXNOdW1iZXIgPSB2YWx1ZSA9PiAhaXNOYU4ocGFyc2VGbG9hdCh2YWx1ZSkpO1xuXG4gICAgICBpZiAoIWlzU3RyaW5nKHByb3BzKSAmJiAhQXJyYXkuaXNBcnJheShwcm9wcykpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignTVVJOiBBcmd1bWVudCBcInByb3BzXCIgbXVzdCBiZSBhIHN0cmluZyBvciBBcnJheS4nKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc051bWJlcihkdXJhdGlvbk9wdGlvbikgJiYgIWlzU3RyaW5nKGR1cmF0aW9uT3B0aW9uKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBNVUk6IEFyZ3VtZW50IFwiZHVyYXRpb25cIiBtdXN0IGJlIGEgbnVtYmVyIG9yIGEgc3RyaW5nIGJ1dCBmb3VuZCAke2R1cmF0aW9uT3B0aW9ufS5gKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc1N0cmluZyhlYXNpbmdPcHRpb24pKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ01VSTogQXJndW1lbnQgXCJlYXNpbmdcIiBtdXN0IGJlIGEgc3RyaW5nLicpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzTnVtYmVyKGRlbGF5KSAmJiAhaXNTdHJpbmcoZGVsYXkpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ01VSTogQXJndW1lbnQgXCJkZWxheVwiIG11c3QgYmUgYSBudW1iZXIgb3IgYSBzdHJpbmcuJyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChPYmplY3Qua2V5cyhvdGhlcikubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYE1VSTogVW5yZWNvZ25pemVkIGFyZ3VtZW50KHMpIFske09iamVjdC5rZXlzKG90aGVyKS5qb2luKCcsJyl9XS5gKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKEFycmF5LmlzQXJyYXkocHJvcHMpID8gcHJvcHMgOiBbcHJvcHNdKS5tYXAoYW5pbWF0ZWRQcm9wID0+IGAke2FuaW1hdGVkUHJvcH0gJHt0eXBlb2YgZHVyYXRpb25PcHRpb24gPT09ICdzdHJpbmcnID8gZHVyYXRpb25PcHRpb24gOiBmb3JtYXRNcyhkdXJhdGlvbk9wdGlvbil9ICR7ZWFzaW5nT3B0aW9ufSAke3R5cGVvZiBkZWxheSA9PT0gJ3N0cmluZycgPyBkZWxheSA6IGZvcm1hdE1zKGRlbGF5KX1gKS5qb2luKCcsJyk7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICBnZXRBdXRvSGVpZ2h0RHVyYXRpb24sXG4gICAgY3JlYXRlXG4gIH0sIGlucHV0VHJhbnNpdGlvbnMsIHtcbiAgICBlYXNpbmc6IG1lcmdlZEVhc2luZyxcbiAgICBkdXJhdGlvbjogbWVyZ2VkRHVyYXRpb25cbiAgfSk7XG59IiwiLy8gV2UgbmVlZCB0byBjZW50cmFsaXplIHRoZSB6SW5kZXggZGVmaW5pdGlvbnMgYXMgdGhleSB3b3JrXG4vLyBsaWtlIGdsb2JhbCB2YWx1ZXMgaW4gdGhlIGJyb3dzZXIuXG5jb25zdCB6SW5kZXggPSB7XG4gIG1vYmlsZVN0ZXBwZXI6IDEwMDAsXG4gIGZhYjogMTA1MCxcbiAgc3BlZWREaWFsOiAxMDUwLFxuICBhcHBCYXI6IDExMDAsXG4gIGRyYXdlcjogMTIwMCxcbiAgbW9kYWw6IDEzMDAsXG4gIHNuYWNrYmFyOiAxNDAwLFxuICB0b29sdGlwOiAxNTAwXG59O1xuZXhwb3J0IGRlZmF1bHQgekluZGV4OyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJicmVha3BvaW50c1wiLCBcIm1peGluc1wiLCBcInNwYWNpbmdcIiwgXCJwYWxldHRlXCIsIFwidHJhbnNpdGlvbnNcIiwgXCJ0eXBvZ3JhcGh5XCIsIFwic2hhcGVcIl07XG5pbXBvcnQgeyBkZWVwbWVyZ2UgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCB7IGNyZWF0ZVRoZW1lIGFzIHN5c3RlbUNyZWF0ZVRoZW1lIH0gZnJvbSAnQG11aS9zeXN0ZW0nO1xuaW1wb3J0IGNyZWF0ZU1peGlucyBmcm9tICcuL2NyZWF0ZU1peGlucyc7XG5pbXBvcnQgY3JlYXRlUGFsZXR0ZSBmcm9tICcuL2NyZWF0ZVBhbGV0dGUnO1xuaW1wb3J0IGNyZWF0ZVR5cG9ncmFwaHkgZnJvbSAnLi9jcmVhdGVUeXBvZ3JhcGh5JztcbmltcG9ydCBzaGFkb3dzIGZyb20gJy4vc2hhZG93cyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbnMgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9ucyc7XG5pbXBvcnQgekluZGV4IGZyb20gJy4vekluZGV4JztcblxuZnVuY3Rpb24gY3JlYXRlVGhlbWUob3B0aW9ucyA9IHt9LCAuLi5hcmdzKSB7XG4gIGNvbnN0IHtcbiAgICBtaXhpbnM6IG1peGluc0lucHV0ID0ge30sXG4gICAgcGFsZXR0ZTogcGFsZXR0ZUlucHV0ID0ge30sXG4gICAgdHJhbnNpdGlvbnM6IHRyYW5zaXRpb25zSW5wdXQgPSB7fSxcbiAgICB0eXBvZ3JhcGh5OiB0eXBvZ3JhcGh5SW5wdXQgPSB7fVxuICB9ID0gb3B0aW9ucyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShvcHRpb25zLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IHBhbGV0dGUgPSBjcmVhdGVQYWxldHRlKHBhbGV0dGVJbnB1dCk7XG4gIGNvbnN0IHN5c3RlbVRoZW1lID0gc3lzdGVtQ3JlYXRlVGhlbWUob3B0aW9ucyk7XG4gIGxldCBtdWlUaGVtZSA9IGRlZXBtZXJnZShzeXN0ZW1UaGVtZSwge1xuICAgIG1peGluczogY3JlYXRlTWl4aW5zKHN5c3RlbVRoZW1lLmJyZWFrcG9pbnRzLCBtaXhpbnNJbnB1dCksXG4gICAgcGFsZXR0ZSxcbiAgICAvLyBEb24ndCB1c2UgWy4uLnNoYWRvd3NdIHVudGlsIHlvdSd2ZSB2ZXJpZmllZCBpdHMgdHJhbnNwaWxlZCBjb2RlIGlzIG5vdCBpbnZva2luZyB0aGUgaXRlcmF0b3IgcHJvdG9jb2wuXG4gICAgc2hhZG93czogc2hhZG93cy5zbGljZSgpLFxuICAgIHR5cG9ncmFwaHk6IGNyZWF0ZVR5cG9ncmFwaHkocGFsZXR0ZSwgdHlwb2dyYXBoeUlucHV0KSxcbiAgICB0cmFuc2l0aW9uczogY3JlYXRlVHJhbnNpdGlvbnModHJhbnNpdGlvbnNJbnB1dCksXG4gICAgekluZGV4OiBfZXh0ZW5kcyh7fSwgekluZGV4KVxuICB9KTtcbiAgbXVpVGhlbWUgPSBkZWVwbWVyZ2UobXVpVGhlbWUsIG90aGVyKTtcbiAgbXVpVGhlbWUgPSBhcmdzLnJlZHVjZSgoYWNjLCBhcmd1bWVudCkgPT4gZGVlcG1lcmdlKGFjYywgYXJndW1lbnQpLCBtdWlUaGVtZSk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBjb25zdCBzdGF0ZUNsYXNzZXMgPSBbJ2FjdGl2ZScsICdjaGVja2VkJywgJ2NvbXBsZXRlZCcsICdkaXNhYmxlZCcsICdlcnJvcicsICdleHBhbmRlZCcsICdmb2N1c2VkJywgJ2ZvY3VzVmlzaWJsZScsICdyZXF1aXJlZCcsICdzZWxlY3RlZCddO1xuXG4gICAgY29uc3QgdHJhdmVyc2UgPSAobm9kZSwgY29tcG9uZW50KSA9PiB7XG4gICAgICBsZXQga2V5OyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluLCBuby1yZXN0cmljdGVkLXN5bnRheFxuXG4gICAgICBmb3IgKGtleSBpbiBub2RlKSB7XG4gICAgICAgIGNvbnN0IGNoaWxkID0gbm9kZVtrZXldO1xuXG4gICAgICAgIGlmIChzdGF0ZUNsYXNzZXMuaW5kZXhPZihrZXkpICE9PSAtMSAmJiBPYmplY3Qua2V5cyhjaGlsZCkubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICBjb25zdCBzdGF0ZUNsYXNzID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJycsIGtleSk7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFtgTVVJOiBUaGUgXFxgJHtjb21wb25lbnR9XFxgIGNvbXBvbmVudCBpbmNyZWFzZXMgYCArIGB0aGUgQ1NTIHNwZWNpZmljaXR5IG9mIHRoZSBcXGAke2tleX1cXGAgaW50ZXJuYWwgc3RhdGUuYCwgJ1lvdSBjYW4gbm90IG92ZXJyaWRlIGl0IGxpa2UgdGhpczogJywgSlNPTi5zdHJpbmdpZnkobm9kZSwgbnVsbCwgMiksICcnLCBgSW5zdGVhZCwgeW91IG5lZWQgdG8gdXNlIHRoZSAnJi4ke3N0YXRlQ2xhc3N9JyBzeW50YXg6YCwgSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICByb290OiB7XG4gICAgICAgICAgICAgICAgW2AmLiR7c3RhdGVDbGFzc31gXTogY2hpbGRcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgbnVsbCwgMiksICcnLCAnaHR0cHM6Ly9tdWkuY29tL3Ivc3RhdGUtY2xhc3Nlcy1ndWlkZSddLmpvaW4oJ1xcbicpKTtcbiAgICAgICAgICB9IC8vIFJlbW92ZSB0aGUgc3R5bGUgdG8gcHJldmVudCBnbG9iYWwgY29uZmxpY3RzLlxuXG5cbiAgICAgICAgICBub2RlW2tleV0gPSB7fTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBPYmplY3Qua2V5cyhtdWlUaGVtZS5jb21wb25lbnRzKS5mb3JFYWNoKGNvbXBvbmVudCA9PiB7XG4gICAgICBjb25zdCBzdHlsZU92ZXJyaWRlcyA9IG11aVRoZW1lLmNvbXBvbmVudHNbY29tcG9uZW50XS5zdHlsZU92ZXJyaWRlcztcblxuICAgICAgaWYgKHN0eWxlT3ZlcnJpZGVzICYmIGNvbXBvbmVudC5pbmRleE9mKCdNdWknKSA9PT0gMCkge1xuICAgICAgICB0cmF2ZXJzZShzdHlsZU92ZXJyaWRlcywgY29tcG9uZW50KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBtdWlUaGVtZTtcbn1cblxubGV0IHdhcm5lZE9uY2UgPSBmYWxzZTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNdWlUaGVtZSguLi5hcmdzKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKCF3YXJuZWRPbmNlKSB7XG4gICAgICB3YXJuZWRPbmNlID0gdHJ1ZTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoWydNVUk6IHRoZSBjcmVhdGVNdWlUaGVtZSBmdW5jdGlvbiB3YXMgcmVuYW1lZCB0byBjcmVhdGVUaGVtZS4nLCAnJywgXCJZb3Ugc2hvdWxkIHVzZSBgaW1wb3J0IHsgY3JlYXRlVGhlbWUgfSBmcm9tICdAbXVpL21hdGVyaWFsL3N0eWxlcydgXCJdLmpvaW4oJ1xcbicpKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY3JlYXRlVGhlbWUoLi4uYXJncyk7XG59XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVUaGVtZTsiLCJpbXBvcnQgY3JlYXRlVGhlbWUgZnJvbSAnLi9jcmVhdGVUaGVtZSc7XG5jb25zdCBkZWZhdWx0VGhlbWUgPSBjcmVhdGVUaGVtZSgpO1xuZXhwb3J0IGRlZmF1bHQgZGVmYXVsdFRoZW1lOyIsImltcG9ydCB7IGNyZWF0ZVN0eWxlZCwgc2hvdWxkRm9yd2FyZFByb3AgfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgZGVmYXVsdFRoZW1lIGZyb20gJy4vZGVmYXVsdFRoZW1lJztcbmV4cG9ydCBjb25zdCByb290U2hvdWxkRm9yd2FyZFByb3AgPSBwcm9wID0+IHNob3VsZEZvcndhcmRQcm9wKHByb3ApICYmIHByb3AgIT09ICdjbGFzc2VzJztcbmV4cG9ydCBjb25zdCBzbG90U2hvdWxkRm9yd2FyZFByb3AgPSBzaG91bGRGb3J3YXJkUHJvcDtcbmNvbnN0IHN0eWxlZCA9IGNyZWF0ZVN0eWxlZCh7XG4gIGRlZmF1bHRUaGVtZSxcbiAgcm9vdFNob3VsZEZvcndhcmRQcm9wXG59KTtcbmV4cG9ydCBkZWZhdWx0IHN0eWxlZDsiLCJpbXBvcnQgeyBpbnRlcm5hbF9yZXNvbHZlUHJvcHMgYXMgcmVzb2x2ZVByb3BzIH0gZnJvbSAnQG11aS91dGlscyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRUaGVtZVByb3BzKHBhcmFtcykge1xuICBjb25zdCB7XG4gICAgdGhlbWUsXG4gICAgbmFtZSxcbiAgICBwcm9wc1xuICB9ID0gcGFyYW1zO1xuXG4gIGlmICghdGhlbWUgfHwgIXRoZW1lLmNvbXBvbmVudHMgfHwgIXRoZW1lLmNvbXBvbmVudHNbbmFtZV0gfHwgIXRoZW1lLmNvbXBvbmVudHNbbmFtZV0uZGVmYXVsdFByb3BzKSB7XG4gICAgcmV0dXJuIHByb3BzO1xuICB9XG5cbiAgcmV0dXJuIHJlc29sdmVQcm9wcyh0aGVtZS5jb21wb25lbnRzW25hbWVdLmRlZmF1bHRQcm9wcywgcHJvcHMpO1xufSIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmNvbnN0IFRoZW1lQ29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBUaGVtZUNvbnRleHQuZGlzcGxheU5hbWUgPSAnVGhlbWVDb250ZXh0Jztcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGhlbWVDb250ZXh0OyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBUaGVtZUNvbnRleHQgZnJvbSAnLi9UaGVtZUNvbnRleHQnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlVGhlbWUoKSB7XG4gIGNvbnN0IHRoZW1lID0gUmVhY3QudXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzXG4gICAgUmVhY3QudXNlRGVidWdWYWx1ZSh0aGVtZSk7XG4gIH1cblxuICByZXR1cm4gdGhlbWU7XG59IiwiaW1wb3J0IHsgdXNlVGhlbWUgYXMgbXVpVXNlVGhlbWUgfSBmcm9tICdAbXVpL3ByaXZhdGUtdGhlbWluZyc7XG5cbmZ1bmN0aW9uIGlzT2JqZWN0RW1wdHkob2JqKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gMDtcbn1cblxuZnVuY3Rpb24gdXNlVGhlbWUoZGVmYXVsdFRoZW1lID0gbnVsbCkge1xuICBjb25zdCBjb250ZXh0VGhlbWUgPSBtdWlVc2VUaGVtZSgpO1xuICByZXR1cm4gIWNvbnRleHRUaGVtZSB8fCBpc09iamVjdEVtcHR5KGNvbnRleHRUaGVtZSkgPyBkZWZhdWx0VGhlbWUgOiBjb250ZXh0VGhlbWU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVRoZW1lOyIsImltcG9ydCBjcmVhdGVUaGVtZSBmcm9tICcuL2NyZWF0ZVRoZW1lJztcbmltcG9ydCB1c2VUaGVtZVdpdGhvdXREZWZhdWx0IGZyb20gJy4vdXNlVGhlbWVXaXRob3V0RGVmYXVsdCc7XG5leHBvcnQgY29uc3Qgc3lzdGVtRGVmYXVsdFRoZW1lID0gY3JlYXRlVGhlbWUoKTtcblxuZnVuY3Rpb24gdXNlVGhlbWUoZGVmYXVsdFRoZW1lID0gc3lzdGVtRGVmYXVsdFRoZW1lKSB7XG4gIHJldHVybiB1c2VUaGVtZVdpdGhvdXREZWZhdWx0KGRlZmF1bHRUaGVtZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVRoZW1lOyIsImltcG9ydCBnZXRUaGVtZVByb3BzIGZyb20gJy4vZ2V0VGhlbWVQcm9wcyc7XG5pbXBvcnQgdXNlVGhlbWUgZnJvbSAnLi4vdXNlVGhlbWUnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlVGhlbWVQcm9wcyh7XG4gIHByb3BzLFxuICBuYW1lLFxuICBkZWZhdWx0VGhlbWVcbn0pIHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZShkZWZhdWx0VGhlbWUpO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IGdldFRoZW1lUHJvcHMoe1xuICAgIHRoZW1lLFxuICAgIG5hbWUsXG4gICAgcHJvcHNcbiAgfSk7XG4gIHJldHVybiBtZXJnZWRQcm9wcztcbn0iLCJpbXBvcnQgeyB1c2VUaGVtZVByb3BzIGFzIHN5c3RlbVVzZVRoZW1lUHJvcHMgfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgZGVmYXVsdFRoZW1lIGZyb20gJy4vZGVmYXVsdFRoZW1lJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVRoZW1lUHJvcHMoe1xuICBwcm9wcyxcbiAgbmFtZVxufSkge1xuICByZXR1cm4gc3lzdGVtVXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHMsXG4gICAgbmFtZSxcbiAgICBkZWZhdWx0VGhlbWVcbiAgfSk7XG59IiwiLyoqXG4gKiBUT0RPIHY1OiBjb25zaWRlciBtYWtpbmcgaXQgcHJpdmF0ZVxuICpcbiAqIHBhc3NlcyB7dmFsdWV9IHRvIHtyZWZ9XG4gKlxuICogV0FSTklORzogQmUgc3VyZSB0byBvbmx5IGNhbGwgdGhpcyBpbnNpZGUgYSBjYWxsYmFjayB0aGF0IGlzIHBhc3NlZCBhcyBhIHJlZi5cbiAqIE90aGVyd2lzZSwgbWFrZSBzdXJlIHRvIGNsZWFudXAgdGhlIHByZXZpb3VzIHtyZWZ9IGlmIGl0IGNoYW5nZXMuIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL211aS9tYXRlcmlhbC11aS9pc3N1ZXMvMTM1MzlcbiAqXG4gKiBVc2VmdWwgaWYgeW91IHdhbnQgdG8gZXhwb3NlIHRoZSByZWYgb2YgYW4gaW5uZXIgY29tcG9uZW50IHRvIHRoZSBwdWJsaWMgQVBJXG4gKiB3aGlsZSBzdGlsbCB1c2luZyBpdCBpbnNpZGUgdGhlIGNvbXBvbmVudC5cbiAqIEBwYXJhbSByZWYgQSByZWYgY2FsbGJhY2sgb3IgcmVmIG9iamVjdC4gSWYgYW55dGhpbmcgZmFsc3ksIHRoaXMgaXMgYSBuby1vcC5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0UmVmKHJlZiwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiByZWYgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZWYodmFsdWUpO1xuICB9IGVsc2UgaWYgKHJlZikge1xuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gIH1cbn0iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc2V0UmVmIGZyb20gJy4vc2V0UmVmJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZUZvcmtSZWYocmVmQSwgcmVmQikge1xuICAvKipcbiAgICogVGhpcyB3aWxsIGNyZWF0ZSBhIG5ldyBmdW5jdGlvbiBpZiB0aGUgcmVmIHByb3BzIGNoYW5nZSBhbmQgYXJlIGRlZmluZWQuXG4gICAqIFRoaXMgbWVhbnMgcmVhY3Qgd2lsbCBjYWxsIHRoZSBvbGQgZm9ya1JlZiB3aXRoIGBudWxsYCBhbmQgdGhlIG5ldyBmb3JrUmVmXG4gICAqIHdpdGggdGhlIHJlZi4gQ2xlYW51cCBuYXR1cmFsbHkgZW1lcmdlcyBmcm9tIHRoaXMgYmVoYXZpb3IuXG4gICAqL1xuICByZXR1cm4gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgaWYgKHJlZkEgPT0gbnVsbCAmJiByZWZCID09IG51bGwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZWZWYWx1ZSA9PiB7XG4gICAgICBzZXRSZWYocmVmQSwgcmVmVmFsdWUpO1xuICAgICAgc2V0UmVmKHJlZkIsIHJlZlZhbHVlKTtcbiAgICB9O1xuICB9LCBbcmVmQSwgcmVmQl0pO1xufSIsImltcG9ydCB7IHVuc3RhYmxlX3VzZUZvcmtSZWYgYXMgdXNlRm9ya1JlZiB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgdXNlRm9ya1JlZjsiLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5jb25zdCB1c2VFbmhhbmNlZEVmZmVjdCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gUmVhY3QudXNlTGF5b3V0RWZmZWN0IDogUmVhY3QudXNlRWZmZWN0O1xuZXhwb3J0IGRlZmF1bHQgdXNlRW5oYW5jZWRFZmZlY3Q7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUVuaGFuY2VkRWZmZWN0IGZyb20gJy4vdXNlRW5oYW5jZWRFZmZlY3QnO1xuLyoqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzE0MDk5I2lzc3VlY29tbWVudC00NDAwMTM4OTJcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VFdmVudENhbGxiYWNrKGZuKSB7XG4gIGNvbnN0IHJlZiA9IFJlYWN0LnVzZVJlZihmbik7XG4gIHVzZUVuaGFuY2VkRWZmZWN0KCgpID0+IHtcbiAgICByZWYuY3VycmVudCA9IGZuO1xuICB9KTtcbiAgcmV0dXJuIFJlYWN0LnVzZUNhbGxiYWNrKCguLi5hcmdzKSA9PiAvLyBAdHMtZXhwZWN0LWVycm9yIGhpZGUgYHRoaXNgXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpiYW4tY29tbWEtb3BlcmF0b3JcbiAgKDAsIHJlZi5jdXJyZW50KSguLi5hcmdzKSwgW10pO1xufSIsImltcG9ydCB7IHVuc3RhYmxlX3VzZUV2ZW50Q2FsbGJhY2sgYXMgdXNlRXZlbnRDYWxsYmFjayB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgdXNlRXZlbnRDYWxsYmFjazsiLCIvLyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vV0lDRy9mb2N1cy12aXNpYmxlL2Jsb2IvdjQuMS41L3NyYy9mb2N1cy12aXNpYmxlLmpzXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5sZXQgaGFkS2V5Ym9hcmRFdmVudCA9IHRydWU7XG5sZXQgaGFkRm9jdXNWaXNpYmxlUmVjZW50bHkgPSBmYWxzZTtcbmxldCBoYWRGb2N1c1Zpc2libGVSZWNlbnRseVRpbWVvdXQ7XG5jb25zdCBpbnB1dFR5cGVzV2hpdGVsaXN0ID0ge1xuICB0ZXh0OiB0cnVlLFxuICBzZWFyY2g6IHRydWUsXG4gIHVybDogdHJ1ZSxcbiAgdGVsOiB0cnVlLFxuICBlbWFpbDogdHJ1ZSxcbiAgcGFzc3dvcmQ6IHRydWUsXG4gIG51bWJlcjogdHJ1ZSxcbiAgZGF0ZTogdHJ1ZSxcbiAgbW9udGg6IHRydWUsXG4gIHdlZWs6IHRydWUsXG4gIHRpbWU6IHRydWUsXG4gIGRhdGV0aW1lOiB0cnVlLFxuICAnZGF0ZXRpbWUtbG9jYWwnOiB0cnVlXG59O1xuLyoqXG4gKiBDb21wdXRlcyB3aGV0aGVyIHRoZSBnaXZlbiBlbGVtZW50IHNob3VsZCBhdXRvbWF0aWNhbGx5IHRyaWdnZXIgdGhlXG4gKiBgZm9jdXMtdmlzaWJsZWAgY2xhc3MgYmVpbmcgYWRkZWQsIGkuZS4gd2hldGhlciBpdCBzaG91bGQgYWx3YXlzIG1hdGNoXG4gKiBgOmZvY3VzLXZpc2libGVgIHdoZW4gZm9jdXNlZC5cbiAqIEBwYXJhbSB7RWxlbWVudH0gbm9kZVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cblxuZnVuY3Rpb24gZm9jdXNUcmlnZ2Vyc0tleWJvYXJkTW9kYWxpdHkobm9kZSkge1xuICBjb25zdCB7XG4gICAgdHlwZSxcbiAgICB0YWdOYW1lXG4gIH0gPSBub2RlO1xuXG4gIGlmICh0YWdOYW1lID09PSAnSU5QVVQnICYmIGlucHV0VHlwZXNXaGl0ZWxpc3RbdHlwZV0gJiYgIW5vZGUucmVhZE9ubHkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0YWdOYW1lID09PSAnVEVYVEFSRUEnICYmICFub2RlLnJlYWRPbmx5KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAobm9kZS5pc0NvbnRlbnRFZGl0YWJsZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKiBLZWVwIHRyYWNrIG9mIG91ciBrZXlib2FyZCBtb2RhbGl0eSBzdGF0ZSB3aXRoIGBoYWRLZXlib2FyZEV2ZW50YC5cbiAqIElmIHRoZSBtb3N0IHJlY2VudCB1c2VyIGludGVyYWN0aW9uIHdhcyB2aWEgdGhlIGtleWJvYXJkO1xuICogYW5kIHRoZSBrZXkgcHJlc3MgZGlkIG5vdCBpbmNsdWRlIGEgbWV0YSwgYWx0L29wdGlvbiwgb3IgY29udHJvbCBrZXk7XG4gKiB0aGVuIHRoZSBtb2RhbGl0eSBpcyBrZXlib2FyZC4gT3RoZXJ3aXNlLCB0aGUgbW9kYWxpdHkgaXMgbm90IGtleWJvYXJkLlxuICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBldmVudFxuICovXG5cblxuZnVuY3Rpb24gaGFuZGxlS2V5RG93bihldmVudCkge1xuICBpZiAoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGhhZEtleWJvYXJkRXZlbnQgPSB0cnVlO1xufVxuLyoqXG4gKiBJZiBhdCBhbnkgcG9pbnQgYSB1c2VyIGNsaWNrcyB3aXRoIGEgcG9pbnRpbmcgZGV2aWNlLCBlbnN1cmUgdGhhdCB3ZSBjaGFuZ2VcbiAqIHRoZSBtb2RhbGl0eSBhd2F5IGZyb20ga2V5Ym9hcmQuXG4gKiBUaGlzIGF2b2lkcyB0aGUgc2l0dWF0aW9uIHdoZXJlIGEgdXNlciBwcmVzc2VzIGEga2V5IG9uIGFuIGFscmVhZHkgZm9jdXNlZFxuICogZWxlbWVudCwgYW5kIHRoZW4gY2xpY2tzIG9uIGEgZGlmZmVyZW50IGVsZW1lbnQsIGZvY3VzaW5nIGl0IHdpdGggYVxuICogcG9pbnRpbmcgZGV2aWNlLCB3aGlsZSB3ZSBzdGlsbCB0aGluayB3ZSdyZSBpbiBrZXlib2FyZCBtb2RhbGl0eS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGhhbmRsZVBvaW50ZXJEb3duKCkge1xuICBoYWRLZXlib2FyZEV2ZW50ID0gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVZpc2liaWxpdHlDaGFuZ2UoKSB7XG4gIGlmICh0aGlzLnZpc2liaWxpdHlTdGF0ZSA9PT0gJ2hpZGRlbicpIHtcbiAgICAvLyBJZiB0aGUgdGFiIGJlY29tZXMgYWN0aXZlIGFnYWluLCB0aGUgYnJvd3NlciB3aWxsIGhhbmRsZSBjYWxsaW5nIGZvY3VzXG4gICAgLy8gb24gdGhlIGVsZW1lbnQgKFNhZmFyaSBhY3R1YWxseSBjYWxscyBpdCB0d2ljZSkuXG4gICAgLy8gSWYgdGhpcyB0YWIgY2hhbmdlIGNhdXNlZCBhIGJsdXIgb24gYW4gZWxlbWVudCB3aXRoIGZvY3VzLXZpc2libGUsXG4gICAgLy8gcmUtYXBwbHkgdGhlIGNsYXNzIHdoZW4gdGhlIHVzZXIgc3dpdGNoZXMgYmFjayB0byB0aGUgdGFiLlxuICAgIGlmIChoYWRGb2N1c1Zpc2libGVSZWNlbnRseSkge1xuICAgICAgaGFkS2V5Ym9hcmRFdmVudCA9IHRydWU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHByZXBhcmUoZG9jKSB7XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5RG93biwgdHJ1ZSk7XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVQb2ludGVyRG93biwgdHJ1ZSk7XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVyZG93bicsIGhhbmRsZVBvaW50ZXJEb3duLCB0cnVlKTtcbiAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBoYW5kbGVQb2ludGVyRG93biwgdHJ1ZSk7XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSwgdHJ1ZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0ZWFyZG93bihkb2MpIHtcbiAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBoYW5kbGVLZXlEb3duLCB0cnVlKTtcbiAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGhhbmRsZVBvaW50ZXJEb3duLCB0cnVlKTtcbiAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJkb3duJywgaGFuZGxlUG9pbnRlckRvd24sIHRydWUpO1xuICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGhhbmRsZVBvaW50ZXJEb3duLCB0cnVlKTtcbiAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBoYW5kbGVWaXNpYmlsaXR5Q2hhbmdlLCB0cnVlKTtcbn1cblxuZnVuY3Rpb24gaXNGb2N1c1Zpc2libGUoZXZlbnQpIHtcbiAgY29uc3Qge1xuICAgIHRhcmdldFxuICB9ID0gZXZlbnQ7XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gdGFyZ2V0Lm1hdGNoZXMoJzpmb2N1cy12aXNpYmxlJyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7Ly8gQnJvd3NlcnMgbm90IGltcGxlbWVudGluZyA6Zm9jdXMtdmlzaWJsZSB3aWxsIHRocm93IGEgU3ludGF4RXJyb3IuXG4gICAgLy8gV2UgdXNlIG91ciBvd24gaGV1cmlzdGljIGZvciB0aG9zZSBicm93c2Vycy5cbiAgICAvLyBSZXRocm93IG1pZ2h0IGJlIGJldHRlciBpZiBpdCdzIG5vdCB0aGUgZXhwZWN0ZWQgZXJyb3IgYnV0IGRvIHdlIHJlYWxseVxuICAgIC8vIHdhbnQgdG8gY3Jhc2ggaWYgZm9jdXMtdmlzaWJsZSBtYWxmdW5jdGlvbmVkP1xuICB9IC8vIE5vIG5lZWQgZm9yIHZhbGlkRm9jdXNUYXJnZXQgY2hlY2suIFRoZSB1c2VyIGRvZXMgdGhhdCBieSBhdHRhY2hpbmcgaXQgdG9cbiAgLy8gZm9jdXNhYmxlIGV2ZW50cyBvbmx5LlxuXG5cbiAgcmV0dXJuIGhhZEtleWJvYXJkRXZlbnQgfHwgZm9jdXNUcmlnZ2Vyc0tleWJvYXJkTW9kYWxpdHkodGFyZ2V0KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlSXNGb2N1c1Zpc2libGUoKSB7XG4gIGNvbnN0IHJlZiA9IFJlYWN0LnVzZUNhbGxiYWNrKG5vZGUgPT4ge1xuICAgIGlmIChub2RlICE9IG51bGwpIHtcbiAgICAgIHByZXBhcmUobm9kZS5vd25lckRvY3VtZW50KTtcbiAgICB9XG4gIH0sIFtdKTtcbiAgY29uc3QgaXNGb2N1c1Zpc2libGVSZWYgPSBSZWFjdC51c2VSZWYoZmFsc2UpO1xuICAvKipcbiAgICogU2hvdWxkIGJlIGNhbGxlZCBpZiBhIGJsdXIgZXZlbnQgaXMgZmlyZWRcbiAgICovXG5cbiAgZnVuY3Rpb24gaGFuZGxlQmx1clZpc2libGUoKSB7XG4gICAgLy8gY2hlY2tpbmcgYWdhaW5zdCBwb3RlbnRpYWwgc3RhdGUgdmFyaWFibGUgZG9lcyBub3Qgc3VmZmljZSBpZiB3ZSBmb2N1cyBhbmQgYmx1ciBzeW5jaHJvbm91c2x5LlxuICAgIC8vIFJlYWN0IHdvdWxkbid0IGhhdmUgdGltZSB0byB0cmlnZ2VyIGEgcmUtcmVuZGVyIHNvIGBmb2N1c1Zpc2libGVgIHdvdWxkIGJlIHN0YWxlLlxuICAgIC8vIElkZWFsbHkgd2Ugd291bGQgYWRqdXN0IGBpc0ZvY3VzVmlzaWJsZShldmVudClgIHRvIGxvb2sgYXQgYHJlbGF0ZWRUYXJnZXRgIGZvciBibHVyIGV2ZW50cy5cbiAgICAvLyBUaGlzIGRvZXNuJ3Qgd29yayBpbiBJRTExIGR1ZSB0byBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzM3NTFcbiAgICAvLyBUT0RPOiBjaGVjayBhZ2FpbiBpZiBSZWFjdCByZWxlYXNlcyB0aGVpciBpbnRlcm5hbCBjaGFuZ2VzIHRvIGZvY3VzIGV2ZW50IGhhbmRsaW5nIChodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvcHVsbC8xOTE4NikuXG4gICAgaWYgKGlzRm9jdXNWaXNpYmxlUmVmLmN1cnJlbnQpIHtcbiAgICAgIC8vIFRvIGRldGVjdCBhIHRhYi93aW5kb3cgc3dpdGNoLCB3ZSBsb29rIGZvciBhIGJsdXIgZXZlbnQgZm9sbG93ZWRcbiAgICAgIC8vIHJhcGlkbHkgYnkgYSB2aXNpYmlsaXR5IGNoYW5nZS5cbiAgICAgIC8vIElmIHdlIGRvbid0IHNlZSBhIHZpc2liaWxpdHkgY2hhbmdlIHdpdGhpbiAxMDBtcywgaXQncyBwcm9iYWJseSBhXG4gICAgICAvLyByZWd1bGFyIGZvY3VzIGNoYW5nZS5cbiAgICAgIGhhZEZvY3VzVmlzaWJsZVJlY2VudGx5ID0gdHJ1ZTtcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoaGFkRm9jdXNWaXNpYmxlUmVjZW50bHlUaW1lb3V0KTtcbiAgICAgIGhhZEZvY3VzVmlzaWJsZVJlY2VudGx5VGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaGFkRm9jdXNWaXNpYmxlUmVjZW50bHkgPSBmYWxzZTtcbiAgICAgIH0sIDEwMCk7XG4gICAgICBpc0ZvY3VzVmlzaWJsZVJlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLyoqXG4gICAqIFNob3VsZCBiZSBjYWxsZWQgaWYgYSBibHVyIGV2ZW50IGlzIGZpcmVkXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gaGFuZGxlRm9jdXNWaXNpYmxlKGV2ZW50KSB7XG4gICAgaWYgKGlzRm9jdXNWaXNpYmxlKGV2ZW50KSkge1xuICAgICAgaXNGb2N1c1Zpc2libGVSZWYuY3VycmVudCA9IHRydWU7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGlzRm9jdXNWaXNpYmxlUmVmLFxuICAgIG9uRm9jdXM6IGhhbmRsZUZvY3VzVmlzaWJsZSxcbiAgICBvbkJsdXI6IGhhbmRsZUJsdXJWaXNpYmxlLFxuICAgIHJlZlxuICB9O1xufSIsImltcG9ydCB7IHVuc3RhYmxlX3VzZUlzRm9jdXNWaXNpYmxlIGFzIHVzZUlzRm9jdXNWaXNpYmxlIH0gZnJvbSAnQG11aS91dGlscyc7XG5leHBvcnQgZGVmYXVsdCB1c2VJc0ZvY3VzVmlzaWJsZTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIG8uX19wcm90b19fID0gcDtcbiAgICByZXR1cm4gbztcbiAgfTtcbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn0iLCJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vc2V0UHJvdG90eXBlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5leHBvcnQgZGVmYXVsdCBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpOyIsImltcG9ydCB7IENoaWxkcmVuLCBjbG9uZUVsZW1lbnQsIGlzVmFsaWRFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuLyoqXG4gKiBHaXZlbiBgdGhpcy5wcm9wcy5jaGlsZHJlbmAsIHJldHVybiBhbiBvYmplY3QgbWFwcGluZyBrZXkgdG8gY2hpbGQuXG4gKlxuICogQHBhcmFtIHsqfSBjaGlsZHJlbiBgdGhpcy5wcm9wcy5jaGlsZHJlbmBcbiAqIEByZXR1cm4ge29iamVjdH0gTWFwcGluZyBvZiBrZXkgdG8gY2hpbGRcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hpbGRNYXBwaW5nKGNoaWxkcmVuLCBtYXBGbikge1xuICB2YXIgbWFwcGVyID0gZnVuY3Rpb24gbWFwcGVyKGNoaWxkKSB7XG4gICAgcmV0dXJuIG1hcEZuICYmIGlzVmFsaWRFbGVtZW50KGNoaWxkKSA/IG1hcEZuKGNoaWxkKSA6IGNoaWxkO1xuICB9O1xuXG4gIHZhciByZXN1bHQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICBpZiAoY2hpbGRyZW4pIENoaWxkcmVuLm1hcChjaGlsZHJlbiwgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gYztcbiAgfSkuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAvLyBydW4gdGhlIG1hcCBmdW5jdGlvbiBoZXJlIGluc3RlYWQgc28gdGhhdCB0aGUga2V5IGlzIHRoZSBjb21wdXRlZCBvbmVcbiAgICByZXN1bHRbY2hpbGQua2V5XSA9IG1hcHBlcihjaGlsZCk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBXaGVuIHlvdSdyZSBhZGRpbmcgb3IgcmVtb3ZpbmcgY2hpbGRyZW4gc29tZSBtYXkgYmUgYWRkZWQgb3IgcmVtb3ZlZCBpbiB0aGVcbiAqIHNhbWUgcmVuZGVyIHBhc3MuIFdlIHdhbnQgdG8gc2hvdyAqYm90aCogc2luY2Ugd2Ugd2FudCB0byBzaW11bHRhbmVvdXNseVxuICogYW5pbWF0ZSBlbGVtZW50cyBpbiBhbmQgb3V0LiBUaGlzIGZ1bmN0aW9uIHRha2VzIGEgcHJldmlvdXMgc2V0IG9mIGtleXNcbiAqIGFuZCBhIG5ldyBzZXQgb2Yga2V5cyBhbmQgbWVyZ2VzIHRoZW0gd2l0aCBpdHMgYmVzdCBndWVzcyBvZiB0aGUgY29ycmVjdFxuICogb3JkZXJpbmcuIEluIHRoZSBmdXR1cmUgd2UgbWF5IGV4cG9zZSBzb21lIG9mIHRoZSB1dGlsaXRpZXMgaW5cbiAqIFJlYWN0TXVsdGlDaGlsZCB0byBtYWtlIHRoaXMgZWFzeSwgYnV0IGZvciBub3cgUmVhY3QgaXRzZWxmIGRvZXMgbm90XG4gKiBkaXJlY3RseSBoYXZlIHRoaXMgY29uY2VwdCBvZiB0aGUgdW5pb24gb2YgcHJldkNoaWxkcmVuIGFuZCBuZXh0Q2hpbGRyZW5cbiAqIHNvIHdlIGltcGxlbWVudCBpdCBoZXJlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcmV2IHByZXYgY2hpbGRyZW4gYXMgcmV0dXJuZWQgZnJvbVxuICogYFJlYWN0VHJhbnNpdGlvbkNoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcoKWAuXG4gKiBAcGFyYW0ge29iamVjdH0gbmV4dCBuZXh0IGNoaWxkcmVuIGFzIHJldHVybmVkIGZyb21cbiAqIGBSZWFjdFRyYW5zaXRpb25DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKClgLlxuICogQHJldHVybiB7b2JqZWN0fSBhIGtleSBzZXQgdGhhdCBjb250YWlucyBhbGwga2V5cyBpbiBgcHJldmAgYW5kIGFsbCBrZXlzXG4gKiBpbiBgbmV4dGAgaW4gYSByZWFzb25hYmxlIG9yZGVyLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUNoaWxkTWFwcGluZ3MocHJldiwgbmV4dCkge1xuICBwcmV2ID0gcHJldiB8fCB7fTtcbiAgbmV4dCA9IG5leHQgfHwge307XG5cbiAgZnVuY3Rpb24gZ2V0VmFsdWVGb3JLZXkoa2V5KSB7XG4gICAgcmV0dXJuIGtleSBpbiBuZXh0ID8gbmV4dFtrZXldIDogcHJldltrZXldO1xuICB9IC8vIEZvciBlYWNoIGtleSBvZiBgbmV4dGAsIHRoZSBsaXN0IG9mIGtleXMgdG8gaW5zZXJ0IGJlZm9yZSB0aGF0IGtleSBpblxuICAvLyB0aGUgY29tYmluZWQgbGlzdFxuXG5cbiAgdmFyIG5leHRLZXlzUGVuZGluZyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBwZW5kaW5nS2V5cyA9IFtdO1xuXG4gIGZvciAodmFyIHByZXZLZXkgaW4gcHJldikge1xuICAgIGlmIChwcmV2S2V5IGluIG5leHQpIHtcbiAgICAgIGlmIChwZW5kaW5nS2V5cy5sZW5ndGgpIHtcbiAgICAgICAgbmV4dEtleXNQZW5kaW5nW3ByZXZLZXldID0gcGVuZGluZ0tleXM7XG4gICAgICAgIHBlbmRpbmdLZXlzID0gW107XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBlbmRpbmdLZXlzLnB1c2gocHJldktleSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGk7XG4gIHZhciBjaGlsZE1hcHBpbmcgPSB7fTtcblxuICBmb3IgKHZhciBuZXh0S2V5IGluIG5leHQpIHtcbiAgICBpZiAobmV4dEtleXNQZW5kaW5nW25leHRLZXldKSB7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbmV4dEtleXNQZW5kaW5nW25leHRLZXldLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBwZW5kaW5nTmV4dEtleSA9IG5leHRLZXlzUGVuZGluZ1tuZXh0S2V5XVtpXTtcbiAgICAgICAgY2hpbGRNYXBwaW5nW25leHRLZXlzUGVuZGluZ1tuZXh0S2V5XVtpXV0gPSBnZXRWYWx1ZUZvcktleShwZW5kaW5nTmV4dEtleSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY2hpbGRNYXBwaW5nW25leHRLZXldID0gZ2V0VmFsdWVGb3JLZXkobmV4dEtleSk7XG4gIH0gLy8gRmluYWxseSwgYWRkIHRoZSBrZXlzIHdoaWNoIGRpZG4ndCBhcHBlYXIgYmVmb3JlIGFueSBrZXkgaW4gYG5leHRgXG5cblxuICBmb3IgKGkgPSAwOyBpIDwgcGVuZGluZ0tleXMubGVuZ3RoOyBpKyspIHtcbiAgICBjaGlsZE1hcHBpbmdbcGVuZGluZ0tleXNbaV1dID0gZ2V0VmFsdWVGb3JLZXkocGVuZGluZ0tleXNbaV0pO1xuICB9XG5cbiAgcmV0dXJuIGNoaWxkTWFwcGluZztcbn1cblxuZnVuY3Rpb24gZ2V0UHJvcChjaGlsZCwgcHJvcCwgcHJvcHMpIHtcbiAgcmV0dXJuIHByb3BzW3Byb3BdICE9IG51bGwgPyBwcm9wc1twcm9wXSA6IGNoaWxkLnByb3BzW3Byb3BdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SW5pdGlhbENoaWxkTWFwcGluZyhwcm9wcywgb25FeGl0ZWQpIHtcbiAgcmV0dXJuIGdldENoaWxkTWFwcGluZyhwcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgcmV0dXJuIGNsb25lRWxlbWVudChjaGlsZCwge1xuICAgICAgb25FeGl0ZWQ6IG9uRXhpdGVkLmJpbmQobnVsbCwgY2hpbGQpLFxuICAgICAgaW46IHRydWUsXG4gICAgICBhcHBlYXI6IGdldFByb3AoY2hpbGQsICdhcHBlYXInLCBwcm9wcyksXG4gICAgICBlbnRlcjogZ2V0UHJvcChjaGlsZCwgJ2VudGVyJywgcHJvcHMpLFxuICAgICAgZXhpdDogZ2V0UHJvcChjaGlsZCwgJ2V4aXQnLCBwcm9wcylcbiAgICB9KTtcbiAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TmV4dENoaWxkTWFwcGluZyhuZXh0UHJvcHMsIHByZXZDaGlsZE1hcHBpbmcsIG9uRXhpdGVkKSB7XG4gIHZhciBuZXh0Q2hpbGRNYXBwaW5nID0gZ2V0Q2hpbGRNYXBwaW5nKG5leHRQcm9wcy5jaGlsZHJlbik7XG4gIHZhciBjaGlsZHJlbiA9IG1lcmdlQ2hpbGRNYXBwaW5ncyhwcmV2Q2hpbGRNYXBwaW5nLCBuZXh0Q2hpbGRNYXBwaW5nKTtcbiAgT2JqZWN0LmtleXMoY2hpbGRyZW4pLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBjaGlsZCA9IGNoaWxkcmVuW2tleV07XG4gICAgaWYgKCFpc1ZhbGlkRWxlbWVudChjaGlsZCkpIHJldHVybjtcbiAgICB2YXIgaGFzUHJldiA9IChrZXkgaW4gcHJldkNoaWxkTWFwcGluZyk7XG4gICAgdmFyIGhhc05leHQgPSAoa2V5IGluIG5leHRDaGlsZE1hcHBpbmcpO1xuICAgIHZhciBwcmV2Q2hpbGQgPSBwcmV2Q2hpbGRNYXBwaW5nW2tleV07XG4gICAgdmFyIGlzTGVhdmluZyA9IGlzVmFsaWRFbGVtZW50KHByZXZDaGlsZCkgJiYgIXByZXZDaGlsZC5wcm9wcy5pbjsgLy8gaXRlbSBpcyBuZXcgKGVudGVyaW5nKVxuXG4gICAgaWYgKGhhc05leHQgJiYgKCFoYXNQcmV2IHx8IGlzTGVhdmluZykpIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdlbnRlcmluZycsIGtleSlcbiAgICAgIGNoaWxkcmVuW2tleV0gPSBjbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgICAgb25FeGl0ZWQ6IG9uRXhpdGVkLmJpbmQobnVsbCwgY2hpbGQpLFxuICAgICAgICBpbjogdHJ1ZSxcbiAgICAgICAgZXhpdDogZ2V0UHJvcChjaGlsZCwgJ2V4aXQnLCBuZXh0UHJvcHMpLFxuICAgICAgICBlbnRlcjogZ2V0UHJvcChjaGlsZCwgJ2VudGVyJywgbmV4dFByb3BzKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICghaGFzTmV4dCAmJiBoYXNQcmV2ICYmICFpc0xlYXZpbmcpIHtcbiAgICAgIC8vIGl0ZW0gaXMgb2xkIChleGl0aW5nKVxuICAgICAgLy8gY29uc29sZS5sb2coJ2xlYXZpbmcnLCBrZXkpXG4gICAgICBjaGlsZHJlbltrZXldID0gY2xvbmVFbGVtZW50KGNoaWxkLCB7XG4gICAgICAgIGluOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChoYXNOZXh0ICYmIGhhc1ByZXYgJiYgaXNWYWxpZEVsZW1lbnQocHJldkNoaWxkKSkge1xuICAgICAgLy8gaXRlbSBoYXNuJ3QgY2hhbmdlZCB0cmFuc2l0aW9uIHN0YXRlc1xuICAgICAgLy8gY29weSBvdmVyIHRoZSBsYXN0IHRyYW5zaXRpb24gcHJvcHM7XG4gICAgICAvLyBjb25zb2xlLmxvZygndW5jaGFuZ2VkJywga2V5KVxuICAgICAgY2hpbGRyZW5ba2V5XSA9IGNsb25lRWxlbWVudChjaGlsZCwge1xuICAgICAgICBvbkV4aXRlZDogb25FeGl0ZWQuYmluZChudWxsLCBjaGlsZCksXG4gICAgICAgIGluOiBwcmV2Q2hpbGQucHJvcHMuaW4sXG4gICAgICAgIGV4aXQ6IGdldFByb3AoY2hpbGQsICdleGl0JywgbmV4dFByb3BzKSxcbiAgICAgICAgZW50ZXI6IGdldFByb3AoY2hpbGQsICdlbnRlcicsIG5leHRQcm9wcylcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjaGlsZHJlbjtcbn0iLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZFwiO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBUcmFuc2l0aW9uR3JvdXBDb250ZXh0IGZyb20gJy4vVHJhbnNpdGlvbkdyb3VwQ29udGV4dCc7XG5pbXBvcnQgeyBnZXRDaGlsZE1hcHBpbmcsIGdldEluaXRpYWxDaGlsZE1hcHBpbmcsIGdldE5leHRDaGlsZE1hcHBpbmcgfSBmcm9tICcuL3V0aWxzL0NoaWxkTWFwcGluZyc7XG5cbnZhciB2YWx1ZXMgPSBPYmplY3QudmFsdWVzIHx8IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uIChrKSB7XG4gICAgcmV0dXJuIG9ialtrXTtcbiAgfSk7XG59O1xuXG52YXIgZGVmYXVsdFByb3BzID0ge1xuICBjb21wb25lbnQ6ICdkaXYnLFxuICBjaGlsZEZhY3Rvcnk6IGZ1bmN0aW9uIGNoaWxkRmFjdG9yeShjaGlsZCkge1xuICAgIHJldHVybiBjaGlsZDtcbiAgfVxufTtcbi8qKlxuICogVGhlIGA8VHJhbnNpdGlvbkdyb3VwPmAgY29tcG9uZW50IG1hbmFnZXMgYSBzZXQgb2YgdHJhbnNpdGlvbiBjb21wb25lbnRzXG4gKiAoYDxUcmFuc2l0aW9uPmAgYW5kIGA8Q1NTVHJhbnNpdGlvbj5gKSBpbiBhIGxpc3QuIExpa2Ugd2l0aCB0aGUgdHJhbnNpdGlvblxuICogY29tcG9uZW50cywgYDxUcmFuc2l0aW9uR3JvdXA+YCBpcyBhIHN0YXRlIG1hY2hpbmUgZm9yIG1hbmFnaW5nIHRoZSBtb3VudGluZ1xuICogYW5kIHVubW91bnRpbmcgb2YgY29tcG9uZW50cyBvdmVyIHRpbWUuXG4gKlxuICogQ29uc2lkZXIgdGhlIGV4YW1wbGUgYmVsb3cuIEFzIGl0ZW1zIGFyZSByZW1vdmVkIG9yIGFkZGVkIHRvIHRoZSBUb2RvTGlzdCB0aGVcbiAqIGBpbmAgcHJvcCBpcyB0b2dnbGVkIGF1dG9tYXRpY2FsbHkgYnkgdGhlIGA8VHJhbnNpdGlvbkdyb3VwPmAuXG4gKlxuICogTm90ZSB0aGF0IGA8VHJhbnNpdGlvbkdyb3VwPmAgIGRvZXMgbm90IGRlZmluZSBhbnkgYW5pbWF0aW9uIGJlaGF2aW9yIVxuICogRXhhY3RseSBfaG93XyBhIGxpc3QgaXRlbSBhbmltYXRlcyBpcyB1cCB0byB0aGUgaW5kaXZpZHVhbCB0cmFuc2l0aW9uXG4gKiBjb21wb25lbnQuIFRoaXMgbWVhbnMgeW91IGNhbiBtaXggYW5kIG1hdGNoIGFuaW1hdGlvbnMgYWNyb3NzIGRpZmZlcmVudCBsaXN0XG4gKiBpdGVtcy5cbiAqL1xuXG52YXIgVHJhbnNpdGlvbkdyb3VwID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFRyYW5zaXRpb25Hcm91cCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVHJhbnNpdGlvbkdyb3VwKHByb3BzLCBjb250ZXh0KSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpIHx8IHRoaXM7XG5cbiAgICB2YXIgaGFuZGxlRXhpdGVkID0gX3RoaXMuaGFuZGxlRXhpdGVkLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpOyAvLyBJbml0aWFsIGNoaWxkcmVuIHNob3VsZCBhbGwgYmUgZW50ZXJpbmcsIGRlcGVuZGVudCBvbiBhcHBlYXJcblxuXG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBjb250ZXh0VmFsdWU6IHtcbiAgICAgICAgaXNNb3VudGluZzogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGhhbmRsZUV4aXRlZDogaGFuZGxlRXhpdGVkLFxuICAgICAgZmlyc3RSZW5kZXI6IHRydWVcbiAgICB9O1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMubW91bnRlZCA9IHRydWU7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBjb250ZXh0VmFsdWU6IHtcbiAgICAgICAgaXNNb3VudGluZzogZmFsc2VcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLm1vdW50ZWQgPSBmYWxzZTtcbiAgfTtcblxuICBUcmFuc2l0aW9uR3JvdXAuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzID0gZnVuY3Rpb24gZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKG5leHRQcm9wcywgX3JlZikge1xuICAgIHZhciBwcmV2Q2hpbGRNYXBwaW5nID0gX3JlZi5jaGlsZHJlbixcbiAgICAgICAgaGFuZGxlRXhpdGVkID0gX3JlZi5oYW5kbGVFeGl0ZWQsXG4gICAgICAgIGZpcnN0UmVuZGVyID0gX3JlZi5maXJzdFJlbmRlcjtcbiAgICByZXR1cm4ge1xuICAgICAgY2hpbGRyZW46IGZpcnN0UmVuZGVyID8gZ2V0SW5pdGlhbENoaWxkTWFwcGluZyhuZXh0UHJvcHMsIGhhbmRsZUV4aXRlZCkgOiBnZXROZXh0Q2hpbGRNYXBwaW5nKG5leHRQcm9wcywgcHJldkNoaWxkTWFwcGluZywgaGFuZGxlRXhpdGVkKSxcbiAgICAgIGZpcnN0UmVuZGVyOiBmYWxzZVxuICAgIH07XG4gIH0gLy8gbm9kZSBpcyBgdW5kZWZpbmVkYCB3aGVuIHVzZXIgcHJvdmlkZWQgYG5vZGVSZWZgIHByb3BcbiAgO1xuXG4gIF9wcm90by5oYW5kbGVFeGl0ZWQgPSBmdW5jdGlvbiBoYW5kbGVFeGl0ZWQoY2hpbGQsIG5vZGUpIHtcbiAgICB2YXIgY3VycmVudENoaWxkTWFwcGluZyA9IGdldENoaWxkTWFwcGluZyh0aGlzLnByb3BzLmNoaWxkcmVuKTtcbiAgICBpZiAoY2hpbGQua2V5IGluIGN1cnJlbnRDaGlsZE1hcHBpbmcpIHJldHVybjtcblxuICAgIGlmIChjaGlsZC5wcm9wcy5vbkV4aXRlZCkge1xuICAgICAgY2hpbGQucHJvcHMub25FeGl0ZWQobm9kZSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMubW91bnRlZCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZShmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgdmFyIGNoaWxkcmVuID0gX2V4dGVuZHMoe30sIHN0YXRlLmNoaWxkcmVuKTtcblxuICAgICAgICBkZWxldGUgY2hpbGRyZW5bY2hpbGQua2V5XTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIENvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgY2hpbGRGYWN0b3J5ID0gX3RoaXMkcHJvcHMuY2hpbGRGYWN0b3J5LFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzLCBbXCJjb21wb25lbnRcIiwgXCJjaGlsZEZhY3RvcnlcIl0pO1xuXG4gICAgdmFyIGNvbnRleHRWYWx1ZSA9IHRoaXMuc3RhdGUuY29udGV4dFZhbHVlO1xuICAgIHZhciBjaGlsZHJlbiA9IHZhbHVlcyh0aGlzLnN0YXRlLmNoaWxkcmVuKS5tYXAoY2hpbGRGYWN0b3J5KTtcbiAgICBkZWxldGUgcHJvcHMuYXBwZWFyO1xuICAgIGRlbGV0ZSBwcm9wcy5lbnRlcjtcbiAgICBkZWxldGUgcHJvcHMuZXhpdDtcblxuICAgIGlmIChDb21wb25lbnQgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2l0aW9uR3JvdXBDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBjb250ZXh0VmFsdWVcbiAgICAgIH0sIGNoaWxkcmVuKTtcbiAgICB9XG5cbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVHJhbnNpdGlvbkdyb3VwQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IGNvbnRleHRWYWx1ZVxuICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgcHJvcHMsIGNoaWxkcmVuKSk7XG4gIH07XG5cbiAgcmV0dXJuIFRyYW5zaXRpb25Hcm91cDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuVHJhbnNpdGlvbkdyb3VwLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHtcbiAgLyoqXG4gICAqIGA8VHJhbnNpdGlvbkdyb3VwPmAgcmVuZGVycyBhIGA8ZGl2PmAgYnkgZGVmYXVsdC4gWW91IGNhbiBjaGFuZ2UgdGhpc1xuICAgKiBiZWhhdmlvciBieSBwcm92aWRpbmcgYSBgY29tcG9uZW50YCBwcm9wLlxuICAgKiBJZiB5b3UgdXNlIFJlYWN0IHYxNisgYW5kIHdvdWxkIGxpa2UgdG8gYXZvaWQgYSB3cmFwcGluZyBgPGRpdj5gIGVsZW1lbnRcbiAgICogeW91IGNhbiBwYXNzIGluIGBjb21wb25lbnQ9e251bGx9YC4gVGhpcyBpcyB1c2VmdWwgaWYgdGhlIHdyYXBwaW5nIGRpdlxuICAgKiBib3JrcyB5b3VyIGNzcyBzdHlsZXMuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlcy5hbnksXG5cbiAgLyoqXG4gICAqIEEgc2V0IG9mIGA8VHJhbnNpdGlvbj5gIGNvbXBvbmVudHMsIHRoYXQgYXJlIHRvZ2dsZWQgYGluYCBhbmQgb3V0IGFzIHRoZXlcbiAgICogbGVhdmUuIHRoZSBgPFRyYW5zaXRpb25Hcm91cD5gIHdpbGwgaW5qZWN0IHNwZWNpZmljIHRyYW5zaXRpb24gcHJvcHMsIHNvXG4gICAqIHJlbWVtYmVyIHRvIHNwcmVhZCB0aGVtIHRocm91Z2ggaWYgeW91IGFyZSB3cmFwcGluZyB0aGUgYDxUcmFuc2l0aW9uPmAgYXNcbiAgICogd2l0aCBvdXIgYDxGYWRlPmAgZXhhbXBsZS5cbiAgICpcbiAgICogV2hpbGUgdGhpcyBjb21wb25lbnQgaXMgbWVhbnQgZm9yIG11bHRpcGxlIGBUcmFuc2l0aW9uYCBvciBgQ1NTVHJhbnNpdGlvbmBcbiAgICogY2hpbGRyZW4sIHNvbWV0aW1lcyB5b3UgbWF5IHdhbnQgdG8gaGF2ZSBhIHNpbmdsZSB0cmFuc2l0aW9uIGNoaWxkIHdpdGhcbiAgICogY29udGVudCB0aGF0IHlvdSB3YW50IHRvIGJlIHRyYW5zaXRpb25lZCBvdXQgYW5kIGluIHdoZW4geW91IGNoYW5nZSBpdFxuICAgKiAoZS5nLiByb3V0ZXMsIGltYWdlcyBldGMuKSBJbiB0aGF0IGNhc2UgeW91IGNhbiBjaGFuZ2UgdGhlIGBrZXlgIHByb3Agb2ZcbiAgICogdGhlIHRyYW5zaXRpb24gY2hpbGQgYXMgeW91IGNoYW5nZSBpdHMgY29udGVudCwgdGhpcyB3aWxsIGNhdXNlXG4gICAqIGBUcmFuc2l0aW9uR3JvdXBgIHRvIHRyYW5zaXRpb24gdGhlIGNoaWxkIG91dCBhbmQgYmFjayBpbi5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogQSBjb252ZW5pZW5jZSBwcm9wIHRoYXQgZW5hYmxlcyBvciBkaXNhYmxlcyBhcHBlYXIgYW5pbWF0aW9uc1xuICAgKiBmb3IgYWxsIGNoaWxkcmVuLiBOb3RlIHRoYXQgc3BlY2lmeWluZyB0aGlzIHdpbGwgb3ZlcnJpZGUgYW55IGRlZmF1bHRzIHNldFxuICAgKiBvbiBpbmRpdmlkdWFsIGNoaWxkcmVuIFRyYW5zaXRpb25zLlxuICAgKi9cbiAgYXBwZWFyOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQSBjb252ZW5pZW5jZSBwcm9wIHRoYXQgZW5hYmxlcyBvciBkaXNhYmxlcyBlbnRlciBhbmltYXRpb25zXG4gICAqIGZvciBhbGwgY2hpbGRyZW4uIE5vdGUgdGhhdCBzcGVjaWZ5aW5nIHRoaXMgd2lsbCBvdmVycmlkZSBhbnkgZGVmYXVsdHMgc2V0XG4gICAqIG9uIGluZGl2aWR1YWwgY2hpbGRyZW4gVHJhbnNpdGlvbnMuXG4gICAqL1xuICBlbnRlcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEEgY29udmVuaWVuY2UgcHJvcCB0aGF0IGVuYWJsZXMgb3IgZGlzYWJsZXMgZXhpdCBhbmltYXRpb25zXG4gICAqIGZvciBhbGwgY2hpbGRyZW4uIE5vdGUgdGhhdCBzcGVjaWZ5aW5nIHRoaXMgd2lsbCBvdmVycmlkZSBhbnkgZGVmYXVsdHMgc2V0XG4gICAqIG9uIGluZGl2aWR1YWwgY2hpbGRyZW4gVHJhbnNpdGlvbnMuXG4gICAqL1xuICBleGl0OiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogWW91IG1heSBuZWVkIHRvIGFwcGx5IHJlYWN0aXZlIHVwZGF0ZXMgdG8gYSBjaGlsZCBhcyBpdCBpcyBleGl0aW5nLlxuICAgKiBUaGlzIGlzIGdlbmVyYWxseSBkb25lIGJ5IHVzaW5nIGBjbG9uZUVsZW1lbnRgIGhvd2V2ZXIgaW4gdGhlIGNhc2Ugb2YgYW4gZXhpdGluZ1xuICAgKiBjaGlsZCB0aGUgZWxlbWVudCBoYXMgYWxyZWFkeSBiZWVuIHJlbW92ZWQgYW5kIG5vdCBhY2Nlc3NpYmxlIHRvIHRoZSBjb25zdW1lci5cbiAgICpcbiAgICogSWYgeW91IGRvIG5lZWQgdG8gdXBkYXRlIGEgY2hpbGQgYXMgaXQgbGVhdmVzIHlvdSBjYW4gcHJvdmlkZSBhIGBjaGlsZEZhY3RvcnlgXG4gICAqIHRvIHdyYXAgZXZlcnkgY2hpbGQsIGV2ZW4gdGhlIG9uZXMgdGhhdCBhcmUgbGVhdmluZy5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24oY2hpbGQ6IFJlYWN0RWxlbWVudCkgLT4gUmVhY3RFbGVtZW50XG4gICAqL1xuICBjaGlsZEZhY3Rvcnk6IFByb3BUeXBlcy5mdW5jXG59IDoge307XG5UcmFuc2l0aW9uR3JvdXAuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgVHJhbnNpdGlvbkdyb3VwOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIHVzZUxheW91dEVmZmVjdCwgdXNlQ29udGV4dCwgdXNlUmVmLCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnQGVtb3Rpb24vY2FjaGUnO1xuaW1wb3J0IHsgaCBhcyBoYXNPd25Qcm9wZXJ0eSwgRSBhcyBFbW90aW9uLCBjIGFzIGNyZWF0ZUVtb3Rpb25Qcm9wcywgdyBhcyB3aXRoRW1vdGlvbkNhY2hlLCBUIGFzIFRoZW1lQ29udGV4dCwgdSBhcyB1c2VJbnNlcnRpb25FZmZlY3RNYXliZSB9IGZyb20gJy4vZW1vdGlvbi1lbGVtZW50LWNiZWQ0NTFmLmJyb3dzZXIuZXNtLmpzJztcbmV4cG9ydCB7IEMgYXMgQ2FjaGVQcm92aWRlciwgVCBhcyBUaGVtZUNvbnRleHQsIGIgYXMgVGhlbWVQcm92aWRlciwgXyBhcyBfX3Vuc2FmZV91c2VFbW90aW9uQ2FjaGUsIGEgYXMgdXNlVGhlbWUsIHcgYXMgd2l0aEVtb3Rpb25DYWNoZSwgZCBhcyB3aXRoVGhlbWUgfSBmcm9tICcuL2Vtb3Rpb24tZWxlbWVudC1jYmVkNDUxZi5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXh0ZW5kcyc7XG5pbXBvcnQgJ0BlbW90aW9uL3dlYWstbWVtb2l6ZSc7XG5pbXBvcnQgJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcbmltcG9ydCAnLi4vX2lzb2xhdGVkLWhucnMvZGlzdC9lbW90aW9uLXJlYWN0LV9pc29sYXRlZC1obnJzLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IGluc2VydFN0eWxlcywgcmVnaXN0ZXJTdHlsZXMsIGdldFJlZ2lzdGVyZWRTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi91dGlscyc7XG5pbXBvcnQgeyBzZXJpYWxpemVTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi9zZXJpYWxpemUnO1xuXG52YXIgcGtnID0ge1xuXHRuYW1lOiBcIkBlbW90aW9uL3JlYWN0XCIsXG5cdHZlcnNpb246IFwiMTEuOS4zXCIsXG5cdG1haW46IFwiZGlzdC9lbW90aW9uLXJlYWN0LmNqcy5qc1wiLFxuXHRtb2R1bGU6IFwiZGlzdC9lbW90aW9uLXJlYWN0LmVzbS5qc1wiLFxuXHRicm93c2VyOiB7XG5cdFx0XCIuL2Rpc3QvZW1vdGlvbi1yZWFjdC5janMuanNcIjogXCIuL2Rpc3QvZW1vdGlvbi1yZWFjdC5icm93c2VyLmNqcy5qc1wiLFxuXHRcdFwiLi9kaXN0L2Vtb3Rpb24tcmVhY3QuZXNtLmpzXCI6IFwiLi9kaXN0L2Vtb3Rpb24tcmVhY3QuYnJvd3Nlci5lc20uanNcIlxuXHR9LFxuXHR0eXBlczogXCJ0eXBlcy9pbmRleC5kLnRzXCIsXG5cdGZpbGVzOiBbXG5cdFx0XCJzcmNcIixcblx0XHRcImRpc3RcIixcblx0XHRcImpzeC1ydW50aW1lXCIsXG5cdFx0XCJqc3gtZGV2LXJ1bnRpbWVcIixcblx0XHRcIl9pc29sYXRlZC1obnJzXCIsXG5cdFx0XCJ0eXBlcy8qLmQudHNcIixcblx0XHRcIm1hY3JvLmpzXCIsXG5cdFx0XCJtYWNyby5kLnRzXCIsXG5cdFx0XCJtYWNyby5qcy5mbG93XCJcblx0XSxcblx0c2lkZUVmZmVjdHM6IGZhbHNlLFxuXHRhdXRob3I6IFwiRW1vdGlvbiBDb250cmlidXRvcnNcIixcblx0bGljZW5zZTogXCJNSVRcIixcblx0c2NyaXB0czoge1xuXHRcdFwidGVzdDp0eXBlc2NyaXB0XCI6IFwiZHRzbGludCB0eXBlc1wiXG5cdH0sXG5cdGRlcGVuZGVuY2llczoge1xuXHRcdFwiQGJhYmVsL3J1bnRpbWVcIjogXCJeNy4xMy4xMFwiLFxuXHRcdFwiQGVtb3Rpb24vYmFiZWwtcGx1Z2luXCI6IFwiXjExLjcuMVwiLFxuXHRcdFwiQGVtb3Rpb24vY2FjaGVcIjogXCJeMTEuOS4zXCIsXG5cdFx0XCJAZW1vdGlvbi9zZXJpYWxpemVcIjogXCJeMS4wLjRcIixcblx0XHRcIkBlbW90aW9uL3V0aWxzXCI6IFwiXjEuMS4wXCIsXG5cdFx0XCJAZW1vdGlvbi93ZWFrLW1lbW9pemVcIjogXCJeMC4yLjVcIixcblx0XHRcImhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzXCI6IFwiXjMuMy4xXCJcblx0fSxcblx0cGVlckRlcGVuZGVuY2llczoge1xuXHRcdFwiQGJhYmVsL2NvcmVcIjogXCJeNy4wLjBcIixcblx0XHRyZWFjdDogXCI+PTE2LjguMFwiXG5cdH0sXG5cdHBlZXJEZXBlbmRlbmNpZXNNZXRhOiB7XG5cdFx0XCJAYmFiZWwvY29yZVwiOiB7XG5cdFx0XHRvcHRpb25hbDogdHJ1ZVxuXHRcdH0sXG5cdFx0XCJAdHlwZXMvcmVhY3RcIjoge1xuXHRcdFx0b3B0aW9uYWw6IHRydWVcblx0XHR9XG5cdH0sXG5cdGRldkRlcGVuZGVuY2llczoge1xuXHRcdFwiQGJhYmVsL2NvcmVcIjogXCJeNy4xMy4xMFwiLFxuXHRcdFwiQGRlZmluaXRlbHl0eXBlZC9kdHNsaW50XCI6IFwiMC4wLjExMlwiLFxuXHRcdFwiQGVtb3Rpb24vY3NzXCI6IFwiMTEuOS4wXCIsXG5cdFx0XCJAZW1vdGlvbi9jc3MtcHJldHRpZmllclwiOiBcIjEuMC4xXCIsXG5cdFx0XCJAZW1vdGlvbi9zZXJ2ZXJcIjogXCIxMS40LjBcIixcblx0XHRcIkBlbW90aW9uL3N0eWxlZFwiOiBcIjExLjkuM1wiLFxuXHRcdFwiaHRtbC10YWctbmFtZXNcIjogXCJeMS4xLjJcIixcblx0XHRyZWFjdDogXCIxNi4xNC4wXCIsXG5cdFx0XCJzdmctdGFnLW5hbWVzXCI6IFwiXjEuMS4xXCIsXG5cdFx0dHlwZXNjcmlwdDogXCJeNC41LjVcIlxuXHR9LFxuXHRyZXBvc2l0b3J5OiBcImh0dHBzOi8vZ2l0aHViLmNvbS9lbW90aW9uLWpzL2Vtb3Rpb24vdHJlZS9tYWluL3BhY2thZ2VzL3JlYWN0XCIsXG5cdHB1Ymxpc2hDb25maWc6IHtcblx0XHRhY2Nlc3M6IFwicHVibGljXCJcblx0fSxcblx0XCJ1bWQ6bWFpblwiOiBcImRpc3QvZW1vdGlvbi1yZWFjdC51bWQubWluLmpzXCIsXG5cdHByZWNvbnN0cnVjdDoge1xuXHRcdGVudHJ5cG9pbnRzOiBbXG5cdFx0XHRcIi4vaW5kZXguanNcIixcblx0XHRcdFwiLi9qc3gtcnVudGltZS5qc1wiLFxuXHRcdFx0XCIuL2pzeC1kZXYtcnVudGltZS5qc1wiLFxuXHRcdFx0XCIuL19pc29sYXRlZC1obnJzLmpzXCJcblx0XHRdLFxuXHRcdHVtZE5hbWU6IFwiZW1vdGlvblJlYWN0XCJcblx0fVxufTtcblxudmFyIGpzeCA9IGZ1bmN0aW9uIGpzeCh0eXBlLCBwcm9wcykge1xuICB2YXIgYXJncyA9IGFyZ3VtZW50cztcblxuICBpZiAocHJvcHMgPT0gbnVsbCB8fCAhaGFzT3duUHJvcGVydHkuY2FsbChwcm9wcywgJ2NzcycpKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50LmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gIH1cblxuICB2YXIgYXJnc0xlbmd0aCA9IGFyZ3MubGVuZ3RoO1xuICB2YXIgY3JlYXRlRWxlbWVudEFyZ0FycmF5ID0gbmV3IEFycmF5KGFyZ3NMZW5ndGgpO1xuICBjcmVhdGVFbGVtZW50QXJnQXJyYXlbMF0gPSBFbW90aW9uO1xuICBjcmVhdGVFbGVtZW50QXJnQXJyYXlbMV0gPSBjcmVhdGVFbW90aW9uUHJvcHModHlwZSwgcHJvcHMpO1xuXG4gIGZvciAodmFyIGkgPSAyOyBpIDwgYXJnc0xlbmd0aDsgaSsrKSB7XG4gICAgY3JlYXRlRWxlbWVudEFyZ0FycmF5W2ldID0gYXJnc1tpXTtcbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICByZXR1cm4gY3JlYXRlRWxlbWVudC5hcHBseShudWxsLCBjcmVhdGVFbGVtZW50QXJnQXJyYXkpO1xufTtcblxudmFyIHVzZUluc2VydGlvbkVmZmVjdCA9IFJlYWN0Wyd1c2VJbnNlcnRpb24nICsgJ0VmZmVjdCddID8gUmVhY3RbJ3VzZUluc2VydGlvbicgKyAnRWZmZWN0J10gOiB1c2VMYXlvdXRFZmZlY3Q7XG52YXIgd2FybmVkQWJvdXRDc3NQcm9wRm9yR2xvYmFsID0gZmFsc2U7IC8vIG1haW50YWluIHBsYWNlIG92ZXIgcmVyZW5kZXJzLlxuLy8gaW5pdGlhbCByZW5kZXIgZnJvbSBicm93c2VyLCBpbnNlcnRCZWZvcmUgY29udGV4dC5zaGVldC50YWdzWzBdIG9yIGlmIGEgc3R5bGUgaGFzbid0IGJlZW4gaW5zZXJ0ZWQgdGhlcmUgeWV0LCBhcHBlbmRDaGlsZFxuLy8gaW5pdGlhbCBjbGllbnQtc2lkZSByZW5kZXIgZnJvbSBTU1IsIHVzZSBwbGFjZSBvZiBoeWRyYXRpbmcgdGFnXG5cbnZhciBHbG9iYWwgPSAvKiAjX19QVVJFX18gKi93aXRoRW1vdGlvbkNhY2hlKGZ1bmN0aW9uIChwcm9wcywgY2FjaGUpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIXdhcm5lZEFib3V0Q3NzUHJvcEZvckdsb2JhbCAmJiAoIC8vIGNoZWNrIGZvciBjbGFzc05hbWUgYXMgd2VsbCBzaW5jZSB0aGUgdXNlciBpc1xuICAvLyBwcm9iYWJseSB1c2luZyB0aGUgY3VzdG9tIGNyZWF0ZUVsZW1lbnQgd2hpY2hcbiAgLy8gbWVhbnMgaXQgd2lsbCBiZSB0dXJuZWQgaW50byBhIGNsYXNzTmFtZSBwcm9wXG4gIC8vICRGbG93Rml4TWUgSSBkb24ndCByZWFsbHkgd2FudCB0byBhZGQgaXQgdG8gdGhlIHR5cGUgc2luY2UgaXQgc2hvdWxkbid0IGJlIHVzZWRcbiAgcHJvcHMuY2xhc3NOYW1lIHx8IHByb3BzLmNzcykpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiSXQgbG9va3MgbGlrZSB5b3UncmUgdXNpbmcgdGhlIGNzcyBwcm9wIG9uIEdsb2JhbCwgZGlkIHlvdSBtZWFuIHRvIHVzZSB0aGUgc3R5bGVzIHByb3AgaW5zdGVhZD9cIik7XG4gICAgd2FybmVkQWJvdXRDc3NQcm9wRm9yR2xvYmFsID0gdHJ1ZTtcbiAgfVxuXG4gIHZhciBzdHlsZXMgPSBwcm9wcy5zdHlsZXM7XG4gIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKFtzdHlsZXNdLCB1bmRlZmluZWQsIHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KSk7XG4gIC8vIGJ1dCBpdCBpcyBiYXNlZCBvbiBhIGNvbnN0YW50IHRoYXQgd2lsbCBuZXZlciBjaGFuZ2UgYXQgcnVudGltZVxuICAvLyBpdCdzIGVmZmVjdGl2ZWx5IGxpa2UgaGF2aW5nIHR3byBpbXBsZW1lbnRhdGlvbnMgYW5kIHN3aXRjaGluZyB0aGVtIG91dFxuICAvLyBzbyBpdCdzIG5vdCBhY3R1YWxseSBicmVha2luZyBhbnl0aGluZ1xuXG5cbiAgdmFyIHNoZWV0UmVmID0gdXNlUmVmKCk7XG4gIHVzZUluc2VydGlvbkVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGtleSA9IGNhY2hlLmtleSArIFwiLWdsb2JhbFwiOyAvLyB1c2UgY2FzZSBvZiBodHRwczovL2dpdGh1Yi5jb20vZW1vdGlvbi1qcy9lbW90aW9uL2lzc3Vlcy8yNjc1XG5cbiAgICB2YXIgc2hlZXQgPSBuZXcgY2FjaGUuc2hlZXQuY29uc3RydWN0b3Ioe1xuICAgICAga2V5OiBrZXksXG4gICAgICBub25jZTogY2FjaGUuc2hlZXQubm9uY2UsXG4gICAgICBjb250YWluZXI6IGNhY2hlLnNoZWV0LmNvbnRhaW5lcixcbiAgICAgIHNwZWVkeTogY2FjaGUuc2hlZXQuaXNTcGVlZHlcbiAgICB9KTtcbiAgICB2YXIgcmVoeWRyYXRpbmcgPSBmYWxzZTsgLy8gJEZsb3dGaXhNZVxuXG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1lbW90aW9uPVxcXCJcIiArIGtleSArIFwiIFwiICsgc2VyaWFsaXplZC5uYW1lICsgXCJcXFwiXVwiKTtcblxuICAgIGlmIChjYWNoZS5zaGVldC50YWdzLmxlbmd0aCkge1xuICAgICAgc2hlZXQuYmVmb3JlID0gY2FjaGUuc2hlZXQudGFnc1swXTtcbiAgICB9XG5cbiAgICBpZiAobm9kZSAhPT0gbnVsbCkge1xuICAgICAgcmVoeWRyYXRpbmcgPSB0cnVlOyAvLyBjbGVhciB0aGUgaGFzaCBzbyB0aGlzIG5vZGUgd29uJ3QgYmUgcmVjb2duaXphYmxlIGFzIHJlaHlkcmF0YWJsZSBieSBvdGhlciA8R2xvYmFsLz5zXG5cbiAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCdkYXRhLWVtb3Rpb24nLCBrZXkpO1xuICAgICAgc2hlZXQuaHlkcmF0ZShbbm9kZV0pO1xuICAgIH1cblxuICAgIHNoZWV0UmVmLmN1cnJlbnQgPSBbc2hlZXQsIHJlaHlkcmF0aW5nXTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgc2hlZXQuZmx1c2goKTtcbiAgICB9O1xuICB9LCBbY2FjaGVdKTtcbiAgdXNlSW5zZXJ0aW9uRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2hlZXRSZWZDdXJyZW50ID0gc2hlZXRSZWYuY3VycmVudDtcbiAgICB2YXIgc2hlZXQgPSBzaGVldFJlZkN1cnJlbnRbMF0sXG4gICAgICAgIHJlaHlkcmF0aW5nID0gc2hlZXRSZWZDdXJyZW50WzFdO1xuXG4gICAgaWYgKHJlaHlkcmF0aW5nKSB7XG4gICAgICBzaGVldFJlZkN1cnJlbnRbMV0gPSBmYWxzZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoc2VyaWFsaXplZC5uZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIGluc2VydCBrZXlmcmFtZXNcbiAgICAgIGluc2VydFN0eWxlcyhjYWNoZSwgc2VyaWFsaXplZC5uZXh0LCB0cnVlKTtcbiAgICB9XG5cbiAgICBpZiAoc2hlZXQudGFncy5sZW5ndGgpIHtcbiAgICAgIC8vIGlmIHRoaXMgZG9lc24ndCBleGlzdCB0aGVuIGl0IHdpbGwgYmUgbnVsbCBzbyB0aGUgc3R5bGUgZWxlbWVudCB3aWxsIGJlIGFwcGVuZGVkXG4gICAgICB2YXIgZWxlbWVudCA9IHNoZWV0LnRhZ3Nbc2hlZXQudGFncy5sZW5ndGggLSAxXS5uZXh0RWxlbWVudFNpYmxpbmc7XG4gICAgICBzaGVldC5iZWZvcmUgPSBlbGVtZW50O1xuICAgICAgc2hlZXQuZmx1c2goKTtcbiAgICB9XG5cbiAgICBjYWNoZS5pbnNlcnQoXCJcIiwgc2VyaWFsaXplZCwgc2hlZXQsIGZhbHNlKTtcbiAgfSwgW2NhY2hlLCBzZXJpYWxpemVkLm5hbWVdKTtcbiAgcmV0dXJuIG51bGw7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgR2xvYmFsLmRpc3BsYXlOYW1lID0gJ0Vtb3Rpb25HbG9iYWwnO1xufVxuXG5mdW5jdGlvbiBjc3MoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gc2VyaWFsaXplU3R5bGVzKGFyZ3MpO1xufVxuXG52YXIga2V5ZnJhbWVzID0gZnVuY3Rpb24ga2V5ZnJhbWVzKCkge1xuICB2YXIgaW5zZXJ0YWJsZSA9IGNzcy5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gIHZhciBuYW1lID0gXCJhbmltYXRpb24tXCIgKyBpbnNlcnRhYmxlLm5hbWU7IC8vICRGbG93Rml4TWVcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgc3R5bGVzOiBcIkBrZXlmcmFtZXMgXCIgKyBuYW1lICsgXCJ7XCIgKyBpbnNlcnRhYmxlLnN0eWxlcyArIFwifVwiLFxuICAgIGFuaW06IDEsXG4gICAgdG9TdHJpbmc6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgcmV0dXJuIFwiX0VNT19cIiArIHRoaXMubmFtZSArIFwiX1wiICsgdGhpcy5zdHlsZXMgKyBcIl9FTU9fXCI7XG4gICAgfVxuICB9O1xufTtcblxudmFyIGNsYXNzbmFtZXMgPSBmdW5jdGlvbiBjbGFzc25hbWVzKGFyZ3MpIHtcbiAgdmFyIGxlbiA9IGFyZ3MubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBjbHMgPSAnJztcblxuICBmb3IgKDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgdmFyIGFyZyA9IGFyZ3NbaV07XG4gICAgaWYgKGFyZyA9PSBudWxsKSBjb250aW51ZTtcbiAgICB2YXIgdG9BZGQgPSB2b2lkIDA7XG5cbiAgICBzd2l0Y2ggKHR5cGVvZiBhcmcpIHtcbiAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAge1xuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcbiAgICAgICAgICAgIHRvQWRkID0gY2xhc3NuYW1lcyhhcmcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBhcmcuc3R5bGVzICE9PSB1bmRlZmluZWQgJiYgYXJnLm5hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdZb3UgaGF2ZSBwYXNzZWQgc3R5bGVzIGNyZWF0ZWQgd2l0aCBgY3NzYCBmcm9tIGBAZW1vdGlvbi9yZWFjdGAgcGFja2FnZSB0byB0aGUgYGN4YC5cXG4nICsgJ2BjeGAgaXMgbWVhbnQgdG8gY29tcG9zZSBjbGFzcyBuYW1lcyAoc3RyaW5ncykgc28geW91IHNob3VsZCBjb252ZXJ0IHRob3NlIHN0eWxlcyB0byBhIGNsYXNzIG5hbWUgYnkgcGFzc2luZyB0aGVtIHRvIHRoZSBgY3NzYCByZWNlaXZlZCBmcm9tIDxDbGFzc05hbWVzLz4gY29tcG9uZW50LicpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0b0FkZCA9ICcnO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBrIGluIGFyZykge1xuICAgICAgICAgICAgICBpZiAoYXJnW2tdICYmIGspIHtcbiAgICAgICAgICAgICAgICB0b0FkZCAmJiAodG9BZGQgKz0gJyAnKTtcbiAgICAgICAgICAgICAgICB0b0FkZCArPSBrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAge1xuICAgICAgICAgIHRvQWRkID0gYXJnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRvQWRkKSB7XG4gICAgICBjbHMgJiYgKGNscyArPSAnICcpO1xuICAgICAgY2xzICs9IHRvQWRkO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjbHM7XG59O1xuXG5mdW5jdGlvbiBtZXJnZShyZWdpc3RlcmVkLCBjc3MsIGNsYXNzTmFtZSkge1xuICB2YXIgcmVnaXN0ZXJlZFN0eWxlcyA9IFtdO1xuICB2YXIgcmF3Q2xhc3NOYW1lID0gZ2V0UmVnaXN0ZXJlZFN0eWxlcyhyZWdpc3RlcmVkLCByZWdpc3RlcmVkU3R5bGVzLCBjbGFzc05hbWUpO1xuXG4gIGlmIChyZWdpc3RlcmVkU3R5bGVzLmxlbmd0aCA8IDIpIHtcbiAgICByZXR1cm4gY2xhc3NOYW1lO1xuICB9XG5cbiAgcmV0dXJuIHJhd0NsYXNzTmFtZSArIGNzcyhyZWdpc3RlcmVkU3R5bGVzKTtcbn1cblxudmFyIEluc2VydGlvbiA9IGZ1bmN0aW9uIEluc2VydGlvbihfcmVmKSB7XG4gIHZhciBjYWNoZSA9IF9yZWYuY2FjaGUsXG4gICAgICBzZXJpYWxpemVkQXJyID0gX3JlZi5zZXJpYWxpemVkQXJyO1xuICB2YXIgcnVsZXMgPSB1c2VJbnNlcnRpb25FZmZlY3RNYXliZShmdW5jdGlvbiAoKSB7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNlcmlhbGl6ZWRBcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciByZXMgPSBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWRBcnJbaV0sIGZhbHNlKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBudWxsO1xufTtcblxudmFyIENsYXNzTmFtZXMgPSAvKiAjX19QVVJFX18gKi93aXRoRW1vdGlvbkNhY2hlKGZ1bmN0aW9uIChwcm9wcywgY2FjaGUpIHtcbiAgdmFyIGhhc1JlbmRlcmVkID0gZmFsc2U7XG4gIHZhciBzZXJpYWxpemVkQXJyID0gW107XG5cbiAgdmFyIGNzcyA9IGZ1bmN0aW9uIGNzcygpIHtcbiAgICBpZiAoaGFzUmVuZGVyZWQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjc3MgY2FuIG9ubHkgYmUgdXNlZCBkdXJpbmcgcmVuZGVyJyk7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKGFyZ3MsIGNhY2hlLnJlZ2lzdGVyZWQpO1xuICAgIHNlcmlhbGl6ZWRBcnIucHVzaChzZXJpYWxpemVkKTsgLy8gcmVnaXN0cmF0aW9uIGhhcyB0byBoYXBwZW4gaGVyZSBhcyB0aGUgcmVzdWx0IG9mIHRoaXMgbWlnaHQgZ2V0IGNvbnN1bWVkIGJ5IGBjeGBcblxuICAgIHJlZ2lzdGVyU3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBmYWxzZSk7XG4gICAgcmV0dXJuIGNhY2hlLmtleSArIFwiLVwiICsgc2VyaWFsaXplZC5uYW1lO1xuICB9O1xuXG4gIHZhciBjeCA9IGZ1bmN0aW9uIGN4KCkge1xuICAgIGlmIChoYXNSZW5kZXJlZCAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2N4IGNhbiBvbmx5IGJlIHVzZWQgZHVyaW5nIHJlbmRlcicpO1xuICAgIH1cblxuICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgIH1cblxuICAgIHJldHVybiBtZXJnZShjYWNoZS5yZWdpc3RlcmVkLCBjc3MsIGNsYXNzbmFtZXMoYXJncykpO1xuICB9O1xuXG4gIHZhciBjb250ZW50ID0ge1xuICAgIGNzczogY3NzLFxuICAgIGN4OiBjeCxcbiAgICB0aGVtZTogdXNlQ29udGV4dChUaGVtZUNvbnRleHQpXG4gIH07XG4gIHZhciBlbGUgPSBwcm9wcy5jaGlsZHJlbihjb250ZW50KTtcbiAgaGFzUmVuZGVyZWQgPSB0cnVlO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KEluc2VydGlvbiwge1xuICAgIGNhY2hlOiBjYWNoZSxcbiAgICBzZXJpYWxpemVkQXJyOiBzZXJpYWxpemVkQXJyXG4gIH0pLCBlbGUpO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIENsYXNzTmFtZXMuZGlzcGxheU5hbWUgPSAnRW1vdGlvbkNsYXNzTmFtZXMnO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgaXNCcm93c2VyID0gXCJvYmplY3RcIiAhPT0gJ3VuZGVmaW5lZCc7IC8vICMxNzI3IGZvciBzb21lIHJlYXNvbiBKZXN0IGV2YWx1YXRlcyBtb2R1bGVzIHR3aWNlIGlmIHNvbWUgY29uc3VtaW5nIG1vZHVsZSBnZXRzIG1vY2tlZCB3aXRoIGplc3QubW9ja1xuXG4gIHZhciBpc0plc3QgPSB0eXBlb2YgamVzdCAhPT0gJ3VuZGVmaW5lZCc7XG5cbiAgaWYgKGlzQnJvd3NlciAmJiAhaXNKZXN0KSB7XG4gICAgLy8gZ2xvYmFsVGhpcyBoYXMgd2lkZSBicm93c2VyIHN1cHBvcnQgLSBodHRwczovL2Nhbml1c2UuY29tLz9zZWFyY2g9Z2xvYmFsVGhpcywgTm9kZS5qcyAxMiBhbmQgbGF0ZXJcbiAgICB2YXIgZ2xvYmFsQ29udGV4dCA9IC8vICRGbG93SWdub3JlXG4gICAgdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4gICAgOiBpc0Jyb3dzZXIgPyB3aW5kb3cgOiBnbG9iYWw7XG4gICAgdmFyIGdsb2JhbEtleSA9IFwiX19FTU9USU9OX1JFQUNUX1wiICsgcGtnLnZlcnNpb24uc3BsaXQoJy4nKVswXSArIFwiX19cIjtcblxuICAgIGlmIChnbG9iYWxDb250ZXh0W2dsb2JhbEtleV0pIHtcbiAgICAgIGNvbnNvbGUud2FybignWW91IGFyZSBsb2FkaW5nIEBlbW90aW9uL3JlYWN0IHdoZW4gaXQgaXMgYWxyZWFkeSBsb2FkZWQuIFJ1bm5pbmcgJyArICdtdWx0aXBsZSBpbnN0YW5jZXMgbWF5IGNhdXNlIHByb2JsZW1zLiBUaGlzIGNhbiBoYXBwZW4gaWYgbXVsdGlwbGUgJyArICd2ZXJzaW9ucyBhcmUgdXNlZCwgb3IgaWYgbXVsdGlwbGUgYnVpbGRzIG9mIHRoZSBzYW1lIHZlcnNpb24gYXJlICcgKyAndXNlZC4nKTtcbiAgICB9XG5cbiAgICBnbG9iYWxDb250ZXh0W2dsb2JhbEtleV0gPSB0cnVlO1xuICB9XG59XG5cbmV4cG9ydCB7IENsYXNzTmFtZXMsIEdsb2JhbCwganN4IGFzIGNyZWF0ZUVsZW1lbnQsIGNzcywganN4LCBrZXlmcmFtZXMgfTtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4Jztcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuXG5mdW5jdGlvbiBSaXBwbGUocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIGNsYXNzTmFtZSxcbiAgICBjbGFzc2VzLFxuICAgIHB1bHNhdGUgPSBmYWxzZSxcbiAgICByaXBwbGVYLFxuICAgIHJpcHBsZVksXG4gICAgcmlwcGxlU2l6ZSxcbiAgICBpbjogaW5Qcm9wLFxuICAgIG9uRXhpdGVkLFxuICAgIHRpbWVvdXRcbiAgfSA9IHByb3BzO1xuICBjb25zdCBbbGVhdmluZywgc2V0TGVhdmluZ10gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IHJpcHBsZUNsYXNzTmFtZSA9IGNsc3goY2xhc3NOYW1lLCBjbGFzc2VzLnJpcHBsZSwgY2xhc3Nlcy5yaXBwbGVWaXNpYmxlLCBwdWxzYXRlICYmIGNsYXNzZXMucmlwcGxlUHVsc2F0ZSk7XG4gIGNvbnN0IHJpcHBsZVN0eWxlcyA9IHtcbiAgICB3aWR0aDogcmlwcGxlU2l6ZSxcbiAgICBoZWlnaHQ6IHJpcHBsZVNpemUsXG4gICAgdG9wOiAtKHJpcHBsZVNpemUgLyAyKSArIHJpcHBsZVksXG4gICAgbGVmdDogLShyaXBwbGVTaXplIC8gMikgKyByaXBwbGVYXG4gIH07XG4gIGNvbnN0IGNoaWxkQ2xhc3NOYW1lID0gY2xzeChjbGFzc2VzLmNoaWxkLCBsZWF2aW5nICYmIGNsYXNzZXMuY2hpbGRMZWF2aW5nLCBwdWxzYXRlICYmIGNsYXNzZXMuY2hpbGRQdWxzYXRlKTtcblxuICBpZiAoIWluUHJvcCAmJiAhbGVhdmluZykge1xuICAgIHNldExlYXZpbmcodHJ1ZSk7XG4gIH1cblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghaW5Qcm9wICYmIG9uRXhpdGVkICE9IG51bGwpIHtcbiAgICAgIC8vIHJlYWN0LXRyYW5zaXRpb24tZ3JvdXAjb25FeGl0ZWRcbiAgICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQob25FeGl0ZWQsIHRpbWVvdXQpO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH0sIFtvbkV4aXRlZCwgaW5Qcm9wLCB0aW1lb3V0XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogcmlwcGxlQ2xhc3NOYW1lLFxuICAgIHN0eWxlOiByaXBwbGVTdHlsZXMsXG4gICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KFwic3BhblwiLCB7XG4gICAgICBjbGFzc05hbWU6IGNoaWxkQ2xhc3NOYW1lXG4gICAgfSlcbiAgfSk7XG59XG5cbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFJpcHBsZS5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqIFNlZSBbQ1NTIEFQSV0oI2NzcykgYmVsb3cgZm9yIG1vcmUgZGV0YWlscy5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlIC0gaW5qZWN0ZWQgZnJvbSBUcmFuc2l0aW9uR3JvdXBcbiAgICovXG4gIGluOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQGlnbm9yZSAtIGluamVjdGVkIGZyb20gVHJhbnNpdGlvbkdyb3VwXG4gICAqL1xuICBvbkV4aXRlZDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHJpcHBsZSBwdWxzYXRlcywgdHlwaWNhbGx5IGluZGljYXRpbmcgdGhlIGtleWJvYXJkIGZvY3VzIHN0YXRlIG9mIGFuIGVsZW1lbnQuXG4gICAqL1xuICBwdWxzYXRlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogRGlhbWV0ZXIgb2YgdGhlIHJpcHBsZS5cbiAgICovXG4gIHJpcHBsZVNpemU6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgLyoqXG4gICAqIEhvcml6b250YWwgcG9zaXRpb24gb2YgdGhlIHJpcHBsZSBjZW50ZXIuXG4gICAqL1xuICByaXBwbGVYOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIC8qKlxuICAgKiBWZXJ0aWNhbCBwb3NpdGlvbiBvZiB0aGUgcmlwcGxlIGNlbnRlci5cbiAgICovXG4gIHJpcHBsZVk6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgLyoqXG4gICAqIGV4aXQgZGVsYXlcbiAgICovXG4gIHRpbWVvdXQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZFxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IFJpcHBsZTsiLCJjb25zdCBkZWZhdWx0R2VuZXJhdG9yID0gY29tcG9uZW50TmFtZSA9PiBjb21wb25lbnROYW1lO1xuXG5jb25zdCBjcmVhdGVDbGFzc05hbWVHZW5lcmF0b3IgPSAoKSA9PiB7XG4gIGxldCBnZW5lcmF0ZSA9IGRlZmF1bHRHZW5lcmF0b3I7XG4gIHJldHVybiB7XG4gICAgY29uZmlndXJlKGdlbmVyYXRvcikge1xuICAgICAgZ2VuZXJhdGUgPSBnZW5lcmF0b3I7XG4gICAgfSxcblxuICAgIGdlbmVyYXRlKGNvbXBvbmVudE5hbWUpIHtcbiAgICAgIHJldHVybiBnZW5lcmF0ZShjb21wb25lbnROYW1lKTtcbiAgICB9LFxuXG4gICAgcmVzZXQoKSB7XG4gICAgICBnZW5lcmF0ZSA9IGRlZmF1bHRHZW5lcmF0b3I7XG4gICAgfVxuXG4gIH07XG59O1xuXG5jb25zdCBDbGFzc05hbWVHZW5lcmF0b3IgPSBjcmVhdGVDbGFzc05hbWVHZW5lcmF0b3IoKTtcbmV4cG9ydCBkZWZhdWx0IENsYXNzTmFtZUdlbmVyYXRvcjsiLCJpbXBvcnQgQ2xhc3NOYW1lR2VuZXJhdG9yIGZyb20gJy4uL0NsYXNzTmFtZUdlbmVyYXRvcic7XG5jb25zdCBnbG9iYWxTdGF0ZUNsYXNzZXNNYXBwaW5nID0ge1xuICBhY3RpdmU6ICdhY3RpdmUnLFxuICBjaGVja2VkOiAnY2hlY2tlZCcsXG4gIGNvbXBsZXRlZDogJ2NvbXBsZXRlZCcsXG4gIGRpc2FibGVkOiAnZGlzYWJsZWQnLFxuICBlcnJvcjogJ2Vycm9yJyxcbiAgZXhwYW5kZWQ6ICdleHBhbmRlZCcsXG4gIGZvY3VzZWQ6ICdmb2N1c2VkJyxcbiAgZm9jdXNWaXNpYmxlOiAnZm9jdXNWaXNpYmxlJyxcbiAgcmVxdWlyZWQ6ICdyZXF1aXJlZCcsXG4gIHNlbGVjdGVkOiAnc2VsZWN0ZWQnXG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoY29tcG9uZW50TmFtZSwgc2xvdCwgZ2xvYmFsU3RhdGVQcmVmaXggPSAnTXVpJykge1xuICBjb25zdCBnbG9iYWxTdGF0ZUNsYXNzID0gZ2xvYmFsU3RhdGVDbGFzc2VzTWFwcGluZ1tzbG90XTtcbiAgcmV0dXJuIGdsb2JhbFN0YXRlQ2xhc3MgPyBgJHtnbG9iYWxTdGF0ZVByZWZpeH0tJHtnbG9iYWxTdGF0ZUNsYXNzfWAgOiBgJHtDbGFzc05hbWVHZW5lcmF0b3IuZ2VuZXJhdGUoY29tcG9uZW50TmFtZSl9LSR7c2xvdH1gO1xufSIsImltcG9ydCBnZW5lcmF0ZVV0aWxpdHlDbGFzcyBmcm9tICcuLi9nZW5lcmF0ZVV0aWxpdHlDbGFzcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKGNvbXBvbmVudE5hbWUsIHNsb3RzLCBnbG9iYWxTdGF0ZVByZWZpeCA9ICdNdWknKSB7XG4gIGNvbnN0IHJlc3VsdCA9IHt9O1xuICBzbG90cy5mb3JFYWNoKHNsb3QgPT4ge1xuICAgIHJlc3VsdFtzbG90XSA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzKGNvbXBvbmVudE5hbWUsIHNsb3QsIGdsb2JhbFN0YXRlUHJlZml4KTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59IiwiaW1wb3J0IHsgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MsIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFRvdWNoUmlwcGxlVXRpbGl0eUNsYXNzKHNsb3QpIHtcbiAgcmV0dXJuIGdlbmVyYXRlVXRpbGl0eUNsYXNzKCdNdWlUb3VjaFJpcHBsZScsIHNsb3QpO1xufVxuY29uc3QgdG91Y2hSaXBwbGVDbGFzc2VzID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcygnTXVpVG91Y2hSaXBwbGUnLCBbJ3Jvb3QnLCAncmlwcGxlJywgJ3JpcHBsZVZpc2libGUnLCAncmlwcGxlUHVsc2F0ZScsICdjaGlsZCcsICdjaGlsZExlYXZpbmcnLCAnY2hpbGRQdWxzYXRlJ10pO1xuZXhwb3J0IGRlZmF1bHQgdG91Y2hSaXBwbGVDbGFzc2VzOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJjZW50ZXJcIiwgXCJjbGFzc2VzXCIsIFwiY2xhc3NOYW1lXCJdO1xuXG5sZXQgXyA9IHQgPT4gdCxcbiAgICBfdCxcbiAgICBfdDIsXG4gICAgX3QzLFxuICAgIF90NDtcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFRyYW5zaXRpb25Hcm91cCB9IGZyb20gJ3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyBrZXlmcmFtZXMgfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IFJpcHBsZSBmcm9tICcuL1JpcHBsZSc7XG5pbXBvcnQgdG91Y2hSaXBwbGVDbGFzc2VzIGZyb20gJy4vdG91Y2hSaXBwbGVDbGFzc2VzJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5jb25zdCBEVVJBVElPTiA9IDU1MDtcbmV4cG9ydCBjb25zdCBERUxBWV9SSVBQTEUgPSA4MDtcbmNvbnN0IGVudGVyS2V5ZnJhbWUgPSBrZXlmcmFtZXMoX3QgfHwgKF90ID0gX2BcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XG4gICAgb3BhY2l0eTogMC4xO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICBvcGFjaXR5OiAwLjM7XG4gIH1cbmApKTtcbmNvbnN0IGV4aXRLZXlmcmFtZSA9IGtleWZyYW1lcyhfdDIgfHwgKF90MiA9IF9gXG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuYCkpO1xuY29uc3QgcHVsc2F0ZUtleWZyYW1lID0ga2V5ZnJhbWVzKF90MyB8fCAoX3QzID0gX2BcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cblxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG4gIH1cblxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG5gKSk7XG5leHBvcnQgY29uc3QgVG91Y2hSaXBwbGVSb290ID0gc3R5bGVkKCdzcGFuJywge1xuICBuYW1lOiAnTXVpVG91Y2hSaXBwbGUnLFxuICBzbG90OiAnUm9vdCdcbn0pKHtcbiAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB6SW5kZXg6IDAsXG4gIHRvcDogMCxcbiAgcmlnaHQ6IDAsXG4gIGJvdHRvbTogMCxcbiAgbGVmdDogMCxcbiAgYm9yZGVyUmFkaXVzOiAnaW5oZXJpdCdcbn0pOyAvLyBUaGlzIGBzdHlsZWQoKWAgZnVuY3Rpb24gaW52b2tlcyBrZXlmcmFtZXMuIGBzdHlsZWQtY29tcG9uZW50c2Agb25seSBzdXBwb3J0cyBrZXlmcmFtZXNcbi8vIGluIHN0cmluZyB0ZW1wbGF0ZXMuIERvIG5vdCBjb252ZXJ0IHRoZXNlIHN0eWxlcyBpbiBKUyBvYmplY3QgYXMgaXQgd2lsbCBicmVhay5cblxuZXhwb3J0IGNvbnN0IFRvdWNoUmlwcGxlUmlwcGxlID0gc3R5bGVkKFJpcHBsZSwge1xuICBuYW1lOiAnTXVpVG91Y2hSaXBwbGUnLFxuICBzbG90OiAnUmlwcGxlJ1xufSkoX3Q0IHx8IChfdDQgPSBfYFxuICBvcGFjaXR5OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cbiAgJi4kezB9IHtcbiAgICBvcGFjaXR5OiAwLjM7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICBhbmltYXRpb24tbmFtZTogJHswfTtcbiAgICBhbmltYXRpb24tZHVyYXRpb246ICR7MH1tcztcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkezB9O1xuICB9XG5cbiAgJi4kezB9IHtcbiAgICBhbmltYXRpb24tZHVyYXRpb246ICR7MH1tcztcbiAgfVxuXG4gICYgLiR7MH0ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIH1cblxuICAmIC4kezB9IHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIGFuaW1hdGlvbi1uYW1lOiAkezB9O1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogJHswfW1zO1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246ICR7MH07XG4gIH1cblxuICAmIC4kezB9IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgLyogQG5vZmxpcCAqL1xuICAgIGxlZnQ6IDBweDtcbiAgICB0b3A6IDA7XG4gICAgYW5pbWF0aW9uLW5hbWU6ICR7MH07XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAyNTAwbXM7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogJHswfTtcbiAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcbiAgICBhbmltYXRpb24tZGVsYXk6IDIwMG1zO1xuICB9XG5gKSwgdG91Y2hSaXBwbGVDbGFzc2VzLnJpcHBsZVZpc2libGUsIGVudGVyS2V5ZnJhbWUsIERVUkFUSU9OLCAoe1xuICB0aGVtZVxufSkgPT4gdGhlbWUudHJhbnNpdGlvbnMuZWFzaW5nLmVhc2VJbk91dCwgdG91Y2hSaXBwbGVDbGFzc2VzLnJpcHBsZVB1bHNhdGUsICh7XG4gIHRoZW1lXG59KSA9PiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5zaG9ydGVyLCB0b3VjaFJpcHBsZUNsYXNzZXMuY2hpbGQsIHRvdWNoUmlwcGxlQ2xhc3Nlcy5jaGlsZExlYXZpbmcsIGV4aXRLZXlmcmFtZSwgRFVSQVRJT04sICh7XG4gIHRoZW1lXG59KSA9PiB0aGVtZS50cmFuc2l0aW9ucy5lYXNpbmcuZWFzZUluT3V0LCB0b3VjaFJpcHBsZUNsYXNzZXMuY2hpbGRQdWxzYXRlLCBwdWxzYXRlS2V5ZnJhbWUsICh7XG4gIHRoZW1lXG59KSA9PiB0aGVtZS50cmFuc2l0aW9ucy5lYXNpbmcuZWFzZUluT3V0KTtcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqXG4gKiBUT0RPIHY1OiBNYWtlIHByaXZhdGVcbiAqL1xuXG5jb25zdCBUb3VjaFJpcHBsZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRvdWNoUmlwcGxlKGluUHJvcHMsIHJlZikge1xuICBjb25zdCBwcm9wcyA9IHVzZVRoZW1lUHJvcHMoe1xuICAgIHByb3BzOiBpblByb3BzLFxuICAgIG5hbWU6ICdNdWlUb3VjaFJpcHBsZSdcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGNlbnRlcjogY2VudGVyUHJvcCA9IGZhbHNlLFxuICAgIGNsYXNzZXMgPSB7fSxcbiAgICBjbGFzc05hbWVcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IFtyaXBwbGVzLCBzZXRSaXBwbGVzXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcbiAgY29uc3QgbmV4dEtleSA9IFJlYWN0LnVzZVJlZigwKTtcbiAgY29uc3QgcmlwcGxlQ2FsbGJhY2sgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHJpcHBsZUNhbGxiYWNrLmN1cnJlbnQpIHtcbiAgICAgIHJpcHBsZUNhbGxiYWNrLmN1cnJlbnQoKTtcbiAgICAgIHJpcHBsZUNhbGxiYWNrLmN1cnJlbnQgPSBudWxsO1xuICAgIH1cbiAgfSwgW3JpcHBsZXNdKTsgLy8gVXNlZCB0byBmaWx0ZXIgb3V0IG1vdXNlIGVtdWxhdGVkIGV2ZW50cyBvbiBtb2JpbGUuXG5cbiAgY29uc3QgaWdub3JpbmdNb3VzZURvd24gPSBSZWFjdC51c2VSZWYoZmFsc2UpOyAvLyBXZSB1c2UgYSB0aW1lciBpbiBvcmRlciB0byBvbmx5IHNob3cgdGhlIHJpcHBsZXMgZm9yIHRvdWNoIFwiY2xpY2tcIiBsaWtlIGV2ZW50cy5cbiAgLy8gV2UgZG9uJ3Qgd2FudCB0byBkaXNwbGF5IHRoZSByaXBwbGUgZm9yIHRvdWNoIHNjcm9sbCBldmVudHMuXG5cbiAgY29uc3Qgc3RhcnRUaW1lciA9IFJlYWN0LnVzZVJlZihudWxsKTsgLy8gVGhpcyBpcyB0aGUgaG9vayBjYWxsZWQgb25jZSB0aGUgcHJldmlvdXMgdGltZW91dCBpcyByZWFkeS5cblxuICBjb25zdCBzdGFydFRpbWVyQ29tbWl0ID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCBjb250YWluZXIgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dChzdGFydFRpbWVyLmN1cnJlbnQpO1xuICAgIH07XG4gIH0sIFtdKTtcbiAgY29uc3Qgc3RhcnRDb21taXQgPSBSZWFjdC51c2VDYWxsYmFjayhwYXJhbXMgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIHB1bHNhdGUsXG4gICAgICByaXBwbGVYLFxuICAgICAgcmlwcGxlWSxcbiAgICAgIHJpcHBsZVNpemUsXG4gICAgICBjYlxuICAgIH0gPSBwYXJhbXM7XG4gICAgc2V0UmlwcGxlcyhvbGRSaXBwbGVzID0+IFsuLi5vbGRSaXBwbGVzLCAvKiNfX1BVUkVfXyovX2pzeChUb3VjaFJpcHBsZVJpcHBsZSwge1xuICAgICAgY2xhc3Nlczoge1xuICAgICAgICByaXBwbGU6IGNsc3goY2xhc3Nlcy5yaXBwbGUsIHRvdWNoUmlwcGxlQ2xhc3Nlcy5yaXBwbGUpLFxuICAgICAgICByaXBwbGVWaXNpYmxlOiBjbHN4KGNsYXNzZXMucmlwcGxlVmlzaWJsZSwgdG91Y2hSaXBwbGVDbGFzc2VzLnJpcHBsZVZpc2libGUpLFxuICAgICAgICByaXBwbGVQdWxzYXRlOiBjbHN4KGNsYXNzZXMucmlwcGxlUHVsc2F0ZSwgdG91Y2hSaXBwbGVDbGFzc2VzLnJpcHBsZVB1bHNhdGUpLFxuICAgICAgICBjaGlsZDogY2xzeChjbGFzc2VzLmNoaWxkLCB0b3VjaFJpcHBsZUNsYXNzZXMuY2hpbGQpLFxuICAgICAgICBjaGlsZExlYXZpbmc6IGNsc3goY2xhc3Nlcy5jaGlsZExlYXZpbmcsIHRvdWNoUmlwcGxlQ2xhc3Nlcy5jaGlsZExlYXZpbmcpLFxuICAgICAgICBjaGlsZFB1bHNhdGU6IGNsc3goY2xhc3Nlcy5jaGlsZFB1bHNhdGUsIHRvdWNoUmlwcGxlQ2xhc3Nlcy5jaGlsZFB1bHNhdGUpXG4gICAgICB9LFxuICAgICAgdGltZW91dDogRFVSQVRJT04sXG4gICAgICBwdWxzYXRlOiBwdWxzYXRlLFxuICAgICAgcmlwcGxlWDogcmlwcGxlWCxcbiAgICAgIHJpcHBsZVk6IHJpcHBsZVksXG4gICAgICByaXBwbGVTaXplOiByaXBwbGVTaXplXG4gICAgfSwgbmV4dEtleS5jdXJyZW50KV0pO1xuICAgIG5leHRLZXkuY3VycmVudCArPSAxO1xuICAgIHJpcHBsZUNhbGxiYWNrLmN1cnJlbnQgPSBjYjtcbiAgfSwgW2NsYXNzZXNdKTtcbiAgY29uc3Qgc3RhcnQgPSBSZWFjdC51c2VDYWxsYmFjaygoZXZlbnQgPSB7fSwgb3B0aW9ucyA9IHt9LCBjYikgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIHB1bHNhdGUgPSBmYWxzZSxcbiAgICAgIGNlbnRlciA9IGNlbnRlclByb3AgfHwgb3B0aW9ucy5wdWxzYXRlLFxuICAgICAgZmFrZUVsZW1lbnQgPSBmYWxzZSAvLyBGb3IgdGVzdCBwdXJwb3Nlc1xuXG4gICAgfSA9IG9wdGlvbnM7XG5cbiAgICBpZiAoKGV2ZW50ID09IG51bGwgPyB2b2lkIDAgOiBldmVudC50eXBlKSA9PT0gJ21vdXNlZG93bicgJiYgaWdub3JpbmdNb3VzZURvd24uY3VycmVudCkge1xuICAgICAgaWdub3JpbmdNb3VzZURvd24uY3VycmVudCA9IGZhbHNlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICgoZXZlbnQgPT0gbnVsbCA/IHZvaWQgMCA6IGV2ZW50LnR5cGUpID09PSAndG91Y2hzdGFydCcpIHtcbiAgICAgIGlnbm9yaW5nTW91c2VEb3duLmN1cnJlbnQgPSB0cnVlO1xuICAgIH1cblxuICAgIGNvbnN0IGVsZW1lbnQgPSBmYWtlRWxlbWVudCA/IG51bGwgOiBjb250YWluZXIuY3VycmVudDtcbiAgICBjb25zdCByZWN0ID0gZWxlbWVudCA/IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkgOiB7XG4gICAgICB3aWR0aDogMCxcbiAgICAgIGhlaWdodDogMCxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICB0b3A6IDBcbiAgICB9OyAvLyBHZXQgdGhlIHNpemUgb2YgdGhlIHJpcHBsZVxuXG4gICAgbGV0IHJpcHBsZVg7XG4gICAgbGV0IHJpcHBsZVk7XG4gICAgbGV0IHJpcHBsZVNpemU7XG5cbiAgICBpZiAoY2VudGVyIHx8IGV2ZW50ID09PSB1bmRlZmluZWQgfHwgZXZlbnQuY2xpZW50WCA9PT0gMCAmJiBldmVudC5jbGllbnRZID09PSAwIHx8ICFldmVudC5jbGllbnRYICYmICFldmVudC50b3VjaGVzKSB7XG4gICAgICByaXBwbGVYID0gTWF0aC5yb3VuZChyZWN0LndpZHRoIC8gMik7XG4gICAgICByaXBwbGVZID0gTWF0aC5yb3VuZChyZWN0LmhlaWdodCAvIDIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNsaWVudFgsXG4gICAgICAgIGNsaWVudFlcbiAgICAgIH0gPSBldmVudC50b3VjaGVzID8gZXZlbnQudG91Y2hlc1swXSA6IGV2ZW50O1xuICAgICAgcmlwcGxlWCA9IE1hdGgucm91bmQoY2xpZW50WCAtIHJlY3QubGVmdCk7XG4gICAgICByaXBwbGVZID0gTWF0aC5yb3VuZChjbGllbnRZIC0gcmVjdC50b3ApO1xuICAgIH1cblxuICAgIGlmIChjZW50ZXIpIHtcbiAgICAgIHJpcHBsZVNpemUgPSBNYXRoLnNxcnQoKDIgKiByZWN0LndpZHRoICoqIDIgKyByZWN0LmhlaWdodCAqKiAyKSAvIDMpOyAvLyBGb3Igc29tZSByZWFzb24gdGhlIGFuaW1hdGlvbiBpcyBicm9rZW4gb24gTW9iaWxlIENocm9tZSBpZiB0aGUgc2l6ZSBpcyBldmVuLlxuXG4gICAgICBpZiAocmlwcGxlU2l6ZSAlIDIgPT09IDApIHtcbiAgICAgICAgcmlwcGxlU2l6ZSArPSAxO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBzaXplWCA9IE1hdGgubWF4KE1hdGguYWJzKChlbGVtZW50ID8gZWxlbWVudC5jbGllbnRXaWR0aCA6IDApIC0gcmlwcGxlWCksIHJpcHBsZVgpICogMiArIDI7XG4gICAgICBjb25zdCBzaXplWSA9IE1hdGgubWF4KE1hdGguYWJzKChlbGVtZW50ID8gZWxlbWVudC5jbGllbnRIZWlnaHQgOiAwKSAtIHJpcHBsZVkpLCByaXBwbGVZKSAqIDIgKyAyO1xuICAgICAgcmlwcGxlU2l6ZSA9IE1hdGguc3FydChzaXplWCAqKiAyICsgc2l6ZVkgKiogMik7XG4gICAgfSAvLyBUb3VjaGUgZGV2aWNlc1xuXG5cbiAgICBpZiAoZXZlbnQgIT0gbnVsbCAmJiBldmVudC50b3VjaGVzKSB7XG4gICAgICAvLyBjaGVjayB0aGF0IHRoaXMgaXNuJ3QgYW5vdGhlciB0b3VjaHN0YXJ0IGR1ZSB0byBtdWx0aXRvdWNoXG4gICAgICAvLyBvdGhlcndpc2Ugd2Ugd2lsbCBvbmx5IGNsZWFyIGEgc2luZ2xlIHRpbWVyIHdoZW4gdW5tb3VudGluZyB3aGlsZSB0d29cbiAgICAgIC8vIGFyZSBydW5uaW5nXG4gICAgICBpZiAoc3RhcnRUaW1lckNvbW1pdC5jdXJyZW50ID09PSBudWxsKSB7XG4gICAgICAgIC8vIFByZXBhcmUgdGhlIHJpcHBsZSBlZmZlY3QuXG4gICAgICAgIHN0YXJ0VGltZXJDb21taXQuY3VycmVudCA9ICgpID0+IHtcbiAgICAgICAgICBzdGFydENvbW1pdCh7XG4gICAgICAgICAgICBwdWxzYXRlLFxuICAgICAgICAgICAgcmlwcGxlWCxcbiAgICAgICAgICAgIHJpcHBsZVksXG4gICAgICAgICAgICByaXBwbGVTaXplLFxuICAgICAgICAgICAgY2JcbiAgICAgICAgICB9KTtcbiAgICAgICAgfTsgLy8gRGVsYXkgdGhlIGV4ZWN1dGlvbiBvZiB0aGUgcmlwcGxlIGVmZmVjdC5cblxuXG4gICAgICAgIHN0YXJ0VGltZXIuY3VycmVudCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIGlmIChzdGFydFRpbWVyQ29tbWl0LmN1cnJlbnQpIHtcbiAgICAgICAgICAgIHN0YXJ0VGltZXJDb21taXQuY3VycmVudCgpO1xuICAgICAgICAgICAgc3RhcnRUaW1lckNvbW1pdC5jdXJyZW50ID0gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIERFTEFZX1JJUFBMRSk7IC8vIFdlIGhhdmUgdG8gbWFrZSBhIHRyYWRlb2ZmIHdpdGggdGhpcyB2YWx1ZS5cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc3RhcnRDb21taXQoe1xuICAgICAgICBwdWxzYXRlLFxuICAgICAgICByaXBwbGVYLFxuICAgICAgICByaXBwbGVZLFxuICAgICAgICByaXBwbGVTaXplLFxuICAgICAgICBjYlxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbY2VudGVyUHJvcCwgc3RhcnRDb21taXRdKTtcbiAgY29uc3QgcHVsc2F0ZSA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzdGFydCh7fSwge1xuICAgICAgcHVsc2F0ZTogdHJ1ZVxuICAgIH0pO1xuICB9LCBbc3RhcnRdKTtcbiAgY29uc3Qgc3RvcCA9IFJlYWN0LnVzZUNhbGxiYWNrKChldmVudCwgY2IpID0+IHtcbiAgICBjbGVhclRpbWVvdXQoc3RhcnRUaW1lci5jdXJyZW50KTsgLy8gVGhlIHRvdWNoIGludGVyYWN0aW9uIG9jY3VycyB0b28gcXVpY2tseS5cbiAgICAvLyBXZSBzdGlsbCB3YW50IHRvIHNob3cgcmlwcGxlIGVmZmVjdC5cblxuICAgIGlmICgoZXZlbnQgPT0gbnVsbCA/IHZvaWQgMCA6IGV2ZW50LnR5cGUpID09PSAndG91Y2hlbmQnICYmIHN0YXJ0VGltZXJDb21taXQuY3VycmVudCkge1xuICAgICAgc3RhcnRUaW1lckNvbW1pdC5jdXJyZW50KCk7XG4gICAgICBzdGFydFRpbWVyQ29tbWl0LmN1cnJlbnQgPSBudWxsO1xuICAgICAgc3RhcnRUaW1lci5jdXJyZW50ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHN0b3AoZXZlbnQsIGNiKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHN0YXJ0VGltZXJDb21taXQuY3VycmVudCA9IG51bGw7XG4gICAgc2V0UmlwcGxlcyhvbGRSaXBwbGVzID0+IHtcbiAgICAgIGlmIChvbGRSaXBwbGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmV0dXJuIG9sZFJpcHBsZXMuc2xpY2UoMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBvbGRSaXBwbGVzO1xuICAgIH0pO1xuICAgIHJpcHBsZUNhbGxiYWNrLmN1cnJlbnQgPSBjYjtcbiAgfSwgW10pO1xuICBSZWFjdC51c2VJbXBlcmF0aXZlSGFuZGxlKHJlZiwgKCkgPT4gKHtcbiAgICBwdWxzYXRlLFxuICAgIHN0YXJ0LFxuICAgIHN0b3BcbiAgfSksIFtwdWxzYXRlLCBzdGFydCwgc3RvcF0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goVG91Y2hSaXBwbGVSb290LCBfZXh0ZW5kcyh7XG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgdG91Y2hSaXBwbGVDbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSksXG4gICAgcmVmOiBjb250YWluZXJcbiAgfSwgb3RoZXIsIHtcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goVHJhbnNpdGlvbkdyb3VwLCB7XG4gICAgICBjb21wb25lbnQ6IG51bGwsXG4gICAgICBleGl0OiB0cnVlLFxuICAgICAgY2hpbGRyZW46IHJpcHBsZXNcbiAgICB9KVxuICB9KSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFRvdWNoUmlwcGxlLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHJpcHBsZSBzdGFydHMgYXQgdGhlIGNlbnRlciBvZiB0aGUgY29tcG9uZW50XG4gICAqIHJhdGhlciB0aGFuIGF0IHRoZSBwb2ludCBvZiBpbnRlcmFjdGlvbi5cbiAgICovXG4gIGNlbnRlcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICogU2VlIFtDU1MgQVBJXSgjY3NzKSBiZWxvdyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgVG91Y2hSaXBwbGU7IiwiaW1wb3J0IHsgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MsIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJ1dHRvbkJhc2VVdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aUJ1dHRvbkJhc2UnLCBzbG90KTtcbn1cbmNvbnN0IGJ1dHRvbkJhc2VDbGFzc2VzID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcygnTXVpQnV0dG9uQmFzZScsIFsncm9vdCcsICdkaXNhYmxlZCcsICdmb2N1c1Zpc2libGUnXSk7XG5leHBvcnQgZGVmYXVsdCBidXR0b25CYXNlQ2xhc3NlczsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiYWN0aW9uXCIsIFwiY2VudGVyUmlwcGxlXCIsIFwiY2hpbGRyZW5cIiwgXCJjbGFzc05hbWVcIiwgXCJjb21wb25lbnRcIiwgXCJkaXNhYmxlZFwiLCBcImRpc2FibGVSaXBwbGVcIiwgXCJkaXNhYmxlVG91Y2hSaXBwbGVcIiwgXCJmb2N1c1JpcHBsZVwiLCBcImZvY3VzVmlzaWJsZUNsYXNzTmFtZVwiLCBcIkxpbmtDb21wb25lbnRcIiwgXCJvbkJsdXJcIiwgXCJvbkNsaWNrXCIsIFwib25Db250ZXh0TWVudVwiLCBcIm9uRHJhZ0xlYXZlXCIsIFwib25Gb2N1c1wiLCBcIm9uRm9jdXNWaXNpYmxlXCIsIFwib25LZXlEb3duXCIsIFwib25LZXlVcFwiLCBcIm9uTW91c2VEb3duXCIsIFwib25Nb3VzZUxlYXZlXCIsIFwib25Nb3VzZVVwXCIsIFwib25Ub3VjaEVuZFwiLCBcIm9uVG91Y2hNb3ZlXCIsIFwib25Ub3VjaFN0YXJ0XCIsIFwidGFiSW5kZXhcIiwgXCJUb3VjaFJpcHBsZVByb3BzXCIsIFwidG91Y2hSaXBwbGVSZWZcIiwgXCJ0eXBlXCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgZWxlbWVudFR5cGVBY2NlcHRpbmdSZWYsIHJlZlR5cGUgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCBjb21wb3NlQ2xhc3NlcyBmcm9tICdAbXVpL2Jhc2UvY29tcG9zZUNsYXNzZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCB1c2VUaGVtZVByb3BzIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZVByb3BzJztcbmltcG9ydCB1c2VGb3JrUmVmIGZyb20gJy4uL3V0aWxzL3VzZUZvcmtSZWYnO1xuaW1wb3J0IHVzZUV2ZW50Q2FsbGJhY2sgZnJvbSAnLi4vdXRpbHMvdXNlRXZlbnRDYWxsYmFjayc7XG5pbXBvcnQgdXNlSXNGb2N1c1Zpc2libGUgZnJvbSAnLi4vdXRpbHMvdXNlSXNGb2N1c1Zpc2libGUnO1xuaW1wb3J0IFRvdWNoUmlwcGxlIGZyb20gJy4vVG91Y2hSaXBwbGUnO1xuaW1wb3J0IGJ1dHRvbkJhc2VDbGFzc2VzLCB7IGdldEJ1dHRvbkJhc2VVdGlsaXR5Q2xhc3MgfSBmcm9tICcuL2J1dHRvbkJhc2VDbGFzc2VzJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBkaXNhYmxlZCxcbiAgICBmb2N1c1Zpc2libGUsXG4gICAgZm9jdXNWaXNpYmxlQ2xhc3NOYW1lLFxuICAgIGNsYXNzZXNcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCcsIGRpc2FibGVkICYmICdkaXNhYmxlZCcsIGZvY3VzVmlzaWJsZSAmJiAnZm9jdXNWaXNpYmxlJ11cbiAgfTtcbiAgY29uc3QgY29tcG9zZWRDbGFzc2VzID0gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldEJ1dHRvbkJhc2VVdGlsaXR5Q2xhc3MsIGNsYXNzZXMpO1xuXG4gIGlmIChmb2N1c1Zpc2libGUgJiYgZm9jdXNWaXNpYmxlQ2xhc3NOYW1lKSB7XG4gICAgY29tcG9zZWRDbGFzc2VzLnJvb3QgKz0gYCAke2ZvY3VzVmlzaWJsZUNsYXNzTmFtZX1gO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBvc2VkQ2xhc3Nlcztcbn07XG5cbmV4cG9ydCBjb25zdCBCdXR0b25CYXNlUm9vdCA9IHN0eWxlZCgnYnV0dG9uJywge1xuICBuYW1lOiAnTXVpQnV0dG9uQmFzZScsXG4gIHNsb3Q6ICdSb290JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiBzdHlsZXMucm9vdFxufSkoe1xuICBkaXNwbGF5OiAnaW5saW5lLWZsZXgnLFxuICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gIFdlYmtpdFRhcEhpZ2hsaWdodENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsXG4gIC8vIFJlc2V0IGRlZmF1bHQgdmFsdWVcbiAgLy8gV2UgZGlzYWJsZSB0aGUgZm9jdXMgcmluZyBmb3IgbW91c2UsIHRvdWNoIGFuZCBrZXlib2FyZCB1c2Vycy5cbiAgb3V0bGluZTogMCxcbiAgYm9yZGVyOiAwLFxuICBtYXJnaW46IDAsXG4gIC8vIFJlbW92ZSB0aGUgbWFyZ2luIGluIFNhZmFyaVxuICBib3JkZXJSYWRpdXM6IDAsXG4gIHBhZGRpbmc6IDAsXG4gIC8vIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBGaXJlZm94XG4gIGN1cnNvcjogJ3BvaW50ZXInLFxuICB1c2VyU2VsZWN0OiAnbm9uZScsXG4gIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxuICBNb3pBcHBlYXJhbmNlOiAnbm9uZScsXG4gIC8vIFJlc2V0XG4gIFdlYmtpdEFwcGVhcmFuY2U6ICdub25lJyxcbiAgLy8gUmVzZXRcbiAgdGV4dERlY29yYXRpb246ICdub25lJyxcbiAgLy8gU28gd2UgdGFrZSBwcmVjZWRlbnQgb3ZlciB0aGUgc3R5bGUgb2YgYSBuYXRpdmUgPGEgLz4gZWxlbWVudC5cbiAgY29sb3I6ICdpbmhlcml0JyxcbiAgJyY6Oi1tb3otZm9jdXMtaW5uZXInOiB7XG4gICAgYm9yZGVyU3R5bGU6ICdub25lJyAvLyBSZW1vdmUgRmlyZWZveCBkb3R0ZWQgb3V0bGluZS5cblxuICB9LFxuICBbYCYuJHtidXR0b25CYXNlQ2xhc3Nlcy5kaXNhYmxlZH1gXToge1xuICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICAvLyBEaXNhYmxlIGxpbmsgaW50ZXJhY3Rpb25zXG4gICAgY3Vyc29yOiAnZGVmYXVsdCdcbiAgfSxcbiAgJ0BtZWRpYSBwcmludCc6IHtcbiAgICBjb2xvckFkanVzdDogJ2V4YWN0J1xuICB9XG59KTtcbi8qKlxuICogYEJ1dHRvbkJhc2VgIGNvbnRhaW5zIGFzIGZldyBzdHlsZXMgYXMgcG9zc2libGUuXG4gKiBJdCBhaW1zIHRvIGJlIGEgc2ltcGxlIGJ1aWxkaW5nIGJsb2NrIGZvciBjcmVhdGluZyBhIGJ1dHRvbi5cbiAqIEl0IGNvbnRhaW5zIGEgbG9hZCBvZiBzdHlsZSByZXNldCBhbmQgc29tZSBmb2N1cy9yaXBwbGUgbG9naWMuXG4gKi9cblxuY29uc3QgQnV0dG9uQmFzZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIEJ1dHRvbkJhc2UoaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aUJ1dHRvbkJhc2UnXG4gIH0pO1xuXG4gIGNvbnN0IHtcbiAgICBhY3Rpb24sXG4gICAgY2VudGVyUmlwcGxlID0gZmFsc2UsXG4gICAgY2hpbGRyZW4sXG4gICAgY2xhc3NOYW1lLFxuICAgIGNvbXBvbmVudCA9ICdidXR0b24nLFxuICAgIGRpc2FibGVkID0gZmFsc2UsXG4gICAgZGlzYWJsZVJpcHBsZSA9IGZhbHNlLFxuICAgIGRpc2FibGVUb3VjaFJpcHBsZSA9IGZhbHNlLFxuICAgIGZvY3VzUmlwcGxlID0gZmFsc2UsXG4gICAgTGlua0NvbXBvbmVudCA9ICdhJyxcbiAgICBvbkJsdXIsXG4gICAgb25DbGljayxcbiAgICBvbkNvbnRleHRNZW51LFxuICAgIG9uRHJhZ0xlYXZlLFxuICAgIG9uRm9jdXMsXG4gICAgb25Gb2N1c1Zpc2libGUsXG4gICAgb25LZXlEb3duLFxuICAgIG9uS2V5VXAsXG4gICAgb25Nb3VzZURvd24sXG4gICAgb25Nb3VzZUxlYXZlLFxuICAgIG9uTW91c2VVcCxcbiAgICBvblRvdWNoRW5kLFxuICAgIG9uVG91Y2hNb3ZlLFxuICAgIG9uVG91Y2hTdGFydCxcbiAgICB0YWJJbmRleCA9IDAsXG4gICAgVG91Y2hSaXBwbGVQcm9wcyxcbiAgICB0b3VjaFJpcHBsZVJlZixcbiAgICB0eXBlXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBidXR0b25SZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gIGNvbnN0IHJpcHBsZVJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgaGFuZGxlUmlwcGxlUmVmID0gdXNlRm9ya1JlZihyaXBwbGVSZWYsIHRvdWNoUmlwcGxlUmVmKTtcbiAgY29uc3Qge1xuICAgIGlzRm9jdXNWaXNpYmxlUmVmLFxuICAgIG9uRm9jdXM6IGhhbmRsZUZvY3VzVmlzaWJsZSxcbiAgICBvbkJsdXI6IGhhbmRsZUJsdXJWaXNpYmxlLFxuICAgIHJlZjogZm9jdXNWaXNpYmxlUmVmXG4gIH0gPSB1c2VJc0ZvY3VzVmlzaWJsZSgpO1xuICBjb25zdCBbZm9jdXNWaXNpYmxlLCBzZXRGb2N1c1Zpc2libGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuXG4gIGlmIChkaXNhYmxlZCAmJiBmb2N1c1Zpc2libGUpIHtcbiAgICBzZXRGb2N1c1Zpc2libGUoZmFsc2UpO1xuICB9XG5cbiAgUmVhY3QudXNlSW1wZXJhdGl2ZUhhbmRsZShhY3Rpb24sICgpID0+ICh7XG4gICAgZm9jdXNWaXNpYmxlOiAoKSA9PiB7XG4gICAgICBzZXRGb2N1c1Zpc2libGUodHJ1ZSk7XG4gICAgICBidXR0b25SZWYuY3VycmVudC5mb2N1cygpO1xuICAgIH1cbiAgfSksIFtdKTtcbiAgY29uc3QgW21vdW50ZWRTdGF0ZSwgc2V0TW91bnRlZFN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRNb3VudGVkU3RhdGUodHJ1ZSk7XG4gIH0sIFtdKTtcbiAgY29uc3QgZW5hYmxlVG91Y2hSaXBwbGUgPSBtb3VudGVkU3RhdGUgJiYgIWRpc2FibGVSaXBwbGUgJiYgIWRpc2FibGVkO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChmb2N1c1Zpc2libGUgJiYgZm9jdXNSaXBwbGUgJiYgIWRpc2FibGVSaXBwbGUgJiYgbW91bnRlZFN0YXRlKSB7XG4gICAgICByaXBwbGVSZWYuY3VycmVudC5wdWxzYXRlKCk7XG4gICAgfVxuICB9LCBbZGlzYWJsZVJpcHBsZSwgZm9jdXNSaXBwbGUsIGZvY3VzVmlzaWJsZSwgbW91bnRlZFN0YXRlXSk7XG5cbiAgZnVuY3Rpb24gdXNlUmlwcGxlSGFuZGxlcihyaXBwbGVBY3Rpb24sIGV2ZW50Q2FsbGJhY2ssIHNraXBSaXBwbGVBY3Rpb24gPSBkaXNhYmxlVG91Y2hSaXBwbGUpIHtcbiAgICByZXR1cm4gdXNlRXZlbnRDYWxsYmFjayhldmVudCA9PiB7XG4gICAgICBpZiAoZXZlbnRDYWxsYmFjaykge1xuICAgICAgICBldmVudENhbGxiYWNrKGV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgaWdub3JlID0gc2tpcFJpcHBsZUFjdGlvbjtcblxuICAgICAgaWYgKCFpZ25vcmUgJiYgcmlwcGxlUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgcmlwcGxlUmVmLmN1cnJlbnRbcmlwcGxlQWN0aW9uXShldmVudCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xuICB9XG5cbiAgY29uc3QgaGFuZGxlTW91c2VEb3duID0gdXNlUmlwcGxlSGFuZGxlcignc3RhcnQnLCBvbk1vdXNlRG93bik7XG4gIGNvbnN0IGhhbmRsZUNvbnRleHRNZW51ID0gdXNlUmlwcGxlSGFuZGxlcignc3RvcCcsIG9uQ29udGV4dE1lbnUpO1xuICBjb25zdCBoYW5kbGVEcmFnTGVhdmUgPSB1c2VSaXBwbGVIYW5kbGVyKCdzdG9wJywgb25EcmFnTGVhdmUpO1xuICBjb25zdCBoYW5kbGVNb3VzZVVwID0gdXNlUmlwcGxlSGFuZGxlcignc3RvcCcsIG9uTW91c2VVcCk7XG4gIGNvbnN0IGhhbmRsZU1vdXNlTGVhdmUgPSB1c2VSaXBwbGVIYW5kbGVyKCdzdG9wJywgZXZlbnQgPT4ge1xuICAgIGlmIChmb2N1c1Zpc2libGUpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuXG4gICAgaWYgKG9uTW91c2VMZWF2ZSkge1xuICAgICAgb25Nb3VzZUxlYXZlKGV2ZW50KTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBoYW5kbGVUb3VjaFN0YXJ0ID0gdXNlUmlwcGxlSGFuZGxlcignc3RhcnQnLCBvblRvdWNoU3RhcnQpO1xuICBjb25zdCBoYW5kbGVUb3VjaEVuZCA9IHVzZVJpcHBsZUhhbmRsZXIoJ3N0b3AnLCBvblRvdWNoRW5kKTtcbiAgY29uc3QgaGFuZGxlVG91Y2hNb3ZlID0gdXNlUmlwcGxlSGFuZGxlcignc3RvcCcsIG9uVG91Y2hNb3ZlKTtcbiAgY29uc3QgaGFuZGxlQmx1ciA9IHVzZVJpcHBsZUhhbmRsZXIoJ3N0b3AnLCBldmVudCA9PiB7XG4gICAgaGFuZGxlQmx1clZpc2libGUoZXZlbnQpO1xuXG4gICAgaWYgKGlzRm9jdXNWaXNpYmxlUmVmLmN1cnJlbnQgPT09IGZhbHNlKSB7XG4gICAgICBzZXRGb2N1c1Zpc2libGUoZmFsc2UpO1xuICAgIH1cblxuICAgIGlmIChvbkJsdXIpIHtcbiAgICAgIG9uQmx1cihldmVudCk7XG4gICAgfVxuICB9LCBmYWxzZSk7XG4gIGNvbnN0IGhhbmRsZUZvY3VzID0gdXNlRXZlbnRDYWxsYmFjayhldmVudCA9PiB7XG4gICAgLy8gRml4IGZvciBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzc3NjlcbiAgICBpZiAoIWJ1dHRvblJlZi5jdXJyZW50KSB7XG4gICAgICBidXR0b25SZWYuY3VycmVudCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gICAgfVxuXG4gICAgaGFuZGxlRm9jdXNWaXNpYmxlKGV2ZW50KTtcblxuICAgIGlmIChpc0ZvY3VzVmlzaWJsZVJlZi5jdXJyZW50ID09PSB0cnVlKSB7XG4gICAgICBzZXRGb2N1c1Zpc2libGUodHJ1ZSk7XG5cbiAgICAgIGlmIChvbkZvY3VzVmlzaWJsZSkge1xuICAgICAgICBvbkZvY3VzVmlzaWJsZShldmVudCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG9uRm9jdXMpIHtcbiAgICAgIG9uRm9jdXMoZXZlbnQpO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgaXNOb25OYXRpdmVCdXR0b24gPSAoKSA9PiB7XG4gICAgY29uc3QgYnV0dG9uID0gYnV0dG9uUmVmLmN1cnJlbnQ7XG4gICAgcmV0dXJuIGNvbXBvbmVudCAmJiBjb21wb25lbnQgIT09ICdidXR0b24nICYmICEoYnV0dG9uLnRhZ05hbWUgPT09ICdBJyAmJiBidXR0b24uaHJlZik7XG4gIH07XG4gIC8qKlxuICAgKiBJRTExIHNoaW0gZm9yIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9LZXlib2FyZEV2ZW50L3JlcGVhdFxuICAgKi9cblxuXG4gIGNvbnN0IGtleWRvd25SZWYgPSBSZWFjdC51c2VSZWYoZmFsc2UpO1xuICBjb25zdCBoYW5kbGVLZXlEb3duID0gdXNlRXZlbnRDYWxsYmFjayhldmVudCA9PiB7XG4gICAgLy8gQ2hlY2sgaWYga2V5IGlzIGFscmVhZHkgZG93biB0byBhdm9pZCByZXBlYXRzIGJlaW5nIGNvdW50ZWQgYXMgbXVsdGlwbGUgYWN0aXZhdGlvbnNcbiAgICBpZiAoZm9jdXNSaXBwbGUgJiYgIWtleWRvd25SZWYuY3VycmVudCAmJiBmb2N1c1Zpc2libGUgJiYgcmlwcGxlUmVmLmN1cnJlbnQgJiYgZXZlbnQua2V5ID09PSAnICcpIHtcbiAgICAgIGtleWRvd25SZWYuY3VycmVudCA9IHRydWU7XG4gICAgICByaXBwbGVSZWYuY3VycmVudC5zdG9wKGV2ZW50LCAoKSA9PiB7XG4gICAgICAgIHJpcHBsZVJlZi5jdXJyZW50LnN0YXJ0KGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChldmVudC50YXJnZXQgPT09IGV2ZW50LmN1cnJlbnRUYXJnZXQgJiYgaXNOb25OYXRpdmVCdXR0b24oKSAmJiBldmVudC5rZXkgPT09ICcgJykge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICBpZiAob25LZXlEb3duKSB7XG4gICAgICBvbktleURvd24oZXZlbnQpO1xuICAgIH0gLy8gS2V5Ym9hcmQgYWNjZXNzaWJpbGl0eSBmb3Igbm9uIGludGVyYWN0aXZlIGVsZW1lbnRzXG5cblxuICAgIGlmIChldmVudC50YXJnZXQgPT09IGV2ZW50LmN1cnJlbnRUYXJnZXQgJiYgaXNOb25OYXRpdmVCdXR0b24oKSAmJiBldmVudC5rZXkgPT09ICdFbnRlcicgJiYgIWRpc2FibGVkKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBpZiAob25DbGljaykge1xuICAgICAgICBvbkNsaWNrKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuICBjb25zdCBoYW5kbGVLZXlVcCA9IHVzZUV2ZW50Q2FsbGJhY2soZXZlbnQgPT4ge1xuICAgIC8vIGNhbGxpbmcgcHJldmVudERlZmF1bHQgaW4ga2V5VXAgb24gYSA8YnV0dG9uPiB3aWxsIG5vdCBkaXNwYXRjaCBhIGNsaWNrIGV2ZW50IGlmIFNwYWNlIGlzIHByZXNzZWRcbiAgICAvLyBodHRwczovL2NvZGVzYW5kYm94LmlvL3MvYnV0dG9uLWtleXVwLXByZXZlbnRkZWZhdWx0LWRuN2YwXG4gICAgaWYgKGZvY3VzUmlwcGxlICYmIGV2ZW50LmtleSA9PT0gJyAnICYmIHJpcHBsZVJlZi5jdXJyZW50ICYmIGZvY3VzVmlzaWJsZSAmJiAhZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAga2V5ZG93blJlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgICByaXBwbGVSZWYuY3VycmVudC5zdG9wKGV2ZW50LCAoKSA9PiB7XG4gICAgICAgIHJpcHBsZVJlZi5jdXJyZW50LnB1bHNhdGUoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKG9uS2V5VXApIHtcbiAgICAgIG9uS2V5VXAoZXZlbnQpO1xuICAgIH0gLy8gS2V5Ym9hcmQgYWNjZXNzaWJpbGl0eSBmb3Igbm9uIGludGVyYWN0aXZlIGVsZW1lbnRzXG5cblxuICAgIGlmIChvbkNsaWNrICYmIGV2ZW50LnRhcmdldCA9PT0gZXZlbnQuY3VycmVudFRhcmdldCAmJiBpc05vbk5hdGl2ZUJ1dHRvbigpICYmIGV2ZW50LmtleSA9PT0gJyAnICYmICFldmVudC5kZWZhdWx0UHJldmVudGVkKSB7XG4gICAgICBvbkNsaWNrKGV2ZW50KTtcbiAgICB9XG4gIH0pO1xuICBsZXQgQ29tcG9uZW50UHJvcCA9IGNvbXBvbmVudDtcblxuICBpZiAoQ29tcG9uZW50UHJvcCA9PT0gJ2J1dHRvbicgJiYgKG90aGVyLmhyZWYgfHwgb3RoZXIudG8pKSB7XG4gICAgQ29tcG9uZW50UHJvcCA9IExpbmtDb21wb25lbnQ7XG4gIH1cblxuICBjb25zdCBidXR0b25Qcm9wcyA9IHt9O1xuXG4gIGlmIChDb21wb25lbnRQcm9wID09PSAnYnV0dG9uJykge1xuICAgIGJ1dHRvblByb3BzLnR5cGUgPSB0eXBlID09PSB1bmRlZmluZWQgPyAnYnV0dG9uJyA6IHR5cGU7XG4gICAgYnV0dG9uUHJvcHMuZGlzYWJsZWQgPSBkaXNhYmxlZDtcbiAgfSBlbHNlIHtcbiAgICBpZiAoIW90aGVyLmhyZWYgJiYgIW90aGVyLnRvKSB7XG4gICAgICBidXR0b25Qcm9wcy5yb2xlID0gJ2J1dHRvbic7XG4gICAgfVxuXG4gICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICBidXR0b25Qcm9wc1snYXJpYS1kaXNhYmxlZCddID0gZGlzYWJsZWQ7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgaGFuZGxlT3duUmVmID0gdXNlRm9ya1JlZihmb2N1c1Zpc2libGVSZWYsIGJ1dHRvblJlZik7XG4gIGNvbnN0IGhhbmRsZVJlZiA9IHVzZUZvcmtSZWYocmVmLCBoYW5kbGVPd25SZWYpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGlmIChlbmFibGVUb3VjaFJpcHBsZSAmJiAhcmlwcGxlUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihbJ01VSTogVGhlIGBjb21wb25lbnRgIHByb3AgcHJvdmlkZWQgdG8gQnV0dG9uQmFzZSBpcyBpbnZhbGlkLicsICdQbGVhc2UgbWFrZSBzdXJlIHRoZSBjaGlsZHJlbiBwcm9wIGlzIHJlbmRlcmVkIGluIHRoaXMgY3VzdG9tIGNvbXBvbmVudC4nXS5qb2luKCdcXG4nKSk7XG4gICAgICB9XG4gICAgfSwgW2VuYWJsZVRvdWNoUmlwcGxlXSk7XG4gIH1cblxuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgY2VudGVyUmlwcGxlLFxuICAgIGNvbXBvbmVudCxcbiAgICBkaXNhYmxlZCxcbiAgICBkaXNhYmxlUmlwcGxlLFxuICAgIGRpc2FibGVUb3VjaFJpcHBsZSxcbiAgICBmb2N1c1JpcHBsZSxcbiAgICB0YWJJbmRleCxcbiAgICBmb2N1c1Zpc2libGVcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuICByZXR1cm4gLyojX19QVVJFX18qL19qc3hzKEJ1dHRvbkJhc2VSb290LCBfZXh0ZW5kcyh7XG4gICAgYXM6IENvbXBvbmVudFByb3AsXG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKSxcbiAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgIG9uQmx1cjogaGFuZGxlQmx1cixcbiAgICBvbkNsaWNrOiBvbkNsaWNrLFxuICAgIG9uQ29udGV4dE1lbnU6IGhhbmRsZUNvbnRleHRNZW51LFxuICAgIG9uRm9jdXM6IGhhbmRsZUZvY3VzLFxuICAgIG9uS2V5RG93bjogaGFuZGxlS2V5RG93bixcbiAgICBvbktleVVwOiBoYW5kbGVLZXlVcCxcbiAgICBvbk1vdXNlRG93bjogaGFuZGxlTW91c2VEb3duLFxuICAgIG9uTW91c2VMZWF2ZTogaGFuZGxlTW91c2VMZWF2ZSxcbiAgICBvbk1vdXNlVXA6IGhhbmRsZU1vdXNlVXAsXG4gICAgb25EcmFnTGVhdmU6IGhhbmRsZURyYWdMZWF2ZSxcbiAgICBvblRvdWNoRW5kOiBoYW5kbGVUb3VjaEVuZCxcbiAgICBvblRvdWNoTW92ZTogaGFuZGxlVG91Y2hNb3ZlLFxuICAgIG9uVG91Y2hTdGFydDogaGFuZGxlVG91Y2hTdGFydCxcbiAgICByZWY6IGhhbmRsZVJlZixcbiAgICB0YWJJbmRleDogZGlzYWJsZWQgPyAtMSA6IHRhYkluZGV4LFxuICAgIHR5cGU6IHR5cGVcbiAgfSwgYnV0dG9uUHJvcHMsIG90aGVyLCB7XG4gICAgY2hpbGRyZW46IFtjaGlsZHJlbiwgZW5hYmxlVG91Y2hSaXBwbGUgP1xuICAgIC8qI19fUFVSRV9fKi9cblxuICAgIC8qIFRvdWNoUmlwcGxlIGlzIG9ubHkgbmVlZGVkIGNsaWVudC1zaWRlLCB4MiBib29zdCBvbiB0aGUgc2VydmVyLiAqL1xuICAgIF9qc3goVG91Y2hSaXBwbGUsIF9leHRlbmRzKHtcbiAgICAgIHJlZjogaGFuZGxlUmlwcGxlUmVmLFxuICAgICAgY2VudGVyOiBjZW50ZXJSaXBwbGVcbiAgICB9LCBUb3VjaFJpcHBsZVByb3BzKSkgOiBudWxsXVxuICB9KSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IEJ1dHRvbkJhc2UucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIEEgcmVmIGZvciBpbXBlcmF0aXZlIGFjdGlvbnMuXG4gICAqIEl0IGN1cnJlbnRseSBvbmx5IHN1cHBvcnRzIGBmb2N1c1Zpc2libGUoKWAgYWN0aW9uLlxuICAgKi9cbiAgYWN0aW9uOiByZWZUeXBlLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSByaXBwbGVzIGFyZSBjZW50ZXJlZC5cbiAgICogVGhleSB3b24ndCBzdGFydCBhdCB0aGUgY3Vyc29yIGludGVyYWN0aW9uIHBvc2l0aW9uLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgY2VudGVyUmlwcGxlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIGNvbnRlbnQgb2YgdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IGVsZW1lbnRUeXBlQWNjZXB0aW5nUmVmLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaXMgZGlzYWJsZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHJpcHBsZSBlZmZlY3QgaXMgZGlzYWJsZWQuXG4gICAqXG4gICAqIOKaoO+4jyBXaXRob3V0IGEgcmlwcGxlIHRoZXJlIGlzIG5vIHN0eWxpbmcgZm9yIDpmb2N1cy12aXNpYmxlIGJ5IGRlZmF1bHQuIEJlIHN1cmVcbiAgICogdG8gaGlnaGxpZ2h0IHRoZSBlbGVtZW50IGJ5IGFwcGx5aW5nIHNlcGFyYXRlIHN0eWxlcyB3aXRoIHRoZSBgLk11aS1mb2N1c1Zpc2libGVgIGNsYXNzLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZVJpcHBsZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHRvdWNoIHJpcHBsZSBlZmZlY3QgaXMgZGlzYWJsZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlVG91Y2hSaXBwbGU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBiYXNlIGJ1dHRvbiB3aWxsIGhhdmUgYSBrZXlib2FyZCBmb2N1cyByaXBwbGUuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBmb2N1c1JpcHBsZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoaXMgcHJvcCBjYW4gaGVscCBpZGVudGlmeSB3aGljaCBlbGVtZW50IGhhcyBrZXlib2FyZCBmb2N1cy5cbiAgICogVGhlIGNsYXNzIG5hbWUgd2lsbCBiZSBhcHBsaWVkIHdoZW4gdGhlIGVsZW1lbnQgZ2FpbnMgdGhlIGZvY3VzIHRocm91Z2gga2V5Ym9hcmQgaW50ZXJhY3Rpb24uXG4gICAqIEl0J3MgYSBwb2x5ZmlsbCBmb3IgdGhlIFtDU1MgOmZvY3VzLXZpc2libGUgc2VsZWN0b3JdKGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9zZWxlY3RvcnMtNC8jdGhlLWZvY3VzLXZpc2libGUtcHNldWRvKS5cbiAgICogVGhlIHJhdGlvbmFsZSBmb3IgdXNpbmcgdGhpcyBmZWF0dXJlIFtpcyBleHBsYWluZWQgaGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL1dJQ0cvZm9jdXMtdmlzaWJsZS9ibG9iL0hFQUQvZXhwbGFpbmVyLm1kKS5cbiAgICogQSBbcG9seWZpbGwgY2FuIGJlIHVzZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9XSUNHL2ZvY3VzLXZpc2libGUpIHRvIGFwcGx5IGEgYGZvY3VzLXZpc2libGVgIGNsYXNzIHRvIG90aGVyIGNvbXBvbmVudHNcbiAgICogaWYgbmVlZGVkLlxuICAgKi9cbiAgZm9jdXNWaXNpYmxlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBocmVmOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAuYW55LFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgdG8gcmVuZGVyIGEgbGluayB3aGVuIHRoZSBgaHJlZmAgcHJvcCBpcyBwcm92aWRlZC5cbiAgICogQGRlZmF1bHQgJ2EnXG4gICAqL1xuICBMaW5rQ29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uQmx1cjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkNvbnRleHRNZW51OiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25EcmFnTGVhdmU6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkZvY3VzOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgY29tcG9uZW50IGlzIGZvY3VzZWQgd2l0aCBhIGtleWJvYXJkLlxuICAgKiBXZSB0cmlnZ2VyIGEgYG9uRm9jdXNgIGNhbGxiYWNrIHRvby5cbiAgICovXG4gIG9uRm9jdXNWaXNpYmxlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25LZXlEb3duOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25LZXlVcDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uTW91c2VEb3duOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25Nb3VzZUxlYXZlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25Nb3VzZVVwOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25Ub3VjaEVuZDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uVG91Y2hNb3ZlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25Ub3VjaFN0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pLFxuXG4gIC8qKlxuICAgKiBAZGVmYXVsdCAwXG4gICAqL1xuICB0YWJJbmRleDogUHJvcFR5cGVzLm51bWJlcixcblxuICAvKipcbiAgICogUHJvcHMgYXBwbGllZCB0byB0aGUgYFRvdWNoUmlwcGxlYCBlbGVtZW50LlxuICAgKi9cbiAgVG91Y2hSaXBwbGVQcm9wczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQSByZWYgdGhhdCBwb2ludHMgdG8gdGhlIGBUb3VjaFJpcHBsZWAgZWxlbWVudC5cbiAgICovXG4gIHRvdWNoUmlwcGxlUmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBjdXJyZW50OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgcHVsc2F0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIHN0YXJ0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgc3RvcDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICAgIH0pXG4gIH0pXSksXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHR5cGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ2J1dHRvbicsICdyZXNldCcsICdzdWJtaXQnXSksIFByb3BUeXBlcy5zdHJpbmddKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbkJhc2U7IiwiaW1wb3J0IHsgdW5zdGFibGVfY2FwaXRhbGl6ZSBhcyBjYXBpdGFsaXplIH0gZnJvbSAnQG11aS91dGlscyc7XG5leHBvcnQgZGVmYXVsdCBjYXBpdGFsaXplOyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRCdXR0b25VdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aUJ1dHRvbicsIHNsb3QpO1xufVxuY29uc3QgYnV0dG9uQ2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aUJ1dHRvbicsIFsncm9vdCcsICd0ZXh0JywgJ3RleHRJbmhlcml0JywgJ3RleHRQcmltYXJ5JywgJ3RleHRTZWNvbmRhcnknLCAndGV4dFN1Y2Nlc3MnLCAndGV4dEVycm9yJywgJ3RleHRJbmZvJywgJ3RleHRXYXJuaW5nJywgJ291dGxpbmVkJywgJ291dGxpbmVkSW5oZXJpdCcsICdvdXRsaW5lZFByaW1hcnknLCAnb3V0bGluZWRTZWNvbmRhcnknLCAnb3V0bGluZWRTdWNjZXNzJywgJ291dGxpbmVkRXJyb3InLCAnb3V0bGluZWRJbmZvJywgJ291dGxpbmVkV2FybmluZycsICdjb250YWluZWQnLCAnY29udGFpbmVkSW5oZXJpdCcsICdjb250YWluZWRQcmltYXJ5JywgJ2NvbnRhaW5lZFNlY29uZGFyeScsICdjb250YWluZWRTdWNjZXNzJywgJ2NvbnRhaW5lZEVycm9yJywgJ2NvbnRhaW5lZEluZm8nLCAnY29udGFpbmVkV2FybmluZycsICdkaXNhYmxlRWxldmF0aW9uJywgJ2ZvY3VzVmlzaWJsZScsICdkaXNhYmxlZCcsICdjb2xvckluaGVyaXQnLCAndGV4dFNpemVTbWFsbCcsICd0ZXh0U2l6ZU1lZGl1bScsICd0ZXh0U2l6ZUxhcmdlJywgJ291dGxpbmVkU2l6ZVNtYWxsJywgJ291dGxpbmVkU2l6ZU1lZGl1bScsICdvdXRsaW5lZFNpemVMYXJnZScsICdjb250YWluZWRTaXplU21hbGwnLCAnY29udGFpbmVkU2l6ZU1lZGl1bScsICdjb250YWluZWRTaXplTGFyZ2UnLCAnc2l6ZU1lZGl1bScsICdzaXplU21hbGwnLCAnc2l6ZUxhcmdlJywgJ2Z1bGxXaWR0aCcsICdzdGFydEljb24nLCAnZW5kSWNvbicsICdpY29uU2l6ZVNtYWxsJywgJ2ljb25TaXplTWVkaXVtJywgJ2ljb25TaXplTGFyZ2UnXSk7XG5leHBvcnQgZGVmYXVsdCBidXR0b25DbGFzc2VzOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuLyoqXG4gKiBAaWdub3JlIC0gaW50ZXJuYWwgY29tcG9uZW50LlxuICovXG5jb25zdCBCdXR0b25Hcm91cENvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dCh7fSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIEJ1dHRvbkdyb3VwQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdCdXR0b25Hcm91cENvbnRleHQnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBCdXR0b25Hcm91cENvbnRleHQ7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImNoaWxkcmVuXCIsIFwiY29sb3JcIiwgXCJjb21wb25lbnRcIiwgXCJjbGFzc05hbWVcIiwgXCJkaXNhYmxlZFwiLCBcImRpc2FibGVFbGV2YXRpb25cIiwgXCJkaXNhYmxlRm9jdXNSaXBwbGVcIiwgXCJlbmRJY29uXCIsIFwiZm9jdXNWaXNpYmxlQ2xhc3NOYW1lXCIsIFwiZnVsbFdpZHRoXCIsIFwic2l6ZVwiLCBcInN0YXJ0SWNvblwiLCBcInR5cGVcIiwgXCJ2YXJpYW50XCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgaW50ZXJuYWxfcmVzb2x2ZVByb3BzIGFzIHJlc29sdmVQcm9wcyB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IHsgdW5zdGFibGVfY29tcG9zZUNsYXNzZXMgYXMgY29tcG9zZUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuaW1wb3J0IHsgYWxwaGEgfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgc3R5bGVkLCB7IHJvb3RTaG91bGRGb3J3YXJkUHJvcCB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IEJ1dHRvbkJhc2UgZnJvbSAnLi4vQnV0dG9uQmFzZSc7XG5pbXBvcnQgY2FwaXRhbGl6ZSBmcm9tICcuLi91dGlscy9jYXBpdGFsaXplJztcbmltcG9ydCBidXR0b25DbGFzc2VzLCB7IGdldEJ1dHRvblV0aWxpdHlDbGFzcyB9IGZyb20gJy4vYnV0dG9uQ2xhc3Nlcyc7XG5pbXBvcnQgQnV0dG9uR3JvdXBDb250ZXh0IGZyb20gJy4uL0J1dHRvbkdyb3VwL0J1dHRvbkdyb3VwQ29udGV4dCc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuXG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgY29sb3IsXG4gICAgZGlzYWJsZUVsZXZhdGlvbixcbiAgICBmdWxsV2lkdGgsXG4gICAgc2l6ZSxcbiAgICB2YXJpYW50LFxuICAgIGNsYXNzZXNcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCcsIHZhcmlhbnQsIGAke3ZhcmlhbnR9JHtjYXBpdGFsaXplKGNvbG9yKX1gLCBgc2l6ZSR7Y2FwaXRhbGl6ZShzaXplKX1gLCBgJHt2YXJpYW50fVNpemUke2NhcGl0YWxpemUoc2l6ZSl9YCwgY29sb3IgPT09ICdpbmhlcml0JyAmJiAnY29sb3JJbmhlcml0JywgZGlzYWJsZUVsZXZhdGlvbiAmJiAnZGlzYWJsZUVsZXZhdGlvbicsIGZ1bGxXaWR0aCAmJiAnZnVsbFdpZHRoJ10sXG4gICAgbGFiZWw6IFsnbGFiZWwnXSxcbiAgICBzdGFydEljb246IFsnc3RhcnRJY29uJywgYGljb25TaXplJHtjYXBpdGFsaXplKHNpemUpfWBdLFxuICAgIGVuZEljb246IFsnZW5kSWNvbicsIGBpY29uU2l6ZSR7Y2FwaXRhbGl6ZShzaXplKX1gXVxuICB9O1xuICBjb25zdCBjb21wb3NlZENsYXNzZXMgPSBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0QnV0dG9uVXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBjbGFzc2VzLCBjb21wb3NlZENsYXNzZXMpO1xufTtcblxuY29uc3QgY29tbW9uSWNvblN0eWxlcyA9IG93bmVyU3RhdGUgPT4gX2V4dGVuZHMoe30sIG93bmVyU3RhdGUuc2l6ZSA9PT0gJ3NtYWxsJyAmJiB7XG4gICcmID4gKjpudGgtb2YtdHlwZSgxKSc6IHtcbiAgICBmb250U2l6ZTogMThcbiAgfVxufSwgb3duZXJTdGF0ZS5zaXplID09PSAnbWVkaXVtJyAmJiB7XG4gICcmID4gKjpudGgtb2YtdHlwZSgxKSc6IHtcbiAgICBmb250U2l6ZTogMjBcbiAgfVxufSwgb3duZXJTdGF0ZS5zaXplID09PSAnbGFyZ2UnICYmIHtcbiAgJyYgPiAqOm50aC1vZi10eXBlKDEpJzoge1xuICAgIGZvbnRTaXplOiAyMlxuICB9XG59KTtcblxuY29uc3QgQnV0dG9uUm9vdCA9IHN0eWxlZChCdXR0b25CYXNlLCB7XG4gIHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+IHJvb3RTaG91bGRGb3J3YXJkUHJvcChwcm9wKSB8fCBwcm9wID09PSAnY2xhc3NlcycsXG4gIG5hbWU6ICdNdWlCdXR0b24nLFxuICBzbG90OiAnUm9vdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFtzdHlsZXMucm9vdCwgc3R5bGVzW293bmVyU3RhdGUudmFyaWFudF0sIHN0eWxlc1tgJHtvd25lclN0YXRlLnZhcmlhbnR9JHtjYXBpdGFsaXplKG93bmVyU3RhdGUuY29sb3IpfWBdLCBzdHlsZXNbYHNpemUke2NhcGl0YWxpemUob3duZXJTdGF0ZS5zaXplKX1gXSwgc3R5bGVzW2Ake293bmVyU3RhdGUudmFyaWFudH1TaXplJHtjYXBpdGFsaXplKG93bmVyU3RhdGUuc2l6ZSl9YF0sIG93bmVyU3RhdGUuY29sb3IgPT09ICdpbmhlcml0JyAmJiBzdHlsZXMuY29sb3JJbmhlcml0LCBvd25lclN0YXRlLmRpc2FibGVFbGV2YXRpb24gJiYgc3R5bGVzLmRpc2FibGVFbGV2YXRpb24sIG93bmVyU3RhdGUuZnVsbFdpZHRoICYmIHN0eWxlcy5mdWxsV2lkdGhdO1xuICB9XG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4ge1xuICB2YXIgX3RoZW1lJHBhbGV0dGUkZ2V0Q29uLCBfdGhlbWUkcGFsZXR0ZTtcblxuICByZXR1cm4gX2V4dGVuZHMoe30sIHRoZW1lLnR5cG9ncmFwaHkuYnV0dG9uLCB7XG4gICAgbWluV2lkdGg6IDY0LFxuICAgIHBhZGRpbmc6ICc2cHggMTZweCcsXG4gICAgYm9yZGVyUmFkaXVzOiAodGhlbWUudmFycyB8fCB0aGVtZSkuc2hhcGUuYm9yZGVyUmFkaXVzLFxuICAgIHRyYW5zaXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZShbJ2JhY2tncm91bmQtY29sb3InLCAnYm94LXNoYWRvdycsICdib3JkZXItY29sb3InLCAnY29sb3InXSwge1xuICAgICAgZHVyYXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmR1cmF0aW9uLnNob3J0XG4gICAgfSksXG4gICAgJyY6aG92ZXInOiBfZXh0ZW5kcyh7XG4gICAgICB0ZXh0RGVjb3JhdGlvbjogJ25vbmUnLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS52YXJzID8gYHJnYmEoJHt0aGVtZS52YXJzLnBhbGV0dGUudGV4dC5wcmltYXJ5Q2hhbm5lbH0gLyAke3RoZW1lLnZhcnMucGFsZXR0ZS5hY3Rpb24uaG92ZXJPcGFjaXR5fSlgIDogYWxwaGEodGhlbWUucGFsZXR0ZS50ZXh0LnByaW1hcnksIHRoZW1lLnBhbGV0dGUuYWN0aW9uLmhvdmVyT3BhY2l0eSksXG4gICAgICAvLyBSZXNldCBvbiB0b3VjaCBkZXZpY2VzLCBpdCBkb2Vzbid0IGFkZCBzcGVjaWZpY2l0eVxuICAgICAgJ0BtZWRpYSAoaG92ZXI6IG5vbmUpJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCdcbiAgICAgIH1cbiAgICB9LCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICd0ZXh0JyAmJiBvd25lclN0YXRlLmNvbG9yICE9PSAnaW5oZXJpdCcgJiYge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS52YXJzID8gYHJnYmEoJHt0aGVtZS52YXJzLnBhbGV0dGVbb3duZXJTdGF0ZS5jb2xvcl0ubWFpbkNoYW5uZWx9IC8gJHt0aGVtZS52YXJzLnBhbGV0dGUuYWN0aW9uLmhvdmVyT3BhY2l0eX0pYCA6IGFscGhhKHRoZW1lLnBhbGV0dGVbb3duZXJTdGF0ZS5jb2xvcl0ubWFpbiwgdGhlbWUucGFsZXR0ZS5hY3Rpb24uaG92ZXJPcGFjaXR5KSxcbiAgICAgIC8vIFJlc2V0IG9uIHRvdWNoIGRldmljZXMsIGl0IGRvZXNuJ3QgYWRkIHNwZWNpZmljaXR5XG4gICAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50J1xuICAgICAgfVxuICAgIH0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ291dGxpbmVkJyAmJiBvd25lclN0YXRlLmNvbG9yICE9PSAnaW5oZXJpdCcgJiYge1xuICAgICAgYm9yZGVyOiBgMXB4IHNvbGlkICR7KHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGVbb3duZXJTdGF0ZS5jb2xvcl0ubWFpbn1gLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS52YXJzID8gYHJnYmEoJHt0aGVtZS52YXJzLnBhbGV0dGVbb3duZXJTdGF0ZS5jb2xvcl0ubWFpbkNoYW5uZWx9IC8gJHt0aGVtZS52YXJzLnBhbGV0dGUuYWN0aW9uLmhvdmVyT3BhY2l0eX0pYCA6IGFscGhhKHRoZW1lLnBhbGV0dGVbb3duZXJTdGF0ZS5jb2xvcl0ubWFpbiwgdGhlbWUucGFsZXR0ZS5hY3Rpb24uaG92ZXJPcGFjaXR5KSxcbiAgICAgIC8vIFJlc2V0IG9uIHRvdWNoIGRldmljZXMsIGl0IGRvZXNuJ3QgYWRkIHNwZWNpZmljaXR5XG4gICAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50J1xuICAgICAgfVxuICAgIH0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ2NvbnRhaW5lZCcgJiYge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS5ncmV5LkExMDAsXG4gICAgICBib3hTaGFkb3c6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5zaGFkb3dzWzRdLFxuICAgICAgLy8gUmVzZXQgb24gdG91Y2ggZGV2aWNlcywgaXQgZG9lc24ndCBhZGQgc3BlY2lmaWNpdHlcbiAgICAgICdAbWVkaWEgKGhvdmVyOiBub25lKSc6IHtcbiAgICAgICAgYm94U2hhZG93OiAodGhlbWUudmFycyB8fCB0aGVtZSkuc2hhZG93c1syXSxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS5ncmV5WzMwMF1cbiAgICAgIH1cbiAgICB9LCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdjb250YWluZWQnICYmIG93bmVyU3RhdGUuY29sb3IgIT09ICdpbmhlcml0JyAmJiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlW293bmVyU3RhdGUuY29sb3JdLmRhcmssXG4gICAgICAvLyBSZXNldCBvbiB0b3VjaCBkZXZpY2VzLCBpdCBkb2Vzbid0IGFkZCBzcGVjaWZpY2l0eVxuICAgICAgJ0BtZWRpYSAoaG92ZXI6IG5vbmUpJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlW293bmVyU3RhdGUuY29sb3JdLm1haW5cbiAgICAgIH1cbiAgICB9KSxcbiAgICAnJjphY3RpdmUnOiBfZXh0ZW5kcyh7fSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnY29udGFpbmVkJyAmJiB7XG4gICAgICBib3hTaGFkb3c6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5zaGFkb3dzWzhdXG4gICAgfSksXG4gICAgW2AmLiR7YnV0dG9uQ2xhc3Nlcy5mb2N1c1Zpc2libGV9YF06IF9leHRlbmRzKHt9LCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdjb250YWluZWQnICYmIHtcbiAgICAgIGJveFNoYWRvdzogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnNoYWRvd3NbNl1cbiAgICB9KSxcbiAgICBbYCYuJHtidXR0b25DbGFzc2VzLmRpc2FibGVkfWBdOiBfZXh0ZW5kcyh7XG4gICAgICBjb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuYWN0aW9uLmRpc2FibGVkXG4gICAgfSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnb3V0bGluZWQnICYmIHtcbiAgICAgIGJvcmRlcjogYDFweCBzb2xpZCAkeyh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLmFjdGlvbi5kaXNhYmxlZEJhY2tncm91bmR9YFxuICAgIH0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ291dGxpbmVkJyAmJiBvd25lclN0YXRlLmNvbG9yID09PSAnc2Vjb25kYXJ5JyAmJiB7XG4gICAgICBib3JkZXI6IGAxcHggc29saWQgJHsodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS5hY3Rpb24uZGlzYWJsZWR9YFxuICAgIH0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ2NvbnRhaW5lZCcgJiYge1xuICAgICAgY29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLmFjdGlvbi5kaXNhYmxlZCxcbiAgICAgIGJveFNoYWRvdzogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnNoYWRvd3NbMF0sXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLmFjdGlvbi5kaXNhYmxlZEJhY2tncm91bmRcbiAgICB9KVxuICB9LCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICd0ZXh0JyAmJiB7XG4gICAgcGFkZGluZzogJzZweCA4cHgnXG4gIH0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ3RleHQnICYmIG93bmVyU3RhdGUuY29sb3IgIT09ICdpbmhlcml0JyAmJiB7XG4gICAgY29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlW293bmVyU3RhdGUuY29sb3JdLm1haW5cbiAgfSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnb3V0bGluZWQnICYmIHtcbiAgICBwYWRkaW5nOiAnNXB4IDE1cHgnLFxuICAgIGJvcmRlcjogJzFweCBzb2xpZCBjdXJyZW50Q29sb3InXG4gIH0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ291dGxpbmVkJyAmJiBvd25lclN0YXRlLmNvbG9yICE9PSAnaW5oZXJpdCcgJiYge1xuICAgIGNvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZVtvd25lclN0YXRlLmNvbG9yXS5tYWluLFxuICAgIGJvcmRlcjogdGhlbWUudmFycyA/IGAxcHggc29saWQgcmdiYSgke3RoZW1lLnZhcnMucGFsZXR0ZVtvd25lclN0YXRlLmNvbG9yXS5tYWluQ2hhbm5lbH0gLyAwLjUpYCA6IGAxcHggc29saWQgJHthbHBoYSh0aGVtZS5wYWxldHRlW293bmVyU3RhdGUuY29sb3JdLm1haW4sIDAuNSl9YFxuICB9LCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdjb250YWluZWQnICYmIHtcbiAgICBjb2xvcjogdGhlbWUudmFycyA/IC8vIHRoaXMgaXMgc2FmZSBiZWNhdXNlIGdyZXkgZG9lcyBub3QgY2hhbmdlIGJldHdlZW4gZGVmYXVsdCBsaWdodC9kYXJrIG1vZGVcbiAgICB0aGVtZS52YXJzLnBhbGV0dGUudGV4dC5wcmltYXJ5IDogKF90aGVtZSRwYWxldHRlJGdldENvbiA9IChfdGhlbWUkcGFsZXR0ZSA9IHRoZW1lLnBhbGV0dGUpLmdldENvbnRyYXN0VGV4dCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGVtZSRwYWxldHRlJGdldENvbi5jYWxsKF90aGVtZSRwYWxldHRlLCB0aGVtZS5wYWxldHRlLmdyZXlbMzAwXSksXG4gICAgYmFja2dyb3VuZENvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS5ncmV5WzMwMF0sXG4gICAgYm94U2hhZG93OiAodGhlbWUudmFycyB8fCB0aGVtZSkuc2hhZG93c1syXVxuICB9LCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdjb250YWluZWQnICYmIG93bmVyU3RhdGUuY29sb3IgIT09ICdpbmhlcml0JyAmJiB7XG4gICAgY29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlW293bmVyU3RhdGUuY29sb3JdLmNvbnRyYXN0VGV4dCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlW293bmVyU3RhdGUuY29sb3JdLm1haW5cbiAgfSwgb3duZXJTdGF0ZS5jb2xvciA9PT0gJ2luaGVyaXQnICYmIHtcbiAgICBjb2xvcjogJ2luaGVyaXQnLFxuICAgIGJvcmRlckNvbG9yOiAnY3VycmVudENvbG9yJ1xuICB9LCBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYgb3duZXJTdGF0ZS52YXJpYW50ID09PSAndGV4dCcgJiYge1xuICAgIHBhZGRpbmc6ICc0cHggNXB4JyxcbiAgICBmb250U2l6ZTogdGhlbWUudHlwb2dyYXBoeS5weFRvUmVtKDEzKVxuICB9LCBvd25lclN0YXRlLnNpemUgPT09ICdsYXJnZScgJiYgb3duZXJTdGF0ZS52YXJpYW50ID09PSAndGV4dCcgJiYge1xuICAgIHBhZGRpbmc6ICc4cHggMTFweCcsXG4gICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkucHhUb1JlbSgxNSlcbiAgfSwgb3duZXJTdGF0ZS5zaXplID09PSAnc21hbGwnICYmIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ291dGxpbmVkJyAmJiB7XG4gICAgcGFkZGluZzogJzNweCA5cHgnLFxuICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LnB4VG9SZW0oMTMpXG4gIH0sIG93bmVyU3RhdGUuc2l6ZSA9PT0gJ2xhcmdlJyAmJiBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdvdXRsaW5lZCcgJiYge1xuICAgIHBhZGRpbmc6ICc3cHggMjFweCcsXG4gICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkucHhUb1JlbSgxNSlcbiAgfSwgb3duZXJTdGF0ZS5zaXplID09PSAnc21hbGwnICYmIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ2NvbnRhaW5lZCcgJiYge1xuICAgIHBhZGRpbmc6ICc0cHggMTBweCcsXG4gICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkucHhUb1JlbSgxMylcbiAgfSwgb3duZXJTdGF0ZS5zaXplID09PSAnbGFyZ2UnICYmIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ2NvbnRhaW5lZCcgJiYge1xuICAgIHBhZGRpbmc6ICc4cHggMjJweCcsXG4gICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkucHhUb1JlbSgxNSlcbiAgfSwgb3duZXJTdGF0ZS5mdWxsV2lkdGggJiYge1xuICAgIHdpZHRoOiAnMTAwJSdcbiAgfSk7XG59LCAoe1xuICBvd25lclN0YXRlXG59KSA9PiBvd25lclN0YXRlLmRpc2FibGVFbGV2YXRpb24gJiYge1xuICBib3hTaGFkb3c6ICdub25lJyxcbiAgJyY6aG92ZXInOiB7XG4gICAgYm94U2hhZG93OiAnbm9uZSdcbiAgfSxcbiAgW2AmLiR7YnV0dG9uQ2xhc3Nlcy5mb2N1c1Zpc2libGV9YF06IHtcbiAgICBib3hTaGFkb3c6ICdub25lJ1xuICB9LFxuICAnJjphY3RpdmUnOiB7XG4gICAgYm94U2hhZG93OiAnbm9uZSdcbiAgfSxcbiAgW2AmLiR7YnV0dG9uQ2xhc3Nlcy5kaXNhYmxlZH1gXToge1xuICAgIGJveFNoYWRvdzogJ25vbmUnXG4gIH1cbn0pO1xuY29uc3QgQnV0dG9uU3RhcnRJY29uID0gc3R5bGVkKCdzcGFuJywge1xuICBuYW1lOiAnTXVpQnV0dG9uJyxcbiAgc2xvdDogJ1N0YXJ0SWNvbicsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFtzdHlsZXMuc3RhcnRJY29uLCBzdHlsZXNbYGljb25TaXplJHtjYXBpdGFsaXplKG93bmVyU3RhdGUuc2l6ZSl9YF1dO1xuICB9XG59KSgoe1xuICBvd25lclN0YXRlXG59KSA9PiBfZXh0ZW5kcyh7XG4gIGRpc3BsYXk6ICdpbmhlcml0JyxcbiAgbWFyZ2luUmlnaHQ6IDgsXG4gIG1hcmdpbkxlZnQ6IC00XG59LCBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYge1xuICBtYXJnaW5MZWZ0OiAtMlxufSwgY29tbW9uSWNvblN0eWxlcyhvd25lclN0YXRlKSkpO1xuY29uc3QgQnV0dG9uRW5kSWNvbiA9IHN0eWxlZCgnc3BhbicsIHtcbiAgbmFtZTogJ011aUJ1dHRvbicsXG4gIHNsb3Q6ICdFbmRJY29uJyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgb3duZXJTdGF0ZVxuICAgIH0gPSBwcm9wcztcbiAgICByZXR1cm4gW3N0eWxlcy5lbmRJY29uLCBzdHlsZXNbYGljb25TaXplJHtjYXBpdGFsaXplKG93bmVyU3RhdGUuc2l6ZSl9YF1dO1xuICB9XG59KSgoe1xuICBvd25lclN0YXRlXG59KSA9PiBfZXh0ZW5kcyh7XG4gIGRpc3BsYXk6ICdpbmhlcml0JyxcbiAgbWFyZ2luUmlnaHQ6IC00LFxuICBtYXJnaW5MZWZ0OiA4XG59LCBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYge1xuICBtYXJnaW5SaWdodDogLTJcbn0sIGNvbW1vbkljb25TdHlsZXMob3duZXJTdGF0ZSkpKTtcbmNvbnN0IEJ1dHRvbiA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIEJ1dHRvbihpblByb3BzLCByZWYpIHtcbiAgLy8gcHJvcHMgcHJpb3JpdHk6IGBpblByb3BzYCA+IGBjb250ZXh0UHJvcHNgID4gYHRoZW1lRGVmYXVsdFByb3BzYFxuICBjb25zdCBjb250ZXh0UHJvcHMgPSBSZWFjdC51c2VDb250ZXh0KEJ1dHRvbkdyb3VwQ29udGV4dCk7XG4gIGNvbnN0IHJlc29sdmVkUHJvcHMgPSByZXNvbHZlUHJvcHMoY29udGV4dFByb3BzLCBpblByb3BzKTtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBwcm9wczogcmVzb2x2ZWRQcm9wcyxcbiAgICBuYW1lOiAnTXVpQnV0dG9uJ1xuICB9KTtcblxuICBjb25zdCB7XG4gICAgY2hpbGRyZW4sXG4gICAgY29sb3IgPSAncHJpbWFyeScsXG4gICAgY29tcG9uZW50ID0gJ2J1dHRvbicsXG4gICAgY2xhc3NOYW1lLFxuICAgIGRpc2FibGVkID0gZmFsc2UsXG4gICAgZGlzYWJsZUVsZXZhdGlvbiA9IGZhbHNlLFxuICAgIGRpc2FibGVGb2N1c1JpcHBsZSA9IGZhbHNlLFxuICAgIGVuZEljb246IGVuZEljb25Qcm9wLFxuICAgIGZvY3VzVmlzaWJsZUNsYXNzTmFtZSxcbiAgICBmdWxsV2lkdGggPSBmYWxzZSxcbiAgICBzaXplID0gJ21lZGl1bScsXG4gICAgc3RhcnRJY29uOiBzdGFydEljb25Qcm9wLFxuICAgIHR5cGUsXG4gICAgdmFyaWFudCA9ICd0ZXh0J1xuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3Qgb3duZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGNvbG9yLFxuICAgIGNvbXBvbmVudCxcbiAgICBkaXNhYmxlZCxcbiAgICBkaXNhYmxlRWxldmF0aW9uLFxuICAgIGRpc2FibGVGb2N1c1JpcHBsZSxcbiAgICBmdWxsV2lkdGgsXG4gICAgc2l6ZSxcbiAgICB0eXBlLFxuICAgIHZhcmlhbnRcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuXG4gIGNvbnN0IHN0YXJ0SWNvbiA9IHN0YXJ0SWNvblByb3AgJiYgLyojX19QVVJFX18qL19qc3goQnV0dG9uU3RhcnRJY29uLCB7XG4gICAgY2xhc3NOYW1lOiBjbGFzc2VzLnN0YXJ0SWNvbixcbiAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgIGNoaWxkcmVuOiBzdGFydEljb25Qcm9wXG4gIH0pO1xuXG4gIGNvbnN0IGVuZEljb24gPSBlbmRJY29uUHJvcCAmJiAvKiNfX1BVUkVfXyovX2pzeChCdXR0b25FbmRJY29uLCB7XG4gICAgY2xhc3NOYW1lOiBjbGFzc2VzLmVuZEljb24sXG4gICAgb3duZXJTdGF0ZTogb3duZXJTdGF0ZSxcbiAgICBjaGlsZHJlbjogZW5kSWNvblByb3BcbiAgfSk7XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4cyhCdXR0b25Sb290LCBfZXh0ZW5kcyh7XG4gICAgb3duZXJTdGF0ZTogb3duZXJTdGF0ZSxcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3NOYW1lLCBjb250ZXh0UHJvcHMuY2xhc3NOYW1lKSxcbiAgICBjb21wb25lbnQ6IGNvbXBvbmVudCxcbiAgICBkaXNhYmxlZDogZGlzYWJsZWQsXG4gICAgZm9jdXNSaXBwbGU6ICFkaXNhYmxlRm9jdXNSaXBwbGUsXG4gICAgZm9jdXNWaXNpYmxlQ2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMuZm9jdXNWaXNpYmxlLCBmb2N1c1Zpc2libGVDbGFzc05hbWUpLFxuICAgIHJlZjogcmVmLFxuICAgIHR5cGU6IHR5cGVcbiAgfSwgb3RoZXIsIHtcbiAgICBjbGFzc2VzOiBjbGFzc2VzLFxuICAgIGNoaWxkcmVuOiBbc3RhcnRJY29uLCBjaGlsZHJlbiwgZW5kSWNvbl1cbiAgfSkpO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBCdXR0b24ucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbG9yIG9mIHRoZSBjb21wb25lbnQuXG4gICAqIEl0IHN1cHBvcnRzIGJvdGggZGVmYXVsdCBhbmQgY3VzdG9tIHRoZW1lIGNvbG9ycywgd2hpY2ggY2FuIGJlIGFkZGVkIGFzIHNob3duIGluIHRoZVxuICAgKiBbcGFsZXR0ZSBjdXN0b21pemF0aW9uIGd1aWRlXShodHRwczovL211aS5jb20vbWF0ZXJpYWwtdWkvY3VzdG9taXphdGlvbi9wYWxldHRlLyNhZGRpbmctbmV3LWNvbG9ycykuXG4gICAqIEBkZWZhdWx0ICdwcmltYXJ5J1xuICAgKi9cbiAgY29sb3I6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ2luaGVyaXQnLCAncHJpbWFyeScsICdzZWNvbmRhcnknLCAnc3VjY2VzcycsICdlcnJvcicsICdpbmZvJywgJ3dhcm5pbmcnXSksIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgcm9vdCBub2RlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKi9cbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCBpcyBkaXNhYmxlZC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCBubyBlbGV2YXRpb24gaXMgdXNlZC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRpc2FibGVFbGV2YXRpb246IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSAga2V5Ym9hcmQgZm9jdXMgcmlwcGxlIGlzIGRpc2FibGVkLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZUZvY3VzUmlwcGxlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgcmlwcGxlIGVmZmVjdCBpcyBkaXNhYmxlZC5cbiAgICpcbiAgICog4pqg77iPIFdpdGhvdXQgYSByaXBwbGUgdGhlcmUgaXMgbm8gc3R5bGluZyBmb3IgOmZvY3VzLXZpc2libGUgYnkgZGVmYXVsdC4gQmUgc3VyZVxuICAgKiB0byBoaWdobGlnaHQgdGhlIGVsZW1lbnQgYnkgYXBwbHlpbmcgc2VwYXJhdGUgc3R5bGVzIHdpdGggdGhlIGAuTXVpLWZvY3VzVmlzaWJsZWAgY2xhc3MuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlUmlwcGxlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogRWxlbWVudCBwbGFjZWQgYWZ0ZXIgdGhlIGNoaWxkcmVuLlxuICAgKi9cbiAgZW5kSWNvbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGZvY3VzVmlzaWJsZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgYnV0dG9uIHdpbGwgdGFrZSB1cCB0aGUgZnVsbCB3aWR0aCBvZiBpdHMgY29udGFpbmVyLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZnVsbFdpZHRoOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIFVSTCB0byBsaW5rIHRvIHdoZW4gdGhlIGJ1dHRvbiBpcyBjbGlja2VkLlxuICAgKiBJZiBkZWZpbmVkLCBhbiBgYWAgZWxlbWVudCB3aWxsIGJlIHVzZWQgYXMgdGhlIHJvb3Qgbm9kZS5cbiAgICovXG4gIGhyZWY6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSBjb21wb25lbnQuXG4gICAqIGBzbWFsbGAgaXMgZXF1aXZhbGVudCB0byB0aGUgZGVuc2UgYnV0dG9uIHN0eWxpbmcuXG4gICAqIEBkZWZhdWx0ICdtZWRpdW0nXG4gICAqL1xuICBzaXplOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWydzbWFsbCcsICdtZWRpdW0nLCAnbGFyZ2UnXSksIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogRWxlbWVudCBwbGFjZWQgYmVmb3JlIHRoZSBjaGlsZHJlbi5cbiAgICovXG4gIHN0YXJ0SWNvbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIFRoZSBzeXN0ZW0gcHJvcCB0aGF0IGFsbG93cyBkZWZpbmluZyBzeXN0ZW0gb3ZlcnJpZGVzIGFzIHdlbGwgYXMgYWRkaXRpb25hbCBDU1Mgc3R5bGVzLlxuICAgKi9cbiAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKSxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgdHlwZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnYnV0dG9uJywgJ3Jlc2V0JywgJ3N1Ym1pdCddKSwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBUaGUgdmFyaWFudCB0byB1c2UuXG4gICAqIEBkZWZhdWx0ICd0ZXh0J1xuICAgKi9cbiAgdmFyaWFudDogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnY29udGFpbmVkJywgJ291dGxpbmVkJywgJ3RleHQnXSksIFByb3BUeXBlcy5zdHJpbmddKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjsiLCIvLyBTdXBwb3J0cyBkZXRlcm1pbmF0aW9uIG9mIGlzQ29udHJvbGxlZCgpLlxuLy8gQ29udHJvbGxlZCBpbnB1dCBhY2NlcHRzIGl0cyBjdXJyZW50IHZhbHVlIGFzIGEgcHJvcC5cbi8vXG4vLyBAc2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvZm9ybXMuaHRtbCNjb250cm9sbGVkLWNvbXBvbmVudHNcbi8vIEBwYXJhbSB2YWx1ZVxuLy8gQHJldHVybnMge2Jvb2xlYW59IHRydWUgaWYgc3RyaW5nIChpbmNsdWRpbmcgJycpIG9yIG51bWJlciAoaW5jbHVkaW5nIHplcm8pXG5leHBvcnQgZnVuY3Rpb24gaGFzVmFsdWUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgIShBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGggPT09IDApO1xufSAvLyBEZXRlcm1pbmUgaWYgZmllbGQgaXMgZW1wdHkgb3IgZmlsbGVkLlxuLy8gUmVzcG9uc2UgZGV0ZXJtaW5lcyBpZiBsYWJlbCBpcyBwcmVzZW50ZWQgYWJvdmUgZmllbGQgb3IgYXMgcGxhY2Vob2xkZXIuXG4vL1xuLy8gQHBhcmFtIG9ialxuLy8gQHBhcmFtIFNTUlxuLy8gQHJldHVybnMge2Jvb2xlYW59IEZhbHNlIHdoZW4gbm90IHByZXNlbnQgb3IgZW1wdHkgc3RyaW5nLlxuLy8gICAgICAgICAgICAgICAgICAgIFRydWUgd2hlbiBhbnkgbnVtYmVyIG9yIHN0cmluZyB3aXRoIGxlbmd0aC5cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsbGVkKG9iaiwgU1NSID0gZmFsc2UpIHtcbiAgcmV0dXJuIG9iaiAmJiAoaGFzVmFsdWUob2JqLnZhbHVlKSAmJiBvYmoudmFsdWUgIT09ICcnIHx8IFNTUiAmJiBoYXNWYWx1ZShvYmouZGVmYXVsdFZhbHVlKSAmJiBvYmouZGVmYXVsdFZhbHVlICE9PSAnJyk7XG59IC8vIERldGVybWluZSBpZiBhbiBJbnB1dCBpcyBhZG9ybmVkIG9uIHN0YXJ0LlxuLy8gSXQncyBjb3JyZXNwb25kaW5nIHRvIHRoZSBsZWZ0IHdpdGggTFRSLlxuLy9cbi8vIEBwYXJhbSBvYmpcbi8vIEByZXR1cm5zIHtib29sZWFufSBGYWxzZSB3aGVuIG5vIGFkb3JubWVudHMuXG4vLyAgICAgICAgICAgICAgICAgICAgVHJ1ZSB3aGVuIGFkb3JuZWQgYXQgdGhlIHN0YXJ0LlxuXG5leHBvcnQgZnVuY3Rpb24gaXNBZG9ybmVkU3RhcnQob2JqKSB7XG4gIHJldHVybiBvYmouc3RhcnRBZG9ybm1lbnQ7XG59IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNNdWlFbGVtZW50KGVsZW1lbnQsIG11aU5hbWVzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuaXNWYWxpZEVsZW1lbnQoZWxlbWVudCkgJiYgbXVpTmFtZXMuaW5kZXhPZihlbGVtZW50LnR5cGUubXVpTmFtZSkgIT09IC0xO1xufSIsImltcG9ydCB7IHVuc3RhYmxlX2lzTXVpRWxlbWVudCBhcyBpc011aUVsZW1lbnQgfSBmcm9tICdAbXVpL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IGlzTXVpRWxlbWVudDsiLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG4vKipcbiAqIEBpZ25vcmUgLSBpbnRlcm5hbCBjb21wb25lbnQuXG4gKi9cblxuY29uc3QgRm9ybUNvbnRyb2xDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQoKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgRm9ybUNvbnRyb2xDb250ZXh0LmRpc3BsYXlOYW1lID0gJ0Zvcm1Db250cm9sQ29udGV4dCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvcm1Db250cm9sQ29udGV4dDsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0Rm9ybUNvbnRyb2xVdGlsaXR5Q2xhc3NlcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpRm9ybUNvbnRyb2wnLCBzbG90KTtcbn1cbmNvbnN0IGZvcm1Db250cm9sQ2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aUZvcm1Db250cm9sJywgWydyb290JywgJ21hcmdpbk5vbmUnLCAnbWFyZ2luTm9ybWFsJywgJ21hcmdpbkRlbnNlJywgJ2Z1bGxXaWR0aCcsICdkaXNhYmxlZCddKTtcbmV4cG9ydCBkZWZhdWx0IGZvcm1Db250cm9sQ2xhc3NlczsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2hpbGRyZW5cIiwgXCJjbGFzc05hbWVcIiwgXCJjb2xvclwiLCBcImNvbXBvbmVudFwiLCBcImRpc2FibGVkXCIsIFwiZXJyb3JcIiwgXCJmb2N1c2VkXCIsIFwiZnVsbFdpZHRoXCIsIFwiaGlkZGVuTGFiZWxcIiwgXCJtYXJnaW5cIiwgXCJyZXF1aXJlZFwiLCBcInNpemVcIiwgXCJ2YXJpYW50XCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgdW5zdGFibGVfY29tcG9zZUNsYXNzZXMgYXMgY29tcG9zZUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCB7IGlzRmlsbGVkLCBpc0Fkb3JuZWRTdGFydCB9IGZyb20gJy4uL0lucHV0QmFzZS91dGlscyc7XG5pbXBvcnQgY2FwaXRhbGl6ZSBmcm9tICcuLi91dGlscy9jYXBpdGFsaXplJztcbmltcG9ydCBpc011aUVsZW1lbnQgZnJvbSAnLi4vdXRpbHMvaXNNdWlFbGVtZW50JztcbmltcG9ydCBGb3JtQ29udHJvbENvbnRleHQgZnJvbSAnLi9Gb3JtQ29udHJvbENvbnRleHQnO1xuaW1wb3J0IHsgZ2V0Rm9ybUNvbnRyb2xVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJy4vZm9ybUNvbnRyb2xDbGFzc2VzJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc2VzLFxuICAgIG1hcmdpbixcbiAgICBmdWxsV2lkdGhcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCcsIG1hcmdpbiAhPT0gJ25vbmUnICYmIGBtYXJnaW4ke2NhcGl0YWxpemUobWFyZ2luKX1gLCBmdWxsV2lkdGggJiYgJ2Z1bGxXaWR0aCddXG4gIH07XG4gIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0Rm9ybUNvbnRyb2xVdGlsaXR5Q2xhc3NlcywgY2xhc3Nlcyk7XG59O1xuXG5jb25zdCBGb3JtQ29udHJvbFJvb3QgPSBzdHlsZWQoJ2RpdicsIHtcbiAgbmFtZTogJ011aUZvcm1Db250cm9sJyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHtcbiAgICBvd25lclN0YXRlXG4gIH0sIHN0eWxlcykgPT4ge1xuICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3R5bGVzLnJvb3QsIHN0eWxlc1tgbWFyZ2luJHtjYXBpdGFsaXplKG93bmVyU3RhdGUubWFyZ2luKX1gXSwgb3duZXJTdGF0ZS5mdWxsV2lkdGggJiYgc3R5bGVzLmZ1bGxXaWR0aCk7XG4gIH1cbn0pKCh7XG4gIG93bmVyU3RhdGVcbn0pID0+IF9leHRlbmRzKHtcbiAgZGlzcGxheTogJ2lubGluZS1mbGV4JyxcbiAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAvLyBSZXNldCBmaWVsZHNldCBkZWZhdWx0IHN0eWxlLlxuICBtaW5XaWR0aDogMCxcbiAgcGFkZGluZzogMCxcbiAgbWFyZ2luOiAwLFxuICBib3JkZXI6IDAsXG4gIHZlcnRpY2FsQWxpZ246ICd0b3AnXG59LCBvd25lclN0YXRlLm1hcmdpbiA9PT0gJ25vcm1hbCcgJiYge1xuICBtYXJnaW5Ub3A6IDE2LFxuICBtYXJnaW5Cb3R0b206IDhcbn0sIG93bmVyU3RhdGUubWFyZ2luID09PSAnZGVuc2UnICYmIHtcbiAgbWFyZ2luVG9wOiA4LFxuICBtYXJnaW5Cb3R0b206IDRcbn0sIG93bmVyU3RhdGUuZnVsbFdpZHRoICYmIHtcbiAgd2lkdGg6ICcxMDAlJ1xufSkpO1xuLyoqXG4gKiBQcm92aWRlcyBjb250ZXh0IHN1Y2ggYXMgZmlsbGVkL2ZvY3VzZWQvZXJyb3IvcmVxdWlyZWQgZm9yIGZvcm0gaW5wdXRzLlxuICogUmVseWluZyBvbiB0aGUgY29udGV4dCBwcm92aWRlcyBoaWdoIGZsZXhpYmlsaXR5IGFuZCBlbnN1cmVzIHRoYXQgdGhlIHN0YXRlIGFsd2F5cyBzdGF5c1xuICogY29uc2lzdGVudCBhY3Jvc3MgdGhlIGNoaWxkcmVuIG9mIHRoZSBgRm9ybUNvbnRyb2xgLlxuICogVGhpcyBjb250ZXh0IGlzIHVzZWQgYnkgdGhlIGZvbGxvd2luZyBjb21wb25lbnRzOlxuICpcbiAqICAtIEZvcm1MYWJlbFxuICogIC0gRm9ybUhlbHBlclRleHRcbiAqICAtIElucHV0XG4gKiAgLSBJbnB1dExhYmVsXG4gKlxuICogWW91IGNhbiBmaW5kIG9uZSBjb21wb3NpdGlvbiBleGFtcGxlIGJlbG93IGFuZCBtb3JlIGdvaW5nIHRvIFt0aGUgZGVtb3NdKC9tYXRlcmlhbC11aS9yZWFjdC10ZXh0LWZpZWxkLyNjb21wb25lbnRzKS5cbiAqXG4gKiBgYGBqc3hcbiAqIDxGb3JtQ29udHJvbD5cbiAqICAgPElucHV0TGFiZWwgaHRtbEZvcj1cIm15LWlucHV0XCI+RW1haWwgYWRkcmVzczwvSW5wdXRMYWJlbD5cbiAqICAgPElucHV0IGlkPVwibXktaW5wdXRcIiBhcmlhLWRlc2NyaWJlZGJ5PVwibXktaGVscGVyLXRleHRcIiAvPlxuICogICA8Rm9ybUhlbHBlclRleHQgaWQ9XCJteS1oZWxwZXItdGV4dFwiPldlJ2xsIG5ldmVyIHNoYXJlIHlvdXIgZW1haWwuPC9Gb3JtSGVscGVyVGV4dD5cbiAqIDwvRm9ybUNvbnRyb2w+XG4gKiBgYGBcbiAqXG4gKiDimqDvuI8gT25seSBvbmUgYElucHV0QmFzZWAgY2FuIGJlIHVzZWQgd2l0aGluIGEgRm9ybUNvbnRyb2wgYmVjYXVzZSBpdCBjcmVhdGUgdmlzdWFsIGluY29uc2lzdGVuY2llcy5cbiAqIEZvciBpbnN0YW5jZSwgb25seSBvbmUgaW5wdXQgY2FuIGJlIGZvY3VzZWQgYXQgdGhlIHNhbWUgdGltZSwgdGhlIHN0YXRlIHNob3VsZG4ndCBiZSBzaGFyZWQuXG4gKi9cblxuY29uc3QgRm9ybUNvbnRyb2wgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBGb3JtQ29udHJvbChpblByb3BzLCByZWYpIHtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBwcm9wczogaW5Qcm9wcyxcbiAgICBuYW1lOiAnTXVpRm9ybUNvbnRyb2wnXG4gIH0pO1xuXG4gIGNvbnN0IHtcbiAgICBjaGlsZHJlbixcbiAgICBjbGFzc05hbWUsXG4gICAgY29sb3IgPSAncHJpbWFyeScsXG4gICAgY29tcG9uZW50ID0gJ2RpdicsXG4gICAgZGlzYWJsZWQgPSBmYWxzZSxcbiAgICBlcnJvciA9IGZhbHNlLFxuICAgIGZvY3VzZWQ6IHZpc3VhbGx5Rm9jdXNlZCxcbiAgICBmdWxsV2lkdGggPSBmYWxzZSxcbiAgICBoaWRkZW5MYWJlbCA9IGZhbHNlLFxuICAgIG1hcmdpbiA9ICdub25lJyxcbiAgICByZXF1aXJlZCA9IGZhbHNlLFxuICAgIHNpemUgPSAnbWVkaXVtJyxcbiAgICB2YXJpYW50ID0gJ291dGxpbmVkJ1xuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3Qgb3duZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGNvbG9yLFxuICAgIGNvbXBvbmVudCxcbiAgICBkaXNhYmxlZCxcbiAgICBlcnJvcixcbiAgICBmdWxsV2lkdGgsXG4gICAgaGlkZGVuTGFiZWwsXG4gICAgbWFyZ2luLFxuICAgIHJlcXVpcmVkLFxuICAgIHNpemUsXG4gICAgdmFyaWFudFxuICB9KTtcblxuICBjb25zdCBjbGFzc2VzID0gdXNlVXRpbGl0eUNsYXNzZXMob3duZXJTdGF0ZSk7XG4gIGNvbnN0IFthZG9ybmVkU3RhcnQsIHNldEFkb3JuZWRTdGFydF0gPSBSZWFjdC51c2VTdGF0ZSgoKSA9PiB7XG4gICAgLy8gV2UgbmVlZCB0byBpdGVyYXRlIHRocm91Z2ggdGhlIGNoaWxkcmVuIGFuZCBmaW5kIHRoZSBJbnB1dCBpbiBvcmRlclxuICAgIC8vIHRvIGZ1bGx5IHN1cHBvcnQgc2VydmVyLXNpZGUgcmVuZGVyaW5nLlxuICAgIGxldCBpbml0aWFsQWRvcm5lZFN0YXJ0ID0gZmFsc2U7XG5cbiAgICBpZiAoY2hpbGRyZW4pIHtcbiAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goY2hpbGRyZW4sIGNoaWxkID0+IHtcbiAgICAgICAgaWYgKCFpc011aUVsZW1lbnQoY2hpbGQsIFsnSW5wdXQnLCAnU2VsZWN0J10pKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgaW5wdXQgPSBpc011aUVsZW1lbnQoY2hpbGQsIFsnU2VsZWN0J10pID8gY2hpbGQucHJvcHMuaW5wdXQgOiBjaGlsZDtcblxuICAgICAgICBpZiAoaW5wdXQgJiYgaXNBZG9ybmVkU3RhcnQoaW5wdXQucHJvcHMpKSB7XG4gICAgICAgICAgaW5pdGlhbEFkb3JuZWRTdGFydCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBpbml0aWFsQWRvcm5lZFN0YXJ0O1xuICB9KTtcbiAgY29uc3QgW2ZpbGxlZCwgc2V0RmlsbGVkXSA9IFJlYWN0LnVzZVN0YXRlKCgpID0+IHtcbiAgICAvLyBXZSBuZWVkIHRvIGl0ZXJhdGUgdGhyb3VnaCB0aGUgY2hpbGRyZW4gYW5kIGZpbmQgdGhlIElucHV0IGluIG9yZGVyXG4gICAgLy8gdG8gZnVsbHkgc3VwcG9ydCBzZXJ2ZXItc2lkZSByZW5kZXJpbmcuXG4gICAgbGV0IGluaXRpYWxGaWxsZWQgPSBmYWxzZTtcblxuICAgIGlmIChjaGlsZHJlbikge1xuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChjaGlsZHJlbiwgY2hpbGQgPT4ge1xuICAgICAgICBpZiAoIWlzTXVpRWxlbWVudChjaGlsZCwgWydJbnB1dCcsICdTZWxlY3QnXSkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNGaWxsZWQoY2hpbGQucHJvcHMsIHRydWUpKSB7XG4gICAgICAgICAgaW5pdGlhbEZpbGxlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBpbml0aWFsRmlsbGVkO1xuICB9KTtcbiAgY29uc3QgW2ZvY3VzZWRTdGF0ZSwgc2V0Rm9jdXNlZF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG5cbiAgaWYgKGRpc2FibGVkICYmIGZvY3VzZWRTdGF0ZSkge1xuICAgIHNldEZvY3VzZWQoZmFsc2UpO1xuICB9XG5cbiAgY29uc3QgZm9jdXNlZCA9IHZpc3VhbGx5Rm9jdXNlZCAhPT0gdW5kZWZpbmVkICYmICFkaXNhYmxlZCA/IHZpc3VhbGx5Rm9jdXNlZCA6IGZvY3VzZWRTdGF0ZTtcbiAgbGV0IHJlZ2lzdGVyRWZmZWN0O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzXG4gICAgY29uc3QgcmVnaXN0ZXJlZElucHV0ID0gUmVhY3QudXNlUmVmKGZhbHNlKTtcblxuICAgIHJlZ2lzdGVyRWZmZWN0ID0gKCkgPT4ge1xuICAgICAgaWYgKHJlZ2lzdGVyZWRJbnB1dC5jdXJyZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoWydNVUk6IFRoZXJlIGFyZSBtdWx0aXBsZSBgSW5wdXRCYXNlYCBjb21wb25lbnRzIGluc2lkZSBhIEZvcm1Db250cm9sLicsICdUaGlzIGNyZWF0ZXMgdmlzdWFsIGluY29uc2lzdGVuY2llcywgb25seSB1c2Ugb25lIGBJbnB1dEJhc2VgLiddLmpvaW4oJ1xcbicpKTtcbiAgICAgIH1cblxuICAgICAgcmVnaXN0ZXJlZElucHV0LmN1cnJlbnQgPSB0cnVlO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgcmVnaXN0ZXJlZElucHV0LmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgIH07XG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IG9uRmlsbGVkID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldEZpbGxlZCh0cnVlKTtcbiAgfSwgW10pO1xuICBjb25zdCBvbkVtcHR5ID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldEZpbGxlZChmYWxzZSk7XG4gIH0sIFtdKTtcbiAgY29uc3QgY2hpbGRDb250ZXh0ID0ge1xuICAgIGFkb3JuZWRTdGFydCxcbiAgICBzZXRBZG9ybmVkU3RhcnQsXG4gICAgY29sb3IsXG4gICAgZGlzYWJsZWQsXG4gICAgZXJyb3IsXG4gICAgZmlsbGVkLFxuICAgIGZvY3VzZWQsXG4gICAgZnVsbFdpZHRoLFxuICAgIGhpZGRlbkxhYmVsLFxuICAgIHNpemUsXG4gICAgb25CbHVyOiAoKSA9PiB7XG4gICAgICBzZXRGb2N1c2VkKGZhbHNlKTtcbiAgICB9LFxuICAgIG9uRW1wdHksXG4gICAgb25GaWxsZWQsXG4gICAgb25Gb2N1czogKCkgPT4ge1xuICAgICAgc2V0Rm9jdXNlZCh0cnVlKTtcbiAgICB9LFxuICAgIHJlZ2lzdGVyRWZmZWN0LFxuICAgIHJlcXVpcmVkLFxuICAgIHZhcmlhbnRcbiAgfTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KEZvcm1Db250cm9sQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjaGlsZENvbnRleHQsXG4gICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KEZvcm1Db250cm9sUm9vdCwgX2V4dGVuZHMoe1xuICAgICAgYXM6IGNvbXBvbmVudCxcbiAgICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGUsXG4gICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpLFxuICAgICAgcmVmOiByZWZcbiAgICB9LCBvdGhlciwge1xuICAgICAgY2hpbGRyZW46IGNoaWxkcmVuXG4gICAgfSkpXG4gIH0pO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBGb3JtQ29udHJvbC5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogVGhlIGNvbnRlbnQgb2YgdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGNvbXBvbmVudC5cbiAgICogSXQgc3VwcG9ydHMgYm90aCBkZWZhdWx0IGFuZCBjdXN0b20gdGhlbWUgY29sb3JzLCB3aGljaCBjYW4gYmUgYWRkZWQgYXMgc2hvd24gaW4gdGhlXG4gICAqIFtwYWxldHRlIGN1c3RvbWl6YXRpb24gZ3VpZGVdKGh0dHBzOi8vbXVpLmNvbS9tYXRlcmlhbC11aS9jdXN0b21pemF0aW9uL3BhbGV0dGUvI2FkZGluZy1uZXctY29sb3JzKS5cbiAgICogQGRlZmF1bHQgJ3ByaW1hcnknXG4gICAqL1xuICBjb2xvcjogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsncHJpbWFyeScsICdzZWNvbmRhcnknLCAnZXJyb3InLCAnaW5mbycsICdzdWNjZXNzJywgJ3dhcm5pbmcnXSksIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgcm9vdCBub2RlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKi9cbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGxhYmVsLCBpbnB1dCBhbmQgaGVscGVyIHRleHQgc2hvdWxkIGJlIGRpc3BsYXllZCBpbiBhIGRpc2FibGVkIHN0YXRlLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBsYWJlbCBpcyBkaXNwbGF5ZWQgaW4gYW4gZXJyb3Igc3RhdGUuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBlcnJvcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCBpcyBkaXNwbGF5ZWQgaW4gZm9jdXNlZCBzdGF0ZS5cbiAgICovXG4gIGZvY3VzZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgd2lsbCB0YWtlIHVwIHRoZSBmdWxsIHdpZHRoIG9mIGl0cyBjb250YWluZXIuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBmdWxsV2lkdGg6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBsYWJlbCBpcyBoaWRkZW4uXG4gICAqIFRoaXMgaXMgdXNlZCB0byBpbmNyZWFzZSBkZW5zaXR5IGZvciBhIGBGaWxsZWRJbnB1dGAuXG4gICAqIEJlIHN1cmUgdG8gYWRkIGBhcmlhLWxhYmVsYCB0byB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgaGlkZGVuTGFiZWw6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgZGVuc2VgIG9yIGBub3JtYWxgLCB3aWxsIGFkanVzdCB2ZXJ0aWNhbCBzcGFjaW5nIG9mIHRoaXMgYW5kIGNvbnRhaW5lZCBjb21wb25lbnRzLlxuICAgKiBAZGVmYXVsdCAnbm9uZSdcbiAgICovXG4gIG1hcmdpbjogUHJvcFR5cGVzLm9uZU9mKFsnZGVuc2UnLCAnbm9uZScsICdub3JtYWwnXSksXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGxhYmVsIHdpbGwgaW5kaWNhdGUgdGhhdCB0aGUgYGlucHV0YCBpcyByZXF1aXJlZC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIHJlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIHNpemUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICogQGRlZmF1bHQgJ21lZGl1bSdcbiAgICovXG4gIHNpemU6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ21lZGl1bScsICdzbWFsbCddKSwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG5cbiAgLyoqXG4gICAqIFRoZSB2YXJpYW50IHRvIHVzZS5cbiAgICogQGRlZmF1bHQgJ291dGxpbmVkJ1xuICAgKi9cbiAgdmFyaWFudDogUHJvcFR5cGVzLm9uZU9mKFsnZmlsbGVkJywgJ291dGxpbmVkJywgJ3N0YW5kYXJkJ10pXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgRm9ybUNvbnRyb2w7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybUNvbnRyb2xTdGF0ZSh7XG4gIHByb3BzLFxuICBzdGF0ZXMsXG4gIG11aUZvcm1Db250cm9sXG59KSB7XG4gIHJldHVybiBzdGF0ZXMucmVkdWNlKChhY2MsIHN0YXRlKSA9PiB7XG4gICAgYWNjW3N0YXRlXSA9IHByb3BzW3N0YXRlXTtcblxuICAgIGlmIChtdWlGb3JtQ29udHJvbCkge1xuICAgICAgaWYgKHR5cGVvZiBwcm9wc1tzdGF0ZV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGFjY1tzdGF0ZV0gPSBtdWlGb3JtQ29udHJvbFtzdGF0ZV07XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xufSIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBGb3JtQ29udHJvbENvbnRleHQgZnJvbSAnLi9Gb3JtQ29udHJvbENvbnRleHQnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlRm9ybUNvbnRyb2woKSB7XG4gIHJldHVybiBSZWFjdC51c2VDb250ZXh0KEZvcm1Db250cm9sQ29udGV4dCk7XG59IiwiaW1wb3J0IHsgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MsIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEZvcm1MYWJlbFV0aWxpdHlDbGFzc2VzKHNsb3QpIHtcbiAgcmV0dXJuIGdlbmVyYXRlVXRpbGl0eUNsYXNzKCdNdWlGb3JtTGFiZWwnLCBzbG90KTtcbn1cbmNvbnN0IGZvcm1MYWJlbENsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlGb3JtTGFiZWwnLCBbJ3Jvb3QnLCAnY29sb3JTZWNvbmRhcnknLCAnZm9jdXNlZCcsICdkaXNhYmxlZCcsICdlcnJvcicsICdmaWxsZWQnLCAncmVxdWlyZWQnLCAnYXN0ZXJpc2snXSk7XG5leHBvcnQgZGVmYXVsdCBmb3JtTGFiZWxDbGFzc2VzOyIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJjaGlsZHJlblwiLCBcImNsYXNzTmFtZVwiLCBcImNvbG9yXCIsIFwiY29tcG9uZW50XCIsIFwiZGlzYWJsZWRcIiwgXCJlcnJvclwiLCBcImZpbGxlZFwiLCBcImZvY3VzZWRcIiwgXCJyZXF1aXJlZFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCBmb3JtQ29udHJvbFN0YXRlIGZyb20gJy4uL0Zvcm1Db250cm9sL2Zvcm1Db250cm9sU3RhdGUnO1xuaW1wb3J0IHVzZUZvcm1Db250cm9sIGZyb20gJy4uL0Zvcm1Db250cm9sL3VzZUZvcm1Db250cm9sJztcbmltcG9ydCBjYXBpdGFsaXplIGZyb20gJy4uL3V0aWxzL2NhcGl0YWxpemUnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCBmb3JtTGFiZWxDbGFzc2VzLCB7IGdldEZvcm1MYWJlbFV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnLi9mb3JtTGFiZWxDbGFzc2VzJztcbmltcG9ydCB7IGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIGNsYXNzZXMsXG4gICAgY29sb3IsXG4gICAgZm9jdXNlZCxcbiAgICBkaXNhYmxlZCxcbiAgICBlcnJvcixcbiAgICBmaWxsZWQsXG4gICAgcmVxdWlyZWRcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCcsIGBjb2xvciR7Y2FwaXRhbGl6ZShjb2xvcil9YCwgZGlzYWJsZWQgJiYgJ2Rpc2FibGVkJywgZXJyb3IgJiYgJ2Vycm9yJywgZmlsbGVkICYmICdmaWxsZWQnLCBmb2N1c2VkICYmICdmb2N1c2VkJywgcmVxdWlyZWQgJiYgJ3JlcXVpcmVkJ10sXG4gICAgYXN0ZXJpc2s6IFsnYXN0ZXJpc2snLCBlcnJvciAmJiAnZXJyb3InXVxuICB9O1xuICByZXR1cm4gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldEZvcm1MYWJlbFV0aWxpdHlDbGFzc2VzLCBjbGFzc2VzKTtcbn07XG5cbmV4cG9ydCBjb25zdCBGb3JtTGFiZWxSb290ID0gc3R5bGVkKCdsYWJlbCcsIHtcbiAgbmFtZTogJ011aUZvcm1MYWJlbCcsXG4gIHNsb3Q6ICdSb290JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6ICh7XG4gICAgb3duZXJTdGF0ZVxuICB9LCBzdHlsZXMpID0+IHtcbiAgICByZXR1cm4gX2V4dGVuZHMoe30sIHN0eWxlcy5yb290LCBvd25lclN0YXRlLmNvbG9yID09PSAnc2Vjb25kYXJ5JyAmJiBzdHlsZXMuY29sb3JTZWNvbmRhcnksIG93bmVyU3RhdGUuZmlsbGVkICYmIHN0eWxlcy5maWxsZWQpO1xuICB9XG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4gX2V4dGVuZHMoe1xuICBjb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUudGV4dC5zZWNvbmRhcnlcbn0sIHRoZW1lLnR5cG9ncmFwaHkuYm9keTEsIHtcbiAgbGluZUhlaWdodDogJzEuNDM3NWVtJyxcbiAgcGFkZGluZzogMCxcbiAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gIFtgJi4ke2Zvcm1MYWJlbENsYXNzZXMuZm9jdXNlZH1gXToge1xuICAgIGNvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZVtvd25lclN0YXRlLmNvbG9yXS5tYWluXG4gIH0sXG4gIFtgJi4ke2Zvcm1MYWJlbENsYXNzZXMuZGlzYWJsZWR9YF06IHtcbiAgICBjb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUudGV4dC5kaXNhYmxlZFxuICB9LFxuICBbYCYuJHtmb3JtTGFiZWxDbGFzc2VzLmVycm9yfWBdOiB7XG4gICAgY29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLmVycm9yLm1haW5cbiAgfVxufSkpO1xuY29uc3QgQXN0ZXJpc2tDb21wb25lbnQgPSBzdHlsZWQoJ3NwYW4nLCB7XG4gIG5hbWU6ICdNdWlGb3JtTGFiZWwnLFxuICBzbG90OiAnQXN0ZXJpc2snLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHN0eWxlcy5hc3Rlcmlza1xufSkoKHtcbiAgdGhlbWVcbn0pID0+ICh7XG4gIFtgJi4ke2Zvcm1MYWJlbENsYXNzZXMuZXJyb3J9YF06IHtcbiAgICBjb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuZXJyb3IubWFpblxuICB9XG59KSk7XG5jb25zdCBGb3JtTGFiZWwgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBGb3JtTGFiZWwoaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aUZvcm1MYWJlbCdcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGNoaWxkcmVuLFxuICAgIGNsYXNzTmFtZSxcbiAgICBjb21wb25lbnQgPSAnbGFiZWwnXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBtdWlGb3JtQ29udHJvbCA9IHVzZUZvcm1Db250cm9sKCk7XG4gIGNvbnN0IGZjcyA9IGZvcm1Db250cm9sU3RhdGUoe1xuICAgIHByb3BzLFxuICAgIG11aUZvcm1Db250cm9sLFxuICAgIHN0YXRlczogWydjb2xvcicsICdyZXF1aXJlZCcsICdmb2N1c2VkJywgJ2Rpc2FibGVkJywgJ2Vycm9yJywgJ2ZpbGxlZCddXG4gIH0pO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBjb2xvcjogZmNzLmNvbG9yIHx8ICdwcmltYXJ5JyxcbiAgICBjb21wb25lbnQsXG4gICAgZGlzYWJsZWQ6IGZjcy5kaXNhYmxlZCxcbiAgICBlcnJvcjogZmNzLmVycm9yLFxuICAgIGZpbGxlZDogZmNzLmZpbGxlZCxcbiAgICBmb2N1c2VkOiBmY3MuZm9jdXNlZCxcbiAgICByZXF1aXJlZDogZmNzLnJlcXVpcmVkXG4gIH0pO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4cyhGb3JtTGFiZWxSb290LCBfZXh0ZW5kcyh7XG4gICAgYXM6IGNvbXBvbmVudCxcbiAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSksXG4gICAgcmVmOiByZWZcbiAgfSwgb3RoZXIsIHtcbiAgICBjaGlsZHJlbjogW2NoaWxkcmVuLCBmY3MucmVxdWlyZWQgJiYgLyojX19QVVJFX18qL19qc3hzKEFzdGVyaXNrQ29tcG9uZW50LCB7XG4gICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgICAgXCJhcmlhLWhpZGRlblwiOiB0cnVlLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc2VzLmFzdGVyaXNrLFxuICAgICAgY2hpbGRyZW46IFtcIlxcdTIwMDlcIiwgJyonXVxuICAgIH0pXVxuICB9KSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IEZvcm1MYWJlbC5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogVGhlIGNvbnRlbnQgb2YgdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGNvbXBvbmVudC5cbiAgICogSXQgc3VwcG9ydHMgYm90aCBkZWZhdWx0IGFuZCBjdXN0b20gdGhlbWUgY29sb3JzLCB3aGljaCBjYW4gYmUgYWRkZWQgYXMgc2hvd24gaW4gdGhlXG4gICAqIFtwYWxldHRlIGN1c3RvbWl6YXRpb24gZ3VpZGVdKGh0dHBzOi8vbXVpLmNvbS9tYXRlcmlhbC11aS9jdXN0b21pemF0aW9uL3BhbGV0dGUvI2FkZGluZy1uZXctY29sb3JzKS5cbiAgICovXG4gIGNvbG9yOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWydlcnJvcicsICdpbmZvJywgJ3ByaW1hcnknLCAnc2Vjb25kYXJ5JywgJ3N1Y2Nlc3MnLCAnd2FybmluZyddKSwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgbGFiZWwgc2hvdWxkIGJlIGRpc3BsYXllZCBpbiBhIGRpc2FibGVkIHN0YXRlLlxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBsYWJlbCBpcyBkaXNwbGF5ZWQgaW4gYW4gZXJyb3Igc3RhdGUuXG4gICAqL1xuICBlcnJvcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGxhYmVsIHNob3VsZCB1c2UgZmlsbGVkIGNsYXNzZXMga2V5LlxuICAgKi9cbiAgZmlsbGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgaW5wdXQgb2YgdGhpcyBsYWJlbCBpcyBmb2N1c2VkICh1c2VkIGJ5IGBGb3JtR3JvdXBgIGNvbXBvbmVudHMpLlxuICAgKi9cbiAgZm9jdXNlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGxhYmVsIHdpbGwgaW5kaWNhdGUgdGhhdCB0aGUgYGlucHV0YCBpcyByZXF1aXJlZC5cbiAgICovXG4gIHJlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgRm9ybUxhYmVsOyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRJbnB1dExhYmVsVXRpbGl0eUNsYXNzZXMoc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aUlucHV0TGFiZWwnLCBzbG90KTtcbn1cbmNvbnN0IGlucHV0TGFiZWxDbGFzc2VzID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcygnTXVpSW5wdXRMYWJlbCcsIFsncm9vdCcsICdmb2N1c2VkJywgJ2Rpc2FibGVkJywgJ2Vycm9yJywgJ3JlcXVpcmVkJywgJ2FzdGVyaXNrJywgJ2Zvcm1Db250cm9sJywgJ3NpemVTbWFsbCcsICdzaHJpbmsnLCAnYW5pbWF0ZWQnLCAnc3RhbmRhcmQnLCAnZmlsbGVkJywgJ291dGxpbmVkJ10pO1xuZXhwb3J0IGRlZmF1bHQgaW5wdXRMYWJlbENsYXNzZXM7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImRpc2FibGVBbmltYXRpb25cIiwgXCJtYXJnaW5cIiwgXCJzaHJpbmtcIiwgXCJ2YXJpYW50XCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCBmb3JtQ29udHJvbFN0YXRlIGZyb20gJy4uL0Zvcm1Db250cm9sL2Zvcm1Db250cm9sU3RhdGUnO1xuaW1wb3J0IHVzZUZvcm1Db250cm9sIGZyb20gJy4uL0Zvcm1Db250cm9sL3VzZUZvcm1Db250cm9sJztcbmltcG9ydCBGb3JtTGFiZWwsIHsgZm9ybUxhYmVsQ2xhc3NlcyB9IGZyb20gJy4uL0Zvcm1MYWJlbCc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wcyBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWVQcm9wcyc7XG5pbXBvcnQgc3R5bGVkLCB7IHJvb3RTaG91bGRGb3J3YXJkUHJvcCB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHsgZ2V0SW5wdXRMYWJlbFV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnLi9pbnB1dExhYmVsQ2xhc3Nlcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuXG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3NlcyxcbiAgICBmb3JtQ29udHJvbCxcbiAgICBzaXplLFxuICAgIHNocmluayxcbiAgICBkaXNhYmxlQW5pbWF0aW9uLFxuICAgIHZhcmlhbnQsXG4gICAgcmVxdWlyZWRcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCcsIGZvcm1Db250cm9sICYmICdmb3JtQ29udHJvbCcsICFkaXNhYmxlQW5pbWF0aW9uICYmICdhbmltYXRlZCcsIHNocmluayAmJiAnc2hyaW5rJywgc2l6ZSA9PT0gJ3NtYWxsJyAmJiAnc2l6ZVNtYWxsJywgdmFyaWFudF0sXG4gICAgYXN0ZXJpc2s6IFtyZXF1aXJlZCAmJiAnYXN0ZXJpc2snXVxuICB9O1xuICBjb25zdCBjb21wb3NlZENsYXNzZXMgPSBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0SW5wdXRMYWJlbFV0aWxpdHlDbGFzc2VzLCBjbGFzc2VzKTtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBjbGFzc2VzLCBjb21wb3NlZENsYXNzZXMpO1xufTtcblxuY29uc3QgSW5wdXRMYWJlbFJvb3QgPSBzdHlsZWQoRm9ybUxhYmVsLCB7XG4gIHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+IHJvb3RTaG91bGRGb3J3YXJkUHJvcChwcm9wKSB8fCBwcm9wID09PSAnY2xhc3NlcycsXG4gIG5hbWU6ICdNdWlJbnB1dExhYmVsJyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBvd25lclN0YXRlXG4gICAgfSA9IHByb3BzO1xuICAgIHJldHVybiBbe1xuICAgICAgW2AmIC4ke2Zvcm1MYWJlbENsYXNzZXMuYXN0ZXJpc2t9YF06IHN0eWxlcy5hc3Rlcmlza1xuICAgIH0sIHN0eWxlcy5yb290LCBvd25lclN0YXRlLmZvcm1Db250cm9sICYmIHN0eWxlcy5mb3JtQ29udHJvbCwgb3duZXJTdGF0ZS5zaXplID09PSAnc21hbGwnICYmIHN0eWxlcy5zaXplU21hbGwsIG93bmVyU3RhdGUuc2hyaW5rICYmIHN0eWxlcy5zaHJpbmssICFvd25lclN0YXRlLmRpc2FibGVBbmltYXRpb24gJiYgc3R5bGVzLmFuaW1hdGVkLCBzdHlsZXNbb3duZXJTdGF0ZS52YXJpYW50XV07XG4gIH1cbn0pKCh7XG4gIHRoZW1lLFxuICBvd25lclN0YXRlXG59KSA9PiBfZXh0ZW5kcyh7XG4gIGRpc3BsYXk6ICdibG9jaycsXG4gIHRyYW5zZm9ybU9yaWdpbjogJ3RvcCBsZWZ0JyxcbiAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgdGV4dE92ZXJmbG93OiAnZWxsaXBzaXMnLFxuICBtYXhXaWR0aDogJzEwMCUnXG59LCBvd25lclN0YXRlLmZvcm1Db250cm9sICYmIHtcbiAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gIGxlZnQ6IDAsXG4gIHRvcDogMCxcbiAgLy8gc2xpZ2h0IGFsdGVyYXRpb24gdG8gc3BlYyBzcGFjaW5nIHRvIG1hdGNoIHZpc3VhbCBzcGVjIHJlc3VsdFxuICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoMCwgMjBweCkgc2NhbGUoMSknXG59LCBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYge1xuICAvLyBDb21wZW5zYXRpb24gZm9yIHRoZSBgSW5wdXQuaW5wdXRTaXplU21hbGxgIHN0eWxlLlxuICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoMCwgMTdweCkgc2NhbGUoMSknXG59LCBvd25lclN0YXRlLnNocmluayAmJiB7XG4gIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgwLCAtMS41cHgpIHNjYWxlKDAuNzUpJyxcbiAgdHJhbnNmb3JtT3JpZ2luOiAndG9wIGxlZnQnLFxuICBtYXhXaWR0aDogJzEzMyUnXG59LCAhb3duZXJTdGF0ZS5kaXNhYmxlQW5pbWF0aW9uICYmIHtcbiAgdHJhbnNpdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKFsnY29sb3InLCAndHJhbnNmb3JtJywgJ21heC13aWR0aCddLCB7XG4gICAgZHVyYXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmR1cmF0aW9uLnNob3J0ZXIsXG4gICAgZWFzaW5nOiB0aGVtZS50cmFuc2l0aW9ucy5lYXNpbmcuZWFzZU91dFxuICB9KVxufSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnZmlsbGVkJyAmJiBfZXh0ZW5kcyh7XG4gIC8vIENocm9tZSdzIGF1dG9maWxsIGZlYXR1cmUgZ2l2ZXMgdGhlIGlucHV0IGZpZWxkIGEgeWVsbG93IGJhY2tncm91bmQuXG4gIC8vIFNpbmNlIHRoZSBpbnB1dCBmaWVsZCBpcyBiZWhpbmQgdGhlIGxhYmVsIGluIHRoZSBIVE1MIHRyZWUsXG4gIC8vIHRoZSBpbnB1dCBmaWVsZCBpcyBkcmF3biBsYXN0IGFuZCBoaWRlcyB0aGUgbGFiZWwgd2l0aCBhbiBvcGFxdWUgYmFja2dyb3VuZCBjb2xvci5cbiAgLy8gekluZGV4OiAxIHdpbGwgcmFpc2UgdGhlIGxhYmVsIGFib3ZlIG9wYXF1ZSBiYWNrZ3JvdW5kLWNvbG9ycyBvZiBpbnB1dC5cbiAgekluZGV4OiAxLFxuICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXG4gIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgxMnB4LCAxNnB4KSBzY2FsZSgxKScsXG4gIG1heFdpZHRoOiAnY2FsYygxMDAlIC0gMjRweCknXG59LCBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYge1xuICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoMTJweCwgMTNweCkgc2NhbGUoMSknXG59LCBvd25lclN0YXRlLnNocmluayAmJiBfZXh0ZW5kcyh7XG4gIHVzZXJTZWxlY3Q6ICdub25lJyxcbiAgcG9pbnRlckV2ZW50czogJ2F1dG8nLFxuICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoMTJweCwgN3B4KSBzY2FsZSgwLjc1KScsXG4gIG1heFdpZHRoOiAnY2FsYygxMzMlIC0gMjRweCknXG59LCBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYge1xuICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoMTJweCwgNHB4KSBzY2FsZSgwLjc1KSdcbn0pKSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnb3V0bGluZWQnICYmIF9leHRlbmRzKHtcbiAgLy8gc2VlIGNvbW1lbnQgYWJvdmUgb24gZmlsbGVkLnpJbmRleFxuICB6SW5kZXg6IDEsXG4gIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgdHJhbnNmb3JtOiAndHJhbnNsYXRlKDE0cHgsIDE2cHgpIHNjYWxlKDEpJyxcbiAgbWF4V2lkdGg6ICdjYWxjKDEwMCUgLSAyNHB4KSdcbn0sIG93bmVyU3RhdGUuc2l6ZSA9PT0gJ3NtYWxsJyAmJiB7XG4gIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgxNHB4LCA5cHgpIHNjYWxlKDEpJ1xufSwgb3duZXJTdGF0ZS5zaHJpbmsgJiYge1xuICB1c2VyU2VsZWN0OiAnbm9uZScsXG4gIHBvaW50ZXJFdmVudHM6ICdhdXRvJyxcbiAgbWF4V2lkdGg6ICdjYWxjKDEzMyUgLSAyNHB4KScsXG4gIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgxNHB4LCAtOXB4KSBzY2FsZSgwLjc1KSdcbn0pKSk7XG5jb25zdCBJbnB1dExhYmVsID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gSW5wdXRMYWJlbChpblByb3BzLCByZWYpIHtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBuYW1lOiAnTXVpSW5wdXRMYWJlbCcsXG4gICAgcHJvcHM6IGluUHJvcHNcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGRpc2FibGVBbmltYXRpb24gPSBmYWxzZSxcbiAgICBzaHJpbms6IHNocmlua1Byb3BcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IG11aUZvcm1Db250cm9sID0gdXNlRm9ybUNvbnRyb2woKTtcbiAgbGV0IHNocmluayA9IHNocmlua1Byb3A7XG5cbiAgaWYgKHR5cGVvZiBzaHJpbmsgPT09ICd1bmRlZmluZWQnICYmIG11aUZvcm1Db250cm9sKSB7XG4gICAgc2hyaW5rID0gbXVpRm9ybUNvbnRyb2wuZmlsbGVkIHx8IG11aUZvcm1Db250cm9sLmZvY3VzZWQgfHwgbXVpRm9ybUNvbnRyb2wuYWRvcm5lZFN0YXJ0O1xuICB9XG5cbiAgY29uc3QgZmNzID0gZm9ybUNvbnRyb2xTdGF0ZSh7XG4gICAgcHJvcHMsXG4gICAgbXVpRm9ybUNvbnRyb2wsXG4gICAgc3RhdGVzOiBbJ3NpemUnLCAndmFyaWFudCcsICdyZXF1aXJlZCddXG4gIH0pO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBkaXNhYmxlQW5pbWF0aW9uLFxuICAgIGZvcm1Db250cm9sOiBtdWlGb3JtQ29udHJvbCxcbiAgICBzaHJpbmssXG4gICAgc2l6ZTogZmNzLnNpemUsXG4gICAgdmFyaWFudDogZmNzLnZhcmlhbnQsXG4gICAgcmVxdWlyZWQ6IGZjcy5yZXF1aXJlZFxuICB9KTtcblxuICBjb25zdCBjbGFzc2VzID0gdXNlVXRpbGl0eUNsYXNzZXMob3duZXJTdGF0ZSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChJbnB1dExhYmVsUm9vdCwgX2V4dGVuZHMoe1xuICAgIFwiZGF0YS1zaHJpbmtcIjogc2hyaW5rLFxuICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGUsXG4gICAgcmVmOiByZWZcbiAgfSwgb3RoZXIsIHtcbiAgICBjbGFzc2VzOiBjbGFzc2VzXG4gIH0pKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gSW5wdXRMYWJlbC5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogVGhlIGNvbnRlbnQgb2YgdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogVGhlIGNvbG9yIG9mIHRoZSBjb21wb25lbnQuXG4gICAqIEl0IHN1cHBvcnRzIGJvdGggZGVmYXVsdCBhbmQgY3VzdG9tIHRoZW1lIGNvbG9ycywgd2hpY2ggY2FuIGJlIGFkZGVkIGFzIHNob3duIGluIHRoZVxuICAgKiBbcGFsZXR0ZSBjdXN0b21pemF0aW9uIGd1aWRlXShodHRwczovL211aS5jb20vbWF0ZXJpYWwtdWkvY3VzdG9taXphdGlvbi9wYWxldHRlLyNhZGRpbmctbmV3LWNvbG9ycykuXG4gICAqL1xuICBjb2xvcjogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnZXJyb3InLCAnaW5mbycsICdwcmltYXJ5JywgJ3NlY29uZGFyeScsICdzdWNjZXNzJywgJ3dhcm5pbmcnXSksIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgdHJhbnNpdGlvbiBhbmltYXRpb24gaXMgZGlzYWJsZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlQW5pbWF0aW9uOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkLlxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBsYWJlbCBpcyBkaXNwbGF5ZWQgaW4gYW4gZXJyb3Igc3RhdGUuXG4gICAqL1xuICBlcnJvcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGBpbnB1dGAgb2YgdGhpcyBsYWJlbCBpcyBmb2N1c2VkLlxuICAgKi9cbiAgZm9jdXNlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGBkZW5zZWAsIHdpbGwgYWRqdXN0IHZlcnRpY2FsIHNwYWNpbmcuIFRoaXMgaXMgbm9ybWFsbHkgb2J0YWluZWQgdmlhIGNvbnRleHQgZnJvbVxuICAgKiBGb3JtQ29udHJvbC5cbiAgICovXG4gIG1hcmdpbjogUHJvcFR5cGVzLm9uZU9mKFsnZGVuc2UnXSksXG5cbiAgLyoqXG4gICAqIGlmIGB0cnVlYCwgdGhlIGxhYmVsIHdpbGwgaW5kaWNhdGUgdGhhdCB0aGUgYGlucHV0YCBpcyByZXF1aXJlZC5cbiAgICovXG4gIHJlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgbGFiZWwgaXMgc2hydW5rLlxuICAgKi9cbiAgc2hyaW5rOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIHNpemUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICogQGRlZmF1bHQgJ25vcm1hbCdcbiAgICovXG4gIHNpemU6IFByb3BUeXBlcy5vbmVPZihbJ25vcm1hbCcsICdzbWFsbCddKSxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pLFxuXG4gIC8qKlxuICAgKiBUaGUgdmFyaWFudCB0byB1c2UuXG4gICAqL1xuICB2YXJpYW50OiBQcm9wVHlwZXMub25lT2YoWydmaWxsZWQnLCAnb3V0bGluZWQnLCAnc3RhbmRhcmQnXSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBJbnB1dExhYmVsOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG5jb25zdCBMaXN0Q29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KHt9KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgTGlzdENvbnRleHQuZGlzcGxheU5hbWUgPSAnTGlzdENvbnRleHQnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBMaXN0Q29udGV4dDsiLCJpbXBvcnQgeyB1bnN0YWJsZV91c2VFbmhhbmNlZEVmZmVjdCBhcyB1c2VFbmhhbmNlZEVmZmVjdCB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgdXNlRW5oYW5jZWRFZmZlY3Q7IiwiaW1wb3J0IHsgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MsIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERpdmlkZXJVdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aURpdmlkZXInLCBzbG90KTtcbn1cbmNvbnN0IGRpdmlkZXJDbGFzc2VzID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcygnTXVpRGl2aWRlcicsIFsncm9vdCcsICdhYnNvbHV0ZScsICdmdWxsV2lkdGgnLCAnaW5zZXQnLCAnbWlkZGxlJywgJ2ZsZXhJdGVtJywgJ2xpZ2h0JywgJ3ZlcnRpY2FsJywgJ3dpdGhDaGlsZHJlbicsICd3aXRoQ2hpbGRyZW5WZXJ0aWNhbCcsICd0ZXh0QWxpZ25SaWdodCcsICd0ZXh0QWxpZ25MZWZ0JywgJ3dyYXBwZXInLCAnd3JhcHBlclZlcnRpY2FsJ10pO1xuZXhwb3J0IGRlZmF1bHQgZGl2aWRlckNsYXNzZXM7IiwiaW1wb3J0IHsgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MsIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldExpc3RJdGVtSWNvblV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpTGlzdEl0ZW1JY29uJywgc2xvdCk7XG59XG5jb25zdCBsaXN0SXRlbUljb25DbGFzc2VzID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcygnTXVpTGlzdEl0ZW1JY29uJywgWydyb290JywgJ2FsaWduSXRlbXNGbGV4U3RhcnQnXSk7XG5leHBvcnQgZGVmYXVsdCBsaXN0SXRlbUljb25DbGFzc2VzOyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRMaXN0SXRlbVRleHRVdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aUxpc3RJdGVtVGV4dCcsIHNsb3QpO1xufVxuY29uc3QgbGlzdEl0ZW1UZXh0Q2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aUxpc3RJdGVtVGV4dCcsIFsncm9vdCcsICdtdWx0aWxpbmUnLCAnZGVuc2UnLCAnaW5zZXQnLCAncHJpbWFyeScsICdzZWNvbmRhcnknXSk7XG5leHBvcnQgZGVmYXVsdCBsaXN0SXRlbVRleHRDbGFzc2VzOyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRNZW51SXRlbVV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpTWVudUl0ZW0nLCBzbG90KTtcbn1cbmNvbnN0IG1lbnVJdGVtQ2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aU1lbnVJdGVtJywgWydyb290JywgJ2ZvY3VzVmlzaWJsZScsICdkZW5zZScsICdkaXNhYmxlZCcsICdkaXZpZGVyJywgJ2d1dHRlcnMnLCAnc2VsZWN0ZWQnXSk7XG5leHBvcnQgZGVmYXVsdCBtZW51SXRlbUNsYXNzZXM7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImF1dG9Gb2N1c1wiLCBcImNvbXBvbmVudFwiLCBcImRlbnNlXCIsIFwiZGl2aWRlclwiLCBcImRpc2FibGVHdXR0ZXJzXCIsIFwiZm9jdXNWaXNpYmxlQ2xhc3NOYW1lXCIsIFwicm9sZVwiLCBcInRhYkluZGV4XCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgdW5zdGFibGVfY29tcG9zZUNsYXNzZXMgYXMgY29tcG9zZUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuaW1wb3J0IHsgYWxwaGEgfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgc3R5bGVkLCB7IHJvb3RTaG91bGRGb3J3YXJkUHJvcCB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IExpc3RDb250ZXh0IGZyb20gJy4uL0xpc3QvTGlzdENvbnRleHQnO1xuaW1wb3J0IEJ1dHRvbkJhc2UgZnJvbSAnLi4vQnV0dG9uQmFzZSc7XG5pbXBvcnQgdXNlRW5oYW5jZWRFZmZlY3QgZnJvbSAnLi4vdXRpbHMvdXNlRW5oYW5jZWRFZmZlY3QnO1xuaW1wb3J0IHVzZUZvcmtSZWYgZnJvbSAnLi4vdXRpbHMvdXNlRm9ya1JlZic7XG5pbXBvcnQgeyBkaXZpZGVyQ2xhc3NlcyB9IGZyb20gJy4uL0RpdmlkZXInO1xuaW1wb3J0IHsgbGlzdEl0ZW1JY29uQ2xhc3NlcyB9IGZyb20gJy4uL0xpc3RJdGVtSWNvbic7XG5pbXBvcnQgeyBsaXN0SXRlbVRleHRDbGFzc2VzIH0gZnJvbSAnLi4vTGlzdEl0ZW1UZXh0JztcbmltcG9ydCBtZW51SXRlbUNsYXNzZXMsIHsgZ2V0TWVudUl0ZW1VdGlsaXR5Q2xhc3MgfSBmcm9tICcuL21lbnVJdGVtQ2xhc3Nlcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGNvbnN0IG92ZXJyaWRlc1Jlc29sdmVyID0gKHByb3BzLCBzdHlsZXMpID0+IHtcbiAgY29uc3Qge1xuICAgIG93bmVyU3RhdGVcbiAgfSA9IHByb3BzO1xuICByZXR1cm4gW3N0eWxlcy5yb290LCBvd25lclN0YXRlLmRlbnNlICYmIHN0eWxlcy5kZW5zZSwgb3duZXJTdGF0ZS5kaXZpZGVyICYmIHN0eWxlcy5kaXZpZGVyLCAhb3duZXJTdGF0ZS5kaXNhYmxlR3V0dGVycyAmJiBzdHlsZXMuZ3V0dGVyc107XG59O1xuXG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgZGlzYWJsZWQsXG4gICAgZGVuc2UsXG4gICAgZGl2aWRlcixcbiAgICBkaXNhYmxlR3V0dGVycyxcbiAgICBzZWxlY3RlZCxcbiAgICBjbGFzc2VzXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnLCBkZW5zZSAmJiAnZGVuc2UnLCBkaXNhYmxlZCAmJiAnZGlzYWJsZWQnLCAhZGlzYWJsZUd1dHRlcnMgJiYgJ2d1dHRlcnMnLCBkaXZpZGVyICYmICdkaXZpZGVyJywgc2VsZWN0ZWQgJiYgJ3NlbGVjdGVkJ11cbiAgfTtcbiAgY29uc3QgY29tcG9zZWRDbGFzc2VzID0gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldE1lbnVJdGVtVXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBjbGFzc2VzLCBjb21wb3NlZENsYXNzZXMpO1xufTtcblxuY29uc3QgTWVudUl0ZW1Sb290ID0gc3R5bGVkKEJ1dHRvbkJhc2UsIHtcbiAgc2hvdWxkRm9yd2FyZFByb3A6IHByb3AgPT4gcm9vdFNob3VsZEZvcndhcmRQcm9wKHByb3ApIHx8IHByb3AgPT09ICdjbGFzc2VzJyxcbiAgbmFtZTogJ011aU1lbnVJdGVtJyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlclxufSkoKHtcbiAgdGhlbWUsXG4gIG93bmVyU3RhdGVcbn0pID0+IF9leHRlbmRzKHt9LCB0aGVtZS50eXBvZ3JhcGh5LmJvZHkxLCB7XG4gIGRpc3BsYXk6ICdmbGV4JyxcbiAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0JyxcbiAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICB0ZXh0RGVjb3JhdGlvbjogJ25vbmUnLFxuICBtaW5IZWlnaHQ6IDQ4LFxuICBwYWRkaW5nVG9wOiA2LFxuICBwYWRkaW5nQm90dG9tOiA2LFxuICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgd2hpdGVTcGFjZTogJ25vd3JhcCdcbn0sICFvd25lclN0YXRlLmRpc2FibGVHdXR0ZXJzICYmIHtcbiAgcGFkZGluZ0xlZnQ6IDE2LFxuICBwYWRkaW5nUmlnaHQ6IDE2XG59LCBvd25lclN0YXRlLmRpdmlkZXIgJiYge1xuICBib3JkZXJCb3R0b206IGAxcHggc29saWQgJHsodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS5kaXZpZGVyfWAsXG4gIGJhY2tncm91bmRDbGlwOiAncGFkZGluZy1ib3gnXG59LCB7XG4gICcmOmhvdmVyJzoge1xuICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgYmFja2dyb3VuZENvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS5hY3Rpb24uaG92ZXIsXG4gICAgLy8gUmVzZXQgb24gdG91Y2ggZGV2aWNlcywgaXQgZG9lc24ndCBhZGQgc3BlY2lmaWNpdHlcbiAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCdcbiAgICB9XG4gIH0sXG4gIFtgJi4ke21lbnVJdGVtQ2xhc3Nlcy5zZWxlY3RlZH1gXToge1xuICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUudmFycyA/IGByZ2JhKCR7dGhlbWUudmFycy5wYWxldHRlLnByaW1hcnkubWFpbkNoYW5uZWx9IC8gJHt0aGVtZS52YXJzLnBhbGV0dGUuYWN0aW9uLnNlbGVjdGVkT3BhY2l0eX0pYCA6IGFscGhhKHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLCB0aGVtZS5wYWxldHRlLmFjdGlvbi5zZWxlY3RlZE9wYWNpdHkpLFxuICAgIFtgJi4ke21lbnVJdGVtQ2xhc3Nlcy5mb2N1c1Zpc2libGV9YF06IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUudmFycyA/IGByZ2JhKCR7dGhlbWUudmFycy5wYWxldHRlLnByaW1hcnkubWFpbkNoYW5uZWx9IC8gY2FsYygke3RoZW1lLnZhcnMucGFsZXR0ZS5hY3Rpb24uc2VsZWN0ZWRPcGFjaXR5fSArICR7dGhlbWUudmFycy5wYWxldHRlLmFjdGlvbi5mb2N1c09wYWNpdHl9KSlgIDogYWxwaGEodGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sIHRoZW1lLnBhbGV0dGUuYWN0aW9uLnNlbGVjdGVkT3BhY2l0eSArIHRoZW1lLnBhbGV0dGUuYWN0aW9uLmZvY3VzT3BhY2l0eSlcbiAgICB9XG4gIH0sXG4gIFtgJi4ke21lbnVJdGVtQ2xhc3Nlcy5zZWxlY3RlZH06aG92ZXJgXToge1xuICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUudmFycyA/IGByZ2JhKCR7dGhlbWUudmFycy5wYWxldHRlLnByaW1hcnkubWFpbkNoYW5uZWx9IC8gY2FsYygke3RoZW1lLnZhcnMucGFsZXR0ZS5hY3Rpb24uc2VsZWN0ZWRPcGFjaXR5fSArICR7dGhlbWUudmFycy5wYWxldHRlLmFjdGlvbi5ob3Zlck9wYWNpdHl9KSlgIDogYWxwaGEodGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sIHRoZW1lLnBhbGV0dGUuYWN0aW9uLnNlbGVjdGVkT3BhY2l0eSArIHRoZW1lLnBhbGV0dGUuYWN0aW9uLmhvdmVyT3BhY2l0eSksXG4gICAgLy8gUmVzZXQgb24gdG91Y2ggZGV2aWNlcywgaXQgZG9lc24ndCBhZGQgc3BlY2lmaWNpdHlcbiAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnZhcnMgPyBgcmdiYSgke3RoZW1lLnZhcnMucGFsZXR0ZS5wcmltYXJ5Lm1haW5DaGFubmVsfSAvICR7dGhlbWUudmFycy5wYWxldHRlLmFjdGlvbi5zZWxlY3RlZE9wYWNpdHl9KWAgOiBhbHBoYSh0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbiwgdGhlbWUucGFsZXR0ZS5hY3Rpb24uc2VsZWN0ZWRPcGFjaXR5KVxuICAgIH1cbiAgfSxcbiAgW2AmLiR7bWVudUl0ZW1DbGFzc2VzLmZvY3VzVmlzaWJsZX1gXToge1xuICAgIGJhY2tncm91bmRDb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuYWN0aW9uLmZvY3VzXG4gIH0sXG4gIFtgJi4ke21lbnVJdGVtQ2xhc3Nlcy5kaXNhYmxlZH1gXToge1xuICAgIG9wYWNpdHk6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLmFjdGlvbi5kaXNhYmxlZE9wYWNpdHlcbiAgfSxcbiAgW2AmICsgLiR7ZGl2aWRlckNsYXNzZXMucm9vdH1gXToge1xuICAgIG1hcmdpblRvcDogdGhlbWUuc3BhY2luZygxKSxcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcoMSlcbiAgfSxcbiAgW2AmICsgLiR7ZGl2aWRlckNsYXNzZXMuaW5zZXR9YF06IHtcbiAgICBtYXJnaW5MZWZ0OiA1MlxuICB9LFxuICBbYCYgLiR7bGlzdEl0ZW1UZXh0Q2xhc3Nlcy5yb290fWBdOiB7XG4gICAgbWFyZ2luVG9wOiAwLFxuICAgIG1hcmdpbkJvdHRvbTogMFxuICB9LFxuICBbYCYgLiR7bGlzdEl0ZW1UZXh0Q2xhc3Nlcy5pbnNldH1gXToge1xuICAgIHBhZGRpbmdMZWZ0OiAzNlxuICB9LFxuICBbYCYgLiR7bGlzdEl0ZW1JY29uQ2xhc3Nlcy5yb290fWBdOiB7XG4gICAgbWluV2lkdGg6IDM2XG4gIH1cbn0sICFvd25lclN0YXRlLmRlbnNlICYmIHtcbiAgW3RoZW1lLmJyZWFrcG9pbnRzLnVwKCdzbScpXToge1xuICAgIG1pbkhlaWdodDogJ2F1dG8nXG4gIH1cbn0sIG93bmVyU3RhdGUuZGVuc2UgJiYgX2V4dGVuZHMoe1xuICBtaW5IZWlnaHQ6IDMyLFxuICAvLyBodHRwczovL21hdGVyaWFsLmlvL2NvbXBvbmVudHMvbWVudXMjc3BlY3MgPiBEZW5zZVxuICBwYWRkaW5nVG9wOiA0LFxuICBwYWRkaW5nQm90dG9tOiA0XG59LCB0aGVtZS50eXBvZ3JhcGh5LmJvZHkyLCB7XG4gIFtgJiAuJHtsaXN0SXRlbUljb25DbGFzc2VzLnJvb3R9IHN2Z2BdOiB7XG4gICAgZm9udFNpemU6ICcxLjI1cmVtJ1xuICB9XG59KSkpO1xuY29uc3QgTWVudUl0ZW0gPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBNZW51SXRlbShpblByb3BzLCByZWYpIHtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBwcm9wczogaW5Qcm9wcyxcbiAgICBuYW1lOiAnTXVpTWVudUl0ZW0nXG4gIH0pO1xuXG4gIGNvbnN0IHtcbiAgICBhdXRvRm9jdXMgPSBmYWxzZSxcbiAgICBjb21wb25lbnQgPSAnbGknLFxuICAgIGRlbnNlID0gZmFsc2UsXG4gICAgZGl2aWRlciA9IGZhbHNlLFxuICAgIGRpc2FibGVHdXR0ZXJzID0gZmFsc2UsXG4gICAgZm9jdXNWaXNpYmxlQ2xhc3NOYW1lLFxuICAgIHJvbGUgPSAnbWVudWl0ZW0nLFxuICAgIHRhYkluZGV4OiB0YWJJbmRleFByb3BcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KExpc3RDb250ZXh0KTtcbiAgY29uc3QgY2hpbGRDb250ZXh0ID0ge1xuICAgIGRlbnNlOiBkZW5zZSB8fCBjb250ZXh0LmRlbnNlIHx8IGZhbHNlLFxuICAgIGRpc2FibGVHdXR0ZXJzXG4gIH07XG4gIGNvbnN0IG1lbnVJdGVtUmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICB1c2VFbmhhbmNlZEVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGF1dG9Gb2N1cykge1xuICAgICAgaWYgKG1lbnVJdGVtUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgbWVudUl0ZW1SZWYuY3VycmVudC5mb2N1cygpO1xuICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ01VSTogVW5hYmxlIHRvIHNldCBmb2N1cyB0byBhIE1lbnVJdGVtIHdob3NlIGNvbXBvbmVudCBoYXMgbm90IGJlZW4gcmVuZGVyZWQuJyk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbYXV0b0ZvY3VzXSk7XG5cbiAgY29uc3Qgb3duZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGRlbnNlOiBjaGlsZENvbnRleHQuZGVuc2UsXG4gICAgZGl2aWRlcixcbiAgICBkaXNhYmxlR3V0dGVyc1xuICB9KTtcblxuICBjb25zdCBjbGFzc2VzID0gdXNlVXRpbGl0eUNsYXNzZXMocHJvcHMpO1xuICBjb25zdCBoYW5kbGVSZWYgPSB1c2VGb3JrUmVmKG1lbnVJdGVtUmVmLCByZWYpO1xuICBsZXQgdGFiSW5kZXg7XG5cbiAgaWYgKCFwcm9wcy5kaXNhYmxlZCkge1xuICAgIHRhYkluZGV4ID0gdGFiSW5kZXhQcm9wICE9PSB1bmRlZmluZWQgPyB0YWJJbmRleFByb3AgOiAtMTtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChMaXN0Q29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjaGlsZENvbnRleHQsXG4gICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KE1lbnVJdGVtUm9vdCwgX2V4dGVuZHMoe1xuICAgICAgcmVmOiBoYW5kbGVSZWYsXG4gICAgICByb2xlOiByb2xlLFxuICAgICAgdGFiSW5kZXg6IHRhYkluZGV4LFxuICAgICAgY29tcG9uZW50OiBjb21wb25lbnQsXG4gICAgICBmb2N1c1Zpc2libGVDbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5mb2N1c1Zpc2libGUsIGZvY3VzVmlzaWJsZUNsYXNzTmFtZSlcbiAgICB9LCBvdGhlciwge1xuICAgICAgb3duZXJTdGF0ZTogb3duZXJTdGF0ZSxcbiAgICAgIGNsYXNzZXM6IGNsYXNzZXNcbiAgICB9KSlcbiAgfSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IE1lbnVJdGVtLnByb3BUeXBlc1xuLyogcmVtb3ZlLXByb3B0eXBlcyAqL1xuPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBsaXN0IGl0ZW0gaXMgZm9jdXNlZCBkdXJpbmcgdGhlIGZpcnN0IG1vdW50LlxuICAgKiBGb2N1cyB3aWxsIGFsc28gYmUgdHJpZ2dlcmVkIGlmIHRoZSB2YWx1ZSBjaGFuZ2VzIGZyb20gZmFsc2UgdG8gdHJ1ZS5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGF1dG9Gb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIGNvbXBhY3QgdmVydGljYWwgcGFkZGluZyBkZXNpZ25lZCBmb3Iga2V5Ym9hcmQgYW5kIG1vdXNlIGlucHV0IGlzIHVzZWQuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSBpbmhlcml0ZWQgZnJvbSB0aGUgcGFyZW50IE1lbnUgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGVuc2U6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGxlZnQgYW5kIHJpZ2h0IHBhZGRpbmcgaXMgcmVtb3ZlZC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRpc2FibGVHdXR0ZXJzOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCBhIDFweCBsaWdodCBib3JkZXIgaXMgYWRkZWQgdG8gdGhlIGJvdHRvbSBvZiB0aGUgbWVudSBpdGVtLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGl2aWRlcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoaXMgcHJvcCBjYW4gaGVscCBpZGVudGlmeSB3aGljaCBlbGVtZW50IGhhcyBrZXlib2FyZCBmb2N1cy5cbiAgICogVGhlIGNsYXNzIG5hbWUgd2lsbCBiZSBhcHBsaWVkIHdoZW4gdGhlIGVsZW1lbnQgZ2FpbnMgdGhlIGZvY3VzIHRocm91Z2gga2V5Ym9hcmQgaW50ZXJhY3Rpb24uXG4gICAqIEl0J3MgYSBwb2x5ZmlsbCBmb3IgdGhlIFtDU1MgOmZvY3VzLXZpc2libGUgc2VsZWN0b3JdKGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9zZWxlY3RvcnMtNC8jdGhlLWZvY3VzLXZpc2libGUtcHNldWRvKS5cbiAgICogVGhlIHJhdGlvbmFsZSBmb3IgdXNpbmcgdGhpcyBmZWF0dXJlIFtpcyBleHBsYWluZWQgaGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL1dJQ0cvZm9jdXMtdmlzaWJsZS9ibG9iL0hFQUQvZXhwbGFpbmVyLm1kKS5cbiAgICogQSBbcG9seWZpbGwgY2FuIGJlIHVzZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9XSUNHL2ZvY3VzLXZpc2libGUpIHRvIGFwcGx5IGEgYGZvY3VzLXZpc2libGVgIGNsYXNzIHRvIG90aGVyIGNvbXBvbmVudHNcbiAgICogaWYgbmVlZGVkLlxuICAgKi9cbiAgZm9jdXNWaXNpYmxlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICByb2xlOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBzZWxlY3RlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBzeXN0ZW0gcHJvcCB0aGF0IGFsbG93cyBkZWZpbmluZyBzeXN0ZW0gb3ZlcnJpZGVzIGFzIHdlbGwgYXMgYWRkaXRpb25hbCBDU1Mgc3R5bGVzLlxuICAgKi9cbiAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKSxcblxuICAvKipcbiAgICogQGRlZmF1bHQgMFxuICAgKi9cbiAgdGFiSW5kZXg6IFByb3BUeXBlcy5udW1iZXJcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBNZW51SXRlbTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvd25lckRvY3VtZW50KG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUgJiYgbm9kZS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50O1xufSIsImltcG9ydCB7IHVuc3RhYmxlX293bmVyRG9jdW1lbnQgYXMgb3duZXJEb2N1bWVudCB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgb3duZXJEb2N1bWVudDsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0TGlzdFV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpTGlzdCcsIHNsb3QpO1xufVxuY29uc3QgbGlzdENsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlMaXN0JywgWydyb290JywgJ3BhZGRpbmcnLCAnZGVuc2UnLCAnc3ViaGVhZGVyJ10pO1xuZXhwb3J0IGRlZmF1bHQgbGlzdENsYXNzZXM7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImNoaWxkcmVuXCIsIFwiY2xhc3NOYW1lXCIsIFwiY29tcG9uZW50XCIsIFwiZGVuc2VcIiwgXCJkaXNhYmxlUGFkZGluZ1wiLCBcInN1YmhlYWRlclwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wcyBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWVQcm9wcyc7XG5pbXBvcnQgTGlzdENvbnRleHQgZnJvbSAnLi9MaXN0Q29udGV4dCc7XG5pbXBvcnQgeyBnZXRMaXN0VXRpbGl0eUNsYXNzIH0gZnJvbSAnLi9saXN0Q2xhc3Nlcyc7XG5pbXBvcnQgeyBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuXG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3NlcyxcbiAgICBkaXNhYmxlUGFkZGluZyxcbiAgICBkZW5zZSxcbiAgICBzdWJoZWFkZXJcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCcsICFkaXNhYmxlUGFkZGluZyAmJiAncGFkZGluZycsIGRlbnNlICYmICdkZW5zZScsIHN1YmhlYWRlciAmJiAnc3ViaGVhZGVyJ11cbiAgfTtcbiAgcmV0dXJuIGNvbXBvc2VDbGFzc2VzKHNsb3RzLCBnZXRMaXN0VXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbn07XG5cbmNvbnN0IExpc3RSb290ID0gc3R5bGVkKCd1bCcsIHtcbiAgbmFtZTogJ011aUxpc3QnLFxuICBzbG90OiAnUm9vdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFtzdHlsZXMucm9vdCwgIW93bmVyU3RhdGUuZGlzYWJsZVBhZGRpbmcgJiYgc3R5bGVzLnBhZGRpbmcsIG93bmVyU3RhdGUuZGVuc2UgJiYgc3R5bGVzLmRlbnNlLCBvd25lclN0YXRlLnN1YmhlYWRlciAmJiBzdHlsZXMuc3ViaGVhZGVyXTtcbiAgfVxufSkoKHtcbiAgb3duZXJTdGF0ZVxufSkgPT4gX2V4dGVuZHMoe1xuICBsaXN0U3R5bGU6ICdub25lJyxcbiAgbWFyZ2luOiAwLFxuICBwYWRkaW5nOiAwLFxuICBwb3NpdGlvbjogJ3JlbGF0aXZlJ1xufSwgIW93bmVyU3RhdGUuZGlzYWJsZVBhZGRpbmcgJiYge1xuICBwYWRkaW5nVG9wOiA4LFxuICBwYWRkaW5nQm90dG9tOiA4XG59LCBvd25lclN0YXRlLnN1YmhlYWRlciAmJiB7XG4gIHBhZGRpbmdUb3A6IDBcbn0pKTtcbmNvbnN0IExpc3QgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBMaXN0KGluUHJvcHMsIHJlZikge1xuICBjb25zdCBwcm9wcyA9IHVzZVRoZW1lUHJvcHMoe1xuICAgIHByb3BzOiBpblByb3BzLFxuICAgIG5hbWU6ICdNdWlMaXN0J1xuICB9KTtcblxuICBjb25zdCB7XG4gICAgY2hpbGRyZW4sXG4gICAgY2xhc3NOYW1lLFxuICAgIGNvbXBvbmVudCA9ICd1bCcsXG4gICAgZGVuc2UgPSBmYWxzZSxcbiAgICBkaXNhYmxlUGFkZGluZyA9IGZhbHNlLFxuICAgIHN1YmhlYWRlclxuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gKHtcbiAgICBkZW5zZVxuICB9KSwgW2RlbnNlXSk7XG5cbiAgY29uc3Qgb3duZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGNvbXBvbmVudCxcbiAgICBkZW5zZSxcbiAgICBkaXNhYmxlUGFkZGluZ1xuICB9KTtcblxuICBjb25zdCBjbGFzc2VzID0gdXNlVXRpbGl0eUNsYXNzZXMob3duZXJTdGF0ZSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChMaXN0Q29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjb250ZXh0LFxuICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovX2pzeHMoTGlzdFJvb3QsIF9leHRlbmRzKHtcbiAgICAgIGFzOiBjb21wb25lbnQsXG4gICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpLFxuICAgICAgcmVmOiByZWYsXG4gICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlXG4gICAgfSwgb3RoZXIsIHtcbiAgICAgIGNoaWxkcmVuOiBbc3ViaGVhZGVyLCBjaGlsZHJlbl1cbiAgICB9KSlcbiAgfSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IExpc3QucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgcm9vdCBub2RlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKi9cbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgY29tcGFjdCB2ZXJ0aWNhbCBwYWRkaW5nIGRlc2lnbmVkIGZvciBrZXlib2FyZCBhbmQgbW91c2UgaW5wdXQgaXMgdXNlZCBmb3JcbiAgICogdGhlIGxpc3QgYW5kIGxpc3QgaXRlbXMuXG4gICAqIFRoZSBwcm9wIGlzIGF2YWlsYWJsZSB0byBkZXNjZW5kYW50IGNvbXBvbmVudHMgYXMgdGhlIGBkZW5zZWAgY29udGV4dC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRlbnNlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB2ZXJ0aWNhbCBwYWRkaW5nIGlzIHJlbW92ZWQgZnJvbSB0aGUgbGlzdC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRpc2FibGVQYWRkaW5nOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIGNvbnRlbnQgb2YgdGhlIHN1YmhlYWRlciwgbm9ybWFsbHkgYExpc3RTdWJoZWFkZXJgLlxuICAgKi9cbiAgc3ViaGVhZGVyOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgTGlzdDsiLCIvLyBBIGNoYW5nZSBvZiB0aGUgYnJvd3NlciB6b29tIGNoYW5nZSB0aGUgc2Nyb2xsYmFyIHNpemUuXG4vLyBDcmVkaXQgaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvNDg4ZmQ4YWZjNTM1Y2EzYTZhZDRkYzU4MWY1ZTg5MjE3YjZhMzZhYy9qcy9zcmMvdXRpbC9zY3JvbGxiYXIuanMjTDE0LUwxOFxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0U2Nyb2xsYmFyU2l6ZShkb2MpIHtcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dpbmRvdy9pbm5lcldpZHRoI3VzYWdlX25vdGVzXG4gIGNvbnN0IGRvY3VtZW50V2lkdGggPSBkb2MuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoO1xuICByZXR1cm4gTWF0aC5hYnMod2luZG93LmlubmVyV2lkdGggLSBkb2N1bWVudFdpZHRoKTtcbn0iLCJpbXBvcnQgeyB1bnN0YWJsZV9nZXRTY3JvbGxiYXJTaXplIGFzIGdldFNjcm9sbGJhclNpemUgfSBmcm9tICdAbXVpL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IGdldFNjcm9sbGJhclNpemU7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImFjdGlvbnNcIiwgXCJhdXRvRm9jdXNcIiwgXCJhdXRvRm9jdXNJdGVtXCIsIFwiY2hpbGRyZW5cIiwgXCJjbGFzc05hbWVcIiwgXCJkaXNhYmxlZEl0ZW1zRm9jdXNhYmxlXCIsIFwiZGlzYWJsZUxpc3RXcmFwXCIsIFwib25LZXlEb3duXCIsIFwidmFyaWFudFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGlzRnJhZ21lbnQgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IG93bmVyRG9jdW1lbnQgZnJvbSAnLi4vdXRpbHMvb3duZXJEb2N1bWVudCc7XG5pbXBvcnQgTGlzdCBmcm9tICcuLi9MaXN0JztcbmltcG9ydCBnZXRTY3JvbGxiYXJTaXplIGZyb20gJy4uL3V0aWxzL2dldFNjcm9sbGJhclNpemUnO1xuaW1wb3J0IHVzZUZvcmtSZWYgZnJvbSAnLi4vdXRpbHMvdXNlRm9ya1JlZic7XG5pbXBvcnQgdXNlRW5oYW5jZWRFZmZlY3QgZnJvbSAnLi4vdXRpbHMvdXNlRW5oYW5jZWRFZmZlY3QnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuZnVuY3Rpb24gbmV4dEl0ZW0obGlzdCwgaXRlbSwgZGlzYWJsZUxpc3RXcmFwKSB7XG4gIGlmIChsaXN0ID09PSBpdGVtKSB7XG4gICAgcmV0dXJuIGxpc3QuZmlyc3RDaGlsZDtcbiAgfVxuXG4gIGlmIChpdGVtICYmIGl0ZW0ubmV4dEVsZW1lbnRTaWJsaW5nKSB7XG4gICAgcmV0dXJuIGl0ZW0ubmV4dEVsZW1lbnRTaWJsaW5nO1xuICB9XG5cbiAgcmV0dXJuIGRpc2FibGVMaXN0V3JhcCA/IG51bGwgOiBsaXN0LmZpcnN0Q2hpbGQ7XG59XG5cbmZ1bmN0aW9uIHByZXZpb3VzSXRlbShsaXN0LCBpdGVtLCBkaXNhYmxlTGlzdFdyYXApIHtcbiAgaWYgKGxpc3QgPT09IGl0ZW0pIHtcbiAgICByZXR1cm4gZGlzYWJsZUxpc3RXcmFwID8gbGlzdC5maXJzdENoaWxkIDogbGlzdC5sYXN0Q2hpbGQ7XG4gIH1cblxuICBpZiAoaXRlbSAmJiBpdGVtLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpIHtcbiAgICByZXR1cm4gaXRlbS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xuICB9XG5cbiAgcmV0dXJuIGRpc2FibGVMaXN0V3JhcCA/IG51bGwgOiBsaXN0Lmxhc3RDaGlsZDtcbn1cblxuZnVuY3Rpb24gdGV4dENyaXRlcmlhTWF0Y2hlcyhuZXh0Rm9jdXMsIHRleHRDcml0ZXJpYSkge1xuICBpZiAodGV4dENyaXRlcmlhID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGxldCB0ZXh0ID0gbmV4dEZvY3VzLmlubmVyVGV4dDtcblxuICBpZiAodGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgLy8ganNkb20gZG9lc24ndCBzdXBwb3J0IGlubmVyVGV4dFxuICAgIHRleHQgPSBuZXh0Rm9jdXMudGV4dENvbnRlbnQ7XG4gIH1cblxuICB0ZXh0ID0gdGV4dC50cmltKCkudG9Mb3dlckNhc2UoKTtcblxuICBpZiAodGV4dC5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAodGV4dENyaXRlcmlhLnJlcGVhdGluZykge1xuICAgIHJldHVybiB0ZXh0WzBdID09PSB0ZXh0Q3JpdGVyaWEua2V5c1swXTtcbiAgfVxuXG4gIHJldHVybiB0ZXh0LmluZGV4T2YodGV4dENyaXRlcmlhLmtleXMuam9pbignJykpID09PSAwO1xufVxuXG5mdW5jdGlvbiBtb3ZlRm9jdXMobGlzdCwgY3VycmVudEZvY3VzLCBkaXNhYmxlTGlzdFdyYXAsIGRpc2FibGVkSXRlbXNGb2N1c2FibGUsIHRyYXZlcnNhbEZ1bmN0aW9uLCB0ZXh0Q3JpdGVyaWEpIHtcbiAgbGV0IHdyYXBwZWRPbmNlID0gZmFsc2U7XG4gIGxldCBuZXh0Rm9jdXMgPSB0cmF2ZXJzYWxGdW5jdGlvbihsaXN0LCBjdXJyZW50Rm9jdXMsIGN1cnJlbnRGb2N1cyA/IGRpc2FibGVMaXN0V3JhcCA6IGZhbHNlKTtcblxuICB3aGlsZSAobmV4dEZvY3VzKSB7XG4gICAgLy8gUHJldmVudCBpbmZpbml0ZSBsb29wLlxuICAgIGlmIChuZXh0Rm9jdXMgPT09IGxpc3QuZmlyc3RDaGlsZCkge1xuICAgICAgaWYgKHdyYXBwZWRPbmNlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgd3JhcHBlZE9uY2UgPSB0cnVlO1xuICAgIH0gLy8gU2FtZSBsb2dpYyBhcyB1c2VBdXRvY29tcGxldGUuanNcblxuXG4gICAgY29uc3QgbmV4dEZvY3VzRGlzYWJsZWQgPSBkaXNhYmxlZEl0ZW1zRm9jdXNhYmxlID8gZmFsc2UgOiBuZXh0Rm9jdXMuZGlzYWJsZWQgfHwgbmV4dEZvY3VzLmdldEF0dHJpYnV0ZSgnYXJpYS1kaXNhYmxlZCcpID09PSAndHJ1ZSc7XG5cbiAgICBpZiAoIW5leHRGb2N1cy5oYXNBdHRyaWJ1dGUoJ3RhYmluZGV4JykgfHwgIXRleHRDcml0ZXJpYU1hdGNoZXMobmV4dEZvY3VzLCB0ZXh0Q3JpdGVyaWEpIHx8IG5leHRGb2N1c0Rpc2FibGVkKSB7XG4gICAgICAvLyBNb3ZlIHRvIHRoZSBuZXh0IGVsZW1lbnQuXG4gICAgICBuZXh0Rm9jdXMgPSB0cmF2ZXJzYWxGdW5jdGlvbihsaXN0LCBuZXh0Rm9jdXMsIGRpc2FibGVMaXN0V3JhcCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5leHRGb2N1cy5mb2N1cygpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKiBBIHBlcm1hbmVudGx5IGRpc3BsYXllZCBtZW51IGZvbGxvd2luZyBodHRwczovL3d3dy53My5vcmcvV0FJL0FSSUEvYXBnL3BhdHRlcm5zL21lbnVidXR0b24vLlxuICogSXQncyBleHBvc2VkIHRvIGhlbHAgY3VzdG9taXphdGlvbiBvZiB0aGUgW2BNZW51YF0oL21hdGVyaWFsLXVpL2FwaS9tZW51LykgY29tcG9uZW50IGlmIHlvdVxuICogdXNlIGl0IHNlcGFyYXRlbHkgeW91IG5lZWQgdG8gbW92ZSBmb2N1cyBpbnRvIHRoZSBjb21wb25lbnQgbWFudWFsbHkuIE9uY2VcbiAqIHRoZSBmb2N1cyBpcyBwbGFjZWQgaW5zaWRlIHRoZSBjb21wb25lbnQgaXQgaXMgZnVsbHkga2V5Ym9hcmQgYWNjZXNzaWJsZS5cbiAqL1xuXG5cbmNvbnN0IE1lbnVMaXN0ID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gTWVudUxpc3QocHJvcHMsIHJlZikge1xuICBjb25zdCB7XG4gICAgLy8gcHJpdmF0ZVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9wcm9wLXR5cGVzXG4gICAgYWN0aW9ucyxcbiAgICBhdXRvRm9jdXMgPSBmYWxzZSxcbiAgICBhdXRvRm9jdXNJdGVtID0gZmFsc2UsXG4gICAgY2hpbGRyZW4sXG4gICAgY2xhc3NOYW1lLFxuICAgIGRpc2FibGVkSXRlbXNGb2N1c2FibGUgPSBmYWxzZSxcbiAgICBkaXNhYmxlTGlzdFdyYXAgPSBmYWxzZSxcbiAgICBvbktleURvd24sXG4gICAgdmFyaWFudCA9ICdzZWxlY3RlZE1lbnUnXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBsaXN0UmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCB0ZXh0Q3JpdGVyaWFSZWYgPSBSZWFjdC51c2VSZWYoe1xuICAgIGtleXM6IFtdLFxuICAgIHJlcGVhdGluZzogdHJ1ZSxcbiAgICBwcmV2aW91c0tleU1hdGNoZWQ6IHRydWUsXG4gICAgbGFzdFRpbWU6IG51bGxcbiAgfSk7XG4gIHVzZUVuaGFuY2VkRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoYXV0b0ZvY3VzKSB7XG4gICAgICBsaXN0UmVmLmN1cnJlbnQuZm9jdXMoKTtcbiAgICB9XG4gIH0sIFthdXRvRm9jdXNdKTtcbiAgUmVhY3QudXNlSW1wZXJhdGl2ZUhhbmRsZShhY3Rpb25zLCAoKSA9PiAoe1xuICAgIGFkanVzdFN0eWxlRm9yU2Nyb2xsYmFyOiAoY29udGFpbmVyRWxlbWVudCwgdGhlbWUpID0+IHtcbiAgICAgIC8vIExldCdzIGlnbm9yZSB0aGF0IHBpZWNlIG9mIGxvZ2ljIGlmIHVzZXJzIGFyZSBhbHJlYWR5IG92ZXJyaWRpbmcgdGhlIHdpZHRoXG4gICAgICAvLyBvZiB0aGUgbWVudS5cbiAgICAgIGNvbnN0IG5vRXhwbGljaXRXaWR0aCA9ICFsaXN0UmVmLmN1cnJlbnQuc3R5bGUud2lkdGg7XG5cbiAgICAgIGlmIChjb250YWluZXJFbGVtZW50LmNsaWVudEhlaWdodCA8IGxpc3RSZWYuY3VycmVudC5jbGllbnRIZWlnaHQgJiYgbm9FeHBsaWNpdFdpZHRoKSB7XG4gICAgICAgIGNvbnN0IHNjcm9sbGJhclNpemUgPSBgJHtnZXRTY3JvbGxiYXJTaXplKG93bmVyRG9jdW1lbnQoY29udGFpbmVyRWxlbWVudCkpfXB4YDtcbiAgICAgICAgbGlzdFJlZi5jdXJyZW50LnN0eWxlW3RoZW1lLmRpcmVjdGlvbiA9PT0gJ3J0bCcgPyAncGFkZGluZ0xlZnQnIDogJ3BhZGRpbmdSaWdodCddID0gc2Nyb2xsYmFyU2l6ZTtcbiAgICAgICAgbGlzdFJlZi5jdXJyZW50LnN0eWxlLndpZHRoID0gYGNhbGMoMTAwJSArICR7c2Nyb2xsYmFyU2l6ZX0pYDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGxpc3RSZWYuY3VycmVudDtcbiAgICB9XG4gIH0pLCBbXSk7XG5cbiAgY29uc3QgaGFuZGxlS2V5RG93biA9IGV2ZW50ID0+IHtcbiAgICBjb25zdCBsaXN0ID0gbGlzdFJlZi5jdXJyZW50O1xuICAgIGNvbnN0IGtleSA9IGV2ZW50LmtleTtcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7RWxlbWVudH0gLSB3aWxsIGFsd2F5cyBiZSBkZWZpbmVkIHNpbmNlIHdlIGFyZSBpbiBhIGtleWRvd24gaGFuZGxlclxuICAgICAqIGF0dGFjaGVkIHRvIGFuIGVsZW1lbnQuIEEga2V5ZG93biBldmVudCBpcyBlaXRoZXIgZGlzcGF0Y2hlZCB0byB0aGUgYWN0aXZlRWxlbWVudFxuICAgICAqIG9yIGRvY3VtZW50LmJvZHkgb3IgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LiBPbmx5IHRoZSBmaXJzdCBjYXNlIHdpbGxcbiAgICAgKiB0cmlnZ2VyIHRoaXMgc3BlY2lmaWMgaGFuZGxlci5cbiAgICAgKi9cblxuICAgIGNvbnN0IGN1cnJlbnRGb2N1cyA9IG93bmVyRG9jdW1lbnQobGlzdCkuYWN0aXZlRWxlbWVudDtcblxuICAgIGlmIChrZXkgPT09ICdBcnJvd0Rvd24nKSB7XG4gICAgICAvLyBQcmV2ZW50IHNjcm9sbCBvZiB0aGUgcGFnZVxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIG1vdmVGb2N1cyhsaXN0LCBjdXJyZW50Rm9jdXMsIGRpc2FibGVMaXN0V3JhcCwgZGlzYWJsZWRJdGVtc0ZvY3VzYWJsZSwgbmV4dEl0ZW0pO1xuICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnQXJyb3dVcCcpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBtb3ZlRm9jdXMobGlzdCwgY3VycmVudEZvY3VzLCBkaXNhYmxlTGlzdFdyYXAsIGRpc2FibGVkSXRlbXNGb2N1c2FibGUsIHByZXZpb3VzSXRlbSk7XG4gICAgfSBlbHNlIGlmIChrZXkgPT09ICdIb21lJykge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIG1vdmVGb2N1cyhsaXN0LCBudWxsLCBkaXNhYmxlTGlzdFdyYXAsIGRpc2FibGVkSXRlbXNGb2N1c2FibGUsIG5leHRJdGVtKTtcbiAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ0VuZCcpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBtb3ZlRm9jdXMobGlzdCwgbnVsbCwgZGlzYWJsZUxpc3RXcmFwLCBkaXNhYmxlZEl0ZW1zRm9jdXNhYmxlLCBwcmV2aW91c0l0ZW0pO1xuICAgIH0gZWxzZSBpZiAoa2V5Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgY29uc3QgY3JpdGVyaWEgPSB0ZXh0Q3JpdGVyaWFSZWYuY3VycmVudDtcbiAgICAgIGNvbnN0IGxvd2VyS2V5ID0ga2V5LnRvTG93ZXJDYXNlKCk7XG4gICAgICBjb25zdCBjdXJyVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuXG4gICAgICBpZiAoY3JpdGVyaWEua2V5cy5sZW5ndGggPiAwKSB7XG4gICAgICAgIC8vIFJlc2V0XG4gICAgICAgIGlmIChjdXJyVGltZSAtIGNyaXRlcmlhLmxhc3RUaW1lID4gNTAwKSB7XG4gICAgICAgICAgY3JpdGVyaWEua2V5cyA9IFtdO1xuICAgICAgICAgIGNyaXRlcmlhLnJlcGVhdGluZyA9IHRydWU7XG4gICAgICAgICAgY3JpdGVyaWEucHJldmlvdXNLZXlNYXRjaGVkID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChjcml0ZXJpYS5yZXBlYXRpbmcgJiYgbG93ZXJLZXkgIT09IGNyaXRlcmlhLmtleXNbMF0pIHtcbiAgICAgICAgICBjcml0ZXJpYS5yZXBlYXRpbmcgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjcml0ZXJpYS5sYXN0VGltZSA9IGN1cnJUaW1lO1xuICAgICAgY3JpdGVyaWEua2V5cy5wdXNoKGxvd2VyS2V5KTtcbiAgICAgIGNvbnN0IGtlZXBGb2N1c09uQ3VycmVudCA9IGN1cnJlbnRGb2N1cyAmJiAhY3JpdGVyaWEucmVwZWF0aW5nICYmIHRleHRDcml0ZXJpYU1hdGNoZXMoY3VycmVudEZvY3VzLCBjcml0ZXJpYSk7XG5cbiAgICAgIGlmIChjcml0ZXJpYS5wcmV2aW91c0tleU1hdGNoZWQgJiYgKGtlZXBGb2N1c09uQ3VycmVudCB8fCBtb3ZlRm9jdXMobGlzdCwgY3VycmVudEZvY3VzLCBmYWxzZSwgZGlzYWJsZWRJdGVtc0ZvY3VzYWJsZSwgbmV4dEl0ZW0sIGNyaXRlcmlhKSkpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNyaXRlcmlhLnByZXZpb3VzS2V5TWF0Y2hlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChvbktleURvd24pIHtcbiAgICAgIG9uS2V5RG93bihldmVudCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVJlZiA9IHVzZUZvcmtSZWYobGlzdFJlZiwgcmVmKTtcbiAgLyoqXG4gICAqIHRoZSBpbmRleCBvZiB0aGUgaXRlbSBzaG91bGQgcmVjZWl2ZSBmb2N1c1xuICAgKiBpbiBhIGB2YXJpYW50PVwic2VsZWN0ZWRNZW51XCJgIGl0J3MgdGhlIGZpcnN0IGBzZWxlY3RlZGAgaXRlbVxuICAgKiBvdGhlcndpc2UgaXQncyB0aGUgdmVyeSBmaXJzdCBpdGVtLlxuICAgKi9cblxuICBsZXQgYWN0aXZlSXRlbUluZGV4ID0gLTE7IC8vIHNpbmNlIHdlIGluamVjdCBmb2N1cyByZWxhdGVkIHByb3BzIGludG8gY2hpbGRyZW4gd2UgaGF2ZSB0byBkbyBhIGxvb2thaGVhZFxuICAvLyB0byBjaGVjayBpZiB0aGVyZSBpcyBhIGBzZWxlY3RlZGAgaXRlbS4gV2UncmUgbG9va2luZyBmb3IgdGhlIGxhc3QgYHNlbGVjdGVkYFxuICAvLyBpdGVtIGFuZCB1c2UgdGhlIGZpcnN0IHZhbGlkIGl0ZW0gYXMgYSBmYWxsYmFja1xuXG4gIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goY2hpbGRyZW4sIChjaGlsZCwgaW5kZXgpID0+IHtcbiAgICBpZiAoISAvKiNfX1BVUkVfXyovUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChpc0ZyYWdtZW50KGNoaWxkKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFtcIk1VSTogVGhlIE1lbnUgY29tcG9uZW50IGRvZXNuJ3QgYWNjZXB0IGEgRnJhZ21lbnQgYXMgYSBjaGlsZC5cIiwgJ0NvbnNpZGVyIHByb3ZpZGluZyBhbiBhcnJheSBpbnN0ZWFkLiddLmpvaW4oJ1xcbicpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIWNoaWxkLnByb3BzLmRpc2FibGVkKSB7XG4gICAgICBpZiAodmFyaWFudCA9PT0gJ3NlbGVjdGVkTWVudScgJiYgY2hpbGQucHJvcHMuc2VsZWN0ZWQpIHtcbiAgICAgICAgYWN0aXZlSXRlbUluZGV4ID0gaW5kZXg7XG4gICAgICB9IGVsc2UgaWYgKGFjdGl2ZUl0ZW1JbmRleCA9PT0gLTEpIHtcbiAgICAgICAgYWN0aXZlSXRlbUluZGV4ID0gaW5kZXg7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgY29uc3QgaXRlbXMgPSBSZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIChjaGlsZCwgaW5kZXgpID0+IHtcbiAgICBpZiAoaW5kZXggPT09IGFjdGl2ZUl0ZW1JbmRleCkge1xuICAgICAgY29uc3QgbmV3Q2hpbGRQcm9wcyA9IHt9O1xuXG4gICAgICBpZiAoYXV0b0ZvY3VzSXRlbSkge1xuICAgICAgICBuZXdDaGlsZFByb3BzLmF1dG9Gb2N1cyA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChjaGlsZC5wcm9wcy50YWJJbmRleCA9PT0gdW5kZWZpbmVkICYmIHZhcmlhbnQgPT09ICdzZWxlY3RlZE1lbnUnKSB7XG4gICAgICAgIG5ld0NoaWxkUHJvcHMudGFiSW5kZXggPSAwO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNsb25lRWxlbWVudChjaGlsZCwgbmV3Q2hpbGRQcm9wcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNoaWxkO1xuICB9KTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KExpc3QsIF9leHRlbmRzKHtcbiAgICByb2xlOiBcIm1lbnVcIixcbiAgICByZWY6IGhhbmRsZVJlZixcbiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICBvbktleURvd246IGhhbmRsZUtleURvd24sXG4gICAgdGFiSW5kZXg6IGF1dG9Gb2N1cyA/IDAgOiAtMVxuICB9LCBvdGhlciwge1xuICAgIGNoaWxkcmVuOiBpdGVtc1xuICB9KSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IE1lbnVMaXN0LnByb3BUeXBlc1xuLyogcmVtb3ZlLXByb3B0eXBlcyAqL1xuPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHdpbGwgZm9jdXMgdGhlIGBbcm9sZT1cIm1lbnVcIl1gIGNvbnRhaW5lciBhbmQgbW92ZSBpbnRvIHRhYiBvcmRlci5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGF1dG9Gb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgd2lsbCBmb2N1cyB0aGUgZmlyc3QgbWVudWl0ZW0gaWYgYHZhcmlhbnQ9XCJtZW51XCJgIG9yIHNlbGVjdGVkIGl0ZW1cbiAgICogaWYgYHZhcmlhbnQ9XCJzZWxlY3RlZE1lbnVcImAuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBhdXRvRm9jdXNJdGVtOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogTWVudUxpc3QgY29udGVudHMsIG5vcm1hbGx5IGBNZW51SXRlbWBzLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgd2lsbCBhbGxvdyBmb2N1cyBvbiBkaXNhYmxlZCBpdGVtcy5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRpc2FibGVkSXRlbXNGb2N1c2FibGU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBtZW51IGl0ZW1zIHdpbGwgbm90IHdyYXAgZm9jdXMuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlTGlzdFdyYXA6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbktleURvd246IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBUaGUgdmFyaWFudCB0byB1c2UuIFVzZSBgbWVudWAgdG8gcHJldmVudCBzZWxlY3RlZCBpdGVtcyBmcm9tIGltcGFjdGluZyB0aGUgaW5pdGlhbCBmb2N1c1xuICAgKiBhbmQgdGhlIHZlcnRpY2FsIGFsaWdubWVudCByZWxhdGl2ZSB0byB0aGUgYW5jaG9yIGVsZW1lbnQuXG4gICAqIEBkZWZhdWx0ICdzZWxlY3RlZE1lbnUnXG4gICAqL1xuICB2YXJpYW50OiBQcm9wVHlwZXMub25lT2YoWydtZW51JywgJ3NlbGVjdGVkTWVudSddKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IE1lbnVMaXN0OyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXBlclV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpUGFwZXInLCBzbG90KTtcbn1cbmNvbnN0IHBhcGVyQ2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aVBhcGVyJywgWydyb290JywgJ3JvdW5kZWQnLCAnb3V0bGluZWQnLCAnZWxldmF0aW9uJywgJ2VsZXZhdGlvbjAnLCAnZWxldmF0aW9uMScsICdlbGV2YXRpb24yJywgJ2VsZXZhdGlvbjMnLCAnZWxldmF0aW9uNCcsICdlbGV2YXRpb241JywgJ2VsZXZhdGlvbjYnLCAnZWxldmF0aW9uNycsICdlbGV2YXRpb244JywgJ2VsZXZhdGlvbjknLCAnZWxldmF0aW9uMTAnLCAnZWxldmF0aW9uMTEnLCAnZWxldmF0aW9uMTInLCAnZWxldmF0aW9uMTMnLCAnZWxldmF0aW9uMTQnLCAnZWxldmF0aW9uMTUnLCAnZWxldmF0aW9uMTYnLCAnZWxldmF0aW9uMTcnLCAnZWxldmF0aW9uMTgnLCAnZWxldmF0aW9uMTknLCAnZWxldmF0aW9uMjAnLCAnZWxldmF0aW9uMjEnLCAnZWxldmF0aW9uMjInLCAnZWxldmF0aW9uMjMnLCAnZWxldmF0aW9uMjQnXSk7XG5leHBvcnQgZGVmYXVsdCBwYXBlckNsYXNzZXM7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImNsYXNzTmFtZVwiLCBcImNvbXBvbmVudFwiLCBcImVsZXZhdGlvblwiLCBcInNxdWFyZVwiLCBcInZhcmlhbnRcIl07XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyBjaGFpblByb3BUeXBlcywgaW50ZWdlclByb3BUeXBlIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgeyB1bnN0YWJsZV9jb21wb3NlQ2xhc3NlcyBhcyBjb21wb3NlQ2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5pbXBvcnQgeyBhbHBoYSB9IGZyb20gJ0BtdWkvc3lzdGVtJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wcyBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWVQcm9wcyc7XG5pbXBvcnQgdXNlVGhlbWUgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lJztcbmltcG9ydCB7IGdldFBhcGVyVXRpbGl0eUNsYXNzIH0gZnJvbSAnLi9wYXBlckNsYXNzZXMnOyAvLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLWlvcy9ibG9iL2JjYTM2MTA3NDA1NTk0ZDViN2IxNjI2NWE1YjBlZDY5OGY4NWE1ZWUvY29tcG9uZW50cy9FbGV2YXRpb24vc3JjL1VJQ29sb3IlMkJNYXRlcmlhbEVsZXZhdGlvbi5tI0w2MVxuXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGNvbnN0IGdldE92ZXJsYXlBbHBoYSA9IGVsZXZhdGlvbiA9PiB7XG4gIGxldCBhbHBoYVZhbHVlO1xuXG4gIGlmIChlbGV2YXRpb24gPCAxKSB7XG4gICAgYWxwaGFWYWx1ZSA9IDUuMTE5MTYgKiBlbGV2YXRpb24gKiogMjtcbiAgfSBlbHNlIHtcbiAgICBhbHBoYVZhbHVlID0gNC41ICogTWF0aC5sb2coZWxldmF0aW9uICsgMSkgKyAyO1xuICB9XG5cbiAgcmV0dXJuIChhbHBoYVZhbHVlIC8gMTAwKS50b0ZpeGVkKDIpO1xufTtcblxuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIHNxdWFyZSxcbiAgICBlbGV2YXRpb24sXG4gICAgdmFyaWFudCxcbiAgICBjbGFzc2VzXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnLCB2YXJpYW50LCAhc3F1YXJlICYmICdyb3VuZGVkJywgdmFyaWFudCA9PT0gJ2VsZXZhdGlvbicgJiYgYGVsZXZhdGlvbiR7ZWxldmF0aW9ufWBdXG4gIH07XG4gIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0UGFwZXJVdGlsaXR5Q2xhc3MsIGNsYXNzZXMpO1xufTtcblxuY29uc3QgUGFwZXJSb290ID0gc3R5bGVkKCdkaXYnLCB7XG4gIG5hbWU6ICdNdWlQYXBlcicsXG4gIHNsb3Q6ICdSb290JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgb3duZXJTdGF0ZVxuICAgIH0gPSBwcm9wcztcbiAgICByZXR1cm4gW3N0eWxlcy5yb290LCBzdHlsZXNbb3duZXJTdGF0ZS52YXJpYW50XSwgIW93bmVyU3RhdGUuc3F1YXJlICYmIHN0eWxlcy5yb3VuZGVkLCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdlbGV2YXRpb24nICYmIHN0eWxlc1tgZWxldmF0aW9uJHtvd25lclN0YXRlLmVsZXZhdGlvbn1gXV07XG4gIH1cbn0pKCh7XG4gIHRoZW1lLFxuICBvd25lclN0YXRlXG59KSA9PiB7XG4gIHZhciBfdGhlbWUkdmFycyRvdmVybGF5cztcblxuICByZXR1cm4gX2V4dGVuZHMoe1xuICAgIGJhY2tncm91bmRDb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuYmFja2dyb3VuZC5wYXBlcixcbiAgICBjb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUudGV4dC5wcmltYXJ5LFxuICAgIHRyYW5zaXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZSgnYm94LXNoYWRvdycpXG4gIH0sICFvd25lclN0YXRlLnNxdWFyZSAmJiB7XG4gICAgYm9yZGVyUmFkaXVzOiB0aGVtZS5zaGFwZS5ib3JkZXJSYWRpdXNcbiAgfSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnb3V0bGluZWQnICYmIHtcbiAgICBib3JkZXI6IGAxcHggc29saWQgJHsodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS5kaXZpZGVyfWBcbiAgfSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnZWxldmF0aW9uJyAmJiBfZXh0ZW5kcyh7XG4gICAgYm94U2hhZG93OiAodGhlbWUudmFycyB8fCB0aGVtZSkuc2hhZG93c1tvd25lclN0YXRlLmVsZXZhdGlvbl1cbiAgfSwgIXRoZW1lLnZhcnMgJiYgdGhlbWUucGFsZXR0ZS5tb2RlID09PSAnZGFyaycgJiYge1xuICAgIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCgke2FscGhhKCcjZmZmJywgZ2V0T3ZlcmxheUFscGhhKG93bmVyU3RhdGUuZWxldmF0aW9uKSl9LCAke2FscGhhKCcjZmZmJywgZ2V0T3ZlcmxheUFscGhhKG93bmVyU3RhdGUuZWxldmF0aW9uKSl9KWBcbiAgfSwgdGhlbWUudmFycyAmJiB7XG4gICAgYmFja2dyb3VuZEltYWdlOiAoX3RoZW1lJHZhcnMkb3ZlcmxheXMgPSB0aGVtZS52YXJzLm92ZXJsYXlzKSA9PSBudWxsID8gdm9pZCAwIDogX3RoZW1lJHZhcnMkb3ZlcmxheXNbb3duZXJTdGF0ZS5lbGV2YXRpb25dXG4gIH0pKTtcbn0pO1xuY29uc3QgUGFwZXIgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBQYXBlcihpblByb3BzLCByZWYpIHtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBwcm9wczogaW5Qcm9wcyxcbiAgICBuYW1lOiAnTXVpUGFwZXInXG4gIH0pO1xuXG4gIGNvbnN0IHtcbiAgICBjbGFzc05hbWUsXG4gICAgY29tcG9uZW50ID0gJ2RpdicsXG4gICAgZWxldmF0aW9uID0gMSxcbiAgICBzcXVhcmUgPSBmYWxzZSxcbiAgICB2YXJpYW50ID0gJ2VsZXZhdGlvbidcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBjb21wb25lbnQsXG4gICAgZWxldmF0aW9uLFxuICAgIHNxdWFyZSxcbiAgICB2YXJpYW50XG4gIH0pO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9ydWxlcy1vZi1ob29rc1xuICAgIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcblxuICAgIGlmICh0aGVtZS5zaGFkb3dzW2VsZXZhdGlvbl0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc29sZS5lcnJvcihbYE1VSTogVGhlIGVsZXZhdGlvbiBwcm92aWRlZCA8UGFwZXIgZWxldmF0aW9uPXske2VsZXZhdGlvbn19PiBpcyBub3QgYXZhaWxhYmxlIGluIHRoZSB0aGVtZS5gLCBgUGxlYXNlIG1ha2Ugc3VyZSB0aGF0IFxcYHRoZW1lLnNoYWRvd3NbJHtlbGV2YXRpb259XVxcYCBpcyBkZWZpbmVkLmBdLmpvaW4oJ1xcbicpKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goUGFwZXJSb290LCBfZXh0ZW5kcyh7XG4gICAgYXM6IGNvbXBvbmVudCxcbiAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSksXG4gICAgcmVmOiByZWZcbiAgfSwgb3RoZXIpKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gUGFwZXIucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgcm9vdCBub2RlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKi9cbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIFNoYWRvdyBkZXB0aCwgY29ycmVzcG9uZHMgdG8gYGRwYCBpbiB0aGUgc3BlYy5cbiAgICogSXQgYWNjZXB0cyB2YWx1ZXMgYmV0d2VlbiAwIGFuZCAyNCBpbmNsdXNpdmUuXG4gICAqIEBkZWZhdWx0IDFcbiAgICovXG4gIGVsZXZhdGlvbjogY2hhaW5Qcm9wVHlwZXMoaW50ZWdlclByb3BUeXBlLCBwcm9wcyA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgZWxldmF0aW9uLFxuICAgICAgdmFyaWFudFxuICAgIH0gPSBwcm9wcztcblxuICAgIGlmIChlbGV2YXRpb24gPiAwICYmIHZhcmlhbnQgPT09ICdvdXRsaW5lZCcpIHtcbiAgICAgIHJldHVybiBuZXcgRXJyb3IoYE1VSTogQ29tYmluaW5nIFxcYGVsZXZhdGlvbj17JHtlbGV2YXRpb259fVxcYCB3aXRoIFxcYHZhcmlhbnQ9XCIke3ZhcmlhbnR9XCJcXGAgaGFzIG5vIGVmZmVjdC4gRWl0aGVyIHVzZSBcXGBlbGV2YXRpb249ezB9XFxgIG9yIHVzZSBhIGRpZmZlcmVudCBcXGB2YXJpYW50XFxgLmApO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9KSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCByb3VuZGVkIGNvcm5lcnMgYXJlIGRpc2FibGVkLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgc3F1YXJlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pLFxuXG4gIC8qKlxuICAgKiBUaGUgdmFyaWFudCB0byB1c2UuXG4gICAqIEBkZWZhdWx0ICdlbGV2YXRpb24nXG4gICAqL1xuICB2YXJpYW50OiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWydlbGV2YXRpb24nLCAnb3V0bGluZWQnXSksIFByb3BUeXBlcy5zdHJpbmddKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IFBhcGVyOyIsIi8vIENvcnJlc3BvbmRzIHRvIDEwIGZyYW1lcyBhdCA2MCBIei5cbi8vIEEgZmV3IGJ5dGVzIHBheWxvYWQgb3ZlcmhlYWQgd2hlbiBsb2Rhc2gvZGVib3VuY2UgaXMgfjMga0IgYW5kIGRlYm91bmNlIH4zMDAgQi5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQgPSAxNjYpIHtcbiAgbGV0IHRpbWVvdXQ7XG5cbiAgZnVuY3Rpb24gZGVib3VuY2VkKC4uLmFyZ3MpIHtcbiAgICBjb25zdCBsYXRlciA9ICgpID0+IHtcbiAgICAgIGZ1bmMuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfTtcblxuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XG4gIH1cblxuICBkZWJvdW5jZWQuY2xlYXIgPSAoKSA9PiB7XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICB9O1xuXG4gIHJldHVybiBkZWJvdW5jZWQ7XG59IiwiaW1wb3J0IHsgdW5zdGFibGVfZGVib3VuY2UgYXMgZGVib3VuY2UgfSBmcm9tICdAbXVpL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IGRlYm91bmNlOyIsImltcG9ydCBvd25lckRvY3VtZW50IGZyb20gJy4vb3duZXJEb2N1bWVudCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvd25lcldpbmRvdyhub2RlKSB7XG4gIGNvbnN0IGRvYyA9IG93bmVyRG9jdW1lbnQobm9kZSk7XG4gIHJldHVybiBkb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xufSIsImltcG9ydCB7IHVuc3RhYmxlX293bmVyV2luZG93IGFzIG93bmVyV2luZG93IH0gZnJvbSAnQG11aS91dGlscyc7XG5leHBvcnQgZGVmYXVsdCBvd25lcldpbmRvdzsiLCJleHBvcnQgZGVmYXVsdCB7XG4gIGRpc2FibGVkOiBmYWxzZVxufTsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBjb25maWcgZnJvbSAnLi9jb25maWcnO1xuaW1wb3J0IHsgdGltZW91dHNTaGFwZSB9IGZyb20gJy4vdXRpbHMvUHJvcFR5cGVzJztcbmltcG9ydCBUcmFuc2l0aW9uR3JvdXBDb250ZXh0IGZyb20gJy4vVHJhbnNpdGlvbkdyb3VwQ29udGV4dCc7XG5leHBvcnQgdmFyIFVOTU9VTlRFRCA9ICd1bm1vdW50ZWQnO1xuZXhwb3J0IHZhciBFWElURUQgPSAnZXhpdGVkJztcbmV4cG9ydCB2YXIgRU5URVJJTkcgPSAnZW50ZXJpbmcnO1xuZXhwb3J0IHZhciBFTlRFUkVEID0gJ2VudGVyZWQnO1xuZXhwb3J0IHZhciBFWElUSU5HID0gJ2V4aXRpbmcnO1xuLyoqXG4gKiBUaGUgVHJhbnNpdGlvbiBjb21wb25lbnQgbGV0cyB5b3UgZGVzY3JpYmUgYSB0cmFuc2l0aW9uIGZyb20gb25lIGNvbXBvbmVudFxuICogc3RhdGUgdG8gYW5vdGhlciBfb3ZlciB0aW1lXyB3aXRoIGEgc2ltcGxlIGRlY2xhcmF0aXZlIEFQSS4gTW9zdCBjb21tb25seVxuICogaXQncyB1c2VkIHRvIGFuaW1hdGUgdGhlIG1vdW50aW5nIGFuZCB1bm1vdW50aW5nIG9mIGEgY29tcG9uZW50LCBidXQgY2FuIGFsc29cbiAqIGJlIHVzZWQgdG8gZGVzY3JpYmUgaW4tcGxhY2UgdHJhbnNpdGlvbiBzdGF0ZXMgYXMgd2VsbC5cbiAqXG4gKiAtLS1cbiAqXG4gKiAqKk5vdGUqKjogYFRyYW5zaXRpb25gIGlzIGEgcGxhdGZvcm0tYWdub3N0aWMgYmFzZSBjb21wb25lbnQuIElmIHlvdSdyZSB1c2luZ1xuICogdHJhbnNpdGlvbnMgaW4gQ1NTLCB5b3UnbGwgcHJvYmFibHkgd2FudCB0byB1c2VcbiAqIFtgQ1NTVHJhbnNpdGlvbmBdKGh0dHBzOi8vcmVhY3Rjb21tdW5pdHkub3JnL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvY3NzLXRyYW5zaXRpb24pXG4gKiBpbnN0ZWFkLiBJdCBpbmhlcml0cyBhbGwgdGhlIGZlYXR1cmVzIG9mIGBUcmFuc2l0aW9uYCwgYnV0IGNvbnRhaW5zXG4gKiBhZGRpdGlvbmFsIGZlYXR1cmVzIG5lY2Vzc2FyeSB0byBwbGF5IG5pY2Ugd2l0aCBDU1MgdHJhbnNpdGlvbnMgKGhlbmNlIHRoZVxuICogbmFtZSBvZiB0aGUgY29tcG9uZW50KS5cbiAqXG4gKiAtLS1cbiAqXG4gKiBCeSBkZWZhdWx0IHRoZSBgVHJhbnNpdGlvbmAgY29tcG9uZW50IGRvZXMgbm90IGFsdGVyIHRoZSBiZWhhdmlvciBvZiB0aGVcbiAqIGNvbXBvbmVudCBpdCByZW5kZXJzLCBpdCBvbmx5IHRyYWNrcyBcImVudGVyXCIgYW5kIFwiZXhpdFwiIHN0YXRlcyBmb3IgdGhlXG4gKiBjb21wb25lbnRzLiBJdCdzIHVwIHRvIHlvdSB0byBnaXZlIG1lYW5pbmcgYW5kIGVmZmVjdCB0byB0aG9zZSBzdGF0ZXMuIEZvclxuICogZXhhbXBsZSB3ZSBjYW4gYWRkIHN0eWxlcyB0byBhIGNvbXBvbmVudCB3aGVuIGl0IGVudGVycyBvciBleGl0czpcbiAqXG4gKiBgYGBqc3hcbiAqIGltcG9ydCB7IFRyYW5zaXRpb24gfSBmcm9tICdyZWFjdC10cmFuc2l0aW9uLWdyb3VwJztcbiAqXG4gKiBjb25zdCBkdXJhdGlvbiA9IDMwMDtcbiAqXG4gKiBjb25zdCBkZWZhdWx0U3R5bGUgPSB7XG4gKiAgIHRyYW5zaXRpb246IGBvcGFjaXR5ICR7ZHVyYXRpb259bXMgZWFzZS1pbi1vdXRgLFxuICogICBvcGFjaXR5OiAwLFxuICogfVxuICpcbiAqIGNvbnN0IHRyYW5zaXRpb25TdHlsZXMgPSB7XG4gKiAgIGVudGVyaW5nOiB7IG9wYWNpdHk6IDEgfSxcbiAqICAgZW50ZXJlZDogIHsgb3BhY2l0eTogMSB9LFxuICogICBleGl0aW5nOiAgeyBvcGFjaXR5OiAwIH0sXG4gKiAgIGV4aXRlZDogIHsgb3BhY2l0eTogMCB9LFxuICogfTtcbiAqXG4gKiBjb25zdCBGYWRlID0gKHsgaW46IGluUHJvcCB9KSA9PiAoXG4gKiAgIDxUcmFuc2l0aW9uIGluPXtpblByb3B9IHRpbWVvdXQ9e2R1cmF0aW9ufT5cbiAqICAgICB7c3RhdGUgPT4gKFxuICogICAgICAgPGRpdiBzdHlsZT17e1xuICogICAgICAgICAuLi5kZWZhdWx0U3R5bGUsXG4gKiAgICAgICAgIC4uLnRyYW5zaXRpb25TdHlsZXNbc3RhdGVdXG4gKiAgICAgICB9fT5cbiAqICAgICAgICAgSSdtIGEgZmFkZSBUcmFuc2l0aW9uIVxuICogICAgICAgPC9kaXY+XG4gKiAgICAgKX1cbiAqICAgPC9UcmFuc2l0aW9uPlxuICogKTtcbiAqIGBgYFxuICpcbiAqIFRoZXJlIGFyZSA0IG1haW4gc3RhdGVzIGEgVHJhbnNpdGlvbiBjYW4gYmUgaW46XG4gKiAgLSBgJ2VudGVyaW5nJ2BcbiAqICAtIGAnZW50ZXJlZCdgXG4gKiAgLSBgJ2V4aXRpbmcnYFxuICogIC0gYCdleGl0ZWQnYFxuICpcbiAqIFRyYW5zaXRpb24gc3RhdGUgaXMgdG9nZ2xlZCB2aWEgdGhlIGBpbmAgcHJvcC4gV2hlbiBgdHJ1ZWAgdGhlIGNvbXBvbmVudFxuICogYmVnaW5zIHRoZSBcIkVudGVyXCIgc3RhZ2UuIER1cmluZyB0aGlzIHN0YWdlLCB0aGUgY29tcG9uZW50IHdpbGwgc2hpZnQgZnJvbVxuICogaXRzIGN1cnJlbnQgdHJhbnNpdGlvbiBzdGF0ZSwgdG8gYCdlbnRlcmluZydgIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlXG4gKiB0cmFuc2l0aW9uIGFuZCB0aGVuIHRvIHRoZSBgJ2VudGVyZWQnYCBzdGFnZSBvbmNlIGl0J3MgY29tcGxldGUuIExldCdzIHRha2VcbiAqIHRoZSBmb2xsb3dpbmcgZXhhbXBsZSAod2UnbGwgdXNlIHRoZVxuICogW3VzZVN0YXRlXShodHRwczovL3JlYWN0anMub3JnL2RvY3MvaG9va3MtcmVmZXJlbmNlLmh0bWwjdXNlc3RhdGUpIGhvb2spOlxuICpcbiAqIGBgYGpzeFxuICogZnVuY3Rpb24gQXBwKCkge1xuICogICBjb25zdCBbaW5Qcm9wLCBzZXRJblByb3BdID0gdXNlU3RhdGUoZmFsc2UpO1xuICogICByZXR1cm4gKFxuICogICAgIDxkaXY+XG4gKiAgICAgICA8VHJhbnNpdGlvbiBpbj17aW5Qcm9wfSB0aW1lb3V0PXs1MDB9PlxuICogICAgICAgICB7c3RhdGUgPT4gKFxuICogICAgICAgICAgIC8vIC4uLlxuICogICAgICAgICApfVxuICogICAgICAgPC9UcmFuc2l0aW9uPlxuICogICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRJblByb3AodHJ1ZSl9PlxuICogICAgICAgICBDbGljayB0byBFbnRlclxuICogICAgICAgPC9idXR0b24+XG4gKiAgICAgPC9kaXY+XG4gKiAgICk7XG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBXaGVuIHRoZSBidXR0b24gaXMgY2xpY2tlZCB0aGUgY29tcG9uZW50IHdpbGwgc2hpZnQgdG8gdGhlIGAnZW50ZXJpbmcnYCBzdGF0ZVxuICogYW5kIHN0YXkgdGhlcmUgZm9yIDUwMG1zICh0aGUgdmFsdWUgb2YgYHRpbWVvdXRgKSBiZWZvcmUgaXQgZmluYWxseSBzd2l0Y2hlc1xuICogdG8gYCdlbnRlcmVkJ2AuXG4gKlxuICogV2hlbiBgaW5gIGlzIGBmYWxzZWAgdGhlIHNhbWUgdGhpbmcgaGFwcGVucyBleGNlcHQgdGhlIHN0YXRlIG1vdmVzIGZyb21cbiAqIGAnZXhpdGluZydgIHRvIGAnZXhpdGVkJ2AuXG4gKi9cblxudmFyIFRyYW5zaXRpb24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoVHJhbnNpdGlvbiwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVHJhbnNpdGlvbihwcm9wcywgY29udGV4dCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzLCBjb250ZXh0KSB8fCB0aGlzO1xuICAgIHZhciBwYXJlbnRHcm91cCA9IGNvbnRleHQ7IC8vIEluIHRoZSBjb250ZXh0IG9mIGEgVHJhbnNpdGlvbkdyb3VwIGFsbCBlbnRlcnMgYXJlIHJlYWxseSBhcHBlYXJzXG5cbiAgICB2YXIgYXBwZWFyID0gcGFyZW50R3JvdXAgJiYgIXBhcmVudEdyb3VwLmlzTW91bnRpbmcgPyBwcm9wcy5lbnRlciA6IHByb3BzLmFwcGVhcjtcbiAgICB2YXIgaW5pdGlhbFN0YXR1cztcbiAgICBfdGhpcy5hcHBlYXJTdGF0dXMgPSBudWxsO1xuXG4gICAgaWYgKHByb3BzLmluKSB7XG4gICAgICBpZiAoYXBwZWFyKSB7XG4gICAgICAgIGluaXRpYWxTdGF0dXMgPSBFWElURUQ7XG4gICAgICAgIF90aGlzLmFwcGVhclN0YXR1cyA9IEVOVEVSSU5HO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW5pdGlhbFN0YXR1cyA9IEVOVEVSRUQ7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcm9wcy51bm1vdW50T25FeGl0IHx8IHByb3BzLm1vdW50T25FbnRlcikge1xuICAgICAgICBpbml0aWFsU3RhdHVzID0gVU5NT1VOVEVEO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW5pdGlhbFN0YXR1cyA9IEVYSVRFRDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHN0YXR1czogaW5pdGlhbFN0YXR1c1xuICAgIH07XG4gICAgX3RoaXMubmV4dENhbGxiYWNrID0gbnVsbDtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBUcmFuc2l0aW9uLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyA9IGZ1bmN0aW9uIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhfcmVmLCBwcmV2U3RhdGUpIHtcbiAgICB2YXIgbmV4dEluID0gX3JlZi5pbjtcblxuICAgIGlmIChuZXh0SW4gJiYgcHJldlN0YXRlLnN0YXR1cyA9PT0gVU5NT1VOVEVEKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6IEVYSVRFRFxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfSAvLyBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgLy8gICBsZXQgbmV4dFN0YXR1cyA9IG51bGxcbiAgLy8gICBpZiAocHJldlByb3BzICE9PSB0aGlzLnByb3BzKSB7XG4gIC8vICAgICBjb25zdCB7IHN0YXR1cyB9ID0gdGhpcy5zdGF0ZVxuICAvLyAgICAgaWYgKHRoaXMucHJvcHMuaW4pIHtcbiAgLy8gICAgICAgaWYgKHN0YXR1cyAhPT0gRU5URVJJTkcgJiYgc3RhdHVzICE9PSBFTlRFUkVEKSB7XG4gIC8vICAgICAgICAgbmV4dFN0YXR1cyA9IEVOVEVSSU5HXG4gIC8vICAgICAgIH1cbiAgLy8gICAgIH0gZWxzZSB7XG4gIC8vICAgICAgIGlmIChzdGF0dXMgPT09IEVOVEVSSU5HIHx8IHN0YXR1cyA9PT0gRU5URVJFRCkge1xuICAvLyAgICAgICAgIG5leHRTdGF0dXMgPSBFWElUSU5HXG4gIC8vICAgICAgIH1cbiAgLy8gICAgIH1cbiAgLy8gICB9XG4gIC8vICAgcmV0dXJuIHsgbmV4dFN0YXR1cyB9XG4gIC8vIH1cbiAgO1xuXG4gIHZhciBfcHJvdG8gPSBUcmFuc2l0aW9uLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLnVwZGF0ZVN0YXR1cyh0cnVlLCB0aGlzLmFwcGVhclN0YXR1cyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICB2YXIgbmV4dFN0YXR1cyA9IG51bGw7XG5cbiAgICBpZiAocHJldlByb3BzICE9PSB0aGlzLnByb3BzKSB7XG4gICAgICB2YXIgc3RhdHVzID0gdGhpcy5zdGF0ZS5zdGF0dXM7XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLmluKSB7XG4gICAgICAgIGlmIChzdGF0dXMgIT09IEVOVEVSSU5HICYmIHN0YXR1cyAhPT0gRU5URVJFRCkge1xuICAgICAgICAgIG5leHRTdGF0dXMgPSBFTlRFUklORztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gRU5URVJJTkcgfHwgc3RhdHVzID09PSBFTlRFUkVEKSB7XG4gICAgICAgICAgbmV4dFN0YXR1cyA9IEVYSVRJTkc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZVN0YXR1cyhmYWxzZSwgbmV4dFN0YXR1cyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5jYW5jZWxOZXh0Q2FsbGJhY2soKTtcbiAgfTtcblxuICBfcHJvdG8uZ2V0VGltZW91dHMgPSBmdW5jdGlvbiBnZXRUaW1lb3V0cygpIHtcbiAgICB2YXIgdGltZW91dCA9IHRoaXMucHJvcHMudGltZW91dDtcbiAgICB2YXIgZXhpdCwgZW50ZXIsIGFwcGVhcjtcbiAgICBleGl0ID0gZW50ZXIgPSBhcHBlYXIgPSB0aW1lb3V0O1xuXG4gICAgaWYgKHRpbWVvdXQgIT0gbnVsbCAmJiB0eXBlb2YgdGltZW91dCAhPT0gJ251bWJlcicpIHtcbiAgICAgIGV4aXQgPSB0aW1lb3V0LmV4aXQ7XG4gICAgICBlbnRlciA9IHRpbWVvdXQuZW50ZXI7IC8vIFRPRE86IHJlbW92ZSBmYWxsYmFjayBmb3IgbmV4dCBtYWpvclxuXG4gICAgICBhcHBlYXIgPSB0aW1lb3V0LmFwcGVhciAhPT0gdW5kZWZpbmVkID8gdGltZW91dC5hcHBlYXIgOiBlbnRlcjtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZXhpdDogZXhpdCxcbiAgICAgIGVudGVyOiBlbnRlcixcbiAgICAgIGFwcGVhcjogYXBwZWFyXG4gICAgfTtcbiAgfTtcblxuICBfcHJvdG8udXBkYXRlU3RhdHVzID0gZnVuY3Rpb24gdXBkYXRlU3RhdHVzKG1vdW50aW5nLCBuZXh0U3RhdHVzKSB7XG4gICAgaWYgKG1vdW50aW5nID09PSB2b2lkIDApIHtcbiAgICAgIG1vdW50aW5nID0gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKG5leHRTdGF0dXMgIT09IG51bGwpIHtcbiAgICAgIC8vIG5leHRTdGF0dXMgd2lsbCBhbHdheXMgYmUgRU5URVJJTkcgb3IgRVhJVElORy5cbiAgICAgIHRoaXMuY2FuY2VsTmV4dENhbGxiYWNrKCk7XG5cbiAgICAgIGlmIChuZXh0U3RhdHVzID09PSBFTlRFUklORykge1xuICAgICAgICB0aGlzLnBlcmZvcm1FbnRlcihtb3VudGluZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnBlcmZvcm1FeGl0KCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLnVubW91bnRPbkV4aXQgJiYgdGhpcy5zdGF0ZS5zdGF0dXMgPT09IEVYSVRFRCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHN0YXR1czogVU5NT1VOVEVEXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnBlcmZvcm1FbnRlciA9IGZ1bmN0aW9uIHBlcmZvcm1FbnRlcihtb3VudGluZykge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIGVudGVyID0gdGhpcy5wcm9wcy5lbnRlcjtcbiAgICB2YXIgYXBwZWFyaW5nID0gdGhpcy5jb250ZXh0ID8gdGhpcy5jb250ZXh0LmlzTW91bnRpbmcgOiBtb3VudGluZztcblxuICAgIHZhciBfcmVmMiA9IHRoaXMucHJvcHMubm9kZVJlZiA/IFthcHBlYXJpbmddIDogW1JlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMpLCBhcHBlYXJpbmddLFxuICAgICAgICBtYXliZU5vZGUgPSBfcmVmMlswXSxcbiAgICAgICAgbWF5YmVBcHBlYXJpbmcgPSBfcmVmMlsxXTtcblxuICAgIHZhciB0aW1lb3V0cyA9IHRoaXMuZ2V0VGltZW91dHMoKTtcbiAgICB2YXIgZW50ZXJUaW1lb3V0ID0gYXBwZWFyaW5nID8gdGltZW91dHMuYXBwZWFyIDogdGltZW91dHMuZW50ZXI7IC8vIG5vIGVudGVyIGFuaW1hdGlvbiBza2lwIHJpZ2h0IHRvIEVOVEVSRURcbiAgICAvLyBpZiB3ZSBhcmUgbW91bnRpbmcgYW5kIHJ1bm5pbmcgdGhpcyBpdCBtZWFucyBhcHBlYXIgX211c3RfIGJlIHNldFxuXG4gICAgaWYgKCFtb3VudGluZyAmJiAhZW50ZXIgfHwgY29uZmlnLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLnNhZmVTZXRTdGF0ZSh7XG4gICAgICAgIHN0YXR1czogRU5URVJFRFxuICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczIucHJvcHMub25FbnRlcmVkKG1heWJlTm9kZSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnByb3BzLm9uRW50ZXIobWF5YmVOb2RlLCBtYXliZUFwcGVhcmluZyk7XG4gICAgdGhpcy5zYWZlU2V0U3RhdGUoe1xuICAgICAgc3RhdHVzOiBFTlRFUklOR1xuICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMi5wcm9wcy5vbkVudGVyaW5nKG1heWJlTm9kZSwgbWF5YmVBcHBlYXJpbmcpO1xuXG4gICAgICBfdGhpczIub25UcmFuc2l0aW9uRW5kKGVudGVyVGltZW91dCwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczIuc2FmZVNldFN0YXRlKHtcbiAgICAgICAgICBzdGF0dXM6IEVOVEVSRURcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzMi5wcm9wcy5vbkVudGVyZWQobWF5YmVOb2RlLCBtYXliZUFwcGVhcmluZyk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLnBlcmZvcm1FeGl0ID0gZnVuY3Rpb24gcGVyZm9ybUV4aXQoKSB7XG4gICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICB2YXIgZXhpdCA9IHRoaXMucHJvcHMuZXhpdDtcbiAgICB2YXIgdGltZW91dHMgPSB0aGlzLmdldFRpbWVvdXRzKCk7XG4gICAgdmFyIG1heWJlTm9kZSA9IHRoaXMucHJvcHMubm9kZVJlZiA/IHVuZGVmaW5lZCA6IFJlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMpOyAvLyBubyBleGl0IGFuaW1hdGlvbiBza2lwIHJpZ2h0IHRvIEVYSVRFRFxuXG4gICAgaWYgKCFleGl0IHx8IGNvbmZpZy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5zYWZlU2V0U3RhdGUoe1xuICAgICAgICBzdGF0dXM6IEVYSVRFRFxuICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczMucHJvcHMub25FeGl0ZWQobWF5YmVOb2RlKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucHJvcHMub25FeGl0KG1heWJlTm9kZSk7XG4gICAgdGhpcy5zYWZlU2V0U3RhdGUoe1xuICAgICAgc3RhdHVzOiBFWElUSU5HXG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMzLnByb3BzLm9uRXhpdGluZyhtYXliZU5vZGUpO1xuXG4gICAgICBfdGhpczMub25UcmFuc2l0aW9uRW5kKHRpbWVvdXRzLmV4aXQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMzLnNhZmVTZXRTdGF0ZSh7XG4gICAgICAgICAgc3RhdHVzOiBFWElURURcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzMy5wcm9wcy5vbkV4aXRlZChtYXliZU5vZGUpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIF9wcm90by5jYW5jZWxOZXh0Q2FsbGJhY2sgPSBmdW5jdGlvbiBjYW5jZWxOZXh0Q2FsbGJhY2soKSB7XG4gICAgaWYgKHRoaXMubmV4dENhbGxiYWNrICE9PSBudWxsKSB7XG4gICAgICB0aGlzLm5leHRDYWxsYmFjay5jYW5jZWwoKTtcbiAgICAgIHRoaXMubmV4dENhbGxiYWNrID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnNhZmVTZXRTdGF0ZSA9IGZ1bmN0aW9uIHNhZmVTZXRTdGF0ZShuZXh0U3RhdGUsIGNhbGxiYWNrKSB7XG4gICAgLy8gVGhpcyBzaG91bGRuJ3QgYmUgbmVjZXNzYXJ5LCBidXQgdGhlcmUgYXJlIHdlaXJkIHJhY2UgY29uZGl0aW9ucyB3aXRoXG4gICAgLy8gc2V0U3RhdGUgY2FsbGJhY2tzIGFuZCB1bm1vdW50aW5nIGluIHRlc3RpbmcsIHNvIGFsd2F5cyBtYWtlIHN1cmUgdGhhdFxuICAgIC8vIHdlIGNhbiBjYW5jZWwgYW55IHBlbmRpbmcgc2V0U3RhdGUgY2FsbGJhY2tzIGFmdGVyIHdlIHVubW91bnQuXG4gICAgY2FsbGJhY2sgPSB0aGlzLnNldE5leHRDYWxsYmFjayhjYWxsYmFjayk7XG4gICAgdGhpcy5zZXRTdGF0ZShuZXh0U3RhdGUsIGNhbGxiYWNrKTtcbiAgfTtcblxuICBfcHJvdG8uc2V0TmV4dENhbGxiYWNrID0gZnVuY3Rpb24gc2V0TmV4dENhbGxiYWNrKGNhbGxiYWNrKSB7XG4gICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICB2YXIgYWN0aXZlID0gdHJ1ZTtcblxuICAgIHRoaXMubmV4dENhbGxiYWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoYWN0aXZlKSB7XG4gICAgICAgIGFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICBfdGhpczQubmV4dENhbGxiYWNrID0gbnVsbDtcbiAgICAgICAgY2FsbGJhY2soZXZlbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLm5leHRDYWxsYmFjay5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBhY3RpdmUgPSBmYWxzZTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHRoaXMubmV4dENhbGxiYWNrO1xuICB9O1xuXG4gIF9wcm90by5vblRyYW5zaXRpb25FbmQgPSBmdW5jdGlvbiBvblRyYW5zaXRpb25FbmQodGltZW91dCwgaGFuZGxlcikge1xuICAgIHRoaXMuc2V0TmV4dENhbGxiYWNrKGhhbmRsZXIpO1xuICAgIHZhciBub2RlID0gdGhpcy5wcm9wcy5ub2RlUmVmID8gdGhpcy5wcm9wcy5ub2RlUmVmLmN1cnJlbnQgOiBSZWFjdERPTS5maW5kRE9NTm9kZSh0aGlzKTtcbiAgICB2YXIgZG9lc05vdEhhdmVUaW1lb3V0T3JMaXN0ZW5lciA9IHRpbWVvdXQgPT0gbnVsbCAmJiAhdGhpcy5wcm9wcy5hZGRFbmRMaXN0ZW5lcjtcblxuICAgIGlmICghbm9kZSB8fCBkb2VzTm90SGF2ZVRpbWVvdXRPckxpc3RlbmVyKSB7XG4gICAgICBzZXRUaW1lb3V0KHRoaXMubmV4dENhbGxiYWNrLCAwKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy5hZGRFbmRMaXN0ZW5lcikge1xuICAgICAgdmFyIF9yZWYzID0gdGhpcy5wcm9wcy5ub2RlUmVmID8gW3RoaXMubmV4dENhbGxiYWNrXSA6IFtub2RlLCB0aGlzLm5leHRDYWxsYmFja10sXG4gICAgICAgICAgbWF5YmVOb2RlID0gX3JlZjNbMF0sXG4gICAgICAgICAgbWF5YmVOZXh0Q2FsbGJhY2sgPSBfcmVmM1sxXTtcblxuICAgICAgdGhpcy5wcm9wcy5hZGRFbmRMaXN0ZW5lcihtYXliZU5vZGUsIG1heWJlTmV4dENhbGxiYWNrKTtcbiAgICB9XG5cbiAgICBpZiAodGltZW91dCAhPSBudWxsKSB7XG4gICAgICBzZXRUaW1lb3V0KHRoaXMubmV4dENhbGxiYWNrLCB0aW1lb3V0KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgc3RhdHVzID0gdGhpcy5zdGF0ZS5zdGF0dXM7XG5cbiAgICBpZiAoc3RhdHVzID09PSBVTk1PVU5URUQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIF9pbiA9IF90aGlzJHByb3BzLmluLFxuICAgICAgICBfbW91bnRPbkVudGVyID0gX3RoaXMkcHJvcHMubW91bnRPbkVudGVyLFxuICAgICAgICBfdW5tb3VudE9uRXhpdCA9IF90aGlzJHByb3BzLnVubW91bnRPbkV4aXQsXG4gICAgICAgIF9hcHBlYXIgPSBfdGhpcyRwcm9wcy5hcHBlYXIsXG4gICAgICAgIF9lbnRlciA9IF90aGlzJHByb3BzLmVudGVyLFxuICAgICAgICBfZXhpdCA9IF90aGlzJHByb3BzLmV4aXQsXG4gICAgICAgIF90aW1lb3V0ID0gX3RoaXMkcHJvcHMudGltZW91dCxcbiAgICAgICAgX2FkZEVuZExpc3RlbmVyID0gX3RoaXMkcHJvcHMuYWRkRW5kTGlzdGVuZXIsXG4gICAgICAgIF9vbkVudGVyID0gX3RoaXMkcHJvcHMub25FbnRlcixcbiAgICAgICAgX29uRW50ZXJpbmcgPSBfdGhpcyRwcm9wcy5vbkVudGVyaW5nLFxuICAgICAgICBfb25FbnRlcmVkID0gX3RoaXMkcHJvcHMub25FbnRlcmVkLFxuICAgICAgICBfb25FeGl0ID0gX3RoaXMkcHJvcHMub25FeGl0LFxuICAgICAgICBfb25FeGl0aW5nID0gX3RoaXMkcHJvcHMub25FeGl0aW5nLFxuICAgICAgICBfb25FeGl0ZWQgPSBfdGhpcyRwcm9wcy5vbkV4aXRlZCxcbiAgICAgICAgX25vZGVSZWYgPSBfdGhpcyRwcm9wcy5ub2RlUmVmLFxuICAgICAgICBjaGlsZFByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcImNoaWxkcmVuXCIsIFwiaW5cIiwgXCJtb3VudE9uRW50ZXJcIiwgXCJ1bm1vdW50T25FeGl0XCIsIFwiYXBwZWFyXCIsIFwiZW50ZXJcIiwgXCJleGl0XCIsIFwidGltZW91dFwiLCBcImFkZEVuZExpc3RlbmVyXCIsIFwib25FbnRlclwiLCBcIm9uRW50ZXJpbmdcIiwgXCJvbkVudGVyZWRcIiwgXCJvbkV4aXRcIiwgXCJvbkV4aXRpbmdcIiwgXCJvbkV4aXRlZFwiLCBcIm5vZGVSZWZcIl0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIC8qI19fUFVSRV9fKi9cbiAgICAgIC8vIGFsbG93cyBmb3IgbmVzdGVkIFRyYW5zaXRpb25zXG4gICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRyYW5zaXRpb25Hcm91cENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IG51bGxcbiAgICAgIH0sIHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHN0YXR1cywgY2hpbGRQcm9wcykgOiBSZWFjdC5jbG9uZUVsZW1lbnQoUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbiksIGNoaWxkUHJvcHMpKVxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIFRyYW5zaXRpb247XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblRyYW5zaXRpb24uY29udGV4dFR5cGUgPSBUcmFuc2l0aW9uR3JvdXBDb250ZXh0O1xuVHJhbnNpdGlvbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB7XG4gIC8qKlxuICAgKiBBIFJlYWN0IHJlZmVyZW5jZSB0byBET00gZWxlbWVudCB0aGF0IG5lZWQgdG8gdHJhbnNpdGlvbjpcbiAgICogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzUxMTI3MTMwLzQ2NzE5MzJcbiAgICpcbiAgICogICAtIFdoZW4gYG5vZGVSZWZgIHByb3AgaXMgdXNlZCwgYG5vZGVgIGlzIG5vdCBwYXNzZWQgdG8gY2FsbGJhY2sgZnVuY3Rpb25zXG4gICAqICAgICAgKGUuZy4gYG9uRW50ZXJgKSBiZWNhdXNlIHVzZXIgYWxyZWFkeSBoYXMgZGlyZWN0IGFjY2VzcyB0byB0aGUgbm9kZS5cbiAgICogICAtIFdoZW4gY2hhbmdpbmcgYGtleWAgcHJvcCBvZiBgVHJhbnNpdGlvbmAgaW4gYSBgVHJhbnNpdGlvbkdyb3VwYCBhIG5ld1xuICAgKiAgICAgYG5vZGVSZWZgIG5lZWQgdG8gYmUgcHJvdmlkZWQgdG8gYFRyYW5zaXRpb25gIHdpdGggY2hhbmdlZCBga2V5YCBwcm9wXG4gICAqICAgICAoc2VlXG4gICAqICAgICBbdGVzdC9DU1NUcmFuc2l0aW9uLXRlc3QuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvYmxvYi8xMzQzNWY4OTdiM2FiNzFmNmUxOWQ3MjRmMTQ1NTk2ZjU5MTA1ODFjL3Rlc3QvQ1NTVHJhbnNpdGlvbi10ZXN0LmpzI0wzNjItTDQzNykpLlxuICAgKi9cbiAgbm9kZVJlZjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBjdXJyZW50OiB0eXBlb2YgRWxlbWVudCA9PT0gJ3VuZGVmaW5lZCcgPyBQcm9wVHlwZXMuYW55IDogZnVuY3Rpb24gKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHByb3BWYWx1ZVtrZXldO1xuICAgICAgcmV0dXJuIFByb3BUeXBlcy5pbnN0YW5jZU9mKHZhbHVlICYmICdvd25lckRvY3VtZW50JyBpbiB2YWx1ZSA/IHZhbHVlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcuRWxlbWVudCA6IEVsZW1lbnQpKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpO1xuICAgIH1cbiAgfSksXG5cbiAgLyoqXG4gICAqIEEgYGZ1bmN0aW9uYCBjaGlsZCBjYW4gYmUgdXNlZCBpbnN0ZWFkIG9mIGEgUmVhY3QgZWxlbWVudC4gVGhpcyBmdW5jdGlvbiBpc1xuICAgKiBjYWxsZWQgd2l0aCB0aGUgY3VycmVudCB0cmFuc2l0aW9uIHN0YXR1cyAoYCdlbnRlcmluZydgLCBgJ2VudGVyZWQnYCxcbiAgICogYCdleGl0aW5nJ2AsIGAnZXhpdGVkJ2ApLCB3aGljaCBjYW4gYmUgdXNlZCB0byBhcHBseSBjb250ZXh0XG4gICAqIHNwZWNpZmljIHByb3BzIHRvIGEgY29tcG9uZW50LlxuICAgKlxuICAgKiBgYGBqc3hcbiAgICogPFRyYW5zaXRpb24gaW49e3RoaXMuc3RhdGUuaW59IHRpbWVvdXQ9ezE1MH0+XG4gICAqICAge3N0YXRlID0+IChcbiAgICogICAgIDxNeUNvbXBvbmVudCBjbGFzc05hbWU9e2BmYWRlIGZhZGUtJHtzdGF0ZX1gfSAvPlxuICAgKiAgICl9XG4gICAqIDwvVHJhbnNpdGlvbj5cbiAgICogYGBgXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCwgUHJvcFR5cGVzLmVsZW1lbnQuaXNSZXF1aXJlZF0pLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIFNob3cgdGhlIGNvbXBvbmVudDsgdHJpZ2dlcnMgdGhlIGVudGVyIG9yIGV4aXQgc3RhdGVzXG4gICAqL1xuICBpbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEJ5IGRlZmF1bHQgdGhlIGNoaWxkIGNvbXBvbmVudCBpcyBtb3VudGVkIGltbWVkaWF0ZWx5IGFsb25nIHdpdGhcbiAgICogdGhlIHBhcmVudCBgVHJhbnNpdGlvbmAgY29tcG9uZW50LiBJZiB5b3Ugd2FudCB0byBcImxhenkgbW91bnRcIiB0aGUgY29tcG9uZW50IG9uIHRoZVxuICAgKiBmaXJzdCBgaW49e3RydWV9YCB5b3UgY2FuIHNldCBgbW91bnRPbkVudGVyYC4gQWZ0ZXIgdGhlIGZpcnN0IGVudGVyIHRyYW5zaXRpb24gdGhlIGNvbXBvbmVudCB3aWxsIHN0YXlcbiAgICogbW91bnRlZCwgZXZlbiBvbiBcImV4aXRlZFwiLCB1bmxlc3MgeW91IGFsc28gc3BlY2lmeSBgdW5tb3VudE9uRXhpdGAuXG4gICAqL1xuICBtb3VudE9uRW50ZXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBCeSBkZWZhdWx0IHRoZSBjaGlsZCBjb21wb25lbnQgc3RheXMgbW91bnRlZCBhZnRlciBpdCByZWFjaGVzIHRoZSBgJ2V4aXRlZCdgIHN0YXRlLlxuICAgKiBTZXQgYHVubW91bnRPbkV4aXRgIGlmIHlvdSdkIHByZWZlciB0byB1bm1vdW50IHRoZSBjb21wb25lbnQgYWZ0ZXIgaXQgZmluaXNoZXMgZXhpdGluZy5cbiAgICovXG4gIHVubW91bnRPbkV4aXQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBCeSBkZWZhdWx0IHRoZSBjaGlsZCBjb21wb25lbnQgZG9lcyBub3QgcGVyZm9ybSB0aGUgZW50ZXIgdHJhbnNpdGlvbiB3aGVuXG4gICAqIGl0IGZpcnN0IG1vdW50cywgcmVnYXJkbGVzcyBvZiB0aGUgdmFsdWUgb2YgYGluYC4gSWYgeW91IHdhbnQgdGhpc1xuICAgKiBiZWhhdmlvciwgc2V0IGJvdGggYGFwcGVhcmAgYW5kIGBpbmAgdG8gYHRydWVgLlxuICAgKlxuICAgKiA+ICoqTm90ZSoqOiB0aGVyZSBhcmUgbm8gc3BlY2lhbCBhcHBlYXIgc3RhdGVzIGxpa2UgYGFwcGVhcmluZ2AvYGFwcGVhcmVkYCwgdGhpcyBwcm9wXG4gICAqID4gb25seSBhZGRzIGFuIGFkZGl0aW9uYWwgZW50ZXIgdHJhbnNpdGlvbi4gSG93ZXZlciwgaW4gdGhlXG4gICAqID4gYDxDU1NUcmFuc2l0aW9uPmAgY29tcG9uZW50IHRoYXQgZmlyc3QgZW50ZXIgdHJhbnNpdGlvbiBkb2VzIHJlc3VsdCBpblxuICAgKiA+IGFkZGl0aW9uYWwgYC5hcHBlYXItKmAgY2xhc3NlcywgdGhhdCB3YXkgeW91IGNhbiBjaG9vc2UgdG8gc3R5bGUgaXRcbiAgICogPiBkaWZmZXJlbnRseS5cbiAgICovXG4gIGFwcGVhcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEVuYWJsZSBvciBkaXNhYmxlIGVudGVyIHRyYW5zaXRpb25zLlxuICAgKi9cbiAgZW50ZXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBFbmFibGUgb3IgZGlzYWJsZSBleGl0IHRyYW5zaXRpb25zLlxuICAgKi9cbiAgZXhpdDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBkdXJhdGlvbiBvZiB0aGUgdHJhbnNpdGlvbiwgaW4gbWlsbGlzZWNvbmRzLlxuICAgKiBSZXF1aXJlZCB1bmxlc3MgYGFkZEVuZExpc3RlbmVyYCBpcyBwcm92aWRlZC5cbiAgICpcbiAgICogWW91IG1heSBzcGVjaWZ5IGEgc2luZ2xlIHRpbWVvdXQgZm9yIGFsbCB0cmFuc2l0aW9uczpcbiAgICpcbiAgICogYGBganN4XG4gICAqIHRpbWVvdXQ9ezUwMH1cbiAgICogYGBgXG4gICAqXG4gICAqIG9yIGluZGl2aWR1YWxseTpcbiAgICpcbiAgICogYGBganN4XG4gICAqIHRpbWVvdXQ9e3tcbiAgICogIGFwcGVhcjogNTAwLFxuICAgKiAgZW50ZXI6IDMwMCxcbiAgICogIGV4aXQ6IDUwMCxcbiAgICogfX1cbiAgICogYGBgXG4gICAqXG4gICAqIC0gYGFwcGVhcmAgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIG9mIGBlbnRlcmBcbiAgICogLSBgZW50ZXJgIGRlZmF1bHRzIHRvIGAwYFxuICAgKiAtIGBleGl0YCBkZWZhdWx0cyB0byBgMGBcbiAgICpcbiAgICogQHR5cGUge251bWJlciB8IHsgZW50ZXI/OiBudW1iZXIsIGV4aXQ/OiBudW1iZXIsIGFwcGVhcj86IG51bWJlciB9fVxuICAgKi9cbiAgdGltZW91dDogZnVuY3Rpb24gdGltZW91dChwcm9wcykge1xuICAgIHZhciBwdCA9IHRpbWVvdXRzU2hhcGU7XG4gICAgaWYgKCFwcm9wcy5hZGRFbmRMaXN0ZW5lcikgcHQgPSBwdC5pc1JlcXVpcmVkO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIHB0LmFwcGx5KHZvaWQgMCwgW3Byb3BzXS5jb25jYXQoYXJncykpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBBZGQgYSBjdXN0b20gdHJhbnNpdGlvbiBlbmQgdHJpZ2dlci4gQ2FsbGVkIHdpdGggdGhlIHRyYW5zaXRpb25pbmdcbiAgICogRE9NIG5vZGUgYW5kIGEgYGRvbmVgIGNhbGxiYWNrLiBBbGxvd3MgZm9yIG1vcmUgZmluZSBncmFpbmVkIHRyYW5zaXRpb24gZW5kXG4gICAqIGxvZ2ljLiBUaW1lb3V0cyBhcmUgc3RpbGwgdXNlZCBhcyBhIGZhbGxiYWNrIGlmIHByb3ZpZGVkLlxuICAgKlxuICAgKiAqKk5vdGUqKjogd2hlbiBgbm9kZVJlZmAgcHJvcCBpcyBwYXNzZWQsIGBub2RlYCBpcyBub3QgcGFzc2VkLlxuICAgKlxuICAgKiBgYGBqc3hcbiAgICogYWRkRW5kTGlzdGVuZXI9eyhub2RlLCBkb25lKSA9PiB7XG4gICAqICAgLy8gdXNlIHRoZSBjc3MgdHJhbnNpdGlvbmVuZCBldmVudCB0byBtYXJrIHRoZSBmaW5pc2ggb2YgYSB0cmFuc2l0aW9uXG4gICAqICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgZG9uZSwgZmFsc2UpO1xuICAgKiB9fVxuICAgKiBgYGBcbiAgICovXG4gIGFkZEVuZExpc3RlbmVyOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYmVmb3JlIHRoZSBcImVudGVyaW5nXCIgc3RhdHVzIGlzIGFwcGxpZWQuIEFuIGV4dHJhIHBhcmFtZXRlclxuICAgKiBgaXNBcHBlYXJpbmdgIGlzIHN1cHBsaWVkIHRvIGluZGljYXRlIGlmIHRoZSBlbnRlciBzdGFnZSBpcyBvY2N1cnJpbmcgb24gdGhlIGluaXRpYWwgbW91bnRcbiAgICpcbiAgICogKipOb3RlKio6IHdoZW4gYG5vZGVSZWZgIHByb3AgaXMgcGFzc2VkLCBgbm9kZWAgaXMgbm90IHBhc3NlZC5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQsIGlzQXBwZWFyaW5nOiBib29sKSAtPiB2b2lkXG4gICAqL1xuICBvbkVudGVyOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYWZ0ZXIgdGhlIFwiZW50ZXJpbmdcIiBzdGF0dXMgaXMgYXBwbGllZC4gQW4gZXh0cmEgcGFyYW1ldGVyXG4gICAqIGBpc0FwcGVhcmluZ2AgaXMgc3VwcGxpZWQgdG8gaW5kaWNhdGUgaWYgdGhlIGVudGVyIHN0YWdlIGlzIG9jY3VycmluZyBvbiB0aGUgaW5pdGlhbCBtb3VudFxuICAgKlxuICAgKiAqKk5vdGUqKjogd2hlbiBgbm9kZVJlZmAgcHJvcCBpcyBwYXNzZWQsIGBub2RlYCBpcyBub3QgcGFzc2VkLlxuICAgKlxuICAgKiBAdHlwZSBGdW5jdGlvbihub2RlOiBIdG1sRWxlbWVudCwgaXNBcHBlYXJpbmc6IGJvb2wpXG4gICAqL1xuICBvbkVudGVyaW5nOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYWZ0ZXIgdGhlIFwiZW50ZXJlZFwiIHN0YXR1cyBpcyBhcHBsaWVkLiBBbiBleHRyYSBwYXJhbWV0ZXJcbiAgICogYGlzQXBwZWFyaW5nYCBpcyBzdXBwbGllZCB0byBpbmRpY2F0ZSBpZiB0aGUgZW50ZXIgc3RhZ2UgaXMgb2NjdXJyaW5nIG9uIHRoZSBpbml0aWFsIG1vdW50XG4gICAqXG4gICAqICoqTm90ZSoqOiB3aGVuIGBub2RlUmVmYCBwcm9wIGlzIHBhc3NlZCwgYG5vZGVgIGlzIG5vdCBwYXNzZWQuXG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50LCBpc0FwcGVhcmluZzogYm9vbCkgLT4gdm9pZFxuICAgKi9cbiAgb25FbnRlcmVkOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYmVmb3JlIHRoZSBcImV4aXRpbmdcIiBzdGF0dXMgaXMgYXBwbGllZC5cbiAgICpcbiAgICogKipOb3RlKio6IHdoZW4gYG5vZGVSZWZgIHByb3AgaXMgcGFzc2VkLCBgbm9kZWAgaXMgbm90IHBhc3NlZC5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQpIC0+IHZvaWRcbiAgICovXG4gIG9uRXhpdDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIGFmdGVyIHRoZSBcImV4aXRpbmdcIiBzdGF0dXMgaXMgYXBwbGllZC5cbiAgICpcbiAgICogKipOb3RlKio6IHdoZW4gYG5vZGVSZWZgIHByb3AgaXMgcGFzc2VkLCBgbm9kZWAgaXMgbm90IHBhc3NlZC5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQpIC0+IHZvaWRcbiAgICovXG4gIG9uRXhpdGluZzogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIGFmdGVyIHRoZSBcImV4aXRlZFwiIHN0YXR1cyBpcyBhcHBsaWVkLlxuICAgKlxuICAgKiAqKk5vdGUqKjogd2hlbiBgbm9kZVJlZmAgcHJvcCBpcyBwYXNzZWQsIGBub2RlYCBpcyBub3QgcGFzc2VkXG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50KSAtPiB2b2lkXG4gICAqL1xuICBvbkV4aXRlZDogUHJvcFR5cGVzLmZ1bmNcbn0gOiB7fTsgLy8gTmFtZSB0aGUgZnVuY3Rpb24gc28gaXQgaXMgY2xlYXJlciBpbiB0aGUgZG9jdW1lbnRhdGlvblxuXG5mdW5jdGlvbiBub29wKCkge31cblxuVHJhbnNpdGlvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIGluOiBmYWxzZSxcbiAgbW91bnRPbkVudGVyOiBmYWxzZSxcbiAgdW5tb3VudE9uRXhpdDogZmFsc2UsXG4gIGFwcGVhcjogZmFsc2UsXG4gIGVudGVyOiB0cnVlLFxuICBleGl0OiB0cnVlLFxuICBvbkVudGVyOiBub29wLFxuICBvbkVudGVyaW5nOiBub29wLFxuICBvbkVudGVyZWQ6IG5vb3AsXG4gIG9uRXhpdDogbm9vcCxcbiAgb25FeGl0aW5nOiBub29wLFxuICBvbkV4aXRlZDogbm9vcFxufTtcblRyYW5zaXRpb24uVU5NT1VOVEVEID0gVU5NT1VOVEVEO1xuVHJhbnNpdGlvbi5FWElURUQgPSBFWElURUQ7XG5UcmFuc2l0aW9uLkVOVEVSSU5HID0gRU5URVJJTkc7XG5UcmFuc2l0aW9uLkVOVEVSRUQgPSBFTlRFUkVEO1xuVHJhbnNpdGlvbi5FWElUSU5HID0gRVhJVElORztcbmV4cG9ydCBkZWZhdWx0IFRyYW5zaXRpb247IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlVGhlbWUgYXMgdXNlVGhlbWVTeXN0ZW0gfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgZGVmYXVsdFRoZW1lIGZyb20gJy4vZGVmYXVsdFRoZW1lJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVRoZW1lKCkge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lU3lzdGVtKGRlZmF1bHRUaGVtZSk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgICBSZWFjdC51c2VEZWJ1Z1ZhbHVlKHRoZW1lKTtcbiAgfVxuXG4gIHJldHVybiB0aGVtZTtcbn0iLCJleHBvcnQgY29uc3QgcmVmbG93ID0gbm9kZSA9PiBub2RlLnNjcm9sbFRvcDtcbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFuc2l0aW9uUHJvcHMocHJvcHMsIG9wdGlvbnMpIHtcbiAgdmFyIF9zdHlsZSR0cmFuc2l0aW9uRHVyYSwgX3N0eWxlJHRyYW5zaXRpb25UaW1pO1xuXG4gIGNvbnN0IHtcbiAgICB0aW1lb3V0LFxuICAgIGVhc2luZyxcbiAgICBzdHlsZSA9IHt9XG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuIHtcbiAgICBkdXJhdGlvbjogKF9zdHlsZSR0cmFuc2l0aW9uRHVyYSA9IHN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbikgIT0gbnVsbCA/IF9zdHlsZSR0cmFuc2l0aW9uRHVyYSA6IHR5cGVvZiB0aW1lb3V0ID09PSAnbnVtYmVyJyA/IHRpbWVvdXQgOiB0aW1lb3V0W29wdGlvbnMubW9kZV0gfHwgMCxcbiAgICBlYXNpbmc6IChfc3R5bGUkdHJhbnNpdGlvblRpbWkgPSBzdHlsZS50cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24pICE9IG51bGwgPyBfc3R5bGUkdHJhbnNpdGlvblRpbWkgOiB0eXBlb2YgZWFzaW5nID09PSAnb2JqZWN0JyA/IGVhc2luZ1tvcHRpb25zLm1vZGVdIDogZWFzaW5nLFxuICAgIGRlbGF5OiBzdHlsZS50cmFuc2l0aW9uRGVsYXlcbiAgfTtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiYWRkRW5kTGlzdGVuZXJcIiwgXCJhcHBlYXJcIiwgXCJjaGlsZHJlblwiLCBcImVhc2luZ1wiLCBcImluXCIsIFwib25FbnRlclwiLCBcIm9uRW50ZXJlZFwiLCBcIm9uRW50ZXJpbmdcIiwgXCJvbkV4aXRcIiwgXCJvbkV4aXRlZFwiLCBcIm9uRXhpdGluZ1wiLCBcInN0eWxlXCIsIFwidGltZW91dFwiLCBcIlRyYW5zaXRpb25Db21wb25lbnRcIl07XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgZWxlbWVudEFjY2VwdGluZ1JlZiB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IHsgVHJhbnNpdGlvbiB9IGZyb20gJ3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAnO1xuaW1wb3J0IHVzZVRoZW1lIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZSc7XG5pbXBvcnQgeyBnZXRUcmFuc2l0aW9uUHJvcHMsIHJlZmxvdyB9IGZyb20gJy4uL3RyYW5zaXRpb25zL3V0aWxzJztcbmltcG9ydCB1c2VGb3JrUmVmIGZyb20gJy4uL3V0aWxzL3VzZUZvcmtSZWYnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuZnVuY3Rpb24gZ2V0U2NhbGUodmFsdWUpIHtcbiAgcmV0dXJuIGBzY2FsZSgke3ZhbHVlfSwgJHt2YWx1ZSAqKiAyfSlgO1xufVxuXG5jb25zdCBzdHlsZXMgPSB7XG4gIGVudGVyaW5nOiB7XG4gICAgb3BhY2l0eTogMSxcbiAgICB0cmFuc2Zvcm06IGdldFNjYWxlKDEpXG4gIH0sXG4gIGVudGVyZWQ6IHtcbiAgICBvcGFjaXR5OiAxLFxuICAgIHRyYW5zZm9ybTogJ25vbmUnXG4gIH1cbn07XG4vKlxuIFRPRE8gdjY6IHJlbW92ZVxuIENvbmRpdGlvbmFsbHkgYXBwbHkgYSB3b3JrYXJvdW5kIGZvciB0aGUgQ1NTIHRyYW5zaXRpb24gYnVnIGluIFNhZmFyaSAxNS40IC8gV2ViS2l0IGJyb3dzZXJzLlxuICovXG5cbmNvbnN0IGlzV2ViS2l0MTU0ID0gdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgL14oKD8hY2hyb21lfGFuZHJvaWQpLikqKHNhZmFyaXxtb2JpbGUpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSAmJiAvKG9zIHx2ZXJzaW9uXFwvKTE1KC58Xyk0L2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbi8qKlxuICogVGhlIEdyb3cgdHJhbnNpdGlvbiBpcyB1c2VkIGJ5IHRoZSBbVG9vbHRpcF0oL21hdGVyaWFsLXVpL3JlYWN0LXRvb2x0aXAvKSBhbmRcbiAqIFtQb3BvdmVyXSgvbWF0ZXJpYWwtdWkvcmVhY3QtcG9wb3Zlci8pIGNvbXBvbmVudHMuXG4gKiBJdCB1c2VzIFtyZWFjdC10cmFuc2l0aW9uLWdyb3VwXShodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwKSBpbnRlcm5hbGx5LlxuICovXG5cbmNvbnN0IEdyb3cgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBHcm93KHByb3BzLCByZWYpIHtcbiAgY29uc3Qge1xuICAgIGFkZEVuZExpc3RlbmVyLFxuICAgIGFwcGVhciA9IHRydWUsXG4gICAgY2hpbGRyZW4sXG4gICAgZWFzaW5nLFxuICAgIGluOiBpblByb3AsXG4gICAgb25FbnRlcixcbiAgICBvbkVudGVyZWQsXG4gICAgb25FbnRlcmluZyxcbiAgICBvbkV4aXQsXG4gICAgb25FeGl0ZWQsXG4gICAgb25FeGl0aW5nLFxuICAgIHN0eWxlLFxuICAgIHRpbWVvdXQgPSAnYXV0bycsXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbiAgICBUcmFuc2l0aW9uQ29tcG9uZW50ID0gVHJhbnNpdGlvblxuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3QgdGltZXIgPSBSZWFjdC51c2VSZWYoKTtcbiAgY29uc3QgYXV0b1RpbWVvdXQgPSBSZWFjdC51c2VSZWYoKTtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBub2RlUmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCBmb3JlaWduUmVmID0gdXNlRm9ya1JlZihjaGlsZHJlbi5yZWYsIHJlZik7XG4gIGNvbnN0IGhhbmRsZVJlZiA9IHVzZUZvcmtSZWYobm9kZVJlZiwgZm9yZWlnblJlZik7XG5cbiAgY29uc3Qgbm9ybWFsaXplZFRyYW5zaXRpb25DYWxsYmFjayA9IGNhbGxiYWNrID0+IG1heWJlSXNBcHBlYXJpbmcgPT4ge1xuICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgY29uc3Qgbm9kZSA9IG5vZGVSZWYuY3VycmVudDsgLy8gb25FbnRlclh4eCBhbmQgb25FeGl0WHh4IGNhbGxiYWNrcyBoYXZlIGEgZGlmZmVyZW50IGFyZ3VtZW50cy5sZW5ndGggdmFsdWUuXG5cbiAgICAgIGlmIChtYXliZUlzQXBwZWFyaW5nID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY2FsbGJhY2sobm9kZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYWxsYmFjayhub2RlLCBtYXliZUlzQXBwZWFyaW5nKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlRW50ZXJpbmcgPSBub3JtYWxpemVkVHJhbnNpdGlvbkNhbGxiYWNrKG9uRW50ZXJpbmcpO1xuICBjb25zdCBoYW5kbGVFbnRlciA9IG5vcm1hbGl6ZWRUcmFuc2l0aW9uQ2FsbGJhY2soKG5vZGUsIGlzQXBwZWFyaW5nKSA9PiB7XG4gICAgcmVmbG93KG5vZGUpOyAvLyBTbyB0aGUgYW5pbWF0aW9uIGFsd2F5cyBzdGFydCBmcm9tIHRoZSBzdGFydC5cblxuICAgIGNvbnN0IHtcbiAgICAgIGR1cmF0aW9uOiB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICBkZWxheSxcbiAgICAgIGVhc2luZzogdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uXG4gICAgfSA9IGdldFRyYW5zaXRpb25Qcm9wcyh7XG4gICAgICBzdHlsZSxcbiAgICAgIHRpbWVvdXQsXG4gICAgICBlYXNpbmdcbiAgICB9LCB7XG4gICAgICBtb2RlOiAnZW50ZXInXG4gICAgfSk7XG4gICAgbGV0IGR1cmF0aW9uO1xuXG4gICAgaWYgKHRpbWVvdXQgPT09ICdhdXRvJykge1xuICAgICAgZHVyYXRpb24gPSB0aGVtZS50cmFuc2l0aW9ucy5nZXRBdXRvSGVpZ2h0RHVyYXRpb24obm9kZS5jbGllbnRIZWlnaHQpO1xuICAgICAgYXV0b1RpbWVvdXQuY3VycmVudCA9IGR1cmF0aW9uO1xuICAgIH0gZWxzZSB7XG4gICAgICBkdXJhdGlvbiA9IHRyYW5zaXRpb25EdXJhdGlvbjtcbiAgICB9XG5cbiAgICBub2RlLnN0eWxlLnRyYW5zaXRpb24gPSBbdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKCdvcGFjaXR5Jywge1xuICAgICAgZHVyYXRpb24sXG4gICAgICBkZWxheVxuICAgIH0pLCB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ3RyYW5zZm9ybScsIHtcbiAgICAgIGR1cmF0aW9uOiBpc1dlYktpdDE1NCA/IGR1cmF0aW9uIDogZHVyYXRpb24gKiAwLjY2NixcbiAgICAgIGRlbGF5LFxuICAgICAgZWFzaW5nOiB0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb25cbiAgICB9KV0uam9pbignLCcpO1xuXG4gICAgaWYgKG9uRW50ZXIpIHtcbiAgICAgIG9uRW50ZXIobm9kZSwgaXNBcHBlYXJpbmcpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGhhbmRsZUVudGVyZWQgPSBub3JtYWxpemVkVHJhbnNpdGlvbkNhbGxiYWNrKG9uRW50ZXJlZCk7XG4gIGNvbnN0IGhhbmRsZUV4aXRpbmcgPSBub3JtYWxpemVkVHJhbnNpdGlvbkNhbGxiYWNrKG9uRXhpdGluZyk7XG4gIGNvbnN0IGhhbmRsZUV4aXQgPSBub3JtYWxpemVkVHJhbnNpdGlvbkNhbGxiYWNrKG5vZGUgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGR1cmF0aW9uOiB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICBkZWxheSxcbiAgICAgIGVhc2luZzogdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uXG4gICAgfSA9IGdldFRyYW5zaXRpb25Qcm9wcyh7XG4gICAgICBzdHlsZSxcbiAgICAgIHRpbWVvdXQsXG4gICAgICBlYXNpbmdcbiAgICB9LCB7XG4gICAgICBtb2RlOiAnZXhpdCdcbiAgICB9KTtcbiAgICBsZXQgZHVyYXRpb247XG5cbiAgICBpZiAodGltZW91dCA9PT0gJ2F1dG8nKSB7XG4gICAgICBkdXJhdGlvbiA9IHRoZW1lLnRyYW5zaXRpb25zLmdldEF1dG9IZWlnaHREdXJhdGlvbihub2RlLmNsaWVudEhlaWdodCk7XG4gICAgICBhdXRvVGltZW91dC5jdXJyZW50ID0gZHVyYXRpb247XG4gICAgfSBlbHNlIHtcbiAgICAgIGR1cmF0aW9uID0gdHJhbnNpdGlvbkR1cmF0aW9uO1xuICAgIH1cblxuICAgIG5vZGUuc3R5bGUudHJhbnNpdGlvbiA9IFt0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ29wYWNpdHknLCB7XG4gICAgICBkdXJhdGlvbixcbiAgICAgIGRlbGF5XG4gICAgfSksIHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZSgndHJhbnNmb3JtJywge1xuICAgICAgZHVyYXRpb246IGlzV2ViS2l0MTU0ID8gZHVyYXRpb24gOiBkdXJhdGlvbiAqIDAuNjY2LFxuICAgICAgZGVsYXk6IGlzV2ViS2l0MTU0ID8gZGVsYXkgOiBkZWxheSB8fCBkdXJhdGlvbiAqIDAuMzMzLFxuICAgICAgZWFzaW5nOiB0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb25cbiAgICB9KV0uam9pbignLCcpO1xuICAgIG5vZGUuc3R5bGUub3BhY2l0eSA9IDA7XG4gICAgbm9kZS5zdHlsZS50cmFuc2Zvcm0gPSBnZXRTY2FsZSgwLjc1KTtcblxuICAgIGlmIChvbkV4aXQpIHtcbiAgICAgIG9uRXhpdChub2RlKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBoYW5kbGVFeGl0ZWQgPSBub3JtYWxpemVkVHJhbnNpdGlvbkNhbGxiYWNrKG9uRXhpdGVkKTtcblxuICBjb25zdCBoYW5kbGVBZGRFbmRMaXN0ZW5lciA9IG5leHQgPT4ge1xuICAgIGlmICh0aW1lb3V0ID09PSAnYXV0bycpIHtcbiAgICAgIHRpbWVyLmN1cnJlbnQgPSBzZXRUaW1lb3V0KG5leHQsIGF1dG9UaW1lb3V0LmN1cnJlbnQgfHwgMCk7XG4gICAgfVxuXG4gICAgaWYgKGFkZEVuZExpc3RlbmVyKSB7XG4gICAgICAvLyBPbGQgY2FsbCBzaWduYXR1cmUgYmVmb3JlIGByZWFjdC10cmFuc2l0aW9uLWdyb3VwYCBpbXBsZW1lbnRlZCBgbm9kZVJlZmBcbiAgICAgIGFkZEVuZExpc3RlbmVyKG5vZGVSZWYuY3VycmVudCwgbmV4dCk7XG4gICAgfVxuICB9O1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lci5jdXJyZW50KTtcbiAgICB9O1xuICB9LCBbXSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChUcmFuc2l0aW9uQ29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgYXBwZWFyOiBhcHBlYXIsXG4gICAgaW46IGluUHJvcCxcbiAgICBub2RlUmVmOiBub2RlUmVmLFxuICAgIG9uRW50ZXI6IGhhbmRsZUVudGVyLFxuICAgIG9uRW50ZXJlZDogaGFuZGxlRW50ZXJlZCxcbiAgICBvbkVudGVyaW5nOiBoYW5kbGVFbnRlcmluZyxcbiAgICBvbkV4aXQ6IGhhbmRsZUV4aXQsXG4gICAgb25FeGl0ZWQ6IGhhbmRsZUV4aXRlZCxcbiAgICBvbkV4aXRpbmc6IGhhbmRsZUV4aXRpbmcsXG4gICAgYWRkRW5kTGlzdGVuZXI6IGhhbmRsZUFkZEVuZExpc3RlbmVyLFxuICAgIHRpbWVvdXQ6IHRpbWVvdXQgPT09ICdhdXRvJyA/IG51bGwgOiB0aW1lb3V0XG4gIH0sIG90aGVyLCB7XG4gICAgY2hpbGRyZW46IChzdGF0ZSwgY2hpbGRQcm9wcykgPT4ge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGRyZW4sIF9leHRlbmRzKHtcbiAgICAgICAgc3R5bGU6IF9leHRlbmRzKHtcbiAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgIHRyYW5zZm9ybTogZ2V0U2NhbGUoMC43NSksXG4gICAgICAgICAgdmlzaWJpbGl0eTogc3RhdGUgPT09ICdleGl0ZWQnICYmICFpblByb3AgPyAnaGlkZGVuJyA6IHVuZGVmaW5lZFxuICAgICAgICB9LCBzdHlsZXNbc3RhdGVdLCBzdHlsZSwgY2hpbGRyZW4ucHJvcHMuc3R5bGUpLFxuICAgICAgICByZWY6IGhhbmRsZVJlZlxuICAgICAgfSwgY2hpbGRQcm9wcykpO1xuICAgIH1cbiAgfSkpO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBHcm93LnByb3BUeXBlc1xuLyogcmVtb3ZlLXByb3B0eXBlcyAqL1xuPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBBZGQgYSBjdXN0b20gdHJhbnNpdGlvbiBlbmQgdHJpZ2dlci4gQ2FsbGVkIHdpdGggdGhlIHRyYW5zaXRpb25pbmcgRE9NXG4gICAqIG5vZGUgYW5kIGEgZG9uZSBjYWxsYmFjay4gQWxsb3dzIGZvciBtb3JlIGZpbmUgZ3JhaW5lZCB0cmFuc2l0aW9uIGVuZFxuICAgKiBsb2dpYy4gTm90ZTogVGltZW91dHMgYXJlIHN0aWxsIHVzZWQgYXMgYSBmYWxsYmFjayBpZiBwcm92aWRlZC5cbiAgICovXG4gIGFkZEVuZExpc3RlbmVyOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogUGVyZm9ybSB0aGUgZW50ZXIgdHJhbnNpdGlvbiB3aGVuIGl0IGZpcnN0IG1vdW50cyBpZiBgaW5gIGlzIGFsc28gYHRydWVgLlxuICAgKiBTZXQgdGhpcyB0byBgZmFsc2VgIHRvIGRpc2FibGUgdGhpcyBiZWhhdmlvci5cbiAgICogQGRlZmF1bHQgdHJ1ZVxuICAgKi9cbiAgYXBwZWFyOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQSBzaW5nbGUgY2hpbGQgY29udGVudCBlbGVtZW50LlxuICAgKi9cbiAgY2hpbGRyZW46IGVsZW1lbnRBY2NlcHRpbmdSZWYuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogVGhlIHRyYW5zaXRpb24gdGltaW5nIGZ1bmN0aW9uLlxuICAgKiBZb3UgbWF5IHNwZWNpZnkgYSBzaW5nbGUgZWFzaW5nIG9yIGEgb2JqZWN0IGNvbnRhaW5pbmcgZW50ZXIgYW5kIGV4aXQgdmFsdWVzLlxuICAgKi9cbiAgZWFzaW5nOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGVudGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGV4aXQ6IFByb3BUeXBlcy5zdHJpbmdcbiAgfSksIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IHdpbGwgdHJhbnNpdGlvbiBpbi5cbiAgICovXG4gIGluOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25FbnRlcjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uRW50ZXJlZDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uRW50ZXJpbmc6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkV4aXQ6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkV4aXRlZDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uRXhpdGluZzogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBUaGUgZHVyYXRpb24gZm9yIHRoZSB0cmFuc2l0aW9uLCBpbiBtaWxsaXNlY29uZHMuXG4gICAqIFlvdSBtYXkgc3BlY2lmeSBhIHNpbmdsZSB0aW1lb3V0IGZvciBhbGwgdHJhbnNpdGlvbnMsIG9yIGluZGl2aWR1YWxseSB3aXRoIGFuIG9iamVjdC5cbiAgICpcbiAgICogU2V0IHRvICdhdXRvJyB0byBhdXRvbWF0aWNhbGx5IGNhbGN1bGF0ZSB0cmFuc2l0aW9uIHRpbWUgYmFzZWQgb24gaGVpZ2h0LlxuICAgKiBAZGVmYXVsdCAnYXV0bydcbiAgICovXG4gIHRpbWVvdXQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ2F1dG8nXSksIFByb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgYXBwZWFyOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGVudGVyOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGV4aXQ6IFByb3BUeXBlcy5udW1iZXJcbiAgfSldKVxufSA6IHZvaWQgMDtcbkdyb3cubXVpU3VwcG9ydEF1dG8gPSB0cnVlO1xuZXhwb3J0IGRlZmF1bHQgR3JvdzsiLCIvKipcbiAqIERldGVybWluZXMgaWYgYSBnaXZlbiBlbGVtZW50IGlzIGEgRE9NIGVsZW1lbnQgbmFtZSAoaS5lLiBub3QgYSBSZWFjdCBjb21wb25lbnQpLlxuICovXG5mdW5jdGlvbiBpc0hvc3RDb21wb25lbnQoZWxlbWVudCkge1xuICByZXR1cm4gdHlwZW9mIGVsZW1lbnQgPT09ICdzdHJpbmcnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpc0hvc3RDb21wb25lbnQ7IiwiLyoqXG4gKiBTYWZlIGNoYWluZWQgZnVuY3Rpb24uXG4gKlxuICogV2lsbCBvbmx5IGNyZWF0ZSBhIG5ldyBmdW5jdGlvbiBpZiBuZWVkZWQsXG4gKiBvdGhlcndpc2Ugd2lsbCBwYXNzIGJhY2sgZXhpc3RpbmcgZnVuY3Rpb25zIG9yIG51bGwuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUNoYWluZWRGdW5jdGlvbiguLi5mdW5jcykge1xuICByZXR1cm4gZnVuY3MucmVkdWNlKChhY2MsIGZ1bmMpID0+IHtcbiAgICBpZiAoZnVuYyA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiBjaGFpbmVkRnVuY3Rpb24oLi4uYXJncykge1xuICAgICAgYWNjLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICB9O1xuICB9LCAoKSA9PiB7fSk7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgaXNIb3N0Q29tcG9uZW50IGZyb20gJy4vaXNIb3N0Q29tcG9uZW50Jztcbi8qKlxuICogVHlwZSBvZiB0aGUgb3duZXJTdGF0ZSBiYXNlZCBvbiB0aGUgdHlwZSBvZiBhbiBlbGVtZW50IGl0IGFwcGxpZXMgdG8uXG4gKiBUaGlzIHJlc29sdmVzIHRvIHRoZSBwcm92aWRlZCBPd25lclN0YXRlIGZvciBSZWFjdCBjb21wb25lbnRzIGFuZCBgdW5kZWZpbmVkYCBmb3IgaG9zdCBjb21wb25lbnRzLlxuICogRmFsbHMgYmFjayB0byBgT3duZXJTdGF0ZSB8IHVuZGVmaW5lZGAgd2hlbiB0aGUgZXhhY3QgdHlwZSBjYW4ndCBiZSBkZXRlcm1pbmVkIGluIGRldmVsb3BtZW50IHRpbWUuXG4gKi9cblxuLyoqXG4gKiBBcHBlbmRzIHRoZSBvd25lclN0YXRlIG9iamVjdCB0byB0aGUgcHJvcHMsIG1lcmdpbmcgd2l0aCB0aGUgZXhpc3Rpbmcgb25lIGlmIG5lY2Vzc2FyeS5cbiAqXG4gKiBAcGFyYW0gZWxlbWVudFR5cGUgVHlwZSBvZiB0aGUgZWxlbWVudCB0aGF0IG93bnMgdGhlIGBleGlzdGluZ1Byb3BzYC4gSWYgdGhlIGVsZW1lbnQgaXMgYSBET00gbm9kZSwgYG93bmVyU3RhdGVgIGlzIG5vdCBhcHBsaWVkLlxuICogQHBhcmFtIG90aGVyUHJvcHMgUHJvcHMgb2YgdGhlIGVsZW1lbnQuXG4gKiBAcGFyYW0gb3duZXJTdGF0ZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcHBlbmRPd25lclN0YXRlKGVsZW1lbnRUeXBlLCBvdGhlclByb3BzID0ge30sIG93bmVyU3RhdGUpIHtcbiAgaWYgKGlzSG9zdENvbXBvbmVudChlbGVtZW50VHlwZSkpIHtcbiAgICByZXR1cm4gb3RoZXJQcm9wcztcbiAgfVxuXG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgb3RoZXJQcm9wcywge1xuICAgIG93bmVyU3RhdGU6IF9leHRlbmRzKHt9LCBvdGhlclByb3BzLm93bmVyU3RhdGUsIG93bmVyU3RhdGUpXG4gIH0pO1xufSIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAqIGFzIFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgZXhhY3RQcm9wLCBIVE1MRWxlbWVudFR5cGUsIHVuc3RhYmxlX3VzZUVuaGFuY2VkRWZmZWN0IGFzIHVzZUVuaGFuY2VkRWZmZWN0LCB1bnN0YWJsZV91c2VGb3JrUmVmIGFzIHVzZUZvcmtSZWYsIHVuc3RhYmxlX3NldFJlZiBhcyBzZXRSZWYgfSBmcm9tICdAbXVpL3V0aWxzJztcblxuZnVuY3Rpb24gZ2V0Q29udGFpbmVyKGNvbnRhaW5lcikge1xuICByZXR1cm4gdHlwZW9mIGNvbnRhaW5lciA9PT0gJ2Z1bmN0aW9uJyA/IGNvbnRhaW5lcigpIDogY29udGFpbmVyO1xufVxuLyoqXG4gKiBQb3J0YWxzIHByb3ZpZGUgYSBmaXJzdC1jbGFzcyB3YXkgdG8gcmVuZGVyIGNoaWxkcmVuIGludG8gYSBET00gbm9kZVxuICogdGhhdCBleGlzdHMgb3V0c2lkZSB0aGUgRE9NIGhpZXJhcmNoeSBvZiB0aGUgcGFyZW50IGNvbXBvbmVudC5cbiAqL1xuXG5cbmNvbnN0IFBvcnRhbCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFBvcnRhbChwcm9wcywgcmVmKSB7XG4gIGNvbnN0IHtcbiAgICBjaGlsZHJlbixcbiAgICBjb250YWluZXIsXG4gICAgZGlzYWJsZVBvcnRhbCA9IGZhbHNlXG4gIH0gPSBwcm9wcztcbiAgY29uc3QgW21vdW50Tm9kZSwgc2V0TW91bnROb2RlXSA9IFJlYWN0LnVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBoYW5kbGVSZWYgPSB1c2VGb3JrUmVmKCAvKiNfX1BVUkVfXyovUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGRyZW4pID8gY2hpbGRyZW4ucmVmIDogbnVsbCwgcmVmKTtcbiAgdXNlRW5oYW5jZWRFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghZGlzYWJsZVBvcnRhbCkge1xuICAgICAgc2V0TW91bnROb2RlKGdldENvbnRhaW5lcihjb250YWluZXIpIHx8IGRvY3VtZW50LmJvZHkpO1xuICAgIH1cbiAgfSwgW2NvbnRhaW5lciwgZGlzYWJsZVBvcnRhbF0pO1xuICB1c2VFbmhhbmNlZEVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG1vdW50Tm9kZSAmJiAhZGlzYWJsZVBvcnRhbCkge1xuICAgICAgc2V0UmVmKHJlZiwgbW91bnROb2RlKTtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHNldFJlZihyZWYsIG51bGwpO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9LCBbcmVmLCBtb3VudE5vZGUsIGRpc2FibGVQb3J0YWxdKTtcblxuICBpZiAoZGlzYWJsZVBvcnRhbCkge1xuICAgIGlmICggLyojX19QVVJFX18qL1JlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkcmVuKSkge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGRyZW4sIHtcbiAgICAgICAgcmVmOiBoYW5kbGVSZWZcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBjaGlsZHJlbjtcbiAgfVxuXG4gIHJldHVybiBtb3VudE5vZGUgPyAvKiNfX1BVUkVfXyovUmVhY3RET00uY3JlYXRlUG9ydGFsKGNoaWxkcmVuLCBtb3VudE5vZGUpIDogbW91bnROb2RlO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBQb3J0YWwucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoZSBjaGlsZHJlbiB0byByZW5kZXIgaW50byB0aGUgYGNvbnRhaW5lcmAuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIEFuIEhUTUwgZWxlbWVudCBvciBmdW5jdGlvbiB0aGF0IHJldHVybnMgb25lLlxuICAgKiBUaGUgYGNvbnRhaW5lcmAgd2lsbCBoYXZlIHRoZSBwb3J0YWwgY2hpbGRyZW4gYXBwZW5kZWQgdG8gaXQuXG4gICAqXG4gICAqIEJ5IGRlZmF1bHQsIGl0IHVzZXMgdGhlIGJvZHkgb2YgdGhlIHRvcC1sZXZlbCBkb2N1bWVudCBvYmplY3QsXG4gICAqIHNvIGl0J3Mgc2ltcGx5IGBkb2N1bWVudC5ib2R5YCBtb3N0IG9mIHRoZSB0aW1lLlxuICAgKi9cbiAgY29udGFpbmVyOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAub25lT2ZUeXBlKFtIVE1MRWxlbWVudFR5cGUsIFByb3BUeXBlcy5mdW5jXSksXG5cbiAgLyoqXG4gICAqIFRoZSBgY2hpbGRyZW5gIHdpbGwgYmUgdW5kZXIgdGhlIERPTSBoaWVyYXJjaHkgb2YgdGhlIHBhcmVudCBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlUG9ydGFsOiBQcm9wVHlwZXMuYm9vbFxufSA6IHZvaWQgMDtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gIFBvcnRhbFsncHJvcFR5cGVzJyArICcnXSA9IGV4YWN0UHJvcChQb3J0YWwucHJvcFR5cGVzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9ydGFsOyIsImltcG9ydCB7IHVuc3RhYmxlX293bmVyV2luZG93IGFzIG93bmVyV2luZG93LCB1bnN0YWJsZV9vd25lckRvY3VtZW50IGFzIG93bmVyRG9jdW1lbnQsIHVuc3RhYmxlX2dldFNjcm9sbGJhclNpemUgYXMgZ2V0U2Nyb2xsYmFyU2l6ZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuXG4vLyBJcyBhIHZlcnRpY2FsIHNjcm9sbGJhciBkaXNwbGF5ZWQ/XG5mdW5jdGlvbiBpc092ZXJmbG93aW5nKGNvbnRhaW5lcikge1xuICBjb25zdCBkb2MgPSBvd25lckRvY3VtZW50KGNvbnRhaW5lcik7XG5cbiAgaWYgKGRvYy5ib2R5ID09PSBjb250YWluZXIpIHtcbiAgICByZXR1cm4gb3duZXJXaW5kb3coY29udGFpbmVyKS5pbm5lcldpZHRoID4gZG9jLmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDtcbiAgfVxuXG4gIHJldHVybiBjb250YWluZXIuc2Nyb2xsSGVpZ2h0ID4gY29udGFpbmVyLmNsaWVudEhlaWdodDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFyaWFIaWRkZW4oZWxlbWVudCwgc2hvdykge1xuICBpZiAoc2hvdykge1xuICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICd0cnVlJyk7XG4gIH0gZWxzZSB7XG4gICAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0UGFkZGluZ1JpZ2h0KGVsZW1lbnQpIHtcbiAgcmV0dXJuIHBhcnNlSW50KG93bmVyV2luZG93KGVsZW1lbnQpLmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucGFkZGluZ1JpZ2h0LCAxMCkgfHwgMDtcbn1cblxuZnVuY3Rpb24gaXNBcmlhSGlkZGVuRm9yYmlkZGVuT25FbGVtZW50KGVsZW1lbnQpIHtcbiAgLy8gVGhlIGZvcmJpZGRlbiBIVE1MIHRhZ3MgYXJlIHRoZSBvbmVzIGZyb20gQVJJQSBzcGVjaWZpY2F0aW9uIHRoYXRcbiAgLy8gY2FuIGJlIGNoaWxkcmVuIG9mIGJvZHkgYW5kIGNhbid0IGhhdmUgYXJpYS1oaWRkZW4gYXR0cmlidXRlLlxuICAvLyBjZi4gaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWwtYXJpYS8jZG9jY29uZm9ybWFuY2VcbiAgY29uc3QgZm9yYmlkZGVuVGFnTmFtZXMgPSBbJ1RFTVBMQVRFJywgJ1NDUklQVCcsICdTVFlMRScsICdMSU5LJywgJ01BUCcsICdNRVRBJywgJ05PU0NSSVBUJywgJ1BJQ1RVUkUnLCAnQ09MJywgJ0NPTEdST1VQJywgJ1BBUkFNJywgJ1NMT1QnLCAnU09VUkNFJywgJ1RSQUNLJ107XG4gIGNvbnN0IGlzRm9yYmlkZGVuVGFnTmFtZSA9IGZvcmJpZGRlblRhZ05hbWVzLmluZGV4T2YoZWxlbWVudC50YWdOYW1lKSAhPT0gLTE7XG4gIGNvbnN0IGlzSW5wdXRIaWRkZW4gPSBlbGVtZW50LnRhZ05hbWUgPT09ICdJTlBVVCcgJiYgZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3R5cGUnKSA9PT0gJ2hpZGRlbic7XG4gIHJldHVybiBpc0ZvcmJpZGRlblRhZ05hbWUgfHwgaXNJbnB1dEhpZGRlbjtcbn1cblxuZnVuY3Rpb24gYXJpYUhpZGRlblNpYmxpbmdzKGNvbnRhaW5lciwgbW91bnRFbGVtZW50LCBjdXJyZW50RWxlbWVudCwgZWxlbWVudHNUb0V4Y2x1ZGUgPSBbXSwgc2hvdykge1xuICBjb25zdCBibGFja2xpc3QgPSBbbW91bnRFbGVtZW50LCBjdXJyZW50RWxlbWVudCwgLi4uZWxlbWVudHNUb0V4Y2x1ZGVdO1xuICBbXS5mb3JFYWNoLmNhbGwoY29udGFpbmVyLmNoaWxkcmVuLCBlbGVtZW50ID0+IHtcbiAgICBjb25zdCBpc05vdEV4Y2x1ZGVkRWxlbWVudCA9IGJsYWNrbGlzdC5pbmRleE9mKGVsZW1lbnQpID09PSAtMTtcbiAgICBjb25zdCBpc05vdEZvcmJpZGRlbkVsZW1lbnQgPSAhaXNBcmlhSGlkZGVuRm9yYmlkZGVuT25FbGVtZW50KGVsZW1lbnQpO1xuXG4gICAgaWYgKGlzTm90RXhjbHVkZWRFbGVtZW50ICYmIGlzTm90Rm9yYmlkZGVuRWxlbWVudCkge1xuICAgICAgYXJpYUhpZGRlbihlbGVtZW50LCBzaG93KTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBmaW5kSW5kZXhPZihpdGVtcywgY2FsbGJhY2spIHtcbiAgbGV0IGlkeCA9IC0xO1xuICBpdGVtcy5zb21lKChpdGVtLCBpbmRleCkgPT4ge1xuICAgIGlmIChjYWxsYmFjayhpdGVtKSkge1xuICAgICAgaWR4ID0gaW5kZXg7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0pO1xuICByZXR1cm4gaWR4O1xufVxuXG5mdW5jdGlvbiBoYW5kbGVDb250YWluZXIoY29udGFpbmVySW5mbywgcHJvcHMpIHtcbiAgY29uc3QgcmVzdG9yZVN0eWxlID0gW107XG4gIGNvbnN0IGNvbnRhaW5lciA9IGNvbnRhaW5lckluZm8uY29udGFpbmVyO1xuXG4gIGlmICghcHJvcHMuZGlzYWJsZVNjcm9sbExvY2spIHtcbiAgICBpZiAoaXNPdmVyZmxvd2luZyhjb250YWluZXIpKSB7XG4gICAgICAvLyBDb21wdXRlIHRoZSBzaXplIGJlZm9yZSBhcHBseWluZyBvdmVyZmxvdyBoaWRkZW4gdG8gYXZvaWQgYW55IHNjcm9sbCBqdW1wcy5cbiAgICAgIGNvbnN0IHNjcm9sbGJhclNpemUgPSBnZXRTY3JvbGxiYXJTaXplKG93bmVyRG9jdW1lbnQoY29udGFpbmVyKSk7XG4gICAgICByZXN0b3JlU3R5bGUucHVzaCh7XG4gICAgICAgIHZhbHVlOiBjb250YWluZXIuc3R5bGUucGFkZGluZ1JpZ2h0LFxuICAgICAgICBwcm9wZXJ0eTogJ3BhZGRpbmctcmlnaHQnLFxuICAgICAgICBlbDogY29udGFpbmVyXG4gICAgICB9KTsgLy8gVXNlIGNvbXB1dGVkIHN0eWxlLCBoZXJlIHRvIGdldCB0aGUgcmVhbCBwYWRkaW5nIHRvIGFkZCBvdXIgc2Nyb2xsYmFyIHdpZHRoLlxuXG4gICAgICBjb250YWluZXIuc3R5bGUucGFkZGluZ1JpZ2h0ID0gYCR7Z2V0UGFkZGluZ1JpZ2h0KGNvbnRhaW5lcikgKyBzY3JvbGxiYXJTaXplfXB4YDsgLy8gLm11aS1maXhlZCBpcyBhIGdsb2JhbCBoZWxwZXIuXG5cbiAgICAgIGNvbnN0IGZpeGVkRWxlbWVudHMgPSBvd25lckRvY3VtZW50KGNvbnRhaW5lcikucXVlcnlTZWxlY3RvckFsbCgnLm11aS1maXhlZCcpO1xuICAgICAgW10uZm9yRWFjaC5jYWxsKGZpeGVkRWxlbWVudHMsIGVsZW1lbnQgPT4ge1xuICAgICAgICByZXN0b3JlU3R5bGUucHVzaCh7XG4gICAgICAgICAgdmFsdWU6IGVsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0LFxuICAgICAgICAgIHByb3BlcnR5OiAncGFkZGluZy1yaWdodCcsXG4gICAgICAgICAgZWw6IGVsZW1lbnRcbiAgICAgICAgfSk7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0ID0gYCR7Z2V0UGFkZGluZ1JpZ2h0KGVsZW1lbnQpICsgc2Nyb2xsYmFyU2l6ZX1weGA7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBsZXQgc2Nyb2xsQ29udGFpbmVyO1xuXG4gICAgaWYgKGNvbnRhaW5lci5wYXJlbnROb2RlIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCkge1xuICAgICAgc2Nyb2xsQ29udGFpbmVyID0gb3duZXJEb2N1bWVudChjb250YWluZXIpLmJvZHk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEltcHJvdmUgR2F0c2J5IHN1cHBvcnRcbiAgICAgIC8vIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvY3NzL2ZvcmNlLXZlcnRpY2FsLXNjcm9sbGJhci9cbiAgICAgIGNvbnN0IHBhcmVudCA9IGNvbnRhaW5lci5wYXJlbnRFbGVtZW50O1xuICAgICAgY29uc3QgY29udGFpbmVyV2luZG93ID0gb3duZXJXaW5kb3coY29udGFpbmVyKTtcbiAgICAgIHNjcm9sbENvbnRhaW5lciA9IChwYXJlbnQgPT0gbnVsbCA/IHZvaWQgMCA6IHBhcmVudC5ub2RlTmFtZSkgPT09ICdIVE1MJyAmJiBjb250YWluZXJXaW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShwYXJlbnQpLm92ZXJmbG93WSA9PT0gJ3Njcm9sbCcgPyBwYXJlbnQgOiBjb250YWluZXI7XG4gICAgfSAvLyBCbG9jayB0aGUgc2Nyb2xsIGV2ZW4gaWYgbm8gc2Nyb2xsYmFyIGlzIHZpc2libGUgdG8gYWNjb3VudCBmb3IgbW9iaWxlIGtleWJvYXJkXG4gICAgLy8gc2NyZWVuc2l6ZSBzaHJpbmsuXG5cblxuICAgIHJlc3RvcmVTdHlsZS5wdXNoKHtcbiAgICAgIHZhbHVlOiBzY3JvbGxDb250YWluZXIuc3R5bGUub3ZlcmZsb3csXG4gICAgICBwcm9wZXJ0eTogJ292ZXJmbG93JyxcbiAgICAgIGVsOiBzY3JvbGxDb250YWluZXJcbiAgICB9LCB7XG4gICAgICB2YWx1ZTogc2Nyb2xsQ29udGFpbmVyLnN0eWxlLm92ZXJmbG93WCxcbiAgICAgIHByb3BlcnR5OiAnb3ZlcmZsb3cteCcsXG4gICAgICBlbDogc2Nyb2xsQ29udGFpbmVyXG4gICAgfSwge1xuICAgICAgdmFsdWU6IHNjcm9sbENvbnRhaW5lci5zdHlsZS5vdmVyZmxvd1ksXG4gICAgICBwcm9wZXJ0eTogJ292ZXJmbG93LXknLFxuICAgICAgZWw6IHNjcm9sbENvbnRhaW5lclxuICAgIH0pO1xuICAgIHNjcm9sbENvbnRhaW5lci5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuICB9XG5cbiAgY29uc3QgcmVzdG9yZSA9ICgpID0+IHtcbiAgICByZXN0b3JlU3R5bGUuZm9yRWFjaCgoe1xuICAgICAgdmFsdWUsXG4gICAgICBlbCxcbiAgICAgIHByb3BlcnR5XG4gICAgfSkgPT4ge1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIGVsLnN0eWxlLnNldFByb3BlcnR5KHByb3BlcnR5LCB2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlbC5zdHlsZS5yZW1vdmVQcm9wZXJ0eShwcm9wZXJ0eSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIHJlc3RvcmU7XG59XG5cbmZ1bmN0aW9uIGdldEhpZGRlblNpYmxpbmdzKGNvbnRhaW5lcikge1xuICBjb25zdCBoaWRkZW5TaWJsaW5ncyA9IFtdO1xuICBbXS5mb3JFYWNoLmNhbGwoY29udGFpbmVyLmNoaWxkcmVuLCBlbGVtZW50ID0+IHtcbiAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJykgPT09ICd0cnVlJykge1xuICAgICAgaGlkZGVuU2libGluZ3MucHVzaChlbGVtZW50KTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gaGlkZGVuU2libGluZ3M7XG59XG5cbi8qKlxuICogQGlnbm9yZSAtIGRvIG5vdCBkb2N1bWVudC5cbiAqXG4gKiBQcm9wZXIgc3RhdGUgbWFuYWdlbWVudCBmb3IgY29udGFpbmVycyBhbmQgdGhlIG1vZGFscyBpbiB0aG9zZSBjb250YWluZXJzLlxuICogU2ltcGxpZmllZCwgYnV0IGluc3BpcmVkIGJ5IHJlYWN0LW92ZXJsYXkncyBNb2RhbE1hbmFnZXIgY2xhc3MuXG4gKiBVc2VkIGJ5IHRoZSBNb2RhbCB0byBlbnN1cmUgcHJvcGVyIHN0eWxpbmcgb2YgY29udGFpbmVycy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW9kYWxNYW5hZ2VyIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jb250YWluZXJzID0gdm9pZCAwO1xuICAgIHRoaXMubW9kYWxzID0gdm9pZCAwO1xuICAgIHRoaXMubW9kYWxzID0gW107XG4gICAgdGhpcy5jb250YWluZXJzID0gW107XG4gIH1cblxuICBhZGQobW9kYWwsIGNvbnRhaW5lcikge1xuICAgIGxldCBtb2RhbEluZGV4ID0gdGhpcy5tb2RhbHMuaW5kZXhPZihtb2RhbCk7XG5cbiAgICBpZiAobW9kYWxJbmRleCAhPT0gLTEpIHtcbiAgICAgIHJldHVybiBtb2RhbEluZGV4O1xuICAgIH1cblxuICAgIG1vZGFsSW5kZXggPSB0aGlzLm1vZGFscy5sZW5ndGg7XG4gICAgdGhpcy5tb2RhbHMucHVzaChtb2RhbCk7IC8vIElmIHRoZSBtb2RhbCB3ZSBhcmUgYWRkaW5nIGlzIGFscmVhZHkgaW4gdGhlIERPTS5cblxuICAgIGlmIChtb2RhbC5tb2RhbFJlZikge1xuICAgICAgYXJpYUhpZGRlbihtb2RhbC5tb2RhbFJlZiwgZmFsc2UpO1xuICAgIH1cblxuICAgIGNvbnN0IGhpZGRlblNpYmxpbmdzID0gZ2V0SGlkZGVuU2libGluZ3MoY29udGFpbmVyKTtcbiAgICBhcmlhSGlkZGVuU2libGluZ3MoY29udGFpbmVyLCBtb2RhbC5tb3VudCwgbW9kYWwubW9kYWxSZWYsIGhpZGRlblNpYmxpbmdzLCB0cnVlKTtcbiAgICBjb25zdCBjb250YWluZXJJbmRleCA9IGZpbmRJbmRleE9mKHRoaXMuY29udGFpbmVycywgaXRlbSA9PiBpdGVtLmNvbnRhaW5lciA9PT0gY29udGFpbmVyKTtcblxuICAgIGlmIChjb250YWluZXJJbmRleCAhPT0gLTEpIHtcbiAgICAgIHRoaXMuY29udGFpbmVyc1tjb250YWluZXJJbmRleF0ubW9kYWxzLnB1c2gobW9kYWwpO1xuICAgICAgcmV0dXJuIG1vZGFsSW5kZXg7XG4gICAgfVxuXG4gICAgdGhpcy5jb250YWluZXJzLnB1c2goe1xuICAgICAgbW9kYWxzOiBbbW9kYWxdLFxuICAgICAgY29udGFpbmVyLFxuICAgICAgcmVzdG9yZTogbnVsbCxcbiAgICAgIGhpZGRlblNpYmxpbmdzXG4gICAgfSk7XG4gICAgcmV0dXJuIG1vZGFsSW5kZXg7XG4gIH1cblxuICBtb3VudChtb2RhbCwgcHJvcHMpIHtcbiAgICBjb25zdCBjb250YWluZXJJbmRleCA9IGZpbmRJbmRleE9mKHRoaXMuY29udGFpbmVycywgaXRlbSA9PiBpdGVtLm1vZGFscy5pbmRleE9mKG1vZGFsKSAhPT0gLTEpO1xuICAgIGNvbnN0IGNvbnRhaW5lckluZm8gPSB0aGlzLmNvbnRhaW5lcnNbY29udGFpbmVySW5kZXhdO1xuXG4gICAgaWYgKCFjb250YWluZXJJbmZvLnJlc3RvcmUpIHtcbiAgICAgIGNvbnRhaW5lckluZm8ucmVzdG9yZSA9IGhhbmRsZUNvbnRhaW5lcihjb250YWluZXJJbmZvLCBwcm9wcyk7XG4gICAgfVxuICB9XG5cbiAgcmVtb3ZlKG1vZGFsLCBhcmlhSGlkZGVuU3RhdGUgPSB0cnVlKSB7XG4gICAgY29uc3QgbW9kYWxJbmRleCA9IHRoaXMubW9kYWxzLmluZGV4T2YobW9kYWwpO1xuXG4gICAgaWYgKG1vZGFsSW5kZXggPT09IC0xKSB7XG4gICAgICByZXR1cm4gbW9kYWxJbmRleDtcbiAgICB9XG5cbiAgICBjb25zdCBjb250YWluZXJJbmRleCA9IGZpbmRJbmRleE9mKHRoaXMuY29udGFpbmVycywgaXRlbSA9PiBpdGVtLm1vZGFscy5pbmRleE9mKG1vZGFsKSAhPT0gLTEpO1xuICAgIGNvbnN0IGNvbnRhaW5lckluZm8gPSB0aGlzLmNvbnRhaW5lcnNbY29udGFpbmVySW5kZXhdO1xuICAgIGNvbnRhaW5lckluZm8ubW9kYWxzLnNwbGljZShjb250YWluZXJJbmZvLm1vZGFscy5pbmRleE9mKG1vZGFsKSwgMSk7XG4gICAgdGhpcy5tb2RhbHMuc3BsaWNlKG1vZGFsSW5kZXgsIDEpOyAvLyBJZiB0aGF0IHdhcyB0aGUgbGFzdCBtb2RhbCBpbiBhIGNvbnRhaW5lciwgY2xlYW4gdXAgdGhlIGNvbnRhaW5lci5cblxuICAgIGlmIChjb250YWluZXJJbmZvLm1vZGFscy5sZW5ndGggPT09IDApIHtcbiAgICAgIC8vIFRoZSBtb2RhbCBtaWdodCBiZSBjbG9zZWQgYmVmb3JlIGl0IGhhZCB0aGUgY2hhbmNlIHRvIGJlIG1vdW50ZWQgaW4gdGhlIERPTS5cbiAgICAgIGlmIChjb250YWluZXJJbmZvLnJlc3RvcmUpIHtcbiAgICAgICAgY29udGFpbmVySW5mby5yZXN0b3JlKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChtb2RhbC5tb2RhbFJlZikge1xuICAgICAgICAvLyBJbiBjYXNlIHRoZSBtb2RhbCB3YXNuJ3QgaW4gdGhlIERPTSB5ZXQuXG4gICAgICAgIGFyaWFIaWRkZW4obW9kYWwubW9kYWxSZWYsIGFyaWFIaWRkZW5TdGF0ZSk7XG4gICAgICB9XG5cbiAgICAgIGFyaWFIaWRkZW5TaWJsaW5ncyhjb250YWluZXJJbmZvLmNvbnRhaW5lciwgbW9kYWwubW91bnQsIG1vZGFsLm1vZGFsUmVmLCBjb250YWluZXJJbmZvLmhpZGRlblNpYmxpbmdzLCBmYWxzZSk7XG4gICAgICB0aGlzLmNvbnRhaW5lcnMuc3BsaWNlKGNvbnRhaW5lckluZGV4LCAxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gT3RoZXJ3aXNlIG1ha2Ugc3VyZSB0aGUgbmV4dCB0b3AgbW9kYWwgaXMgdmlzaWJsZSB0byBhIHNjcmVlbiByZWFkZXIuXG4gICAgICBjb25zdCBuZXh0VG9wID0gY29udGFpbmVySW5mby5tb2RhbHNbY29udGFpbmVySW5mby5tb2RhbHMubGVuZ3RoIC0gMV07IC8vIGFzIHNvb24gYXMgYSBtb2RhbCBpcyBhZGRpbmcgaXRzIG1vZGFsUmVmIGlzIHVuZGVmaW5lZC4gaXQgY2FuJ3Qgc2V0XG4gICAgICAvLyBhcmlhLWhpZGRlbiBiZWNhdXNlIHRoZSBkb20gZWxlbWVudCBkb2Vzbid0IGV4aXN0IGVpdGhlclxuICAgICAgLy8gd2hlbiBtb2RhbCB3YXMgdW5tb3VudGVkIGJlZm9yZSBtb2RhbFJlZiBnZXRzIG51bGxcblxuICAgICAgaWYgKG5leHRUb3AubW9kYWxSZWYpIHtcbiAgICAgICAgYXJpYUhpZGRlbihuZXh0VG9wLm1vZGFsUmVmLCBmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG1vZGFsSW5kZXg7XG4gIH1cblxuICBpc1RvcE1vZGFsKG1vZGFsKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kYWxzLmxlbmd0aCA+IDAgJiYgdGhpcy5tb2RhbHNbdGhpcy5tb2RhbHMubGVuZ3RoIC0gMV0gPT09IG1vZGFsO1xuICB9XG5cbn0iLCIvKiBlc2xpbnQtZGlzYWJsZSBjb25zaXN0ZW50LXJldHVybiwganN4LWExMXkvbm8tbm9uaW50ZXJhY3RpdmUtdGFiaW5kZXggKi9cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBleGFjdFByb3AsIGVsZW1lbnRBY2NlcHRpbmdSZWYsIHVuc3RhYmxlX3VzZUZvcmtSZWYgYXMgdXNlRm9ya1JlZiwgdW5zdGFibGVfb3duZXJEb2N1bWVudCBhcyBvd25lckRvY3VtZW50IH0gZnJvbSAnQG11aS91dGlscyc7IC8vIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9mb2N1cy10cmFwL3RhYmJhYmxlXG5cbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5jb25zdCBjYW5kaWRhdGVzU2VsZWN0b3IgPSBbJ2lucHV0JywgJ3NlbGVjdCcsICd0ZXh0YXJlYScsICdhW2hyZWZdJywgJ2J1dHRvbicsICdbdGFiaW5kZXhdJywgJ2F1ZGlvW2NvbnRyb2xzXScsICd2aWRlb1tjb250cm9sc10nLCAnW2NvbnRlbnRlZGl0YWJsZV06bm90KFtjb250ZW50ZWRpdGFibGU9XCJmYWxzZVwiXSknXS5qb2luKCcsJyk7XG5cbmZ1bmN0aW9uIGdldFRhYkluZGV4KG5vZGUpIHtcbiAgY29uc3QgdGFiaW5kZXhBdHRyID0gcGFyc2VJbnQobm9kZS5nZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JyksIDEwKTtcblxuICBpZiAoIU51bWJlci5pc05hTih0YWJpbmRleEF0dHIpKSB7XG4gICAgcmV0dXJuIHRhYmluZGV4QXR0cjtcbiAgfSAvLyBCcm93c2VycyBkbyBub3QgcmV0dXJuIGB0YWJJbmRleGAgY29ycmVjdGx5IGZvciBjb250ZW50RWRpdGFibGUgbm9kZXM7XG4gIC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTY2MTEwOCZxPWNvbnRlbnRlZGl0YWJsZSUyMHRhYmluZGV4JmNhbj0yXG4gIC8vIHNvIGlmIHRoZXkgZG9uJ3QgaGF2ZSBhIHRhYmluZGV4IGF0dHJpYnV0ZSBzcGVjaWZpY2FsbHkgc2V0LCBhc3N1bWUgaXQncyAwLlxuICAvLyBpbiBDaHJvbWUsIDxkZXRhaWxzLz4sIDxhdWRpbyBjb250cm9scy8+IGFuZCA8dmlkZW8gY29udHJvbHMvPiBlbGVtZW50cyBnZXQgYSBkZWZhdWx0XG4gIC8vICBgdGFiSW5kZXhgIG9mIC0xIHdoZW4gdGhlICd0YWJpbmRleCcgYXR0cmlidXRlIGlzbid0IHNwZWNpZmllZCBpbiB0aGUgRE9NLFxuICAvLyAgeWV0IHRoZXkgYXJlIHN0aWxsIHBhcnQgb2YgdGhlIHJlZ3VsYXIgdGFiIG9yZGVyOyBpbiBGRiwgdGhleSBnZXQgYSBkZWZhdWx0XG4gIC8vICBgdGFiSW5kZXhgIG9mIDA7IHNpbmNlIENocm9tZSBzdGlsbCBwdXRzIHRob3NlIGVsZW1lbnRzIGluIHRoZSByZWd1bGFyIHRhYlxuICAvLyAgb3JkZXIsIGNvbnNpZGVyIHRoZWlyIHRhYiBpbmRleCB0byBiZSAwLlxuXG5cbiAgaWYgKG5vZGUuY29udGVudEVkaXRhYmxlID09PSAndHJ1ZScgfHwgKG5vZGUubm9kZU5hbWUgPT09ICdBVURJTycgfHwgbm9kZS5ub2RlTmFtZSA9PT0gJ1ZJREVPJyB8fCBub2RlLm5vZGVOYW1lID09PSAnREVUQUlMUycpICYmIG5vZGUuZ2V0QXR0cmlidXRlKCd0YWJpbmRleCcpID09PSBudWxsKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICByZXR1cm4gbm9kZS50YWJJbmRleDtcbn1cblxuZnVuY3Rpb24gaXNOb25UYWJiYWJsZVJhZGlvKG5vZGUpIHtcbiAgaWYgKG5vZGUudGFnTmFtZSAhPT0gJ0lOUFVUJyB8fCBub2RlLnR5cGUgIT09ICdyYWRpbycpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoIW5vZGUubmFtZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGNvbnN0IGdldFJhZGlvID0gc2VsZWN0b3IgPT4gbm9kZS5vd25lckRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYGlucHV0W3R5cGU9XCJyYWRpb1wiXSR7c2VsZWN0b3J9YCk7XG5cbiAgbGV0IHJvdmluZyA9IGdldFJhZGlvKGBbbmFtZT1cIiR7bm9kZS5uYW1lfVwiXTpjaGVja2VkYCk7XG5cbiAgaWYgKCFyb3ZpbmcpIHtcbiAgICByb3ZpbmcgPSBnZXRSYWRpbyhgW25hbWU9XCIke25vZGUubmFtZX1cIl1gKTtcbiAgfVxuXG4gIHJldHVybiByb3ZpbmcgIT09IG5vZGU7XG59XG5cbmZ1bmN0aW9uIGlzTm9kZU1hdGNoaW5nU2VsZWN0b3JGb2N1c2FibGUobm9kZSkge1xuICBpZiAobm9kZS5kaXNhYmxlZCB8fCBub2RlLnRhZ05hbWUgPT09ICdJTlBVVCcgJiYgbm9kZS50eXBlID09PSAnaGlkZGVuJyB8fCBpc05vblRhYmJhYmxlUmFkaW8obm9kZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdEdldFRhYmJhYmxlKHJvb3QpIHtcbiAgY29uc3QgcmVndWxhclRhYk5vZGVzID0gW107XG4gIGNvbnN0IG9yZGVyZWRUYWJOb2RlcyA9IFtdO1xuICBBcnJheS5mcm9tKHJvb3QucXVlcnlTZWxlY3RvckFsbChjYW5kaWRhdGVzU2VsZWN0b3IpKS5mb3JFYWNoKChub2RlLCBpKSA9PiB7XG4gICAgY29uc3Qgbm9kZVRhYkluZGV4ID0gZ2V0VGFiSW5kZXgobm9kZSk7XG5cbiAgICBpZiAobm9kZVRhYkluZGV4ID09PSAtMSB8fCAhaXNOb2RlTWF0Y2hpbmdTZWxlY3RvckZvY3VzYWJsZShub2RlKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChub2RlVGFiSW5kZXggPT09IDApIHtcbiAgICAgIHJlZ3VsYXJUYWJOb2Rlcy5wdXNoKG5vZGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvcmRlcmVkVGFiTm9kZXMucHVzaCh7XG4gICAgICAgIGRvY3VtZW50T3JkZXI6IGksXG4gICAgICAgIHRhYkluZGV4OiBub2RlVGFiSW5kZXgsXG4gICAgICAgIG5vZGVcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBvcmRlcmVkVGFiTm9kZXMuc29ydCgoYSwgYikgPT4gYS50YWJJbmRleCA9PT0gYi50YWJJbmRleCA/IGEuZG9jdW1lbnRPcmRlciAtIGIuZG9jdW1lbnRPcmRlciA6IGEudGFiSW5kZXggLSBiLnRhYkluZGV4KS5tYXAoYSA9PiBhLm5vZGUpLmNvbmNhdChyZWd1bGFyVGFiTm9kZXMpO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0SXNFbmFibGVkKCkge1xuICByZXR1cm4gdHJ1ZTtcbn1cbi8qKlxuICogVXRpbGl0eSBjb21wb25lbnQgdGhhdCBsb2NrcyBmb2N1cyBpbnNpZGUgdGhlIGNvbXBvbmVudC5cbiAqL1xuXG5cbmZ1bmN0aW9uIFRyYXBGb2N1cyhwcm9wcykge1xuICBjb25zdCB7XG4gICAgY2hpbGRyZW4sXG4gICAgZGlzYWJsZUF1dG9Gb2N1cyA9IGZhbHNlLFxuICAgIGRpc2FibGVFbmZvcmNlRm9jdXMgPSBmYWxzZSxcbiAgICBkaXNhYmxlUmVzdG9yZUZvY3VzID0gZmFsc2UsXG4gICAgZ2V0VGFiYmFibGUgPSBkZWZhdWx0R2V0VGFiYmFibGUsXG4gICAgaXNFbmFibGVkID0gZGVmYXVsdElzRW5hYmxlZCxcbiAgICBvcGVuXG4gIH0gPSBwcm9wcztcbiAgY29uc3QgaWdub3JlTmV4dEVuZm9yY2VGb2N1cyA9IFJlYWN0LnVzZVJlZigpO1xuICBjb25zdCBzZW50aW5lbFN0YXJ0ID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCBzZW50aW5lbEVuZCA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3Qgbm9kZVRvUmVzdG9yZSA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgcmVhY3RGb2N1c0V2ZW50VGFyZ2V0ID0gUmVhY3QudXNlUmVmKG51bGwpOyAvLyBUaGlzIHZhcmlhYmxlIGlzIHVzZWZ1bCB3aGVuIGRpc2FibGVBdXRvRm9jdXMgaXMgdHJ1ZS5cbiAgLy8gSXQgd2FpdHMgZm9yIHRoZSBhY3RpdmUgZWxlbWVudCB0byBtb3ZlIGludG8gdGhlIGNvbXBvbmVudCB0byBhY3RpdmF0ZS5cblxuICBjb25zdCBhY3RpdmF0ZWQgPSBSZWFjdC51c2VSZWYoZmFsc2UpO1xuICBjb25zdCByb290UmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCBoYW5kbGVSZWYgPSB1c2VGb3JrUmVmKGNoaWxkcmVuLnJlZiwgcm9vdFJlZik7XG4gIGNvbnN0IGxhc3RLZXlkb3duID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIFdlIG1pZ2h0IHJlbmRlciBhbiBlbXB0eSBjaGlsZC5cbiAgICBpZiAoIW9wZW4gfHwgIXJvb3RSZWYuY3VycmVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGFjdGl2YXRlZC5jdXJyZW50ID0gIWRpc2FibGVBdXRvRm9jdXM7XG4gIH0sIFtkaXNhYmxlQXV0b0ZvY3VzLCBvcGVuXSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gV2UgbWlnaHQgcmVuZGVyIGFuIGVtcHR5IGNoaWxkLlxuICAgIGlmICghb3BlbiB8fCAhcm9vdFJlZi5jdXJyZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZG9jID0gb3duZXJEb2N1bWVudChyb290UmVmLmN1cnJlbnQpO1xuXG4gICAgaWYgKCFyb290UmVmLmN1cnJlbnQuY29udGFpbnMoZG9jLmFjdGl2ZUVsZW1lbnQpKSB7XG4gICAgICBpZiAoIXJvb3RSZWYuY3VycmVudC5oYXNBdHRyaWJ1dGUoJ3RhYkluZGV4JykpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFsnTVVJOiBUaGUgbW9kYWwgY29udGVudCBub2RlIGRvZXMgbm90IGFjY2VwdCBmb2N1cy4nLCAnRm9yIHRoZSBiZW5lZml0IG9mIGFzc2lzdGl2ZSB0ZWNobm9sb2dpZXMsICcgKyAndGhlIHRhYkluZGV4IG9mIHRoZSBub2RlIGlzIGJlaW5nIHNldCB0byBcIi0xXCIuJ10uam9pbignXFxuJykpO1xuICAgICAgICB9XG5cbiAgICAgICAgcm9vdFJlZi5jdXJyZW50LnNldEF0dHJpYnV0ZSgndGFiSW5kZXgnLCAtMSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChhY3RpdmF0ZWQuY3VycmVudCkge1xuICAgICAgICByb290UmVmLmN1cnJlbnQuZm9jdXMoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgLy8gcmVzdG9yZUxhc3RGb2N1cygpXG4gICAgICBpZiAoIWRpc2FibGVSZXN0b3JlRm9jdXMpIHtcbiAgICAgICAgLy8gSW4gSUUxMSBpdCBpcyBwb3NzaWJsZSBmb3IgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCB0byBiZSBudWxsIHJlc3VsdGluZ1xuICAgICAgICAvLyBpbiBub2RlVG9SZXN0b3JlLmN1cnJlbnQgYmVpbmcgbnVsbC5cbiAgICAgICAgLy8gTm90IGFsbCBlbGVtZW50cyBpbiBJRTExIGhhdmUgYSBmb2N1cyBtZXRob2QuXG4gICAgICAgIC8vIE9uY2UgSUUxMSBzdXBwb3J0IGlzIGRyb3BwZWQgdGhlIGZvY3VzKCkgY2FsbCBjYW4gYmUgdW5jb25kaXRpb25hbC5cbiAgICAgICAgaWYgKG5vZGVUb1Jlc3RvcmUuY3VycmVudCAmJiBub2RlVG9SZXN0b3JlLmN1cnJlbnQuZm9jdXMpIHtcbiAgICAgICAgICBpZ25vcmVOZXh0RW5mb3JjZUZvY3VzLmN1cnJlbnQgPSB0cnVlO1xuICAgICAgICAgIG5vZGVUb1Jlc3RvcmUuY3VycmVudC5mb2N1cygpO1xuICAgICAgICB9XG5cbiAgICAgICAgbm9kZVRvUmVzdG9yZS5jdXJyZW50ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9OyAvLyBNaXNzaW5nIGBkaXNhYmxlUmVzdG9yZUZvY3VzYCB3aGljaCBpcyBmaW5lLlxuICAgIC8vIFdlIGRvbid0IHN1cHBvcnQgY2hhbmdpbmcgdGhhdCBwcm9wIG9uIGFuIG9wZW4gVHJhcEZvY3VzXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICB9LCBbb3Blbl0pO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIFdlIG1pZ2h0IHJlbmRlciBhbiBlbXB0eSBjaGlsZC5cbiAgICBpZiAoIW9wZW4gfHwgIXJvb3RSZWYuY3VycmVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGRvYyA9IG93bmVyRG9jdW1lbnQocm9vdFJlZi5jdXJyZW50KTtcblxuICAgIGNvbnN0IGNvbnRhaW4gPSBuYXRpdmVFdmVudCA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGN1cnJlbnQ6IHJvb3RFbGVtZW50XG4gICAgICB9ID0gcm9vdFJlZjsgLy8gQ2xlYW51cCBmdW5jdGlvbnMgYXJlIGV4ZWN1dGVkIGxhemlseSBpbiBSZWFjdCAxNy5cbiAgICAgIC8vIENvbnRhaW4gY2FuIGJlIGNhbGxlZCBiZXR3ZWVuIHRoZSBjb21wb25lbnQgYmVpbmcgdW5tb3VudGVkIGFuZCBpdHMgY2xlYW51cCBmdW5jdGlvbiBiZWluZyBydW4uXG5cbiAgICAgIGlmIChyb290RWxlbWVudCA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICghZG9jLmhhc0ZvY3VzKCkgfHwgZGlzYWJsZUVuZm9yY2VGb2N1cyB8fCAhaXNFbmFibGVkKCkgfHwgaWdub3JlTmV4dEVuZm9yY2VGb2N1cy5jdXJyZW50KSB7XG4gICAgICAgIGlnbm9yZU5leHRFbmZvcmNlRm9jdXMuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICghcm9vdEVsZW1lbnQuY29udGFpbnMoZG9jLmFjdGl2ZUVsZW1lbnQpKSB7XG4gICAgICAgIC8vIGlmIHRoZSBmb2N1cyBldmVudCBpcyBub3QgY29taW5nIGZyb20gaW5zaWRlIHRoZSBjaGlsZHJlbidzIHJlYWN0IHRyZWUsIHJlc2V0IHRoZSByZWZzXG4gICAgICAgIGlmIChuYXRpdmVFdmVudCAmJiByZWFjdEZvY3VzRXZlbnRUYXJnZXQuY3VycmVudCAhPT0gbmF0aXZlRXZlbnQudGFyZ2V0IHx8IGRvYy5hY3RpdmVFbGVtZW50ICE9PSByZWFjdEZvY3VzRXZlbnRUYXJnZXQuY3VycmVudCkge1xuICAgICAgICAgIHJlYWN0Rm9jdXNFdmVudFRhcmdldC5jdXJyZW50ID0gbnVsbDtcbiAgICAgICAgfSBlbHNlIGlmIChyZWFjdEZvY3VzRXZlbnRUYXJnZXQuY3VycmVudCAhPT0gbnVsbCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghYWN0aXZhdGVkLmN1cnJlbnQpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgdGFiYmFibGUgPSBbXTtcblxuICAgICAgICBpZiAoZG9jLmFjdGl2ZUVsZW1lbnQgPT09IHNlbnRpbmVsU3RhcnQuY3VycmVudCB8fCBkb2MuYWN0aXZlRWxlbWVudCA9PT0gc2VudGluZWxFbmQuY3VycmVudCkge1xuICAgICAgICAgIHRhYmJhYmxlID0gZ2V0VGFiYmFibGUocm9vdFJlZi5jdXJyZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0YWJiYWJsZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgdmFyIF9sYXN0S2V5ZG93biRjdXJyZW50LCBfbGFzdEtleWRvd24kY3VycmVudDI7XG5cbiAgICAgICAgICBjb25zdCBpc1NoaWZ0VGFiID0gQm9vbGVhbigoKF9sYXN0S2V5ZG93biRjdXJyZW50ID0gbGFzdEtleWRvd24uY3VycmVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9sYXN0S2V5ZG93biRjdXJyZW50LnNoaWZ0S2V5KSAmJiAoKF9sYXN0S2V5ZG93biRjdXJyZW50MiA9IGxhc3RLZXlkb3duLmN1cnJlbnQpID09IG51bGwgPyB2b2lkIDAgOiBfbGFzdEtleWRvd24kY3VycmVudDIua2V5KSA9PT0gJ1RhYicpO1xuICAgICAgICAgIGNvbnN0IGZvY3VzTmV4dCA9IHRhYmJhYmxlWzBdO1xuICAgICAgICAgIGNvbnN0IGZvY3VzUHJldmlvdXMgPSB0YWJiYWJsZVt0YWJiYWJsZS5sZW5ndGggLSAxXTtcblxuICAgICAgICAgIGlmIChpc1NoaWZ0VGFiKSB7XG4gICAgICAgICAgICBmb2N1c1ByZXZpb3VzLmZvY3VzKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvY3VzTmV4dC5mb2N1cygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByb290RWxlbWVudC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGxvb3BGb2N1cyA9IG5hdGl2ZUV2ZW50ID0+IHtcbiAgICAgIGxhc3RLZXlkb3duLmN1cnJlbnQgPSBuYXRpdmVFdmVudDtcblxuICAgICAgaWYgKGRpc2FibGVFbmZvcmNlRm9jdXMgfHwgIWlzRW5hYmxlZCgpIHx8IG5hdGl2ZUV2ZW50LmtleSAhPT0gJ1RhYicpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSAvLyBNYWtlIHN1cmUgdGhlIG5leHQgdGFiIHN0YXJ0cyBmcm9tIHRoZSByaWdodCBwbGFjZS5cbiAgICAgIC8vIGRvYy5hY3RpdmVFbGVtZW50IHJlZmVyZXMgdG8gdGhlIG9yaWdpbi5cblxuXG4gICAgICBpZiAoZG9jLmFjdGl2ZUVsZW1lbnQgPT09IHJvb3RSZWYuY3VycmVudCAmJiBuYXRpdmVFdmVudC5zaGlmdEtleSkge1xuICAgICAgICAvLyBXZSBuZWVkIHRvIGlnbm9yZSB0aGUgbmV4dCBjb250YWluIGFzXG4gICAgICAgIC8vIGl0IHdpbGwgdHJ5IHRvIG1vdmUgdGhlIGZvY3VzIGJhY2sgdG8gdGhlIHJvb3RSZWYgZWxlbWVudC5cbiAgICAgICAgaWdub3JlTmV4dEVuZm9yY2VGb2N1cy5jdXJyZW50ID0gdHJ1ZTtcbiAgICAgICAgc2VudGluZWxFbmQuY3VycmVudC5mb2N1cygpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNpbicsIGNvbnRhaW4pO1xuICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgbG9vcEZvY3VzLCB0cnVlKTsgLy8gV2l0aCBFZGdlLCBTYWZhcmkgYW5kIEZpcmVmb3gsIG5vIGZvY3VzIHJlbGF0ZWQgZXZlbnRzIGFyZSBmaXJlZCB3aGVuIHRoZSBmb2N1c2VkIGFyZWEgc3RvcHMgYmVpbmcgYSBmb2N1c2VkIGFyZWEuXG4gICAgLy8gZS5nLiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD01NTk1NjEuXG4gICAgLy8gSW5zdGVhZCwgd2UgY2FuIGxvb2sgaWYgdGhlIGFjdGl2ZSBlbGVtZW50IHdhcyByZXN0b3JlZCBvbiB0aGUgQk9EWSBlbGVtZW50LlxuICAgIC8vXG4gICAgLy8gVGhlIHdoYXR3ZyBzcGVjIGRlZmluZXMgaG93IHRoZSBicm93c2VyIHNob3VsZCBiZWhhdmUgYnV0IGRvZXMgbm90IGV4cGxpY2l0bHkgbWVudGlvbiBhbnkgZXZlbnRzOlxuICAgIC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2ludGVyYWN0aW9uLmh0bWwjZm9jdXMtZml4dXAtcnVsZS5cblxuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgaWYgKGRvYy5hY3RpdmVFbGVtZW50LnRhZ05hbWUgPT09ICdCT0RZJykge1xuICAgICAgICBjb250YWluKCk7XG4gICAgICB9XG4gICAgfSwgNTApO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcbiAgICAgIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1c2luJywgY29udGFpbik7XG4gICAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGxvb3BGb2N1cywgdHJ1ZSk7XG4gICAgfTtcbiAgfSwgW2Rpc2FibGVBdXRvRm9jdXMsIGRpc2FibGVFbmZvcmNlRm9jdXMsIGRpc2FibGVSZXN0b3JlRm9jdXMsIGlzRW5hYmxlZCwgb3BlbiwgZ2V0VGFiYmFibGVdKTtcblxuICBjb25zdCBvbkZvY3VzID0gZXZlbnQgPT4ge1xuICAgIGlmIChub2RlVG9SZXN0b3JlLmN1cnJlbnQgPT09IG51bGwpIHtcbiAgICAgIG5vZGVUb1Jlc3RvcmUuY3VycmVudCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQ7XG4gICAgfVxuXG4gICAgYWN0aXZhdGVkLmN1cnJlbnQgPSB0cnVlO1xuICAgIHJlYWN0Rm9jdXNFdmVudFRhcmdldC5jdXJyZW50ID0gZXZlbnQudGFyZ2V0O1xuICAgIGNvbnN0IGNoaWxkcmVuUHJvcHNIYW5kbGVyID0gY2hpbGRyZW4ucHJvcHMub25Gb2N1cztcblxuICAgIGlmIChjaGlsZHJlblByb3BzSGFuZGxlcikge1xuICAgICAgY2hpbGRyZW5Qcm9wc0hhbmRsZXIoZXZlbnQpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVGb2N1c1NlbnRpbmVsID0gZXZlbnQgPT4ge1xuICAgIGlmIChub2RlVG9SZXN0b3JlLmN1cnJlbnQgPT09IG51bGwpIHtcbiAgICAgIG5vZGVUb1Jlc3RvcmUuY3VycmVudCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQ7XG4gICAgfVxuXG4gICAgYWN0aXZhdGVkLmN1cnJlbnQgPSB0cnVlO1xuICB9O1xuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeHMoUmVhY3QuRnJhZ21lbnQsIHtcbiAgICBjaGlsZHJlbjogWy8qI19fUFVSRV9fKi9fanN4KFwiZGl2XCIsIHtcbiAgICAgIHRhYkluZGV4OiAwLFxuICAgICAgb25Gb2N1czogaGFuZGxlRm9jdXNTZW50aW5lbCxcbiAgICAgIHJlZjogc2VudGluZWxTdGFydCxcbiAgICAgIFwiZGF0YS10ZXN0XCI6IFwic2VudGluZWxTdGFydFwiXG4gICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGRyZW4sIHtcbiAgICAgIHJlZjogaGFuZGxlUmVmLFxuICAgICAgb25Gb2N1c1xuICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeChcImRpdlwiLCB7XG4gICAgICB0YWJJbmRleDogMCxcbiAgICAgIG9uRm9jdXM6IGhhbmRsZUZvY3VzU2VudGluZWwsXG4gICAgICByZWY6IHNlbnRpbmVsRW5kLFxuICAgICAgXCJkYXRhLXRlc3RcIjogXCJzZW50aW5lbEVuZFwiXG4gICAgfSldXG4gIH0pO1xufVxuXG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBUcmFwRm9jdXMucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIEEgc2luZ2xlIGNoaWxkIGNvbnRlbnQgZWxlbWVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBlbGVtZW50QWNjZXB0aW5nUmVmLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSB0cmFwIGZvY3VzIHdpbGwgbm90IGF1dG9tYXRpY2FsbHkgc2hpZnQgZm9jdXMgdG8gaXRzZWxmIHdoZW4gaXQgb3BlbnMsIGFuZFxuICAgKiByZXBsYWNlIGl0IHRvIHRoZSBsYXN0IGZvY3VzZWQgZWxlbWVudCB3aGVuIGl0IGNsb3Nlcy5cbiAgICogVGhpcyBhbHNvIHdvcmtzIGNvcnJlY3RseSB3aXRoIGFueSB0cmFwIGZvY3VzIGNoaWxkcmVuIHRoYXQgaGF2ZSB0aGUgYGRpc2FibGVBdXRvRm9jdXNgIHByb3AuXG4gICAqXG4gICAqIEdlbmVyYWxseSB0aGlzIHNob3VsZCBuZXZlciBiZSBzZXQgdG8gYHRydWVgIGFzIGl0IG1ha2VzIHRoZSB0cmFwIGZvY3VzIGxlc3NcbiAgICogYWNjZXNzaWJsZSB0byBhc3Npc3RpdmUgdGVjaG5vbG9naWVzLCBsaWtlIHNjcmVlbiByZWFkZXJzLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZUF1dG9Gb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHRyYXAgZm9jdXMgd2lsbCBub3QgcHJldmVudCBmb2N1cyBmcm9tIGxlYXZpbmcgdGhlIHRyYXAgZm9jdXMgd2hpbGUgb3Blbi5cbiAgICpcbiAgICogR2VuZXJhbGx5IHRoaXMgc2hvdWxkIG5ldmVyIGJlIHNldCB0byBgdHJ1ZWAgYXMgaXQgbWFrZXMgdGhlIHRyYXAgZm9jdXMgbGVzc1xuICAgKiBhY2Nlc3NpYmxlIHRvIGFzc2lzdGl2ZSB0ZWNobm9sb2dpZXMsIGxpa2Ugc2NyZWVuIHJlYWRlcnMuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlRW5mb3JjZUZvY3VzOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgdHJhcCBmb2N1cyB3aWxsIG5vdCByZXN0b3JlIGZvY3VzIHRvIHByZXZpb3VzbHkgZm9jdXNlZCBlbGVtZW50IG9uY2VcbiAgICogdHJhcCBmb2N1cyBpcyBoaWRkZW4gb3IgdW5tb3VudGVkLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZVJlc3RvcmVGb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFJldHVybnMgYW4gYXJyYXkgb2Ygb3JkZXJlZCB0YWJiYWJsZSBub2RlcyAoaS5lLiBpbiB0YWIgb3JkZXIpIHdpdGhpbiB0aGUgcm9vdC5cbiAgICogRm9yIGluc3RhbmNlLCB5b3UgY2FuIHByb3ZpZGUgdGhlIFwidGFiYmFibGVcIiBucG0gZGVwZW5kZW5jeS5cbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gcm9vdFxuICAgKi9cbiAgZ2V0VGFiYmFibGU6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBUaGlzIHByb3AgZXh0ZW5kcyB0aGUgYG9wZW5gIHByb3AuXG4gICAqIEl0IGFsbG93cyB0byB0b2dnbGUgdGhlIG9wZW4gc3RhdGUgd2l0aG91dCBoYXZpbmcgdG8gd2FpdCBmb3IgYSByZXJlbmRlciB3aGVuIGNoYW5naW5nIHRoZSBgb3BlbmAgcHJvcC5cbiAgICogVGhpcyBwcm9wIHNob3VsZCBiZSBtZW1vaXplZC5cbiAgICogSXQgY2FuIGJlIHVzZWQgdG8gc3VwcG9ydCBtdWx0aXBsZSB0cmFwIGZvY3VzIG1vdW50ZWQgYXQgdGhlIHNhbWUgdGltZS5cbiAgICogQGRlZmF1bHQgZnVuY3Rpb24gZGVmYXVsdElzRW5hYmxlZCgpIHtcbiAgICogICByZXR1cm4gdHJ1ZTtcbiAgICogfVxuICAgKi9cbiAgaXNFbmFibGVkOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCBmb2N1cyBpcyBsb2NrZWQuXG4gICAqL1xuICBvcGVuOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkXG59IDogdm9pZCAwO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgVHJhcEZvY3VzWydwcm9wVHlwZXMnICsgJyddID0gZXhhY3RQcm9wKFRyYXBGb2N1cy5wcm9wVHlwZXMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUcmFwRm9jdXM7IiwiaW1wb3J0IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgZnJvbSAnLi4vZ2VuZXJhdGVVdGlsaXR5Q2xhc3Nlcyc7XG5pbXBvcnQgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MgZnJvbSAnLi4vZ2VuZXJhdGVVdGlsaXR5Q2xhc3MnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldE1vZGFsVXRpbGl0eUNsYXNzKHNsb3QpIHtcbiAgcmV0dXJuIGdlbmVyYXRlVXRpbGl0eUNsYXNzKCdNdWlNb2RhbCcsIHNsb3QpO1xufVxuY29uc3QgbW9kYWxVbnN0eWxlZENsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlNb2RhbCcsIFsncm9vdCcsICdoaWRkZW4nXSk7XG5leHBvcnQgZGVmYXVsdCBtb2RhbFVuc3R5bGVkQ2xhc3NlczsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2hpbGRyZW5cIiwgXCJjbGFzc2VzXCIsIFwiY2xhc3NOYW1lXCIsIFwiY2xvc2VBZnRlclRyYW5zaXRpb25cIiwgXCJjb21wb25lbnRcIiwgXCJjb21wb25lbnRzXCIsIFwiY29tcG9uZW50c1Byb3BzXCIsIFwiY29udGFpbmVyXCIsIFwiZGlzYWJsZUF1dG9Gb2N1c1wiLCBcImRpc2FibGVFbmZvcmNlRm9jdXNcIiwgXCJkaXNhYmxlRXNjYXBlS2V5RG93blwiLCBcImRpc2FibGVQb3J0YWxcIiwgXCJkaXNhYmxlUmVzdG9yZUZvY3VzXCIsIFwiZGlzYWJsZVNjcm9sbExvY2tcIiwgXCJoaWRlQmFja2Ryb3BcIiwgXCJrZWVwTW91bnRlZFwiLCBcIm1hbmFnZXJcIiwgXCJvbkJhY2tkcm9wQ2xpY2tcIiwgXCJvbkNsb3NlXCIsIFwib25LZXlEb3duXCIsIFwib3BlblwiLCBcIm9uVHJhbnNpdGlvbkVudGVyXCIsIFwib25UcmFuc2l0aW9uRXhpdGVkXCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgZWxlbWVudEFjY2VwdGluZ1JlZiwgSFRNTEVsZW1lbnRUeXBlLCB1bnN0YWJsZV9vd25lckRvY3VtZW50IGFzIG93bmVyRG9jdW1lbnQsIHVuc3RhYmxlX3VzZUZvcmtSZWYgYXMgdXNlRm9ya1JlZiwgdW5zdGFibGVfY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uIGFzIGNyZWF0ZUNoYWluZWRGdW5jdGlvbiwgdW5zdGFibGVfdXNlRXZlbnRDYWxsYmFjayBhcyB1c2VFdmVudENhbGxiYWNrIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgY29tcG9zZUNsYXNzZXMgZnJvbSAnLi4vY29tcG9zZUNsYXNzZXMnO1xuaW1wb3J0IGFwcGVuZE93bmVyU3RhdGUgZnJvbSAnLi4vdXRpbHMvYXBwZW5kT3duZXJTdGF0ZSc7XG5pbXBvcnQgUG9ydGFsIGZyb20gJy4uL1BvcnRhbCc7XG5pbXBvcnQgTW9kYWxNYW5hZ2VyLCB7IGFyaWFIaWRkZW4gfSBmcm9tICcuL01vZGFsTWFuYWdlcic7XG5pbXBvcnQgVHJhcEZvY3VzIGZyb20gJy4uL1RyYXBGb2N1cyc7XG5pbXBvcnQgeyBnZXRNb2RhbFV0aWxpdHlDbGFzcyB9IGZyb20gJy4vbW9kYWxVbnN0eWxlZENsYXNzZXMnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIG9wZW4sXG4gICAgZXhpdGVkLFxuICAgIGNsYXNzZXNcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCcsICFvcGVuICYmIGV4aXRlZCAmJiAnaGlkZGVuJ11cbiAgfTtcbiAgcmV0dXJuIGNvbXBvc2VDbGFzc2VzKHNsb3RzLCBnZXRNb2RhbFV0aWxpdHlDbGFzcywgY2xhc3Nlcyk7XG59O1xuXG5mdW5jdGlvbiBnZXRDb250YWluZXIoY29udGFpbmVyKSB7XG4gIHJldHVybiB0eXBlb2YgY29udGFpbmVyID09PSAnZnVuY3Rpb24nID8gY29udGFpbmVyKCkgOiBjb250YWluZXI7XG59XG5cbmZ1bmN0aW9uIGdldEhhc1RyYW5zaXRpb24ocHJvcHMpIHtcbiAgcmV0dXJuIHByb3BzLmNoaWxkcmVuID8gcHJvcHMuY2hpbGRyZW4ucHJvcHMuaGFzT3duUHJvcGVydHkoJ2luJykgOiBmYWxzZTtcbn0gLy8gQSBtb2RhbCBtYW5hZ2VyIHVzZWQgdG8gdHJhY2sgYW5kIG1hbmFnZSB0aGUgc3RhdGUgb2Ygb3BlbiBNb2RhbHMuXG4vLyBNb2RhbHMgZG9uJ3Qgb3BlbiBvbiB0aGUgc2VydmVyIHNvIHRoaXMgd29uJ3QgY29uZmxpY3Qgd2l0aCBjb25jdXJyZW50IHJlcXVlc3RzLlxuXG5cbmNvbnN0IGRlZmF1bHRNYW5hZ2VyID0gbmV3IE1vZGFsTWFuYWdlcigpO1xuLyoqXG4gKiBNb2RhbCBpcyBhIGxvd2VyLWxldmVsIGNvbnN0cnVjdCB0aGF0IGlzIGxldmVyYWdlZCBieSB0aGUgZm9sbG93aW5nIGNvbXBvbmVudHM6XG4gKlxuICogLSBbRGlhbG9nXSgvbWF0ZXJpYWwtdWkvYXBpL2RpYWxvZy8pXG4gKiAtIFtEcmF3ZXJdKC9tYXRlcmlhbC11aS9hcGkvZHJhd2VyLylcbiAqIC0gW01lbnVdKC9tYXRlcmlhbC11aS9hcGkvbWVudS8pXG4gKiAtIFtQb3BvdmVyXSgvbWF0ZXJpYWwtdWkvYXBpL3BvcG92ZXIvKVxuICpcbiAqIElmIHlvdSBhcmUgY3JlYXRpbmcgYSBtb2RhbCBkaWFsb2csIHlvdSBwcm9iYWJseSB3YW50IHRvIHVzZSB0aGUgW0RpYWxvZ10oL21hdGVyaWFsLXVpL2FwaS9kaWFsb2cvKSBjb21wb25lbnRcbiAqIHJhdGhlciB0aGFuIGRpcmVjdGx5IHVzaW5nIE1vZGFsLlxuICpcbiAqIFRoaXMgY29tcG9uZW50IHNoYXJlcyBtYW55IGNvbmNlcHRzIHdpdGggW3JlYWN0LW92ZXJsYXlzXShodHRwczovL3JlYWN0LWJvb3RzdHJhcC5naXRodWIuaW8vcmVhY3Qtb3ZlcmxheXMvI21vZGFscykuXG4gKi9cblxuY29uc3QgTW9kYWxVbnN0eWxlZCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIE1vZGFsVW5zdHlsZWQocHJvcHMsIHJlZikge1xuICB2YXIgX3Byb3BzJGFyaWFIaWRkZW4sIF9jb21wb25lbnRzUHJvcHMkcm9vdDtcblxuICBjb25zdCB7XG4gICAgY2hpbGRyZW4sXG4gICAgY2xhc3NlczogY2xhc3Nlc1Byb3AsXG4gICAgY2xhc3NOYW1lLFxuICAgIGNsb3NlQWZ0ZXJUcmFuc2l0aW9uID0gZmFsc2UsXG4gICAgY29tcG9uZW50ID0gJ2RpdicsXG4gICAgY29tcG9uZW50cyA9IHt9LFxuICAgIGNvbXBvbmVudHNQcm9wcyA9IHt9LFxuICAgIGNvbnRhaW5lcixcbiAgICBkaXNhYmxlQXV0b0ZvY3VzID0gZmFsc2UsXG4gICAgZGlzYWJsZUVuZm9yY2VGb2N1cyA9IGZhbHNlLFxuICAgIGRpc2FibGVFc2NhcGVLZXlEb3duID0gZmFsc2UsXG4gICAgZGlzYWJsZVBvcnRhbCA9IGZhbHNlLFxuICAgIGRpc2FibGVSZXN0b3JlRm9jdXMgPSBmYWxzZSxcbiAgICBkaXNhYmxlU2Nyb2xsTG9jayA9IGZhbHNlLFxuICAgIGhpZGVCYWNrZHJvcCA9IGZhbHNlLFxuICAgIGtlZXBNb3VudGVkID0gZmFsc2UsXG4gICAgLy8gcHJpdmF0ZVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9wcm9wLXR5cGVzXG4gICAgbWFuYWdlciA9IGRlZmF1bHRNYW5hZ2VyLFxuICAgIG9uQmFja2Ryb3BDbGljayxcbiAgICBvbkNsb3NlLFxuICAgIG9uS2V5RG93bixcbiAgICBvcGVuLFxuXG4gICAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QvcHJvcC10eXBlcyAqL1xuICAgIG9uVHJhbnNpdGlvbkVudGVyLFxuICAgIG9uVHJhbnNpdGlvbkV4aXRlZFxuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3QgW2V4aXRlZCwgc2V0RXhpdGVkXSA9IFJlYWN0LnVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBtb2RhbCA9IFJlYWN0LnVzZVJlZih7fSk7XG4gIGNvbnN0IG1vdW50Tm9kZVJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgbW9kYWxSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gIGNvbnN0IGhhbmRsZVJlZiA9IHVzZUZvcmtSZWYobW9kYWxSZWYsIHJlZik7XG4gIGNvbnN0IGhhc1RyYW5zaXRpb24gPSBnZXRIYXNUcmFuc2l0aW9uKHByb3BzKTtcbiAgY29uc3QgYXJpYUhpZGRlblByb3AgPSAoX3Byb3BzJGFyaWFIaWRkZW4gPSBwcm9wc1snYXJpYS1oaWRkZW4nXSkgIT0gbnVsbCA/IF9wcm9wcyRhcmlhSGlkZGVuIDogdHJ1ZTtcblxuICBjb25zdCBnZXREb2MgPSAoKSA9PiBvd25lckRvY3VtZW50KG1vdW50Tm9kZVJlZi5jdXJyZW50KTtcblxuICBjb25zdCBnZXRNb2RhbCA9ICgpID0+IHtcbiAgICBtb2RhbC5jdXJyZW50Lm1vZGFsUmVmID0gbW9kYWxSZWYuY3VycmVudDtcbiAgICBtb2RhbC5jdXJyZW50Lm1vdW50Tm9kZSA9IG1vdW50Tm9kZVJlZi5jdXJyZW50O1xuICAgIHJldHVybiBtb2RhbC5jdXJyZW50O1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU1vdW50ZWQgPSAoKSA9PiB7XG4gICAgbWFuYWdlci5tb3VudChnZXRNb2RhbCgpLCB7XG4gICAgICBkaXNhYmxlU2Nyb2xsTG9ja1xuICAgIH0pOyAvLyBGaXggYSBidWcgb24gQ2hyb21lIHdoZXJlIHRoZSBzY3JvbGwgaXNuJ3QgaW5pdGlhbGx5IDAuXG5cbiAgICBtb2RhbFJlZi5jdXJyZW50LnNjcm9sbFRvcCA9IDA7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT3BlbiA9IHVzZUV2ZW50Q2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IHJlc29sdmVkQ29udGFpbmVyID0gZ2V0Q29udGFpbmVyKGNvbnRhaW5lcikgfHwgZ2V0RG9jKCkuYm9keTtcbiAgICBtYW5hZ2VyLmFkZChnZXRNb2RhbCgpLCByZXNvbHZlZENvbnRhaW5lcik7IC8vIFRoZSBlbGVtZW50IHdhcyBhbHJlYWR5IG1vdW50ZWQuXG5cbiAgICBpZiAobW9kYWxSZWYuY3VycmVudCkge1xuICAgICAgaGFuZGxlTW91bnRlZCgpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGlzVG9wTW9kYWwgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiBtYW5hZ2VyLmlzVG9wTW9kYWwoZ2V0TW9kYWwoKSksIFttYW5hZ2VyXSk7XG4gIGNvbnN0IGhhbmRsZVBvcnRhbFJlZiA9IHVzZUV2ZW50Q2FsbGJhY2sobm9kZSA9PiB7XG4gICAgbW91bnROb2RlUmVmLmN1cnJlbnQgPSBub2RlO1xuXG4gICAgaWYgKCFub2RlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKG9wZW4gJiYgaXNUb3BNb2RhbCgpKSB7XG4gICAgICBoYW5kbGVNb3VudGVkKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFyaWFIaWRkZW4obW9kYWxSZWYuY3VycmVudCwgYXJpYUhpZGRlblByb3ApO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGhhbmRsZUNsb3NlID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIG1hbmFnZXIucmVtb3ZlKGdldE1vZGFsKCksIGFyaWFIaWRkZW5Qcm9wKTtcbiAgfSwgW21hbmFnZXIsIGFyaWFIaWRkZW5Qcm9wXSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGhhbmRsZUNsb3NlKCk7XG4gICAgfTtcbiAgfSwgW2hhbmRsZUNsb3NlXSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG9wZW4pIHtcbiAgICAgIGhhbmRsZU9wZW4oKTtcbiAgICB9IGVsc2UgaWYgKCFoYXNUcmFuc2l0aW9uIHx8ICFjbG9zZUFmdGVyVHJhbnNpdGlvbikge1xuICAgICAgaGFuZGxlQ2xvc2UoKTtcbiAgICB9XG4gIH0sIFtvcGVuLCBoYW5kbGVDbG9zZSwgaGFzVHJhbnNpdGlvbiwgY2xvc2VBZnRlclRyYW5zaXRpb24sIGhhbmRsZU9wZW5dKTtcblxuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgY2xhc3NlczogY2xhc3Nlc1Byb3AsXG4gICAgY2xvc2VBZnRlclRyYW5zaXRpb24sXG4gICAgZGlzYWJsZUF1dG9Gb2N1cyxcbiAgICBkaXNhYmxlRW5mb3JjZUZvY3VzLFxuICAgIGRpc2FibGVFc2NhcGVLZXlEb3duLFxuICAgIGRpc2FibGVQb3J0YWwsXG4gICAgZGlzYWJsZVJlc3RvcmVGb2N1cyxcbiAgICBkaXNhYmxlU2Nyb2xsTG9jayxcbiAgICBleGl0ZWQsXG4gICAgaGlkZUJhY2tkcm9wLFxuICAgIGtlZXBNb3VudGVkXG4gIH0pO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcblxuICBpZiAoIWtlZXBNb3VudGVkICYmICFvcGVuICYmICghaGFzVHJhbnNpdGlvbiB8fCBleGl0ZWQpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBoYW5kbGVFbnRlciA9ICgpID0+IHtcbiAgICBzZXRFeGl0ZWQoZmFsc2UpO1xuXG4gICAgaWYgKG9uVHJhbnNpdGlvbkVudGVyKSB7XG4gICAgICBvblRyYW5zaXRpb25FbnRlcigpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVFeGl0ZWQgPSAoKSA9PiB7XG4gICAgc2V0RXhpdGVkKHRydWUpO1xuXG4gICAgaWYgKG9uVHJhbnNpdGlvbkV4aXRlZCkge1xuICAgICAgb25UcmFuc2l0aW9uRXhpdGVkKCk7XG4gICAgfVxuXG4gICAgaWYgKGNsb3NlQWZ0ZXJUcmFuc2l0aW9uKSB7XG4gICAgICBoYW5kbGVDbG9zZSgpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVCYWNrZHJvcENsaWNrID0gZXZlbnQgPT4ge1xuICAgIGlmIChldmVudC50YXJnZXQgIT09IGV2ZW50LmN1cnJlbnRUYXJnZXQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAob25CYWNrZHJvcENsaWNrKSB7XG4gICAgICBvbkJhY2tkcm9wQ2xpY2soZXZlbnQpO1xuICAgIH1cblxuICAgIGlmIChvbkNsb3NlKSB7XG4gICAgICBvbkNsb3NlKGV2ZW50LCAnYmFja2Ryb3BDbGljaycpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVLZXlEb3duID0gZXZlbnQgPT4ge1xuICAgIGlmIChvbktleURvd24pIHtcbiAgICAgIG9uS2V5RG93bihldmVudCk7XG4gICAgfSAvLyBUaGUgaGFuZGxlciBkb2Vzbid0IHRha2UgZXZlbnQuZGVmYXVsdFByZXZlbnRlZCBpbnRvIGFjY291bnQ6XG4gICAgLy9cbiAgICAvLyBldmVudC5wcmV2ZW50RGVmYXVsdCgpIGlzIG1lYW50IHRvIHN0b3AgZGVmYXVsdCBiZWhhdmlvcnMgbGlrZVxuICAgIC8vIGNsaWNraW5nIGEgY2hlY2tib3ggdG8gY2hlY2sgaXQsIGhpdHRpbmcgYSBidXR0b24gdG8gc3VibWl0IGEgZm9ybSxcbiAgICAvLyBhbmQgaGl0dGluZyBsZWZ0IGFycm93IHRvIG1vdmUgdGhlIGN1cnNvciBpbiBhIHRleHQgaW5wdXQgZXRjLlxuICAgIC8vIE9ubHkgc3BlY2lhbCBIVE1MIGVsZW1lbnRzIGhhdmUgdGhlc2UgZGVmYXVsdCBiZWhhdmlvcnMuXG5cblxuICAgIGlmIChldmVudC5rZXkgIT09ICdFc2NhcGUnIHx8ICFpc1RvcE1vZGFsKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIWRpc2FibGVFc2NhcGVLZXlEb3duKSB7XG4gICAgICAvLyBTd2FsbG93IHRoZSBldmVudCwgaW4gY2FzZSBzb21lb25lIGlzIGxpc3RlbmluZyBmb3IgdGhlIGVzY2FwZSBrZXkgb24gdGhlIGJvZHkuXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgaWYgKG9uQ2xvc2UpIHtcbiAgICAgICAgb25DbG9zZShldmVudCwgJ2VzY2FwZUtleURvd24nKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgY29uc3QgY2hpbGRQcm9wcyA9IHt9O1xuXG4gIGlmIChjaGlsZHJlbi5wcm9wcy50YWJJbmRleCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2hpbGRQcm9wcy50YWJJbmRleCA9ICctMSc7XG4gIH0gLy8gSXQncyBhIFRyYW5zaXRpb24gbGlrZSBjb21wb25lbnRcblxuXG4gIGlmIChoYXNUcmFuc2l0aW9uKSB7XG4gICAgY2hpbGRQcm9wcy5vbkVudGVyID0gY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uKGhhbmRsZUVudGVyLCBjaGlsZHJlbi5wcm9wcy5vbkVudGVyKTtcbiAgICBjaGlsZFByb3BzLm9uRXhpdGVkID0gY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uKGhhbmRsZUV4aXRlZCwgY2hpbGRyZW4ucHJvcHMub25FeGl0ZWQpO1xuICB9XG5cbiAgY29uc3QgUm9vdCA9IGNvbXBvbmVudHMuUm9vdCB8fCBjb21wb25lbnQ7XG4gIGNvbnN0IHJvb3RQcm9wcyA9IGFwcGVuZE93bmVyU3RhdGUoUm9vdCwgX2V4dGVuZHMoe1xuICAgIHJvbGU6ICdwcmVzZW50YXRpb24nXG4gIH0sIG90aGVyLCBjb21wb25lbnRzUHJvcHMucm9vdCwge1xuICAgIHJlZjogaGFuZGxlUmVmLFxuICAgIG9uS2V5RG93bjogaGFuZGxlS2V5RG93bixcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCAoX2NvbXBvbmVudHNQcm9wcyRyb290ID0gY29tcG9uZW50c1Byb3BzLnJvb3QpID09IG51bGwgPyB2b2lkIDAgOiBfY29tcG9uZW50c1Byb3BzJHJvb3QuY2xhc3NOYW1lLCBjbGFzc05hbWUpXG4gIH0pLCBvd25lclN0YXRlKTtcbiAgY29uc3QgQmFja2Ryb3BDb21wb25lbnQgPSBjb21wb25lbnRzLkJhY2tkcm9wO1xuICBjb25zdCBiYWNrZHJvcFByb3BzID0gYXBwZW5kT3duZXJTdGF0ZShCYWNrZHJvcENvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgICdhcmlhLWhpZGRlbic6IHRydWUsXG4gICAgb3BlbixcbiAgICBvbkNsaWNrOiBoYW5kbGVCYWNrZHJvcENsaWNrXG4gIH0sIGNvbXBvbmVudHNQcm9wcy5iYWNrZHJvcCksIG93bmVyU3RhdGUpO1xuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goUG9ydGFsLCB7XG4gICAgcmVmOiBoYW5kbGVQb3J0YWxSZWYsXG4gICAgY29udGFpbmVyOiBjb250YWluZXIsXG4gICAgZGlzYWJsZVBvcnRhbDogZGlzYWJsZVBvcnRhbCxcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3hzKFJvb3QsIF9leHRlbmRzKHt9LCByb290UHJvcHMsIHtcbiAgICAgIGNoaWxkcmVuOiBbIWhpZGVCYWNrZHJvcCAmJiBCYWNrZHJvcENvbXBvbmVudCA/IC8qI19fUFVSRV9fKi9fanN4KEJhY2tkcm9wQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgYmFja2Ryb3BQcm9wcykpIDogbnVsbCwgLyojX19QVVJFX18qL19qc3goVHJhcEZvY3VzLCB7XG4gICAgICAgIGRpc2FibGVFbmZvcmNlRm9jdXM6IGRpc2FibGVFbmZvcmNlRm9jdXMsXG4gICAgICAgIGRpc2FibGVBdXRvRm9jdXM6IGRpc2FibGVBdXRvRm9jdXMsXG4gICAgICAgIGRpc2FibGVSZXN0b3JlRm9jdXM6IGRpc2FibGVSZXN0b3JlRm9jdXMsXG4gICAgICAgIGlzRW5hYmxlZDogaXNUb3BNb2RhbCxcbiAgICAgICAgb3Blbjogb3BlbixcbiAgICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGRyZW4sIGNoaWxkUHJvcHMpXG4gICAgICB9KV1cbiAgICB9KSlcbiAgfSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IE1vZGFsVW5zdHlsZWQucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIEEgc2luZ2xlIGNoaWxkIGNvbnRlbnQgZWxlbWVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBlbGVtZW50QWNjZXB0aW5nUmVmLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogV2hlbiBzZXQgdG8gdHJ1ZSB0aGUgTW9kYWwgd2FpdHMgdW50aWwgYSBuZXN0ZWQgVHJhbnNpdGlvbiBpcyBjb21wbGV0ZWQgYmVmb3JlIGNsb3NpbmcuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBjbG9zZUFmdGVyVHJhbnNpdGlvbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50cyB1c2VkIGZvciBlYWNoIHNsb3QgaW5zaWRlIHRoZSBNb2RhbC5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgQmFja2Ryb3A6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICBSb290OiBQcm9wVHlwZXMuZWxlbWVudFR5cGVcbiAgfSksXG5cbiAgLyoqXG4gICAqIFRoZSBwcm9wcyB1c2VkIGZvciBlYWNoIHNsb3QgaW5zaWRlIHRoZSBNb2RhbC5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIGNvbXBvbmVudHNQcm9wczogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBiYWNrZHJvcDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICByb290OiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pLFxuXG4gIC8qKlxuICAgKiBBbiBIVE1MIGVsZW1lbnQgb3IgZnVuY3Rpb24gdGhhdCByZXR1cm5zIG9uZS5cbiAgICogVGhlIGBjb250YWluZXJgIHdpbGwgaGF2ZSB0aGUgcG9ydGFsIGNoaWxkcmVuIGFwcGVuZGVkIHRvIGl0LlxuICAgKlxuICAgKiBCeSBkZWZhdWx0LCBpdCB1c2VzIHRoZSBib2R5IG9mIHRoZSB0b3AtbGV2ZWwgZG9jdW1lbnQgb2JqZWN0LFxuICAgKiBzbyBpdCdzIHNpbXBseSBgZG9jdW1lbnQuYm9keWAgbW9zdCBvZiB0aGUgdGltZS5cbiAgICovXG4gIGNvbnRhaW5lcjogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbSFRNTEVsZW1lbnRUeXBlLCBQcm9wVHlwZXMuZnVuY10pLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBtb2RhbCB3aWxsIG5vdCBhdXRvbWF0aWNhbGx5IHNoaWZ0IGZvY3VzIHRvIGl0c2VsZiB3aGVuIGl0IG9wZW5zLCBhbmRcbiAgICogcmVwbGFjZSBpdCB0byB0aGUgbGFzdCBmb2N1c2VkIGVsZW1lbnQgd2hlbiBpdCBjbG9zZXMuXG4gICAqIFRoaXMgYWxzbyB3b3JrcyBjb3JyZWN0bHkgd2l0aCBhbnkgbW9kYWwgY2hpbGRyZW4gdGhhdCBoYXZlIHRoZSBgZGlzYWJsZUF1dG9Gb2N1c2AgcHJvcC5cbiAgICpcbiAgICogR2VuZXJhbGx5IHRoaXMgc2hvdWxkIG5ldmVyIGJlIHNldCB0byBgdHJ1ZWAgYXMgaXQgbWFrZXMgdGhlIG1vZGFsIGxlc3NcbiAgICogYWNjZXNzaWJsZSB0byBhc3Npc3RpdmUgdGVjaG5vbG9naWVzLCBsaWtlIHNjcmVlbiByZWFkZXJzLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZUF1dG9Gb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIG1vZGFsIHdpbGwgbm90IHByZXZlbnQgZm9jdXMgZnJvbSBsZWF2aW5nIHRoZSBtb2RhbCB3aGlsZSBvcGVuLlxuICAgKlxuICAgKiBHZW5lcmFsbHkgdGhpcyBzaG91bGQgbmV2ZXIgYmUgc2V0IHRvIGB0cnVlYCBhcyBpdCBtYWtlcyB0aGUgbW9kYWwgbGVzc1xuICAgKiBhY2Nlc3NpYmxlIHRvIGFzc2lzdGl2ZSB0ZWNobm9sb2dpZXMsIGxpa2Ugc2NyZWVuIHJlYWRlcnMuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlRW5mb3JjZUZvY3VzOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCBoaXR0aW5nIGVzY2FwZSB3aWxsIG5vdCBmaXJlIHRoZSBgb25DbG9zZWAgY2FsbGJhY2suXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlRXNjYXBlS2V5RG93bjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBgY2hpbGRyZW5gIHdpbGwgYmUgdW5kZXIgdGhlIERPTSBoaWVyYXJjaHkgb2YgdGhlIHBhcmVudCBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlUG9ydGFsOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgbW9kYWwgd2lsbCBub3QgcmVzdG9yZSBmb2N1cyB0byBwcmV2aW91c2x5IGZvY3VzZWQgZWxlbWVudCBvbmNlXG4gICAqIG1vZGFsIGlzIGhpZGRlbiBvciB1bm1vdW50ZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlUmVzdG9yZUZvY3VzOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogRGlzYWJsZSB0aGUgc2Nyb2xsIGxvY2sgYmVoYXZpb3IuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlU2Nyb2xsTG9jazogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGJhY2tkcm9wIGlzIG5vdCByZW5kZXJlZC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGhpZGVCYWNrZHJvcDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEFsd2F5cyBrZWVwIHRoZSBjaGlsZHJlbiBpbiB0aGUgRE9NLlxuICAgKiBUaGlzIHByb3AgY2FuIGJlIHVzZWZ1bCBpbiBTRU8gc2l0dWF0aW9uIG9yXG4gICAqIHdoZW4geW91IHdhbnQgdG8gbWF4aW1pemUgdGhlIHJlc3BvbnNpdmVuZXNzIG9mIHRoZSBNb2RhbC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGtlZXBNb3VudGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgYmFja2Ryb3AgaXMgY2xpY2tlZC5cbiAgICogQGRlcHJlY2F0ZWQgVXNlIHRoZSBgb25DbG9zZWAgcHJvcCB3aXRoIHRoZSBgcmVhc29uYCBhcmd1bWVudCB0byBoYW5kbGUgdGhlIGBiYWNrZHJvcENsaWNrYCBldmVudHMuXG4gICAqL1xuICBvbkJhY2tkcm9wQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSBjb21wb25lbnQgcmVxdWVzdHMgdG8gYmUgY2xvc2VkLlxuICAgKiBUaGUgYHJlYXNvbmAgcGFyYW1ldGVyIGNhbiBvcHRpb25hbGx5IGJlIHVzZWQgdG8gY29udHJvbCB0aGUgcmVzcG9uc2UgdG8gYG9uQ2xvc2VgLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gZXZlbnQgVGhlIGV2ZW50IHNvdXJjZSBvZiB0aGUgY2FsbGJhY2suXG4gICAqIEBwYXJhbSB7c3RyaW5nfSByZWFzb24gQ2FuIGJlOiBgXCJlc2NhcGVLZXlEb3duXCJgLCBgXCJiYWNrZHJvcENsaWNrXCJgLlxuICAgKi9cbiAgb25DbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uS2V5RG93bjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCBpcyBzaG93bi5cbiAgICovXG4gIG9wZW46IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWRcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBNb2RhbFVuc3R5bGVkOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJhZGRFbmRMaXN0ZW5lclwiLCBcImFwcGVhclwiLCBcImNoaWxkcmVuXCIsIFwiZWFzaW5nXCIsIFwiaW5cIiwgXCJvbkVudGVyXCIsIFwib25FbnRlcmVkXCIsIFwib25FbnRlcmluZ1wiLCBcIm9uRXhpdFwiLCBcIm9uRXhpdGVkXCIsIFwib25FeGl0aW5nXCIsIFwic3R5bGVcIiwgXCJ0aW1lb3V0XCIsIFwiVHJhbnNpdGlvbkNvbXBvbmVudFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBUcmFuc2l0aW9uIH0gZnJvbSAncmVhY3QtdHJhbnNpdGlvbi1ncm91cCc7XG5pbXBvcnQgeyBlbGVtZW50QWNjZXB0aW5nUmVmIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgdXNlVGhlbWUgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lJztcbmltcG9ydCB7IHJlZmxvdywgZ2V0VHJhbnNpdGlvblByb3BzIH0gZnJvbSAnLi4vdHJhbnNpdGlvbnMvdXRpbHMnO1xuaW1wb3J0IHVzZUZvcmtSZWYgZnJvbSAnLi4vdXRpbHMvdXNlRm9ya1JlZic7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3Qgc3R5bGVzID0ge1xuICBlbnRlcmluZzoge1xuICAgIG9wYWNpdHk6IDFcbiAgfSxcbiAgZW50ZXJlZDoge1xuICAgIG9wYWNpdHk6IDFcbiAgfVxufTtcbi8qKlxuICogVGhlIEZhZGUgdHJhbnNpdGlvbiBpcyB1c2VkIGJ5IHRoZSBbTW9kYWxdKC9tYXRlcmlhbC11aS9yZWFjdC1tb2RhbC8pIGNvbXBvbmVudC5cbiAqIEl0IHVzZXMgW3JlYWN0LXRyYW5zaXRpb24tZ3JvdXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXApIGludGVybmFsbHkuXG4gKi9cblxuY29uc3QgRmFkZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIEZhZGUocHJvcHMsIHJlZikge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGRlZmF1bHRUaW1lb3V0ID0ge1xuICAgIGVudGVyOiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5lbnRlcmluZ1NjcmVlbixcbiAgICBleGl0OiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5sZWF2aW5nU2NyZWVuXG4gIH07XG5cbiAgY29uc3Qge1xuICAgIGFkZEVuZExpc3RlbmVyLFxuICAgIGFwcGVhciA9IHRydWUsXG4gICAgY2hpbGRyZW4sXG4gICAgZWFzaW5nLFxuICAgIGluOiBpblByb3AsXG4gICAgb25FbnRlcixcbiAgICBvbkVudGVyZWQsXG4gICAgb25FbnRlcmluZyxcbiAgICBvbkV4aXQsXG4gICAgb25FeGl0ZWQsXG4gICAgb25FeGl0aW5nLFxuICAgIHN0eWxlLFxuICAgIHRpbWVvdXQgPSBkZWZhdWx0VGltZW91dCxcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvcHJvcC10eXBlc1xuICAgIFRyYW5zaXRpb25Db21wb25lbnQgPSBUcmFuc2l0aW9uXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBlbmFibGVTdHJpY3RNb2RlQ29tcGF0ID0gdHJ1ZTtcbiAgY29uc3Qgbm9kZVJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgZm9yZWlnblJlZiA9IHVzZUZvcmtSZWYoY2hpbGRyZW4ucmVmLCByZWYpO1xuICBjb25zdCBoYW5kbGVSZWYgPSB1c2VGb3JrUmVmKG5vZGVSZWYsIGZvcmVpZ25SZWYpO1xuXG4gIGNvbnN0IG5vcm1hbGl6ZWRUcmFuc2l0aW9uQ2FsbGJhY2sgPSBjYWxsYmFjayA9PiBtYXliZUlzQXBwZWFyaW5nID0+IHtcbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIGNvbnN0IG5vZGUgPSBub2RlUmVmLmN1cnJlbnQ7IC8vIG9uRW50ZXJYeHggYW5kIG9uRXhpdFh4eCBjYWxsYmFja3MgaGF2ZSBhIGRpZmZlcmVudCBhcmd1bWVudHMubGVuZ3RoIHZhbHVlLlxuXG4gICAgICBpZiAobWF5YmVJc0FwcGVhcmluZyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNhbGxiYWNrKG5vZGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FsbGJhY2sobm9kZSwgbWF5YmVJc0FwcGVhcmluZyk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUVudGVyaW5nID0gbm9ybWFsaXplZFRyYW5zaXRpb25DYWxsYmFjayhvbkVudGVyaW5nKTtcbiAgY29uc3QgaGFuZGxlRW50ZXIgPSBub3JtYWxpemVkVHJhbnNpdGlvbkNhbGxiYWNrKChub2RlLCBpc0FwcGVhcmluZykgPT4ge1xuICAgIHJlZmxvdyhub2RlKTsgLy8gU28gdGhlIGFuaW1hdGlvbiBhbHdheXMgc3RhcnQgZnJvbSB0aGUgc3RhcnQuXG5cbiAgICBjb25zdCB0cmFuc2l0aW9uUHJvcHMgPSBnZXRUcmFuc2l0aW9uUHJvcHMoe1xuICAgICAgc3R5bGUsXG4gICAgICB0aW1lb3V0LFxuICAgICAgZWFzaW5nXG4gICAgfSwge1xuICAgICAgbW9kZTogJ2VudGVyJ1xuICAgIH0pO1xuICAgIG5vZGUuc3R5bGUud2Via2l0VHJhbnNpdGlvbiA9IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZSgnb3BhY2l0eScsIHRyYW5zaXRpb25Qcm9wcyk7XG4gICAgbm9kZS5zdHlsZS50cmFuc2l0aW9uID0gdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKCdvcGFjaXR5JywgdHJhbnNpdGlvblByb3BzKTtcblxuICAgIGlmIChvbkVudGVyKSB7XG4gICAgICBvbkVudGVyKG5vZGUsIGlzQXBwZWFyaW5nKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBoYW5kbGVFbnRlcmVkID0gbm9ybWFsaXplZFRyYW5zaXRpb25DYWxsYmFjayhvbkVudGVyZWQpO1xuICBjb25zdCBoYW5kbGVFeGl0aW5nID0gbm9ybWFsaXplZFRyYW5zaXRpb25DYWxsYmFjayhvbkV4aXRpbmcpO1xuICBjb25zdCBoYW5kbGVFeGl0ID0gbm9ybWFsaXplZFRyYW5zaXRpb25DYWxsYmFjayhub2RlID0+IHtcbiAgICBjb25zdCB0cmFuc2l0aW9uUHJvcHMgPSBnZXRUcmFuc2l0aW9uUHJvcHMoe1xuICAgICAgc3R5bGUsXG4gICAgICB0aW1lb3V0LFxuICAgICAgZWFzaW5nXG4gICAgfSwge1xuICAgICAgbW9kZTogJ2V4aXQnXG4gICAgfSk7XG4gICAgbm9kZS5zdHlsZS53ZWJraXRUcmFuc2l0aW9uID0gdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKCdvcGFjaXR5JywgdHJhbnNpdGlvblByb3BzKTtcbiAgICBub2RlLnN0eWxlLnRyYW5zaXRpb24gPSB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ29wYWNpdHknLCB0cmFuc2l0aW9uUHJvcHMpO1xuXG4gICAgaWYgKG9uRXhpdCkge1xuICAgICAgb25FeGl0KG5vZGUpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGhhbmRsZUV4aXRlZCA9IG5vcm1hbGl6ZWRUcmFuc2l0aW9uQ2FsbGJhY2sob25FeGl0ZWQpO1xuXG4gIGNvbnN0IGhhbmRsZUFkZEVuZExpc3RlbmVyID0gbmV4dCA9PiB7XG4gICAgaWYgKGFkZEVuZExpc3RlbmVyKSB7XG4gICAgICAvLyBPbGQgY2FsbCBzaWduYXR1cmUgYmVmb3JlIGByZWFjdC10cmFuc2l0aW9uLWdyb3VwYCBpbXBsZW1lbnRlZCBgbm9kZVJlZmBcbiAgICAgIGFkZEVuZExpc3RlbmVyKG5vZGVSZWYuY3VycmVudCwgbmV4dCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChUcmFuc2l0aW9uQ29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgYXBwZWFyOiBhcHBlYXIsXG4gICAgaW46IGluUHJvcCxcbiAgICBub2RlUmVmOiBlbmFibGVTdHJpY3RNb2RlQ29tcGF0ID8gbm9kZVJlZiA6IHVuZGVmaW5lZCxcbiAgICBvbkVudGVyOiBoYW5kbGVFbnRlcixcbiAgICBvbkVudGVyZWQ6IGhhbmRsZUVudGVyZWQsXG4gICAgb25FbnRlcmluZzogaGFuZGxlRW50ZXJpbmcsXG4gICAgb25FeGl0OiBoYW5kbGVFeGl0LFxuICAgIG9uRXhpdGVkOiBoYW5kbGVFeGl0ZWQsXG4gICAgb25FeGl0aW5nOiBoYW5kbGVFeGl0aW5nLFxuICAgIGFkZEVuZExpc3RlbmVyOiBoYW5kbGVBZGRFbmRMaXN0ZW5lcixcbiAgICB0aW1lb3V0OiB0aW1lb3V0XG4gIH0sIG90aGVyLCB7XG4gICAgY2hpbGRyZW46IChzdGF0ZSwgY2hpbGRQcm9wcykgPT4ge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGRyZW4sIF9leHRlbmRzKHtcbiAgICAgICAgc3R5bGU6IF9leHRlbmRzKHtcbiAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgIHZpc2liaWxpdHk6IHN0YXRlID09PSAnZXhpdGVkJyAmJiAhaW5Qcm9wID8gJ2hpZGRlbicgOiB1bmRlZmluZWRcbiAgICAgICAgfSwgc3R5bGVzW3N0YXRlXSwgc3R5bGUsIGNoaWxkcmVuLnByb3BzLnN0eWxlKSxcbiAgICAgICAgcmVmOiBoYW5kbGVSZWZcbiAgICAgIH0sIGNoaWxkUHJvcHMpKTtcbiAgICB9XG4gIH0pKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gRmFkZS5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogQWRkIGEgY3VzdG9tIHRyYW5zaXRpb24gZW5kIHRyaWdnZXIuIENhbGxlZCB3aXRoIHRoZSB0cmFuc2l0aW9uaW5nIERPTVxuICAgKiBub2RlIGFuZCBhIGRvbmUgY2FsbGJhY2suIEFsbG93cyBmb3IgbW9yZSBmaW5lIGdyYWluZWQgdHJhbnNpdGlvbiBlbmRcbiAgICogbG9naWMuIE5vdGU6IFRpbWVvdXRzIGFyZSBzdGlsbCB1c2VkIGFzIGEgZmFsbGJhY2sgaWYgcHJvdmlkZWQuXG4gICAqL1xuICBhZGRFbmRMaXN0ZW5lcjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIFBlcmZvcm0gdGhlIGVudGVyIHRyYW5zaXRpb24gd2hlbiBpdCBmaXJzdCBtb3VudHMgaWYgYGluYCBpcyBhbHNvIGB0cnVlYC5cbiAgICogU2V0IHRoaXMgdG8gYGZhbHNlYCB0byBkaXNhYmxlIHRoaXMgYmVoYXZpb3IuXG4gICAqIEBkZWZhdWx0IHRydWVcbiAgICovXG4gIGFwcGVhcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEEgc2luZ2xlIGNoaWxkIGNvbnRlbnQgZWxlbWVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBlbGVtZW50QWNjZXB0aW5nUmVmLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIFRoZSB0cmFuc2l0aW9uIHRpbWluZyBmdW5jdGlvbi5cbiAgICogWW91IG1heSBzcGVjaWZ5IGEgc2luZ2xlIGVhc2luZyBvciBhIG9iamVjdCBjb250YWluaW5nIGVudGVyIGFuZCBleGl0IHZhbHVlcy5cbiAgICovXG4gIGVhc2luZzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBlbnRlcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBleGl0OiBQcm9wVHlwZXMuc3RyaW5nXG4gIH0pLCBQcm9wVHlwZXMuc3RyaW5nXSksXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCB3aWxsIHRyYW5zaXRpb24gaW4uXG4gICAqL1xuICBpbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uRW50ZXI6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkVudGVyZWQ6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkVudGVyaW5nOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25FeGl0OiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25FeGl0ZWQ6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkV4aXRpbmc6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogVGhlIGR1cmF0aW9uIGZvciB0aGUgdHJhbnNpdGlvbiwgaW4gbWlsbGlzZWNvbmRzLlxuICAgKiBZb3UgbWF5IHNwZWNpZnkgYSBzaW5nbGUgdGltZW91dCBmb3IgYWxsIHRyYW5zaXRpb25zLCBvciBpbmRpdmlkdWFsbHkgd2l0aCBhbiBvYmplY3QuXG4gICAqIEBkZWZhdWx0IHtcbiAgICogICBlbnRlcjogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uZW50ZXJpbmdTY3JlZW4sXG4gICAqICAgZXhpdDogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24ubGVhdmluZ1NjcmVlbixcbiAgICogfVxuICAgKi9cbiAgdGltZW91dDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBhcHBlYXI6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZW50ZXI6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZXhpdDogUHJvcFR5cGVzLm51bWJlclxuICB9KV0pXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgRmFkZTsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0QmFja2Ryb3BVdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aUJhY2tkcm9wJywgc2xvdCk7XG59XG5jb25zdCBiYWNrZHJvcENsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlCYWNrZHJvcCcsIFsncm9vdCcsICdpbnZpc2libGUnXSk7XG5leHBvcnQgZGVmYXVsdCBiYWNrZHJvcENsYXNzZXM7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImNoaWxkcmVuXCIsIFwiY29tcG9uZW50XCIsIFwiY29tcG9uZW50c1wiLCBcImNvbXBvbmVudHNQcm9wc1wiLCBcImNsYXNzTmFtZVwiLCBcImludmlzaWJsZVwiLCBcIm9wZW5cIiwgXCJ0cmFuc2l0aW9uRHVyYXRpb25cIiwgXCJUcmFuc2l0aW9uQ29tcG9uZW50XCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgdW5zdGFibGVfY29tcG9zZUNsYXNzZXMgYXMgY29tcG9zZUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCB1c2VUaGVtZVByb3BzIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZVByb3BzJztcbmltcG9ydCBGYWRlIGZyb20gJy4uL0ZhZGUnO1xuaW1wb3J0IHsgZ2V0QmFja2Ryb3BVdGlsaXR5Q2xhc3MgfSBmcm9tICcuL2JhY2tkcm9wQ2xhc3Nlcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuXG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3NlcyxcbiAgICBpbnZpc2libGVcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCcsIGludmlzaWJsZSAmJiAnaW52aXNpYmxlJ11cbiAgfTtcbiAgcmV0dXJuIGNvbXBvc2VDbGFzc2VzKHNsb3RzLCBnZXRCYWNrZHJvcFV0aWxpdHlDbGFzcywgY2xhc3Nlcyk7XG59O1xuXG5jb25zdCBCYWNrZHJvcFJvb3QgPSBzdHlsZWQoJ2RpdicsIHtcbiAgbmFtZTogJ011aUJhY2tkcm9wJyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBvd25lclN0YXRlXG4gICAgfSA9IHByb3BzO1xuICAgIHJldHVybiBbc3R5bGVzLnJvb3QsIG93bmVyU3RhdGUuaW52aXNpYmxlICYmIHN0eWxlcy5pbnZpc2libGVdO1xuICB9XG59KSgoe1xuICBvd25lclN0YXRlXG59KSA9PiBfZXh0ZW5kcyh7XG4gIHBvc2l0aW9uOiAnZml4ZWQnLFxuICBkaXNwbGF5OiAnZmxleCcsXG4gIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gIHJpZ2h0OiAwLFxuICBib3R0b206IDAsXG4gIHRvcDogMCxcbiAgbGVmdDogMCxcbiAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLCAwLCAwLCAwLjUpJyxcbiAgV2Via2l0VGFwSGlnaGxpZ2h0Q29sb3I6ICd0cmFuc3BhcmVudCdcbn0sIG93bmVyU3RhdGUuaW52aXNpYmxlICYmIHtcbiAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnXG59KSk7XG5jb25zdCBCYWNrZHJvcCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIEJhY2tkcm9wKGluUHJvcHMsIHJlZikge1xuICB2YXIgX2NvbXBvbmVudHMkUm9vdCwgX2NvbXBvbmVudHNQcm9wcyRyb290O1xuXG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aUJhY2tkcm9wJ1xuICB9KTtcblxuICBjb25zdCB7XG4gICAgY2hpbGRyZW4sXG4gICAgY29tcG9uZW50ID0gJ2RpdicsXG4gICAgY29tcG9uZW50cyA9IHt9LFxuICAgIGNvbXBvbmVudHNQcm9wcyA9IHt9LFxuICAgIGNsYXNzTmFtZSxcbiAgICBpbnZpc2libGUgPSBmYWxzZSxcbiAgICBvcGVuLFxuICAgIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvcHJvcC10eXBlc1xuICAgIFRyYW5zaXRpb25Db21wb25lbnQgPSBGYWRlXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgY29tcG9uZW50LFxuICAgIGludmlzaWJsZVxuICB9KTtcblxuICBjb25zdCBjbGFzc2VzID0gdXNlVXRpbGl0eUNsYXNzZXMob3duZXJTdGF0ZSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChUcmFuc2l0aW9uQ29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgaW46IG9wZW4sXG4gICAgdGltZW91dDogdHJhbnNpdGlvbkR1cmF0aW9uXG4gIH0sIG90aGVyLCB7XG4gICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KEJhY2tkcm9wUm9vdCwge1xuICAgICAgXCJhcmlhLWhpZGRlblwiOiB0cnVlLFxuICAgICAgYXM6IChfY29tcG9uZW50cyRSb290ID0gY29tcG9uZW50cy5Sb290KSAhPSBudWxsID8gX2NvbXBvbmVudHMkUm9vdCA6IGNvbXBvbmVudCxcbiAgICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSksXG4gICAgICBvd25lclN0YXRlOiBfZXh0ZW5kcyh7fSwgb3duZXJTdGF0ZSwgKF9jb21wb25lbnRzUHJvcHMkcm9vdCA9IGNvbXBvbmVudHNQcm9wcy5yb290KSA9PSBudWxsID8gdm9pZCAwIDogX2NvbXBvbmVudHNQcm9wcyRyb290Lm93bmVyU3RhdGUpLFxuICAgICAgY2xhc3NlczogY2xhc3NlcyxcbiAgICAgIHJlZjogcmVmLFxuICAgICAgY2hpbGRyZW46IGNoaWxkcmVuXG4gICAgfSlcbiAgfSkpO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBCYWNrZHJvcC5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogVGhlIGNvbnRlbnQgb2YgdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudHMgdXNlZCBmb3IgZWFjaCBzbG90IGluc2lkZSB0aGUgQmFja2Ryb3AuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBjb21wb25lbnRzOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIFJvb3Q6IFByb3BUeXBlcy5lbGVtZW50VHlwZVxuICB9KSxcblxuICAvKipcbiAgICogVGhlIHByb3BzIHVzZWQgZm9yIGVhY2ggc2xvdCBpbnNpZGUgdGhlIEJhY2tkcm9wLlxuICAgKiBAZGVmYXVsdCB7fVxuICAgKi9cbiAgY29tcG9uZW50c1Byb3BzOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHJvb3Q6IFByb3BUeXBlcy5vYmplY3RcbiAgfSksXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGJhY2tkcm9wIGlzIGludmlzaWJsZS5cbiAgICogSXQgY2FuIGJlIHVzZWQgd2hlbiByZW5kZXJpbmcgYSBwb3BvdmVyIG9yIGEgY3VzdG9tIHNlbGVjdCBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBpbnZpc2libGU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaXMgc2hvd24uXG4gICAqL1xuICBvcGVuOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG5cbiAgLyoqXG4gICAqIFRoZSBkdXJhdGlvbiBmb3IgdGhlIHRyYW5zaXRpb24sIGluIG1pbGxpc2Vjb25kcy5cbiAgICogWW91IG1heSBzcGVjaWZ5IGEgc2luZ2xlIHRpbWVvdXQgZm9yIGFsbCB0cmFuc2l0aW9ucywgb3IgaW5kaXZpZHVhbGx5IHdpdGggYW4gb2JqZWN0LlxuICAgKi9cbiAgdHJhbnNpdGlvbkR1cmF0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGFwcGVhcjogUHJvcFR5cGVzLm51bWJlcixcbiAgICBlbnRlcjogUHJvcFR5cGVzLm51bWJlcixcbiAgICBleGl0OiBQcm9wVHlwZXMubnVtYmVyXG4gIH0pXSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBCYWNrZHJvcDsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiQmFja2Ryb3BDb21wb25lbnRcIiwgXCJCYWNrZHJvcFByb3BzXCIsIFwiY2xvc2VBZnRlclRyYW5zaXRpb25cIiwgXCJjaGlsZHJlblwiLCBcImNvbXBvbmVudFwiLCBcImNvbXBvbmVudHNcIiwgXCJjb21wb25lbnRzUHJvcHNcIiwgXCJkaXNhYmxlQXV0b0ZvY3VzXCIsIFwiZGlzYWJsZUVuZm9yY2VGb2N1c1wiLCBcImRpc2FibGVFc2NhcGVLZXlEb3duXCIsIFwiZGlzYWJsZVBvcnRhbFwiLCBcImRpc2FibGVSZXN0b3JlRm9jdXNcIiwgXCJkaXNhYmxlU2Nyb2xsTG9ja1wiLCBcImhpZGVCYWNrZHJvcFwiLCBcImtlZXBNb3VudGVkXCIsIFwidGhlbWVcIl07XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgaXNIb3N0Q29tcG9uZW50IH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCB7IGVsZW1lbnRBY2NlcHRpbmdSZWYsIEhUTUxFbGVtZW50VHlwZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IE1vZGFsVW5zdHlsZWQsIHsgbW9kYWxVbnN0eWxlZENsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UvTW9kYWxVbnN0eWxlZCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IEJhY2tkcm9wIGZyb20gJy4uL0JhY2tkcm9wJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5leHBvcnQgY29uc3QgbW9kYWxDbGFzc2VzID0gbW9kYWxVbnN0eWxlZENsYXNzZXM7XG5cbmNvbnN0IGV4dGVuZFV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIHJldHVybiBvd25lclN0YXRlLmNsYXNzZXM7XG59O1xuXG5jb25zdCBNb2RhbFJvb3QgPSBzdHlsZWQoJ2RpdicsIHtcbiAgbmFtZTogJ011aU1vZGFsJyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBvd25lclN0YXRlXG4gICAgfSA9IHByb3BzO1xuICAgIHJldHVybiBbc3R5bGVzLnJvb3QsICFvd25lclN0YXRlLm9wZW4gJiYgb3duZXJTdGF0ZS5leGl0ZWQgJiYgc3R5bGVzLmhpZGRlbl07XG4gIH1cbn0pKCh7XG4gIHRoZW1lLFxuICBvd25lclN0YXRlXG59KSA9PiBfZXh0ZW5kcyh7XG4gIHBvc2l0aW9uOiAnZml4ZWQnLFxuICB6SW5kZXg6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS56SW5kZXgubW9kYWwsXG4gIHJpZ2h0OiAwLFxuICBib3R0b206IDAsXG4gIHRvcDogMCxcbiAgbGVmdDogMFxufSwgIW93bmVyU3RhdGUub3BlbiAmJiBvd25lclN0YXRlLmV4aXRlZCAmJiB7XG4gIHZpc2liaWxpdHk6ICdoaWRkZW4nXG59KSk7XG5jb25zdCBNb2RhbEJhY2tkcm9wID0gc3R5bGVkKEJhY2tkcm9wLCB7XG4gIG5hbWU6ICdNdWlNb2RhbCcsXG4gIHNsb3Q6ICdCYWNrZHJvcCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIHJldHVybiBzdHlsZXMuYmFja2Ryb3A7XG4gIH1cbn0pKHtcbiAgekluZGV4OiAtMVxufSk7XG4vKipcbiAqIE1vZGFsIGlzIGEgbG93ZXItbGV2ZWwgY29uc3RydWN0IHRoYXQgaXMgbGV2ZXJhZ2VkIGJ5IHRoZSBmb2xsb3dpbmcgY29tcG9uZW50czpcbiAqXG4gKiAtIFtEaWFsb2ddKC9tYXRlcmlhbC11aS9hcGkvZGlhbG9nLylcbiAqIC0gW0RyYXdlcl0oL21hdGVyaWFsLXVpL2FwaS9kcmF3ZXIvKVxuICogLSBbTWVudV0oL21hdGVyaWFsLXVpL2FwaS9tZW51LylcbiAqIC0gW1BvcG92ZXJdKC9tYXRlcmlhbC11aS9hcGkvcG9wb3Zlci8pXG4gKlxuICogSWYgeW91IGFyZSBjcmVhdGluZyBhIG1vZGFsIGRpYWxvZywgeW91IHByb2JhYmx5IHdhbnQgdG8gdXNlIHRoZSBbRGlhbG9nXSgvbWF0ZXJpYWwtdWkvYXBpL2RpYWxvZy8pIGNvbXBvbmVudFxuICogcmF0aGVyIHRoYW4gZGlyZWN0bHkgdXNpbmcgTW9kYWwuXG4gKlxuICogVGhpcyBjb21wb25lbnQgc2hhcmVzIG1hbnkgY29uY2VwdHMgd2l0aCBbcmVhY3Qtb3ZlcmxheXNdKGh0dHBzOi8vcmVhY3QtYm9vdHN0cmFwLmdpdGh1Yi5pby9yZWFjdC1vdmVybGF5cy8jbW9kYWxzKS5cbiAqL1xuXG5jb25zdCBNb2RhbCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIE1vZGFsKGluUHJvcHMsIHJlZikge1xuICB2YXIgX3JlZiwgX2NvbXBvbmVudHMkUm9vdDtcblxuICBjb25zdCBwcm9wcyA9IHVzZVRoZW1lUHJvcHMoe1xuICAgIG5hbWU6ICdNdWlNb2RhbCcsXG4gICAgcHJvcHM6IGluUHJvcHNcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIEJhY2tkcm9wQ29tcG9uZW50ID0gTW9kYWxCYWNrZHJvcCxcbiAgICBCYWNrZHJvcFByb3BzLFxuICAgIGNsb3NlQWZ0ZXJUcmFuc2l0aW9uID0gZmFsc2UsXG4gICAgY2hpbGRyZW4sXG4gICAgY29tcG9uZW50LFxuICAgIGNvbXBvbmVudHMgPSB7fSxcbiAgICBjb21wb25lbnRzUHJvcHMgPSB7fSxcbiAgICBkaXNhYmxlQXV0b0ZvY3VzID0gZmFsc2UsXG4gICAgZGlzYWJsZUVuZm9yY2VGb2N1cyA9IGZhbHNlLFxuICAgIGRpc2FibGVFc2NhcGVLZXlEb3duID0gZmFsc2UsXG4gICAgZGlzYWJsZVBvcnRhbCA9IGZhbHNlLFxuICAgIGRpc2FibGVSZXN0b3JlRm9jdXMgPSBmYWxzZSxcbiAgICBkaXNhYmxlU2Nyb2xsTG9jayA9IGZhbHNlLFxuICAgIGhpZGVCYWNrZHJvcCA9IGZhbHNlLFxuICAgIGtlZXBNb3VudGVkID0gZmFsc2UsXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbiAgICB0aGVtZVxuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3QgW2V4aXRlZCwgc2V0RXhpdGVkXSA9IFJlYWN0LnVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBjb21tb25Qcm9wcyA9IHtcbiAgICBjbG9zZUFmdGVyVHJhbnNpdGlvbixcbiAgICBkaXNhYmxlQXV0b0ZvY3VzLFxuICAgIGRpc2FibGVFbmZvcmNlRm9jdXMsXG4gICAgZGlzYWJsZUVzY2FwZUtleURvd24sXG4gICAgZGlzYWJsZVBvcnRhbCxcbiAgICBkaXNhYmxlUmVzdG9yZUZvY3VzLFxuICAgIGRpc2FibGVTY3JvbGxMb2NrLFxuICAgIGhpZGVCYWNrZHJvcCxcbiAgICBrZWVwTW91bnRlZFxuICB9O1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIGNvbW1vblByb3BzLCB7XG4gICAgZXhpdGVkXG4gIH0pO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSBleHRlbmRVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcbiAgY29uc3QgUm9vdCA9IChfcmVmID0gKF9jb21wb25lbnRzJFJvb3QgPSBjb21wb25lbnRzLlJvb3QpICE9IG51bGwgPyBfY29tcG9uZW50cyRSb290IDogY29tcG9uZW50KSAhPSBudWxsID8gX3JlZiA6IE1vZGFsUm9vdDtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KE1vZGFsVW5zdHlsZWQsIF9leHRlbmRzKHtcbiAgICBjb21wb25lbnRzOiBfZXh0ZW5kcyh7XG4gICAgICBSb290LFxuICAgICAgQmFja2Ryb3A6IEJhY2tkcm9wQ29tcG9uZW50XG4gICAgfSwgY29tcG9uZW50cyksXG4gICAgY29tcG9uZW50c1Byb3BzOiB7XG4gICAgICByb290OiBfZXh0ZW5kcyh7fSwgY29tcG9uZW50c1Byb3BzLnJvb3QsICFpc0hvc3RDb21wb25lbnQoUm9vdCkgJiYge1xuICAgICAgICBhczogY29tcG9uZW50LFxuICAgICAgICB0aGVtZVxuICAgICAgfSksXG4gICAgICBiYWNrZHJvcDogX2V4dGVuZHMoe30sIEJhY2tkcm9wUHJvcHMsIGNvbXBvbmVudHNQcm9wcy5iYWNrZHJvcClcbiAgICB9LFxuICAgIG9uVHJhbnNpdGlvbkVudGVyOiAoKSA9PiBzZXRFeGl0ZWQoZmFsc2UpLFxuICAgIG9uVHJhbnNpdGlvbkV4aXRlZDogKCkgPT4gc2V0RXhpdGVkKHRydWUpLFxuICAgIHJlZjogcmVmXG4gIH0sIG90aGVyLCB7XG4gICAgY2xhc3NlczogY2xhc3Nlc1xuICB9LCBjb21tb25Qcm9wcywge1xuICAgIGNoaWxkcmVuOiBjaGlsZHJlblxuICB9KSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IE1vZGFsLnByb3BUeXBlc1xuLyogcmVtb3ZlLXByb3B0eXBlcyAqL1xuPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBBIGJhY2tkcm9wIGNvbXBvbmVudC4gVGhpcyBwcm9wIGVuYWJsZXMgY3VzdG9tIGJhY2tkcm9wIHJlbmRlcmluZy5cbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBjb21wb25lbnRzLkJhY2tkcm9wYCBpbnN0ZWFkLlxuICAgKiBAZGVmYXVsdCBzdHlsZWQoQmFja2Ryb3AsIHtcbiAgICogICBuYW1lOiAnTXVpTW9kYWwnLFxuICAgKiAgIHNsb3Q6ICdCYWNrZHJvcCcsXG4gICAqICAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiB7XG4gICAqICAgICByZXR1cm4gc3R5bGVzLmJhY2tkcm9wO1xuICAgKiAgIH0sXG4gICAqIH0pKHtcbiAgICogICB6SW5kZXg6IC0xLFxuICAgKiB9KVxuICAgKi9cbiAgQmFja2Ryb3BDb21wb25lbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcblxuICAvKipcbiAgICogUHJvcHMgYXBwbGllZCB0byB0aGUgW2BCYWNrZHJvcGBdKC9tYXRlcmlhbC11aS9hcGkvYmFja2Ryb3AvKSBlbGVtZW50LlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGNvbXBvbmVudHNQcm9wcy5iYWNrZHJvcGAgaW5zdGVhZC5cbiAgICovXG4gIEJhY2tkcm9wUHJvcHM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEEgc2luZ2xlIGNoaWxkIGNvbnRlbnQgZWxlbWVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBlbGVtZW50QWNjZXB0aW5nUmVmLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFdoZW4gc2V0IHRvIHRydWUgdGhlIE1vZGFsIHdhaXRzIHVudGlsIGEgbmVzdGVkIFRyYW5zaXRpb24gaXMgY29tcGxldGVkIGJlZm9yZSBjbG9zaW5nLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgY2xvc2VBZnRlclRyYW5zaXRpb246IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudHMgdXNlZCBmb3IgZWFjaCBzbG90IGluc2lkZSB0aGUgTW9kYWwuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBjb21wb25lbnRzOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIEJhY2tkcm9wOiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgUm9vdDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlXG4gIH0pLFxuXG4gIC8qKlxuICAgKiBUaGUgcHJvcHMgdXNlZCBmb3IgZWFjaCBzbG90IGluc2lkZSB0aGUgTW9kYWwuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBjb21wb25lbnRzUHJvcHM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgYmFja2Ryb3A6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcm9vdDogUHJvcFR5cGVzLm9iamVjdFxuICB9KSxcblxuICAvKipcbiAgICogQW4gSFRNTCBlbGVtZW50IG9yIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBvbmUuXG4gICAqIFRoZSBgY29udGFpbmVyYCB3aWxsIGhhdmUgdGhlIHBvcnRhbCBjaGlsZHJlbiBhcHBlbmRlZCB0byBpdC5cbiAgICpcbiAgICogQnkgZGVmYXVsdCwgaXQgdXNlcyB0aGUgYm9keSBvZiB0aGUgdG9wLWxldmVsIGRvY3VtZW50IG9iamVjdCxcbiAgICogc28gaXQncyBzaW1wbHkgYGRvY3VtZW50LmJvZHlgIG1vc3Qgb2YgdGhlIHRpbWUuXG4gICAqL1xuICBjb250YWluZXI6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5vbmVPZlR5cGUoW0hUTUxFbGVtZW50VHlwZSwgUHJvcFR5cGVzLmZ1bmNdKSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgbW9kYWwgd2lsbCBub3QgYXV0b21hdGljYWxseSBzaGlmdCBmb2N1cyB0byBpdHNlbGYgd2hlbiBpdCBvcGVucywgYW5kXG4gICAqIHJlcGxhY2UgaXQgdG8gdGhlIGxhc3QgZm9jdXNlZCBlbGVtZW50IHdoZW4gaXQgY2xvc2VzLlxuICAgKiBUaGlzIGFsc28gd29ya3MgY29ycmVjdGx5IHdpdGggYW55IG1vZGFsIGNoaWxkcmVuIHRoYXQgaGF2ZSB0aGUgYGRpc2FibGVBdXRvRm9jdXNgIHByb3AuXG4gICAqXG4gICAqIEdlbmVyYWxseSB0aGlzIHNob3VsZCBuZXZlciBiZSBzZXQgdG8gYHRydWVgIGFzIGl0IG1ha2VzIHRoZSBtb2RhbCBsZXNzXG4gICAqIGFjY2Vzc2libGUgdG8gYXNzaXN0aXZlIHRlY2hub2xvZ2llcywgbGlrZSBzY3JlZW4gcmVhZGVycy5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRpc2FibGVBdXRvRm9jdXM6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBtb2RhbCB3aWxsIG5vdCBwcmV2ZW50IGZvY3VzIGZyb20gbGVhdmluZyB0aGUgbW9kYWwgd2hpbGUgb3Blbi5cbiAgICpcbiAgICogR2VuZXJhbGx5IHRoaXMgc2hvdWxkIG5ldmVyIGJlIHNldCB0byBgdHJ1ZWAgYXMgaXQgbWFrZXMgdGhlIG1vZGFsIGxlc3NcbiAgICogYWNjZXNzaWJsZSB0byBhc3Npc3RpdmUgdGVjaG5vbG9naWVzLCBsaWtlIHNjcmVlbiByZWFkZXJzLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZUVuZm9yY2VGb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgaGl0dGluZyBlc2NhcGUgd2lsbCBub3QgZmlyZSB0aGUgYG9uQ2xvc2VgIGNhbGxiYWNrLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZUVzY2FwZUtleURvd246IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgYGNoaWxkcmVuYCB3aWxsIGJlIHVuZGVyIHRoZSBET00gaGllcmFyY2h5IG9mIHRoZSBwYXJlbnQgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZVBvcnRhbDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIG1vZGFsIHdpbGwgbm90IHJlc3RvcmUgZm9jdXMgdG8gcHJldmlvdXNseSBmb2N1c2VkIGVsZW1lbnQgb25jZVxuICAgKiBtb2RhbCBpcyBoaWRkZW4gb3IgdW5tb3VudGVkLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZVJlc3RvcmVGb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIERpc2FibGUgdGhlIHNjcm9sbCBsb2NrIGJlaGF2aW9yLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZVNjcm9sbExvY2s6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBiYWNrZHJvcCBpcyBub3QgcmVuZGVyZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBoaWRlQmFja2Ryb3A6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBBbHdheXMga2VlcCB0aGUgY2hpbGRyZW4gaW4gdGhlIERPTS5cbiAgICogVGhpcyBwcm9wIGNhbiBiZSB1c2VmdWwgaW4gU0VPIHNpdHVhdGlvbiBvclxuICAgKiB3aGVuIHlvdSB3YW50IHRvIG1heGltaXplIHRoZSByZXNwb25zaXZlbmVzcyBvZiB0aGUgTW9kYWwuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBrZWVwTW91bnRlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIGJhY2tkcm9wIGlzIGNsaWNrZWQuXG4gICAqIEBkZXByZWNhdGVkIFVzZSB0aGUgYG9uQ2xvc2VgIHByb3Agd2l0aCB0aGUgYHJlYXNvbmAgYXJndW1lbnQgdG8gaGFuZGxlIHRoZSBgYmFja2Ryb3BDbGlja2AgZXZlbnRzLlxuICAgKi9cbiAgb25CYWNrZHJvcENsaWNrOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgY29tcG9uZW50IHJlcXVlc3RzIHRvIGJlIGNsb3NlZC5cbiAgICogVGhlIGByZWFzb25gIHBhcmFtZXRlciBjYW4gb3B0aW9uYWxseSBiZSB1c2VkIHRvIGNvbnRyb2wgdGhlIHJlc3BvbnNlIHRvIGBvbkNsb3NlYC5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmVhc29uIENhbiBiZTogYFwiZXNjYXBlS2V5RG93blwiYCwgYFwiYmFja2Ryb3BDbGlja1wiYC5cbiAgICovXG4gIG9uQ2xvc2U6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaXMgc2hvd24uXG4gICAqL1xuICBvcGVuOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBNb2RhbDsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0UG9wb3ZlclV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpUG9wb3ZlcicsIHNsb3QpO1xufVxuY29uc3QgcG9wb3ZlckNsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlQb3BvdmVyJywgWydyb290JywgJ3BhcGVyJ10pO1xuZXhwb3J0IGRlZmF1bHQgcG9wb3ZlckNsYXNzZXM7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcIm9uRW50ZXJpbmdcIl0sXG4gICAgICBfZXhjbHVkZWQyID0gW1wiYWN0aW9uXCIsIFwiYW5jaG9yRWxcIiwgXCJhbmNob3JPcmlnaW5cIiwgXCJhbmNob3JQb3NpdGlvblwiLCBcImFuY2hvclJlZmVyZW5jZVwiLCBcImNoaWxkcmVuXCIsIFwiY2xhc3NOYW1lXCIsIFwiY29udGFpbmVyXCIsIFwiZWxldmF0aW9uXCIsIFwibWFyZ2luVGhyZXNob2xkXCIsIFwib3BlblwiLCBcIlBhcGVyUHJvcHNcIiwgXCJ0cmFuc2Zvcm1PcmlnaW5cIiwgXCJUcmFuc2l0aW9uQ29tcG9uZW50XCIsIFwidHJhbnNpdGlvbkR1cmF0aW9uXCIsIFwiVHJhbnNpdGlvblByb3BzXCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgdW5zdGFibGVfY29tcG9zZUNsYXNzZXMgYXMgY29tcG9zZUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuaW1wb3J0IHsgY2hhaW5Qcm9wVHlwZXMsIGludGVnZXJQcm9wVHlwZSwgZWxlbWVudFR5cGVBY2NlcHRpbmdSZWYsIHJlZlR5cGUsIEhUTUxFbGVtZW50VHlwZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCB1c2VUaGVtZVByb3BzIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZVByb3BzJztcbmltcG9ydCBkZWJvdW5jZSBmcm9tICcuLi91dGlscy9kZWJvdW5jZSc7XG5pbXBvcnQgb3duZXJEb2N1bWVudCBmcm9tICcuLi91dGlscy9vd25lckRvY3VtZW50JztcbmltcG9ydCBvd25lcldpbmRvdyBmcm9tICcuLi91dGlscy9vd25lcldpbmRvdyc7XG5pbXBvcnQgdXNlRm9ya1JlZiBmcm9tICcuLi91dGlscy91c2VGb3JrUmVmJztcbmltcG9ydCBHcm93IGZyb20gJy4uL0dyb3cnO1xuaW1wb3J0IE1vZGFsIGZyb20gJy4uL01vZGFsJztcbmltcG9ydCBQYXBlciBmcm9tICcuLi9QYXBlcic7XG5pbXBvcnQgeyBnZXRQb3BvdmVyVXRpbGl0eUNsYXNzIH0gZnJvbSAnLi9wb3BvdmVyQ2xhc3Nlcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGZ1bmN0aW9uIGdldE9mZnNldFRvcChyZWN0LCB2ZXJ0aWNhbCkge1xuICBsZXQgb2Zmc2V0ID0gMDtcblxuICBpZiAodHlwZW9mIHZlcnRpY2FsID09PSAnbnVtYmVyJykge1xuICAgIG9mZnNldCA9IHZlcnRpY2FsO1xuICB9IGVsc2UgaWYgKHZlcnRpY2FsID09PSAnY2VudGVyJykge1xuICAgIG9mZnNldCA9IHJlY3QuaGVpZ2h0IC8gMjtcbiAgfSBlbHNlIGlmICh2ZXJ0aWNhbCA9PT0gJ2JvdHRvbScpIHtcbiAgICBvZmZzZXQgPSByZWN0LmhlaWdodDtcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQ7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0T2Zmc2V0TGVmdChyZWN0LCBob3Jpem9udGFsKSB7XG4gIGxldCBvZmZzZXQgPSAwO1xuXG4gIGlmICh0eXBlb2YgaG9yaXpvbnRhbCA9PT0gJ251bWJlcicpIHtcbiAgICBvZmZzZXQgPSBob3Jpem9udGFsO1xuICB9IGVsc2UgaWYgKGhvcml6b250YWwgPT09ICdjZW50ZXInKSB7XG4gICAgb2Zmc2V0ID0gcmVjdC53aWR0aCAvIDI7XG4gIH0gZWxzZSBpZiAoaG9yaXpvbnRhbCA9PT0gJ3JpZ2h0Jykge1xuICAgIG9mZnNldCA9IHJlY3Qud2lkdGg7XG4gIH1cblxuICByZXR1cm4gb2Zmc2V0O1xufVxuXG5mdW5jdGlvbiBnZXRUcmFuc2Zvcm1PcmlnaW5WYWx1ZSh0cmFuc2Zvcm1PcmlnaW4pIHtcbiAgcmV0dXJuIFt0cmFuc2Zvcm1PcmlnaW4uaG9yaXpvbnRhbCwgdHJhbnNmb3JtT3JpZ2luLnZlcnRpY2FsXS5tYXAobiA9PiB0eXBlb2YgbiA9PT0gJ251bWJlcicgPyBgJHtufXB4YCA6IG4pLmpvaW4oJyAnKTtcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZUFuY2hvckVsKGFuY2hvckVsKSB7XG4gIHJldHVybiB0eXBlb2YgYW5jaG9yRWwgPT09ICdmdW5jdGlvbicgPyBhbmNob3JFbCgpIDogYW5jaG9yRWw7XG59XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc2VzXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnXSxcbiAgICBwYXBlcjogWydwYXBlciddXG4gIH07XG4gIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0UG9wb3ZlclV0aWxpdHlDbGFzcywgY2xhc3Nlcyk7XG59O1xuXG5jb25zdCBQb3BvdmVyUm9vdCA9IHN0eWxlZChNb2RhbCwge1xuICBuYW1lOiAnTXVpUG9wb3ZlcicsXG4gIHNsb3Q6ICdSb290JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiBzdHlsZXMucm9vdFxufSkoe30pO1xuY29uc3QgUG9wb3ZlclBhcGVyID0gc3R5bGVkKFBhcGVyLCB7XG4gIG5hbWU6ICdNdWlQb3BvdmVyJyxcbiAgc2xvdDogJ1BhcGVyJyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiBzdHlsZXMucGFwZXJcbn0pKHtcbiAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gIG92ZXJmbG93WTogJ2F1dG8nLFxuICBvdmVyZmxvd1g6ICdoaWRkZW4nLFxuICAvLyBTbyB3ZSBzZWUgdGhlIHBvcG92ZXIgd2hlbiBpdCdzIGVtcHR5LlxuICAvLyBJdCdzIG1vc3QgbGlrZWx5IG9uIGlzc3VlIG9uIHVzZXJsYW5kLlxuICBtaW5XaWR0aDogMTYsXG4gIG1pbkhlaWdodDogMTYsXG4gIG1heFdpZHRoOiAnY2FsYygxMDAlIC0gMzJweCknLFxuICBtYXhIZWlnaHQ6ICdjYWxjKDEwMCUgLSAzMnB4KScsXG4gIC8vIFdlIGRpc2FibGUgdGhlIGZvY3VzIHJpbmcgZm9yIG1vdXNlLCB0b3VjaCBhbmQga2V5Ym9hcmQgdXNlcnMuXG4gIG91dGxpbmU6IDBcbn0pO1xuY29uc3QgUG9wb3ZlciA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFBvcG92ZXIoaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aVBvcG92ZXInXG4gIH0pO1xuXG4gIGNvbnN0IHtcbiAgICBhY3Rpb24sXG4gICAgYW5jaG9yRWwsXG4gICAgYW5jaG9yT3JpZ2luID0ge1xuICAgICAgdmVydGljYWw6ICd0b3AnLFxuICAgICAgaG9yaXpvbnRhbDogJ2xlZnQnXG4gICAgfSxcbiAgICBhbmNob3JQb3NpdGlvbixcbiAgICBhbmNob3JSZWZlcmVuY2UgPSAnYW5jaG9yRWwnLFxuICAgIGNoaWxkcmVuLFxuICAgIGNsYXNzTmFtZSxcbiAgICBjb250YWluZXI6IGNvbnRhaW5lclByb3AsXG4gICAgZWxldmF0aW9uID0gOCxcbiAgICBtYXJnaW5UaHJlc2hvbGQgPSAxNixcbiAgICBvcGVuLFxuICAgIFBhcGVyUHJvcHMgPSB7fSxcbiAgICB0cmFuc2Zvcm1PcmlnaW4gPSB7XG4gICAgICB2ZXJ0aWNhbDogJ3RvcCcsXG4gICAgICBob3Jpem9udGFsOiAnbGVmdCdcbiAgICB9LFxuICAgIFRyYW5zaXRpb25Db21wb25lbnQgPSBHcm93LFxuICAgIHRyYW5zaXRpb25EdXJhdGlvbjogdHJhbnNpdGlvbkR1cmF0aW9uUHJvcCA9ICdhdXRvJyxcbiAgICBUcmFuc2l0aW9uUHJvcHM6IHtcbiAgICAgIG9uRW50ZXJpbmdcbiAgICB9ID0ge31cbiAgfSA9IHByb3BzLFxuICAgICAgICBUcmFuc2l0aW9uUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcy5UcmFuc2l0aW9uUHJvcHMsIF9leGNsdWRlZCksXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZDIpO1xuXG4gIGNvbnN0IHBhcGVyUmVmID0gUmVhY3QudXNlUmVmKCk7XG4gIGNvbnN0IGhhbmRsZVBhcGVyUmVmID0gdXNlRm9ya1JlZihwYXBlclJlZiwgUGFwZXJQcm9wcy5yZWYpO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBhbmNob3JPcmlnaW4sXG4gICAgYW5jaG9yUmVmZXJlbmNlLFxuICAgIGVsZXZhdGlvbixcbiAgICBtYXJnaW5UaHJlc2hvbGQsXG4gICAgUGFwZXJQcm9wcyxcbiAgICB0cmFuc2Zvcm1PcmlnaW4sXG4gICAgVHJhbnNpdGlvbkNvbXBvbmVudCxcbiAgICB0cmFuc2l0aW9uRHVyYXRpb246IHRyYW5zaXRpb25EdXJhdGlvblByb3AsXG4gICAgVHJhbnNpdGlvblByb3BzXG4gIH0pO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTsgLy8gUmV0dXJucyB0aGUgdG9wL2xlZnQgb2Zmc2V0IG9mIHRoZSBwb3NpdGlvblxuICAvLyB0byBhdHRhY2ggdG8gb24gdGhlIGFuY2hvciBlbGVtZW50IChvciBib2R5IGlmIG5vbmUgaXMgcHJvdmlkZWQpXG5cbiAgY29uc3QgZ2V0QW5jaG9yT2Zmc2V0ID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChhbmNob3JSZWZlcmVuY2UgPT09ICdhbmNob3JQb3NpdGlvbicpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmICghYW5jaG9yUG9zaXRpb24pIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdNVUk6IFlvdSBuZWVkIHRvIHByb3ZpZGUgYSBgYW5jaG9yUG9zaXRpb25gIHByb3Agd2hlbiB1c2luZyAnICsgJzxQb3BvdmVyIGFuY2hvclJlZmVyZW5jZT1cImFuY2hvclBvc2l0aW9uXCIgLz4uJyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFuY2hvclBvc2l0aW9uO1xuICAgIH1cblxuICAgIGNvbnN0IHJlc29sdmVkQW5jaG9yRWwgPSByZXNvbHZlQW5jaG9yRWwoYW5jaG9yRWwpOyAvLyBJZiBhbiBhbmNob3IgZWxlbWVudCB3YXNuJ3QgcHJvdmlkZWQsIGp1c3QgdXNlIHRoZSBwYXJlbnQgYm9keSBlbGVtZW50IG9mIHRoaXMgUG9wb3ZlclxuXG4gICAgY29uc3QgYW5jaG9yRWxlbWVudCA9IHJlc29sdmVkQW5jaG9yRWwgJiYgcmVzb2x2ZWRBbmNob3JFbC5ub2RlVHlwZSA9PT0gMSA/IHJlc29sdmVkQW5jaG9yRWwgOiBvd25lckRvY3VtZW50KHBhcGVyUmVmLmN1cnJlbnQpLmJvZHk7XG4gICAgY29uc3QgYW5jaG9yUmVjdCA9IGFuY2hvckVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgY29uc3QgYm94ID0gYW5jaG9yRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAndGVzdCcgJiYgYm94LnRvcCA9PT0gMCAmJiBib3gubGVmdCA9PT0gMCAmJiBib3gucmlnaHQgPT09IDAgJiYgYm94LmJvdHRvbSA9PT0gMCkge1xuICAgICAgICBjb25zb2xlLndhcm4oWydNVUk6IFRoZSBgYW5jaG9yRWxgIHByb3AgcHJvdmlkZWQgdG8gdGhlIGNvbXBvbmVudCBpcyBpbnZhbGlkLicsICdUaGUgYW5jaG9yIGVsZW1lbnQgc2hvdWxkIGJlIHBhcnQgb2YgdGhlIGRvY3VtZW50IGxheW91dC4nLCBcIk1ha2Ugc3VyZSB0aGUgZWxlbWVudCBpcyBwcmVzZW50IGluIHRoZSBkb2N1bWVudCBvciB0aGF0IGl0J3Mgbm90IGRpc3BsYXkgbm9uZS5cIl0uam9pbignXFxuJykpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICB0b3A6IGFuY2hvclJlY3QudG9wICsgZ2V0T2Zmc2V0VG9wKGFuY2hvclJlY3QsIGFuY2hvck9yaWdpbi52ZXJ0aWNhbCksXG4gICAgICBsZWZ0OiBhbmNob3JSZWN0LmxlZnQgKyBnZXRPZmZzZXRMZWZ0KGFuY2hvclJlY3QsIGFuY2hvck9yaWdpbi5ob3Jpem9udGFsKVxuICAgIH07XG4gIH0sIFthbmNob3JFbCwgYW5jaG9yT3JpZ2luLmhvcml6b250YWwsIGFuY2hvck9yaWdpbi52ZXJ0aWNhbCwgYW5jaG9yUG9zaXRpb24sIGFuY2hvclJlZmVyZW5jZV0pOyAvLyBSZXR1cm5zIHRoZSBiYXNlIHRyYW5zZm9ybSBvcmlnaW4gdXNpbmcgdGhlIGVsZW1lbnRcblxuICBjb25zdCBnZXRUcmFuc2Zvcm1PcmlnaW4gPSBSZWFjdC51c2VDYWxsYmFjayhlbGVtUmVjdCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZlcnRpY2FsOiBnZXRPZmZzZXRUb3AoZWxlbVJlY3QsIHRyYW5zZm9ybU9yaWdpbi52ZXJ0aWNhbCksXG4gICAgICBob3Jpem9udGFsOiBnZXRPZmZzZXRMZWZ0KGVsZW1SZWN0LCB0cmFuc2Zvcm1PcmlnaW4uaG9yaXpvbnRhbClcbiAgICB9O1xuICB9LCBbdHJhbnNmb3JtT3JpZ2luLmhvcml6b250YWwsIHRyYW5zZm9ybU9yaWdpbi52ZXJ0aWNhbF0pO1xuICBjb25zdCBnZXRQb3NpdGlvbmluZ1N0eWxlID0gUmVhY3QudXNlQ2FsbGJhY2soZWxlbWVudCA9PiB7XG4gICAgY29uc3QgZWxlbVJlY3QgPSB7XG4gICAgICB3aWR0aDogZWxlbWVudC5vZmZzZXRXaWR0aCxcbiAgICAgIGhlaWdodDogZWxlbWVudC5vZmZzZXRIZWlnaHRcbiAgICB9OyAvLyBHZXQgdGhlIHRyYW5zZm9ybSBvcmlnaW4gcG9pbnQgb24gdGhlIGVsZW1lbnQgaXRzZWxmXG5cbiAgICBjb25zdCBlbGVtVHJhbnNmb3JtT3JpZ2luID0gZ2V0VHJhbnNmb3JtT3JpZ2luKGVsZW1SZWN0KTtcblxuICAgIGlmIChhbmNob3JSZWZlcmVuY2UgPT09ICdub25lJykge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdG9wOiBudWxsLFxuICAgICAgICBsZWZ0OiBudWxsLFxuICAgICAgICB0cmFuc2Zvcm1PcmlnaW46IGdldFRyYW5zZm9ybU9yaWdpblZhbHVlKGVsZW1UcmFuc2Zvcm1PcmlnaW4pXG4gICAgICB9O1xuICAgIH0gLy8gR2V0IHRoZSBvZmZzZXQgb2YgdGhlIGFuY2hvcmluZyBlbGVtZW50XG5cblxuICAgIGNvbnN0IGFuY2hvck9mZnNldCA9IGdldEFuY2hvck9mZnNldCgpOyAvLyBDYWxjdWxhdGUgZWxlbWVudCBwb3NpdGlvbmluZ1xuXG4gICAgbGV0IHRvcCA9IGFuY2hvck9mZnNldC50b3AgLSBlbGVtVHJhbnNmb3JtT3JpZ2luLnZlcnRpY2FsO1xuICAgIGxldCBsZWZ0ID0gYW5jaG9yT2Zmc2V0LmxlZnQgLSBlbGVtVHJhbnNmb3JtT3JpZ2luLmhvcml6b250YWw7XG4gICAgY29uc3QgYm90dG9tID0gdG9wICsgZWxlbVJlY3QuaGVpZ2h0O1xuICAgIGNvbnN0IHJpZ2h0ID0gbGVmdCArIGVsZW1SZWN0LndpZHRoOyAvLyBVc2UgdGhlIHBhcmVudCB3aW5kb3cgb2YgdGhlIGFuY2hvckVsIGlmIHByb3ZpZGVkXG5cbiAgICBjb25zdCBjb250YWluZXJXaW5kb3cgPSBvd25lcldpbmRvdyhyZXNvbHZlQW5jaG9yRWwoYW5jaG9yRWwpKTsgLy8gV2luZG93IHRocmVzaG9sZHMgdGFraW5nIHJlcXVpcmVkIG1hcmdpbiBpbnRvIGFjY291bnRcblxuICAgIGNvbnN0IGhlaWdodFRocmVzaG9sZCA9IGNvbnRhaW5lcldpbmRvdy5pbm5lckhlaWdodCAtIG1hcmdpblRocmVzaG9sZDtcbiAgICBjb25zdCB3aWR0aFRocmVzaG9sZCA9IGNvbnRhaW5lcldpbmRvdy5pbm5lcldpZHRoIC0gbWFyZ2luVGhyZXNob2xkOyAvLyBDaGVjayBpZiB0aGUgdmVydGljYWwgYXhpcyBuZWVkcyBzaGlmdGluZ1xuXG4gICAgaWYgKHRvcCA8IG1hcmdpblRocmVzaG9sZCkge1xuICAgICAgY29uc3QgZGlmZiA9IHRvcCAtIG1hcmdpblRocmVzaG9sZDtcbiAgICAgIHRvcCAtPSBkaWZmO1xuICAgICAgZWxlbVRyYW5zZm9ybU9yaWdpbi52ZXJ0aWNhbCArPSBkaWZmO1xuICAgIH0gZWxzZSBpZiAoYm90dG9tID4gaGVpZ2h0VGhyZXNob2xkKSB7XG4gICAgICBjb25zdCBkaWZmID0gYm90dG9tIC0gaGVpZ2h0VGhyZXNob2xkO1xuICAgICAgdG9wIC09IGRpZmY7XG4gICAgICBlbGVtVHJhbnNmb3JtT3JpZ2luLnZlcnRpY2FsICs9IGRpZmY7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChlbGVtUmVjdC5oZWlnaHQgPiBoZWlnaHRUaHJlc2hvbGQgJiYgZWxlbVJlY3QuaGVpZ2h0ICYmIGhlaWdodFRocmVzaG9sZCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFsnTVVJOiBUaGUgcG9wb3ZlciBjb21wb25lbnQgaXMgdG9vIHRhbGwuJywgYFNvbWUgcGFydCBvZiBpdCBjYW4gbm90IGJlIHNlZW4gb24gdGhlIHNjcmVlbiAoJHtlbGVtUmVjdC5oZWlnaHQgLSBoZWlnaHRUaHJlc2hvbGR9cHgpLmAsICdQbGVhc2UgY29uc2lkZXIgYWRkaW5nIGEgYG1heC1oZWlnaHRgIHRvIGltcHJvdmUgdGhlIHVzZXItZXhwZXJpZW5jZS4nXS5qb2luKCdcXG4nKSk7XG4gICAgICB9XG4gICAgfSAvLyBDaGVjayBpZiB0aGUgaG9yaXpvbnRhbCBheGlzIG5lZWRzIHNoaWZ0aW5nXG5cblxuICAgIGlmIChsZWZ0IDwgbWFyZ2luVGhyZXNob2xkKSB7XG4gICAgICBjb25zdCBkaWZmID0gbGVmdCAtIG1hcmdpblRocmVzaG9sZDtcbiAgICAgIGxlZnQgLT0gZGlmZjtcbiAgICAgIGVsZW1UcmFuc2Zvcm1PcmlnaW4uaG9yaXpvbnRhbCArPSBkaWZmO1xuICAgIH0gZWxzZSBpZiAocmlnaHQgPiB3aWR0aFRocmVzaG9sZCkge1xuICAgICAgY29uc3QgZGlmZiA9IHJpZ2h0IC0gd2lkdGhUaHJlc2hvbGQ7XG4gICAgICBsZWZ0IC09IGRpZmY7XG4gICAgICBlbGVtVHJhbnNmb3JtT3JpZ2luLmhvcml6b250YWwgKz0gZGlmZjtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdG9wOiBgJHtNYXRoLnJvdW5kKHRvcCl9cHhgLFxuICAgICAgbGVmdDogYCR7TWF0aC5yb3VuZChsZWZ0KX1weGAsXG4gICAgICB0cmFuc2Zvcm1PcmlnaW46IGdldFRyYW5zZm9ybU9yaWdpblZhbHVlKGVsZW1UcmFuc2Zvcm1PcmlnaW4pXG4gICAgfTtcbiAgfSwgW2FuY2hvckVsLCBhbmNob3JSZWZlcmVuY2UsIGdldEFuY2hvck9mZnNldCwgZ2V0VHJhbnNmb3JtT3JpZ2luLCBtYXJnaW5UaHJlc2hvbGRdKTtcbiAgY29uc3Qgc2V0UG9zaXRpb25pbmdTdHlsZXMgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgY29uc3QgZWxlbWVudCA9IHBhcGVyUmVmLmN1cnJlbnQ7XG5cbiAgICBpZiAoIWVsZW1lbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBwb3NpdGlvbmluZyA9IGdldFBvc2l0aW9uaW5nU3R5bGUoZWxlbWVudCk7XG5cbiAgICBpZiAocG9zaXRpb25pbmcudG9wICE9PSBudWxsKSB7XG4gICAgICBlbGVtZW50LnN0eWxlLnRvcCA9IHBvc2l0aW9uaW5nLnRvcDtcbiAgICB9XG5cbiAgICBpZiAocG9zaXRpb25pbmcubGVmdCAhPT0gbnVsbCkge1xuICAgICAgZWxlbWVudC5zdHlsZS5sZWZ0ID0gcG9zaXRpb25pbmcubGVmdDtcbiAgICB9XG5cbiAgICBlbGVtZW50LnN0eWxlLnRyYW5zZm9ybU9yaWdpbiA9IHBvc2l0aW9uaW5nLnRyYW5zZm9ybU9yaWdpbjtcbiAgfSwgW2dldFBvc2l0aW9uaW5nU3R5bGVdKTtcblxuICBjb25zdCBoYW5kbGVFbnRlcmluZyA9IChlbGVtZW50LCBpc0FwcGVhcmluZykgPT4ge1xuICAgIGlmIChvbkVudGVyaW5nKSB7XG4gICAgICBvbkVudGVyaW5nKGVsZW1lbnQsIGlzQXBwZWFyaW5nKTtcbiAgICB9XG5cbiAgICBzZXRQb3NpdGlvbmluZ1N0eWxlcygpO1xuICB9O1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG9wZW4pIHtcbiAgICAgIHNldFBvc2l0aW9uaW5nU3R5bGVzKCk7XG4gICAgfVxuICB9KTtcbiAgUmVhY3QudXNlSW1wZXJhdGl2ZUhhbmRsZShhY3Rpb24sICgpID0+IG9wZW4gPyB7XG4gICAgdXBkYXRlUG9zaXRpb246ICgpID0+IHtcbiAgICAgIHNldFBvc2l0aW9uaW5nU3R5bGVzKCk7XG4gICAgfVxuICB9IDogbnVsbCwgW29wZW4sIHNldFBvc2l0aW9uaW5nU3R5bGVzXSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFvcGVuKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZVJlc2l6ZSA9IGRlYm91bmNlKCgpID0+IHtcbiAgICAgIHNldFBvc2l0aW9uaW5nU3R5bGVzKCk7XG4gICAgfSk7XG4gICAgY29uc3QgY29udGFpbmVyV2luZG93ID0gb3duZXJXaW5kb3coYW5jaG9yRWwpO1xuICAgIGNvbnRhaW5lcldpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVSZXNpemUpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBoYW5kbGVSZXNpemUuY2xlYXIoKTtcbiAgICAgIGNvbnRhaW5lcldpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVSZXNpemUpO1xuICAgIH07XG4gIH0sIFthbmNob3JFbCwgb3Blbiwgc2V0UG9zaXRpb25pbmdTdHlsZXNdKTtcbiAgbGV0IHRyYW5zaXRpb25EdXJhdGlvbiA9IHRyYW5zaXRpb25EdXJhdGlvblByb3A7XG5cbiAgaWYgKHRyYW5zaXRpb25EdXJhdGlvblByb3AgPT09ICdhdXRvJyAmJiAhVHJhbnNpdGlvbkNvbXBvbmVudC5tdWlTdXBwb3J0QXV0bykge1xuICAgIHRyYW5zaXRpb25EdXJhdGlvbiA9IHVuZGVmaW5lZDtcbiAgfSAvLyBJZiB0aGUgY29udGFpbmVyIHByb3AgaXMgcHJvdmlkZWQsIHVzZSB0aGF0XG4gIC8vIElmIHRoZSBhbmNob3JFbCBwcm9wIGlzIHByb3ZpZGVkLCB1c2UgaXRzIHBhcmVudCBib2R5IGVsZW1lbnQgYXMgdGhlIGNvbnRhaW5lclxuICAvLyBJZiBuZWl0aGVyIGFyZSBwcm92aWRlZCBsZXQgdGhlIE1vZGFsIHRha2UgY2FyZSBvZiBjaG9vc2luZyB0aGUgY29udGFpbmVyXG5cblxuICBjb25zdCBjb250YWluZXIgPSBjb250YWluZXJQcm9wIHx8IChhbmNob3JFbCA/IG93bmVyRG9jdW1lbnQocmVzb2x2ZUFuY2hvckVsKGFuY2hvckVsKSkuYm9keSA6IHVuZGVmaW5lZCk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChQb3BvdmVyUm9vdCwgX2V4dGVuZHMoe1xuICAgIEJhY2tkcm9wUHJvcHM6IHtcbiAgICAgIGludmlzaWJsZTogdHJ1ZVxuICAgIH0sXG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKSxcbiAgICBjb250YWluZXI6IGNvbnRhaW5lcixcbiAgICBvcGVuOiBvcGVuLFxuICAgIHJlZjogcmVmLFxuICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGVcbiAgfSwgb3RoZXIsIHtcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goVHJhbnNpdGlvbkNvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgICAgYXBwZWFyOiB0cnVlLFxuICAgICAgaW46IG9wZW4sXG4gICAgICBvbkVudGVyaW5nOiBoYW5kbGVFbnRlcmluZyxcbiAgICAgIHRpbWVvdXQ6IHRyYW5zaXRpb25EdXJhdGlvblxuICAgIH0sIFRyYW5zaXRpb25Qcm9wcywge1xuICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KFBvcG92ZXJQYXBlciwgX2V4dGVuZHMoe1xuICAgICAgICBlbGV2YXRpb246IGVsZXZhdGlvblxuICAgICAgfSwgUGFwZXJQcm9wcywge1xuICAgICAgICByZWY6IGhhbmRsZVBhcGVyUmVmLFxuICAgICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5wYXBlciwgUGFwZXJQcm9wcy5jbGFzc05hbWUpLFxuICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICAgIH0pKVxuICAgIH0pKVxuICB9KSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFBvcG92ZXIucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIEEgcmVmIGZvciBpbXBlcmF0aXZlIGFjdGlvbnMuXG4gICAqIEl0IGN1cnJlbnRseSBvbmx5IHN1cHBvcnRzIHVwZGF0ZVBvc2l0aW9uKCkgYWN0aW9uLlxuICAgKi9cbiAgYWN0aW9uOiByZWZUeXBlLFxuXG4gIC8qKlxuICAgKiBBbiBIVE1MIGVsZW1lbnQsIG9yIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIG9uZS5cbiAgICogSXQncyB1c2VkIHRvIHNldCB0aGUgcG9zaXRpb24gb2YgdGhlIHBvcG92ZXIuXG4gICAqL1xuICBhbmNob3JFbDogY2hhaW5Qcm9wVHlwZXMoUHJvcFR5cGVzLm9uZU9mVHlwZShbSFRNTEVsZW1lbnRUeXBlLCBQcm9wVHlwZXMuZnVuY10pLCBwcm9wcyA9PiB7XG4gICAgaWYgKHByb3BzLm9wZW4gJiYgKCFwcm9wcy5hbmNob3JSZWZlcmVuY2UgfHwgcHJvcHMuYW5jaG9yUmVmZXJlbmNlID09PSAnYW5jaG9yRWwnKSkge1xuICAgICAgY29uc3QgcmVzb2x2ZWRBbmNob3JFbCA9IHJlc29sdmVBbmNob3JFbChwcm9wcy5hbmNob3JFbCk7XG5cbiAgICAgIGlmIChyZXNvbHZlZEFuY2hvckVsICYmIHJlc29sdmVkQW5jaG9yRWwubm9kZVR5cGUgPT09IDEpIHtcbiAgICAgICAgY29uc3QgYm94ID0gcmVzb2x2ZWRBbmNob3JFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICd0ZXN0JyAmJiBib3gudG9wID09PSAwICYmIGJveC5sZWZ0ID09PSAwICYmIGJveC5yaWdodCA9PT0gMCAmJiBib3guYm90dG9tID09PSAwKSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihbJ01VSTogVGhlIGBhbmNob3JFbGAgcHJvcCBwcm92aWRlZCB0byB0aGUgY29tcG9uZW50IGlzIGludmFsaWQuJywgJ1RoZSBhbmNob3IgZWxlbWVudCBzaG91bGQgYmUgcGFydCBvZiB0aGUgZG9jdW1lbnQgbGF5b3V0LicsIFwiTWFrZSBzdXJlIHRoZSBlbGVtZW50IGlzIHByZXNlbnQgaW4gdGhlIGRvY3VtZW50IG9yIHRoYXQgaXQncyBub3QgZGlzcGxheSBub25lLlwiXS5qb2luKCdcXG4nKSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoWydNVUk6IFRoZSBgYW5jaG9yRWxgIHByb3AgcHJvdmlkZWQgdG8gdGhlIGNvbXBvbmVudCBpcyBpbnZhbGlkLicsIGBJdCBzaG91bGQgYmUgYW4gRWxlbWVudCBpbnN0YW5jZSBidXQgaXQncyBcXGAke3Jlc29sdmVkQW5jaG9yRWx9XFxgIGluc3RlYWQuYF0uam9pbignXFxuJykpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9KSxcblxuICAvKipcbiAgICogVGhpcyBpcyB0aGUgcG9pbnQgb24gdGhlIGFuY2hvciB3aGVyZSB0aGUgcG9wb3ZlcidzXG4gICAqIGBhbmNob3JFbGAgd2lsbCBhdHRhY2ggdG8uIFRoaXMgaXMgbm90IHVzZWQgd2hlbiB0aGVcbiAgICogYW5jaG9yUmVmZXJlbmNlIGlzICdhbmNob3JQb3NpdGlvbicuXG4gICAqXG4gICAqIE9wdGlvbnM6XG4gICAqIHZlcnRpY2FsOiBbdG9wLCBjZW50ZXIsIGJvdHRvbV07XG4gICAqIGhvcml6b250YWw6IFtsZWZ0LCBjZW50ZXIsIHJpZ2h0XS5cbiAgICogQGRlZmF1bHQge1xuICAgKiAgIHZlcnRpY2FsOiAndG9wJyxcbiAgICogICBob3Jpem9udGFsOiAnbGVmdCcsXG4gICAqIH1cbiAgICovXG4gIGFuY2hvck9yaWdpbjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBob3Jpem9udGFsOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWydjZW50ZXInLCAnbGVmdCcsICdyaWdodCddKSwgUHJvcFR5cGVzLm51bWJlcl0pLmlzUmVxdWlyZWQsXG4gICAgdmVydGljYWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ2JvdHRvbScsICdjZW50ZXInLCAndG9wJ10pLCBQcm9wVHlwZXMubnVtYmVyXSkuaXNSZXF1aXJlZFxuICB9KSxcblxuICAvKipcbiAgICogVGhpcyBpcyB0aGUgcG9zaXRpb24gdGhhdCBtYXkgYmUgdXNlZCB0byBzZXQgdGhlIHBvc2l0aW9uIG9mIHRoZSBwb3BvdmVyLlxuICAgKiBUaGUgY29vcmRpbmF0ZXMgYXJlIHJlbGF0aXZlIHRvIHRoZSBhcHBsaWNhdGlvbidzIGNsaWVudCBhcmVhLlxuICAgKi9cbiAgYW5jaG9yUG9zaXRpb246IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgbGVmdDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIHRvcDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkXG4gIH0pLFxuXG4gIC8qKlxuICAgKiBUaGlzIGRldGVybWluZXMgd2hpY2ggYW5jaG9yIHByb3AgdG8gcmVmZXIgdG8gd2hlbiBzZXR0aW5nXG4gICAqIHRoZSBwb3NpdGlvbiBvZiB0aGUgcG9wb3Zlci5cbiAgICogQGRlZmF1bHQgJ2FuY2hvckVsJ1xuICAgKi9cbiAgYW5jaG9yUmVmZXJlbmNlOiBQcm9wVHlwZXMub25lT2YoWydhbmNob3JFbCcsICdhbmNob3JQb3NpdGlvbicsICdub25lJ10pLFxuXG4gIC8qKlxuICAgKiBUaGUgY29udGVudCBvZiB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIEFuIEhUTUwgZWxlbWVudCwgY29tcG9uZW50IGluc3RhbmNlLCBvciBmdW5jdGlvbiB0aGF0IHJldHVybnMgZWl0aGVyLlxuICAgKiBUaGUgYGNvbnRhaW5lcmAgd2lsbCBwYXNzZWQgdG8gdGhlIE1vZGFsIGNvbXBvbmVudC5cbiAgICpcbiAgICogQnkgZGVmYXVsdCwgaXQgdXNlcyB0aGUgYm9keSBvZiB0aGUgYW5jaG9yRWwncyB0b3AtbGV2ZWwgZG9jdW1lbnQgb2JqZWN0LFxuICAgKiBzbyBpdCdzIHNpbXBseSBgZG9jdW1lbnQuYm9keWAgbW9zdCBvZiB0aGUgdGltZS5cbiAgICovXG4gIGNvbnRhaW5lcjogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbSFRNTEVsZW1lbnRUeXBlLCBQcm9wVHlwZXMuZnVuY10pLFxuXG4gIC8qKlxuICAgKiBUaGUgZWxldmF0aW9uIG9mIHRoZSBwb3BvdmVyLlxuICAgKiBAZGVmYXVsdCA4XG4gICAqL1xuICBlbGV2YXRpb246IGludGVnZXJQcm9wVHlwZSxcblxuICAvKipcbiAgICogU3BlY2lmaWVzIGhvdyBjbG9zZSB0byB0aGUgZWRnZSBvZiB0aGUgd2luZG93IHRoZSBwb3BvdmVyIGNhbiBhcHBlYXIuXG4gICAqIEBkZWZhdWx0IDE2XG4gICAqL1xuICBtYXJnaW5UaHJlc2hvbGQ6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIGNvbXBvbmVudCByZXF1ZXN0cyB0byBiZSBjbG9zZWQuXG4gICAqIFRoZSBgcmVhc29uYCBwYXJhbWV0ZXIgY2FuIG9wdGlvbmFsbHkgYmUgdXNlZCB0byBjb250cm9sIHRoZSByZXNwb25zZSB0byBgb25DbG9zZWAuXG4gICAqL1xuICBvbkNsb3NlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IGlzIHNob3duLlxuICAgKi9cbiAgb3BlbjogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogUHJvcHMgYXBwbGllZCB0byB0aGUgW2BQYXBlcmBdKC9tYXRlcmlhbC11aS9hcGkvcGFwZXIvKSBlbGVtZW50LlxuICAgKiBAZGVmYXVsdCB7fVxuICAgKi9cbiAgUGFwZXJQcm9wczogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLnNoYXBlKHtcbiAgICBjb21wb25lbnQ6IGVsZW1lbnRUeXBlQWNjZXB0aW5nUmVmXG4gIH0pLFxuXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG5cbiAgLyoqXG4gICAqIFRoaXMgaXMgdGhlIHBvaW50IG9uIHRoZSBwb3BvdmVyIHdoaWNoXG4gICAqIHdpbGwgYXR0YWNoIHRvIHRoZSBhbmNob3IncyBvcmlnaW4uXG4gICAqXG4gICAqIE9wdGlvbnM6XG4gICAqIHZlcnRpY2FsOiBbdG9wLCBjZW50ZXIsIGJvdHRvbSwgeChweCldO1xuICAgKiBob3Jpem9udGFsOiBbbGVmdCwgY2VudGVyLCByaWdodCwgeChweCldLlxuICAgKiBAZGVmYXVsdCB7XG4gICAqICAgdmVydGljYWw6ICd0b3AnLFxuICAgKiAgIGhvcml6b250YWw6ICdsZWZ0JyxcbiAgICogfVxuICAgKi9cbiAgdHJhbnNmb3JtT3JpZ2luOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhvcml6b250YWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ2NlbnRlcicsICdsZWZ0JywgJ3JpZ2h0J10pLCBQcm9wVHlwZXMubnVtYmVyXSkuaXNSZXF1aXJlZCxcbiAgICB2ZXJ0aWNhbDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnYm90dG9tJywgJ2NlbnRlcicsICd0b3AnXSksIFByb3BUeXBlcy5udW1iZXJdKS5pc1JlcXVpcmVkXG4gIH0pLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSB0cmFuc2l0aW9uLlxuICAgKiBbRm9sbG93IHRoaXMgZ3VpZGVdKC9tYXRlcmlhbC11aS90cmFuc2l0aW9ucy8jdHJhbnNpdGlvbmNvbXBvbmVudC1wcm9wKSB0byBsZWFybiBtb3JlIGFib3V0IHRoZSByZXF1aXJlbWVudHMgZm9yIHRoaXMgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCBHcm93XG4gICAqL1xuICBUcmFuc2l0aW9uQ29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIFNldCB0byAnYXV0bycgdG8gYXV0b21hdGljYWxseSBjYWxjdWxhdGUgdHJhbnNpdGlvbiB0aW1lIGJhc2VkIG9uIGhlaWdodC5cbiAgICogQGRlZmF1bHQgJ2F1dG8nXG4gICAqL1xuICB0cmFuc2l0aW9uRHVyYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ2F1dG8nXSksIFByb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgYXBwZWFyOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGVudGVyOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGV4aXQ6IFByb3BUeXBlcy5udW1iZXJcbiAgfSldKSxcblxuICAvKipcbiAgICogUHJvcHMgYXBwbGllZCB0byB0aGUgdHJhbnNpdGlvbiBlbGVtZW50LlxuICAgKiBCeSBkZWZhdWx0LCB0aGUgZWxlbWVudCBpcyBiYXNlZCBvbiB0aGlzIFtgVHJhbnNpdGlvbmBdKGh0dHA6Ly9yZWFjdGNvbW11bml0eS5vcmcvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC90cmFuc2l0aW9uLykgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCB7fVxuICAgKi9cbiAgVHJhbnNpdGlvblByb3BzOiBQcm9wVHlwZXMub2JqZWN0XG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgUG9wb3ZlcjsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0TWVudVV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpTWVudScsIHNsb3QpO1xufVxuY29uc3QgbWVudUNsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlNZW51JywgWydyb290JywgJ3BhcGVyJywgJ2xpc3QnXSk7XG5leHBvcnQgZGVmYXVsdCBtZW51Q2xhc3NlczsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wib25FbnRlcmluZ1wiXSxcbiAgICAgIF9leGNsdWRlZDIgPSBbXCJhdXRvRm9jdXNcIiwgXCJjaGlsZHJlblwiLCBcImRpc2FibGVBdXRvRm9jdXNJdGVtXCIsIFwiTWVudUxpc3RQcm9wc1wiLCBcIm9uQ2xvc2VcIiwgXCJvcGVuXCIsIFwiUGFwZXJQcm9wc1wiLCBcIlBvcG92ZXJDbGFzc2VzXCIsIFwidHJhbnNpdGlvbkR1cmF0aW9uXCIsIFwiVHJhbnNpdGlvblByb3BzXCIsIFwidmFyaWFudFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGlzRnJhZ21lbnQgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyB1bnN0YWJsZV9jb21wb3NlQ2xhc3NlcyBhcyBjb21wb3NlQ2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5pbXBvcnQgeyBIVE1MRWxlbWVudFR5cGUgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCBNZW51TGlzdCBmcm9tICcuLi9NZW51TGlzdCc7XG5pbXBvcnQgUGFwZXIgZnJvbSAnLi4vUGFwZXInO1xuaW1wb3J0IFBvcG92ZXIgZnJvbSAnLi4vUG9wb3Zlcic7XG5pbXBvcnQgc3R5bGVkLCB7IHJvb3RTaG91bGRGb3J3YXJkUHJvcCB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHVzZVRoZW1lIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZSc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wcyBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWVQcm9wcyc7XG5pbXBvcnQgeyBnZXRNZW51VXRpbGl0eUNsYXNzIH0gZnJvbSAnLi9tZW51Q2xhc3Nlcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3QgUlRMX09SSUdJTiA9IHtcbiAgdmVydGljYWw6ICd0b3AnLFxuICBob3Jpem9udGFsOiAncmlnaHQnXG59O1xuY29uc3QgTFRSX09SSUdJTiA9IHtcbiAgdmVydGljYWw6ICd0b3AnLFxuICBob3Jpem9udGFsOiAnbGVmdCdcbn07XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc2VzXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnXSxcbiAgICBwYXBlcjogWydwYXBlciddLFxuICAgIGxpc3Q6IFsnbGlzdCddXG4gIH07XG4gIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0TWVudVV0aWxpdHlDbGFzcywgY2xhc3Nlcyk7XG59O1xuXG5jb25zdCBNZW51Um9vdCA9IHN0eWxlZChQb3BvdmVyLCB7XG4gIHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+IHJvb3RTaG91bGRGb3J3YXJkUHJvcChwcm9wKSB8fCBwcm9wID09PSAnY2xhc3NlcycsXG4gIG5hbWU6ICdNdWlNZW51JyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHN0eWxlcy5yb290XG59KSh7fSk7XG5jb25zdCBNZW51UGFwZXIgPSBzdHlsZWQoUGFwZXIsIHtcbiAgbmFtZTogJ011aU1lbnUnLFxuICBzbG90OiAnUGFwZXInLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHN0eWxlcy5wYXBlclxufSkoe1xuICAvLyBzcGVjWjogVGhlIG1heGltdW0gaGVpZ2h0IG9mIGEgc2ltcGxlIG1lbnUgc2hvdWxkIGJlIG9uZSBvciBtb3JlIHJvd3MgbGVzcyB0aGFuIHRoZSB2aWV3XG4gIC8vIGhlaWdodC4gVGhpcyBlbnN1cmVzIGEgdGFwYWJsZSBhcmVhIG91dHNpZGUgb2YgdGhlIHNpbXBsZSBtZW51IHdpdGggd2hpY2ggdG8gZGlzbWlzc1xuICAvLyB0aGUgbWVudS5cbiAgbWF4SGVpZ2h0OiAnY2FsYygxMDAlIC0gOTZweCknLFxuICAvLyBBZGQgaU9TIG1vbWVudHVtIHNjcm9sbGluZyBmb3IgaU9TIDwgMTMuMFxuICBXZWJraXRPdmVyZmxvd1Njcm9sbGluZzogJ3RvdWNoJ1xufSk7XG5jb25zdCBNZW51TWVudUxpc3QgPSBzdHlsZWQoTWVudUxpc3QsIHtcbiAgbmFtZTogJ011aU1lbnUnLFxuICBzbG90OiAnTGlzdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4gc3R5bGVzLmxpc3Rcbn0pKHtcbiAgLy8gV2UgZGlzYWJsZSB0aGUgZm9jdXMgcmluZyBmb3IgbW91c2UsIHRvdWNoIGFuZCBrZXlib2FyZCB1c2Vycy5cbiAgb3V0bGluZTogMFxufSk7XG5jb25zdCBNZW51ID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gTWVudShpblByb3BzLCByZWYpIHtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBwcm9wczogaW5Qcm9wcyxcbiAgICBuYW1lOiAnTXVpTWVudSdcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGF1dG9Gb2N1cyA9IHRydWUsXG4gICAgY2hpbGRyZW4sXG4gICAgZGlzYWJsZUF1dG9Gb2N1c0l0ZW0gPSBmYWxzZSxcbiAgICBNZW51TGlzdFByb3BzID0ge30sXG4gICAgb25DbG9zZSxcbiAgICBvcGVuLFxuICAgIFBhcGVyUHJvcHMgPSB7fSxcbiAgICBQb3BvdmVyQ2xhc3NlcyxcbiAgICB0cmFuc2l0aW9uRHVyYXRpb24gPSAnYXV0bycsXG4gICAgVHJhbnNpdGlvblByb3BzOiB7XG4gICAgICBvbkVudGVyaW5nXG4gICAgfSA9IHt9LFxuICAgIHZhcmlhbnQgPSAnc2VsZWN0ZWRNZW51J1xuICB9ID0gcHJvcHMsXG4gICAgICAgIFRyYW5zaXRpb25Qcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLlRyYW5zaXRpb25Qcm9wcywgX2V4Y2x1ZGVkKSxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkMik7XG5cbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBpc1J0bCA9IHRoZW1lLmRpcmVjdGlvbiA9PT0gJ3J0bCc7XG5cbiAgY29uc3Qgb3duZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGF1dG9Gb2N1cyxcbiAgICBkaXNhYmxlQXV0b0ZvY3VzSXRlbSxcbiAgICBNZW51TGlzdFByb3BzLFxuICAgIG9uRW50ZXJpbmcsXG4gICAgUGFwZXJQcm9wcyxcbiAgICB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgVHJhbnNpdGlvblByb3BzLFxuICAgIHZhcmlhbnRcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuICBjb25zdCBhdXRvRm9jdXNJdGVtID0gYXV0b0ZvY3VzICYmICFkaXNhYmxlQXV0b0ZvY3VzSXRlbSAmJiBvcGVuO1xuICBjb25zdCBtZW51TGlzdEFjdGlvbnNSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG5cbiAgY29uc3QgaGFuZGxlRW50ZXJpbmcgPSAoZWxlbWVudCwgaXNBcHBlYXJpbmcpID0+IHtcbiAgICBpZiAobWVudUxpc3RBY3Rpb25zUmVmLmN1cnJlbnQpIHtcbiAgICAgIG1lbnVMaXN0QWN0aW9uc1JlZi5jdXJyZW50LmFkanVzdFN0eWxlRm9yU2Nyb2xsYmFyKGVsZW1lbnQsIHRoZW1lKTtcbiAgICB9XG5cbiAgICBpZiAob25FbnRlcmluZykge1xuICAgICAgb25FbnRlcmluZyhlbGVtZW50LCBpc0FwcGVhcmluZyk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUxpc3RLZXlEb3duID0gZXZlbnQgPT4ge1xuICAgIGlmIChldmVudC5rZXkgPT09ICdUYWInKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBpZiAob25DbG9zZSkge1xuICAgICAgICBvbkNsb3NlKGV2ZW50LCAndGFiS2V5RG93bicpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgLyoqXG4gICAqIHRoZSBpbmRleCBvZiB0aGUgaXRlbSBzaG91bGQgcmVjZWl2ZSBmb2N1c1xuICAgKiBpbiBhIGB2YXJpYW50PVwic2VsZWN0ZWRNZW51XCJgIGl0J3MgdGhlIGZpcnN0IGBzZWxlY3RlZGAgaXRlbVxuICAgKiBvdGhlcndpc2UgaXQncyB0aGUgdmVyeSBmaXJzdCBpdGVtLlxuICAgKi9cblxuXG4gIGxldCBhY3RpdmVJdGVtSW5kZXggPSAtMTsgLy8gc2luY2Ugd2UgaW5qZWN0IGZvY3VzIHJlbGF0ZWQgcHJvcHMgaW50byBjaGlsZHJlbiB3ZSBoYXZlIHRvIGRvIGEgbG9va2FoZWFkXG4gIC8vIHRvIGNoZWNrIGlmIHRoZXJlIGlzIGEgYHNlbGVjdGVkYCBpdGVtLiBXZSdyZSBsb29raW5nIGZvciB0aGUgbGFzdCBgc2VsZWN0ZWRgXG4gIC8vIGl0ZW0gYW5kIHVzZSB0aGUgZmlyc3QgdmFsaWQgaXRlbSBhcyBhIGZhbGxiYWNrXG5cbiAgUmVhY3QuQ2hpbGRyZW4ubWFwKGNoaWxkcmVuLCAoY2hpbGQsIGluZGV4KSA9PiB7XG4gICAgaWYgKCEgLyojX19QVVJFX18qL1JlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAoaXNGcmFnbWVudChjaGlsZCkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihbXCJNVUk6IFRoZSBNZW51IGNvbXBvbmVudCBkb2Vzbid0IGFjY2VwdCBhIEZyYWdtZW50IGFzIGEgY2hpbGQuXCIsICdDb25zaWRlciBwcm92aWRpbmcgYW4gYXJyYXkgaW5zdGVhZC4nXS5qb2luKCdcXG4nKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFjaGlsZC5wcm9wcy5kaXNhYmxlZCkge1xuICAgICAgaWYgKHZhcmlhbnQgPT09ICdzZWxlY3RlZE1lbnUnICYmIGNoaWxkLnByb3BzLnNlbGVjdGVkKSB7XG4gICAgICAgIGFjdGl2ZUl0ZW1JbmRleCA9IGluZGV4O1xuICAgICAgfSBlbHNlIGlmIChhY3RpdmVJdGVtSW5kZXggPT09IC0xKSB7XG4gICAgICAgIGFjdGl2ZUl0ZW1JbmRleCA9IGluZGV4O1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChNZW51Um9vdCwgX2V4dGVuZHMoe1xuICAgIGNsYXNzZXM6IFBvcG92ZXJDbGFzc2VzLFxuICAgIG9uQ2xvc2U6IG9uQ2xvc2UsXG4gICAgYW5jaG9yT3JpZ2luOiB7XG4gICAgICB2ZXJ0aWNhbDogJ2JvdHRvbScsXG4gICAgICBob3Jpem9udGFsOiBpc1J0bCA/ICdyaWdodCcgOiAnbGVmdCdcbiAgICB9LFxuICAgIHRyYW5zZm9ybU9yaWdpbjogaXNSdGwgPyBSVExfT1JJR0lOIDogTFRSX09SSUdJTixcbiAgICBQYXBlclByb3BzOiBfZXh0ZW5kcyh7XG4gICAgICBjb21wb25lbnQ6IE1lbnVQYXBlclxuICAgIH0sIFBhcGVyUHJvcHMsIHtcbiAgICAgIGNsYXNzZXM6IF9leHRlbmRzKHt9LCBQYXBlclByb3BzLmNsYXNzZXMsIHtcbiAgICAgICAgcm9vdDogY2xhc3Nlcy5wYXBlclxuICAgICAgfSlcbiAgICB9KSxcbiAgICBjbGFzc05hbWU6IGNsYXNzZXMucm9vdCxcbiAgICBvcGVuOiBvcGVuLFxuICAgIHJlZjogcmVmLFxuICAgIHRyYW5zaXRpb25EdXJhdGlvbjogdHJhbnNpdGlvbkR1cmF0aW9uLFxuICAgIFRyYW5zaXRpb25Qcm9wczogX2V4dGVuZHMoe1xuICAgICAgb25FbnRlcmluZzogaGFuZGxlRW50ZXJpbmdcbiAgICB9LCBUcmFuc2l0aW9uUHJvcHMpLFxuICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGVcbiAgfSwgb3RoZXIsIHtcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goTWVudU1lbnVMaXN0LCBfZXh0ZW5kcyh7XG4gICAgICBvbktleURvd246IGhhbmRsZUxpc3RLZXlEb3duLFxuICAgICAgYWN0aW9uczogbWVudUxpc3RBY3Rpb25zUmVmLFxuICAgICAgYXV0b0ZvY3VzOiBhdXRvRm9jdXMgJiYgKGFjdGl2ZUl0ZW1JbmRleCA9PT0gLTEgfHwgZGlzYWJsZUF1dG9Gb2N1c0l0ZW0pLFxuICAgICAgYXV0b0ZvY3VzSXRlbTogYXV0b0ZvY3VzSXRlbSxcbiAgICAgIHZhcmlhbnQ6IHZhcmlhbnRcbiAgICB9LCBNZW51TGlzdFByb3BzLCB7XG4gICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5saXN0LCBNZW51TGlzdFByb3BzLmNsYXNzTmFtZSksXG4gICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICB9KSlcbiAgfSkpO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBNZW51LnByb3BUeXBlc1xuLyogcmVtb3ZlLXByb3B0eXBlcyAqL1xuPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBBbiBIVE1MIGVsZW1lbnQsIG9yIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIG9uZS5cbiAgICogSXQncyB1c2VkIHRvIHNldCB0aGUgcG9zaXRpb24gb2YgdGhlIG1lbnUuXG4gICAqL1xuICBhbmNob3JFbDogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbSFRNTEVsZW1lbnRUeXBlLCBQcm9wVHlwZXMuZnVuY10pLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAgKERlZmF1bHQpIHdpbGwgZm9jdXMgdGhlIGBbcm9sZT1cIm1lbnVcIl1gIGlmIG5vIGZvY3VzYWJsZSBjaGlsZCBpcyBmb3VuZC4gRGlzYWJsZWRcbiAgICogY2hpbGRyZW4gYXJlIG5vdCBmb2N1c2FibGUuIElmIHlvdSBzZXQgdGhpcyBwcm9wIHRvIGBmYWxzZWAgZm9jdXMgd2lsbCBiZSBwbGFjZWRcbiAgICogb24gdGhlIHBhcmVudCBtb2RhbCBjb250YWluZXIuIFRoaXMgaGFzIHNldmVyZSBhY2Nlc3NpYmlsaXR5IGltcGxpY2F0aW9uc1xuICAgKiBhbmQgc2hvdWxkIG9ubHkgYmUgY29uc2lkZXJlZCBpZiB5b3UgbWFuYWdlIGZvY3VzIG90aGVyd2lzZS5cbiAgICogQGRlZmF1bHQgdHJ1ZVxuICAgKi9cbiAgYXV0b0ZvY3VzOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogTWVudSBjb250ZW50cywgbm9ybWFsbHkgYE1lbnVJdGVtYHMuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFdoZW4gb3BlbmluZyB0aGUgbWVudSB3aWxsIG5vdCBmb2N1cyB0aGUgYWN0aXZlIGl0ZW0gYnV0IHRoZSBgW3JvbGU9XCJtZW51XCJdYFxuICAgKiB1bmxlc3MgYGF1dG9Gb2N1c2AgaXMgYWxzbyBzZXQgdG8gYGZhbHNlYC4gTm90IHVzaW5nIHRoZSBkZWZhdWx0IG1lYW5zIG5vdFxuICAgKiBmb2xsb3dpbmcgV0FJLUFSSUEgYXV0aG9yaW5nIHByYWN0aWNlcy4gUGxlYXNlIGJlIGNvbnNpZGVyYXRlIGFib3V0IHBvc3NpYmxlXG4gICAqIGFjY2Vzc2liaWxpdHkgaW1wbGljYXRpb25zLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZUF1dG9Gb2N1c0l0ZW06IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBQcm9wcyBhcHBsaWVkIHRvIHRoZSBbYE1lbnVMaXN0YF0oL21hdGVyaWFsLXVpL2FwaS9tZW51LWxpc3QvKSBlbGVtZW50LlxuICAgKiBAZGVmYXVsdCB7fVxuICAgKi9cbiAgTWVudUxpc3RQcm9wczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgY29tcG9uZW50IHJlcXVlc3RzIHRvIGJlIGNsb3NlZC5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmVhc29uIENhbiBiZTogYFwiZXNjYXBlS2V5RG93blwiYCwgYFwiYmFja2Ryb3BDbGlja1wiYCwgYFwidGFiS2V5RG93blwiYC5cbiAgICovXG4gIG9uQ2xvc2U6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaXMgc2hvd24uXG4gICAqL1xuICBvcGVuOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBQYXBlclByb3BzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBgY2xhc3Nlc2AgcHJvcCBhcHBsaWVkIHRvIHRoZSBbYFBvcG92ZXJgXSgvbWF0ZXJpYWwtdWkvYXBpL3BvcG92ZXIvKSBlbGVtZW50LlxuICAgKi9cbiAgUG9wb3ZlckNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFRoZSBzeXN0ZW0gcHJvcCB0aGF0IGFsbG93cyBkZWZpbmluZyBzeXN0ZW0gb3ZlcnJpZGVzIGFzIHdlbGwgYXMgYWRkaXRpb25hbCBDU1Mgc3R5bGVzLlxuICAgKi9cbiAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKSxcblxuICAvKipcbiAgICogVGhlIGxlbmd0aCBvZiB0aGUgdHJhbnNpdGlvbiBpbiBgbXNgLCBvciAnYXV0bydcbiAgICogQGRlZmF1bHQgJ2F1dG8nXG4gICAqL1xuICB0cmFuc2l0aW9uRHVyYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ2F1dG8nXSksIFByb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgYXBwZWFyOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGVudGVyOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGV4aXQ6IFByb3BUeXBlcy5udW1iZXJcbiAgfSldKSxcblxuICAvKipcbiAgICogUHJvcHMgYXBwbGllZCB0byB0aGUgdHJhbnNpdGlvbiBlbGVtZW50LlxuICAgKiBCeSBkZWZhdWx0LCB0aGUgZWxlbWVudCBpcyBiYXNlZCBvbiB0aGlzIFtgVHJhbnNpdGlvbmBdKGh0dHA6Ly9yZWFjdGNvbW11bml0eS5vcmcvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC90cmFuc2l0aW9uLykgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCB7fVxuICAgKi9cbiAgVHJhbnNpdGlvblByb3BzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBUaGUgdmFyaWFudCB0byB1c2UuIFVzZSBgbWVudWAgdG8gcHJldmVudCBzZWxlY3RlZCBpdGVtcyBmcm9tIGltcGFjdGluZyB0aGUgaW5pdGlhbCBmb2N1cy5cbiAgICogQGRlZmF1bHQgJ3NlbGVjdGVkTWVudSdcbiAgICovXG4gIHZhcmlhbnQ6IFByb3BUeXBlcy5vbmVPZihbJ21lbnUnLCAnc2VsZWN0ZWRNZW51J10pXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgTWVudTsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0TmF0aXZlU2VsZWN0VXRpbGl0eUNsYXNzZXMoc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aU5hdGl2ZVNlbGVjdCcsIHNsb3QpO1xufVxuY29uc3QgbmF0aXZlU2VsZWN0Q2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aU5hdGl2ZVNlbGVjdCcsIFsncm9vdCcsICdzZWxlY3QnLCAnbXVsdGlwbGUnLCAnZmlsbGVkJywgJ291dGxpbmVkJywgJ3N0YW5kYXJkJywgJ2Rpc2FibGVkJywgJ2ljb24nLCAnaWNvbk9wZW4nLCAnaWNvbkZpbGxlZCcsICdpY29uT3V0bGluZWQnLCAnaWNvblN0YW5kYXJkJywgJ25hdGl2ZUlucHV0J10pO1xuZXhwb3J0IGRlZmF1bHQgbmF0aXZlU2VsZWN0Q2xhc3NlczsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2xhc3NOYW1lXCIsIFwiZGlzYWJsZWRcIiwgXCJJY29uQ29tcG9uZW50XCIsIFwiaW5wdXRSZWZcIiwgXCJ2YXJpYW50XCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgcmVmVHlwZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IHsgdW5zdGFibGVfY29tcG9zZUNsYXNzZXMgYXMgY29tcG9zZUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuaW1wb3J0IGNhcGl0YWxpemUgZnJvbSAnLi4vdXRpbHMvY2FwaXRhbGl6ZSc7XG5pbXBvcnQgbmF0aXZlU2VsZWN0Q2xhc3NlcywgeyBnZXROYXRpdmVTZWxlY3RVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJy4vbmF0aXZlU2VsZWN0Q2xhc3Nlcyc7XG5pbXBvcnQgc3R5bGVkLCB7IHJvb3RTaG91bGRGb3J3YXJkUHJvcCB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIGNsYXNzZXMsXG4gICAgdmFyaWFudCxcbiAgICBkaXNhYmxlZCxcbiAgICBtdWx0aXBsZSxcbiAgICBvcGVuXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICBzZWxlY3Q6IFsnc2VsZWN0JywgdmFyaWFudCwgZGlzYWJsZWQgJiYgJ2Rpc2FibGVkJywgbXVsdGlwbGUgJiYgJ211bHRpcGxlJ10sXG4gICAgaWNvbjogWydpY29uJywgYGljb24ke2NhcGl0YWxpemUodmFyaWFudCl9YCwgb3BlbiAmJiAnaWNvbk9wZW4nLCBkaXNhYmxlZCAmJiAnZGlzYWJsZWQnXVxuICB9O1xuICByZXR1cm4gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldE5hdGl2ZVNlbGVjdFV0aWxpdHlDbGFzc2VzLCBjbGFzc2VzKTtcbn07XG5cbmV4cG9ydCBjb25zdCBuYXRpdmVTZWxlY3RTZWxlY3RTdHlsZXMgPSAoe1xuICBvd25lclN0YXRlLFxuICB0aGVtZVxufSkgPT4gX2V4dGVuZHMoe1xuICBNb3pBcHBlYXJhbmNlOiAnbm9uZScsXG4gIC8vIFJlc2V0XG4gIFdlYmtpdEFwcGVhcmFuY2U6ICdub25lJyxcbiAgLy8gUmVzZXRcbiAgLy8gV2hlbiBpbnRlcmFjdGluZyBxdWlja2x5LCB0aGUgdGV4dCBjYW4gZW5kIHVwIHNlbGVjdGVkLlxuICAvLyBOYXRpdmUgc2VsZWN0IGNhbid0IGJlIHNlbGVjdGVkIGVpdGhlci5cbiAgdXNlclNlbGVjdDogJ25vbmUnLFxuICBib3JkZXJSYWRpdXM6IDAsXG4gIC8vIFJlc2V0XG4gIGN1cnNvcjogJ3BvaW50ZXInLFxuICAnJjpmb2N1cyc6IHtcbiAgICAvLyBTaG93IHRoYXQgaXQncyBub3QgYW4gdGV4dCBpbnB1dFxuICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5tb2RlID09PSAnbGlnaHQnID8gJ3JnYmEoMCwgMCwgMCwgMC4wNSknIDogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSknLFxuICAgIGJvcmRlclJhZGl1czogMCAvLyBSZXNldCBDaHJvbWUgc3R5bGVcblxuICB9LFxuICAvLyBSZW1vdmUgSUUxMSBhcnJvd1xuICAnJjo6LW1zLWV4cGFuZCc6IHtcbiAgICBkaXNwbGF5OiAnbm9uZSdcbiAgfSxcbiAgW2AmLiR7bmF0aXZlU2VsZWN0Q2xhc3Nlcy5kaXNhYmxlZH1gXToge1xuICAgIGN1cnNvcjogJ2RlZmF1bHQnXG4gIH0sXG4gICcmW211bHRpcGxlXSc6IHtcbiAgICBoZWlnaHQ6ICdhdXRvJ1xuICB9LFxuICAnJjpub3QoW211bHRpcGxlXSkgb3B0aW9uLCAmOm5vdChbbXVsdGlwbGVdKSBvcHRncm91cCc6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuYmFja2dyb3VuZC5wYXBlclxuICB9LFxuICAvLyBCdW1wIHNwZWNpZmljaXR5IHRvIGFsbG93IGV4dGVuZGluZyBjdXN0b20gaW5wdXRzXG4gICcmJiYnOiB7XG4gICAgcGFkZGluZ1JpZ2h0OiAyNCxcbiAgICBtaW5XaWR0aDogMTYgLy8gU28gaXQgZG9lc24ndCBjb2xsYXBzZS5cblxuICB9XG59LCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdmaWxsZWQnICYmIHtcbiAgJyYmJic6IHtcbiAgICBwYWRkaW5nUmlnaHQ6IDMyXG4gIH1cbn0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ291dGxpbmVkJyAmJiB7XG4gIGJvcmRlclJhZGl1czogdGhlbWUuc2hhcGUuYm9yZGVyUmFkaXVzLFxuICAnJjpmb2N1cyc6IHtcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnNoYXBlLmJvcmRlclJhZGl1cyAvLyBSZXNldCB0aGUgcmVzZXQgZm9yIENocm9tZSBzdHlsZVxuXG4gIH0sXG4gICcmJiYnOiB7XG4gICAgcGFkZGluZ1JpZ2h0OiAzMlxuICB9XG59KTtcbmNvbnN0IE5hdGl2ZVNlbGVjdFNlbGVjdCA9IHN0eWxlZCgnc2VsZWN0Jywge1xuICBuYW1lOiAnTXVpTmF0aXZlU2VsZWN0JyxcbiAgc2xvdDogJ1NlbGVjdCcsXG4gIHNob3VsZEZvcndhcmRQcm9wOiByb290U2hvdWxkRm9yd2FyZFByb3AsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFtzdHlsZXMuc2VsZWN0LCBzdHlsZXNbb3duZXJTdGF0ZS52YXJpYW50XSwge1xuICAgICAgW2AmLiR7bmF0aXZlU2VsZWN0Q2xhc3Nlcy5tdWx0aXBsZX1gXTogc3R5bGVzLm11bHRpcGxlXG4gICAgfV07XG4gIH1cbn0pKG5hdGl2ZVNlbGVjdFNlbGVjdFN0eWxlcyk7XG5leHBvcnQgY29uc3QgbmF0aXZlU2VsZWN0SWNvblN0eWxlcyA9ICh7XG4gIG93bmVyU3RhdGUsXG4gIHRoZW1lXG59KSA9PiBfZXh0ZW5kcyh7XG4gIC8vIFdlIHVzZSBhIHBvc2l0aW9uIGFic29sdXRlIG92ZXIgYSBmbGV4Ym94IGluIG9yZGVyIHRvIGZvcndhcmQgdGhlIHBvaW50ZXIgZXZlbnRzXG4gIC8vIHRvIHRoZSBpbnB1dCBhbmQgdG8gc3VwcG9ydCB3cmFwcGluZyB0YWdzLi5cbiAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gIHJpZ2h0OiAwLFxuICB0b3A6ICdjYWxjKDUwJSAtIC41ZW0pJyxcbiAgLy8gQ2VudGVyIHZlcnRpY2FsbHksIGhlaWdodCBpcyAxZW1cbiAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxuICAvLyBEb24ndCBibG9jayBwb2ludGVyIGV2ZW50cyBvbiB0aGUgc2VsZWN0IHVuZGVyIHRoZSBpY29uLlxuICBjb2xvcjogdGhlbWUucGFsZXR0ZS5hY3Rpb24uYWN0aXZlLFxuICBbYCYuJHtuYXRpdmVTZWxlY3RDbGFzc2VzLmRpc2FibGVkfWBdOiB7XG4gICAgY29sb3I6IHRoZW1lLnBhbGV0dGUuYWN0aW9uLmRpc2FibGVkXG4gIH1cbn0sIG93bmVyU3RhdGUub3BlbiAmJiB7XG4gIHRyYW5zZm9ybTogJ3JvdGF0ZSgxODBkZWcpJ1xufSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnZmlsbGVkJyAmJiB7XG4gIHJpZ2h0OiA3XG59LCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdvdXRsaW5lZCcgJiYge1xuICByaWdodDogN1xufSk7XG5jb25zdCBOYXRpdmVTZWxlY3RJY29uID0gc3R5bGVkKCdzdmcnLCB7XG4gIG5hbWU6ICdNdWlOYXRpdmVTZWxlY3QnLFxuICBzbG90OiAnSWNvbicsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFtzdHlsZXMuaWNvbiwgb3duZXJTdGF0ZS52YXJpYW50ICYmIHN0eWxlc1tgaWNvbiR7Y2FwaXRhbGl6ZShvd25lclN0YXRlLnZhcmlhbnQpfWBdLCBvd25lclN0YXRlLm9wZW4gJiYgc3R5bGVzLmljb25PcGVuXTtcbiAgfVxufSkobmF0aXZlU2VsZWN0SWNvblN0eWxlcyk7XG4vKipcbiAqIEBpZ25vcmUgLSBpbnRlcm5hbCBjb21wb25lbnQuXG4gKi9cblxuY29uc3QgTmF0aXZlU2VsZWN0SW5wdXQgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBOYXRpdmVTZWxlY3RJbnB1dChwcm9wcywgcmVmKSB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc05hbWUsXG4gICAgZGlzYWJsZWQsXG4gICAgSWNvbkNvbXBvbmVudCxcbiAgICBpbnB1dFJlZixcbiAgICB2YXJpYW50ID0gJ3N0YW5kYXJkJ1xuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3Qgb3duZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGRpc2FibGVkLFxuICAgIHZhcmlhbnRcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuICByZXR1cm4gLyojX19QVVJFX18qL19qc3hzKFJlYWN0LkZyYWdtZW50LCB7XG4gICAgY2hpbGRyZW46IFsvKiNfX1BVUkVfXyovX2pzeChOYXRpdmVTZWxlY3RTZWxlY3QsIF9leHRlbmRzKHtcbiAgICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGUsXG4gICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5zZWxlY3QsIGNsYXNzTmFtZSksXG4gICAgICBkaXNhYmxlZDogZGlzYWJsZWQsXG4gICAgICByZWY6IGlucHV0UmVmIHx8IHJlZlxuICAgIH0sIG90aGVyKSksIHByb3BzLm11bHRpcGxlID8gbnVsbCA6IC8qI19fUFVSRV9fKi9fanN4KE5hdGl2ZVNlbGVjdEljb24sIHtcbiAgICAgIGFzOiBJY29uQ29tcG9uZW50LFxuICAgICAgb3duZXJTdGF0ZTogb3duZXJTdGF0ZSxcbiAgICAgIGNsYXNzTmFtZTogY2xhc3Nlcy5pY29uXG4gICAgfSldXG4gIH0pO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBOYXRpdmVTZWxlY3RJbnB1dC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUaGUgb3B0aW9uIGVsZW1lbnRzIHRvIHBvcHVsYXRlIHRoZSBzZWxlY3Qgd2l0aC5cbiAgICogQ2FuIGJlIHNvbWUgYDxvcHRpb24+YCBlbGVtZW50cy5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKiBTZWUgW0NTUyBBUEldKCNjc3MpIGJlbG93IGZvciBtb3JlIGRldGFpbHMuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBUaGUgQ1NTIGNsYXNzIG5hbWUgb2YgdGhlIHNlbGVjdCBlbGVtZW50LlxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBzZWxlY3QgaXMgZGlzYWJsZWQuXG4gICAqL1xuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBpY29uIHRoYXQgZGlzcGxheXMgdGhlIGFycm93LlxuICAgKi9cbiAgSWNvbkNvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIFVzZSB0aGF0IHByb3AgdG8gcGFzcyBhIHJlZiB0byB0aGUgbmF0aXZlIHNlbGVjdCBlbGVtZW50LlxuICAgKiBAZGVwcmVjYXRlZFxuICAgKi9cbiAgaW5wdXRSZWY6IHJlZlR5cGUsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG11bHRpcGxlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogTmFtZSBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIG9yIGhpZGRlbiBgaW5wdXRgIGVsZW1lbnQuXG4gICAqL1xuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIGEgbWVudSBpdGVtIGlzIHNlbGVjdGVkLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gZXZlbnQgVGhlIGV2ZW50IHNvdXJjZSBvZiB0aGUgY2FsbGJhY2suXG4gICAqIFlvdSBjYW4gcHVsbCBvdXQgdGhlIG5ldyB2YWx1ZSBieSBhY2Nlc3NpbmcgYGV2ZW50LnRhcmdldC52YWx1ZWAgKHN0cmluZykuXG4gICAqL1xuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIFRoZSBpbnB1dCB2YWx1ZS5cbiAgICovXG4gIHZhbHVlOiBQcm9wVHlwZXMuYW55LFxuXG4gIC8qKlxuICAgKiBUaGUgdmFyaWFudCB0byB1c2UuXG4gICAqL1xuICB2YXJpYW50OiBQcm9wVHlwZXMub25lT2YoWydzdGFuZGFyZCcsICdvdXRsaW5lZCcsICdmaWxsZWQnXSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBOYXRpdmVTZWxlY3RJbnB1dDsiLCIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC1ob29rcy9ydWxlcy1vZi1ob29rcywgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VDb250cm9sbGVkKHtcbiAgY29udHJvbGxlZCxcbiAgZGVmYXVsdDogZGVmYXVsdFByb3AsXG4gIG5hbWUsXG4gIHN0YXRlID0gJ3ZhbHVlJ1xufSkge1xuICAvLyBpc0NvbnRyb2xsZWQgaXMgaWdub3JlZCBpbiB0aGUgaG9vayBkZXBlbmRlbmN5IGxpc3RzIGFzIGl0IHNob3VsZCBuZXZlciBjaGFuZ2UuXG4gIGNvbnN0IHtcbiAgICBjdXJyZW50OiBpc0NvbnRyb2xsZWRcbiAgfSA9IFJlYWN0LnVzZVJlZihjb250cm9sbGVkICE9PSB1bmRlZmluZWQpO1xuICBjb25zdCBbdmFsdWVTdGF0ZSwgc2V0VmFsdWVdID0gUmVhY3QudXNlU3RhdGUoZGVmYXVsdFByb3ApO1xuICBjb25zdCB2YWx1ZSA9IGlzQ29udHJvbGxlZCA/IGNvbnRyb2xsZWQgOiB2YWx1ZVN0YXRlO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGlmIChpc0NvbnRyb2xsZWQgIT09IChjb250cm9sbGVkICE9PSB1bmRlZmluZWQpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoW2BNVUk6IEEgY29tcG9uZW50IGlzIGNoYW5naW5nIHRoZSAke2lzQ29udHJvbGxlZCA/ICcnIDogJ3VuJ31jb250cm9sbGVkICR7c3RhdGV9IHN0YXRlIG9mICR7bmFtZX0gdG8gYmUgJHtpc0NvbnRyb2xsZWQgPyAndW4nIDogJyd9Y29udHJvbGxlZC5gLCAnRWxlbWVudHMgc2hvdWxkIG5vdCBzd2l0Y2ggZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuJywgYERlY2lkZSBiZXR3ZWVuIHVzaW5nIGEgY29udHJvbGxlZCBvciB1bmNvbnRyb2xsZWQgJHtuYW1lfSBgICsgJ2VsZW1lbnQgZm9yIHRoZSBsaWZldGltZSBvZiB0aGUgY29tcG9uZW50LicsIFwiVGhlIG5hdHVyZSBvZiB0aGUgc3RhdGUgaXMgZGV0ZXJtaW5lZCBkdXJpbmcgdGhlIGZpcnN0IHJlbmRlci4gSXQncyBjb25zaWRlcmVkIGNvbnRyb2xsZWQgaWYgdGhlIHZhbHVlIGlzIG5vdCBgdW5kZWZpbmVkYC5cIiwgJ01vcmUgaW5mbzogaHR0cHM6Ly9mYi5tZS9yZWFjdC1jb250cm9sbGVkLWNvbXBvbmVudHMnXS5qb2luKCdcXG4nKSk7XG4gICAgICB9XG4gICAgfSwgW3N0YXRlLCBuYW1lLCBjb250cm9sbGVkXSk7XG4gICAgY29uc3Qge1xuICAgICAgY3VycmVudDogZGVmYXVsdFZhbHVlXG4gICAgfSA9IFJlYWN0LnVzZVJlZihkZWZhdWx0UHJvcCk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGlmICghaXNDb250cm9sbGVkICYmIGRlZmF1bHRWYWx1ZSAhPT0gZGVmYXVsdFByb3ApIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihbYE1VSTogQSBjb21wb25lbnQgaXMgY2hhbmdpbmcgdGhlIGRlZmF1bHQgJHtzdGF0ZX0gc3RhdGUgb2YgYW4gdW5jb250cm9sbGVkICR7bmFtZX0gYWZ0ZXIgYmVpbmcgaW5pdGlhbGl6ZWQuIGAgKyBgVG8gc3VwcHJlc3MgdGhpcyB3YXJuaW5nIG9wdCB0byB1c2UgYSBjb250cm9sbGVkICR7bmFtZX0uYF0uam9pbignXFxuJykpO1xuICAgICAgfVxuICAgIH0sIFtKU09OLnN0cmluZ2lmeShkZWZhdWx0UHJvcCldKTtcbiAgfVxuXG4gIGNvbnN0IHNldFZhbHVlSWZVbmNvbnRyb2xsZWQgPSBSZWFjdC51c2VDYWxsYmFjayhuZXdWYWx1ZSA9PiB7XG4gICAgaWYgKCFpc0NvbnRyb2xsZWQpIHtcbiAgICAgIHNldFZhbHVlKG5ld1ZhbHVlKTtcbiAgICB9XG4gIH0sIFtdKTtcbiAgcmV0dXJuIFt2YWx1ZSwgc2V0VmFsdWVJZlVuY29udHJvbGxlZF07XG59IiwiaW1wb3J0IHsgdW5zdGFibGVfdXNlQ29udHJvbGxlZCBhcyB1c2VDb250cm9sbGVkIH0gZnJvbSAnQG11aS91dGlscyc7XG5leHBvcnQgZGVmYXVsdCB1c2VDb250cm9sbGVkOyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRTZWxlY3RVdGlsaXR5Q2xhc3NlcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpU2VsZWN0Jywgc2xvdCk7XG59XG5jb25zdCBzZWxlY3RDbGFzc2VzID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcygnTXVpU2VsZWN0JywgWydzZWxlY3QnLCAnbXVsdGlwbGUnLCAnZmlsbGVkJywgJ291dGxpbmVkJywgJ3N0YW5kYXJkJywgJ2Rpc2FibGVkJywgJ2ZvY3VzZWQnLCAnaWNvbicsICdpY29uT3BlbicsICdpY29uRmlsbGVkJywgJ2ljb25PdXRsaW5lZCcsICdpY29uU3RhbmRhcmQnLCAnbmF0aXZlSW5wdXQnXSk7XG5leHBvcnQgZGVmYXVsdCBzZWxlY3RDbGFzc2VzOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgeyBmb3JtYXRNdWlFcnJvck1lc3NhZ2UgYXMgX2Zvcm1hdE11aUVycm9yTWVzc2FnZSB9IGZyb20gXCJAbXVpL3V0aWxzXCI7XG5cbnZhciBfc3BhbjtcblxuY29uc3QgX2V4Y2x1ZGVkID0gW1wiYXJpYS1kZXNjcmliZWRieVwiLCBcImFyaWEtbGFiZWxcIiwgXCJhdXRvRm9jdXNcIiwgXCJhdXRvV2lkdGhcIiwgXCJjaGlsZHJlblwiLCBcImNsYXNzTmFtZVwiLCBcImRlZmF1bHRPcGVuXCIsIFwiZGVmYXVsdFZhbHVlXCIsIFwiZGlzYWJsZWRcIiwgXCJkaXNwbGF5RW1wdHlcIiwgXCJJY29uQ29tcG9uZW50XCIsIFwiaW5wdXRSZWZcIiwgXCJsYWJlbElkXCIsIFwiTWVudVByb3BzXCIsIFwibXVsdGlwbGVcIiwgXCJuYW1lXCIsIFwib25CbHVyXCIsIFwib25DaGFuZ2VcIiwgXCJvbkNsb3NlXCIsIFwib25Gb2N1c1wiLCBcIm9uT3BlblwiLCBcIm9wZW5cIiwgXCJyZWFkT25seVwiLCBcInJlbmRlclZhbHVlXCIsIFwiU2VsZWN0RGlzcGxheVByb3BzXCIsIFwidGFiSW5kZXhcIiwgXCJ0eXBlXCIsIFwidmFsdWVcIiwgXCJ2YXJpYW50XCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgaXNGcmFnbWVudCB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCB7IHJlZlR5cGUgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCBvd25lckRvY3VtZW50IGZyb20gJy4uL3V0aWxzL293bmVyRG9jdW1lbnQnO1xuaW1wb3J0IGNhcGl0YWxpemUgZnJvbSAnLi4vdXRpbHMvY2FwaXRhbGl6ZSc7XG5pbXBvcnQgTWVudSBmcm9tICcuLi9NZW51L01lbnUnO1xuaW1wb3J0IHsgbmF0aXZlU2VsZWN0U2VsZWN0U3R5bGVzLCBuYXRpdmVTZWxlY3RJY29uU3R5bGVzIH0gZnJvbSAnLi4vTmF0aXZlU2VsZWN0L05hdGl2ZVNlbGVjdElucHV0JztcbmltcG9ydCB7IGlzRmlsbGVkIH0gZnJvbSAnLi4vSW5wdXRCYXNlL3V0aWxzJztcbmltcG9ydCBzdHlsZWQsIHsgc2xvdFNob3VsZEZvcndhcmRQcm9wIH0gZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgdXNlRm9ya1JlZiBmcm9tICcuLi91dGlscy91c2VGb3JrUmVmJztcbmltcG9ydCB1c2VDb250cm9sbGVkIGZyb20gJy4uL3V0aWxzL3VzZUNvbnRyb2xsZWQnO1xuaW1wb3J0IHNlbGVjdENsYXNzZXMsIHsgZ2V0U2VsZWN0VXRpbGl0eUNsYXNzZXMgfSBmcm9tICcuL3NlbGVjdENsYXNzZXMnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmNvbnN0IFNlbGVjdFNlbGVjdCA9IHN0eWxlZCgnZGl2Jywge1xuICBuYW1lOiAnTXVpU2VsZWN0JyxcbiAgc2xvdDogJ1NlbGVjdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFsvLyBXaW4gc3BlY2lmaWNpdHkgb3ZlciB0aGUgaW5wdXQgYmFzZVxuICAgIHtcbiAgICAgIFtgJi4ke3NlbGVjdENsYXNzZXMuc2VsZWN0fWBdOiBzdHlsZXMuc2VsZWN0XG4gICAgfSwge1xuICAgICAgW2AmLiR7c2VsZWN0Q2xhc3Nlcy5zZWxlY3R9YF06IHN0eWxlc1tvd25lclN0YXRlLnZhcmlhbnRdXG4gICAgfSwge1xuICAgICAgW2AmLiR7c2VsZWN0Q2xhc3Nlcy5tdWx0aXBsZX1gXTogc3R5bGVzLm11bHRpcGxlXG4gICAgfV07XG4gIH1cbn0pKG5hdGl2ZVNlbGVjdFNlbGVjdFN0eWxlcywge1xuICAvLyBXaW4gc3BlY2lmaWNpdHkgb3ZlciB0aGUgaW5wdXQgYmFzZVxuICBbYCYuJHtzZWxlY3RDbGFzc2VzLnNlbGVjdH1gXToge1xuICAgIGhlaWdodDogJ2F1dG8nLFxuICAgIC8vIFJlc2V0cyBmb3IgbXVsdGlwbGUgc2VsZWN0IHdpdGggY2hpcHNcbiAgICBtaW5IZWlnaHQ6ICcxLjQzNzVlbScsXG4gICAgLy8gUmVxdWlyZWQgZm9yIHNlbGVjdFxcdGV4dC1maWVsZCBoZWlnaHQgY29uc2lzdGVuY3lcbiAgICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nXG4gIH1cbn0pO1xuY29uc3QgU2VsZWN0SWNvbiA9IHN0eWxlZCgnc3ZnJywge1xuICBuYW1lOiAnTXVpU2VsZWN0JyxcbiAgc2xvdDogJ0ljb24nLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBvd25lclN0YXRlXG4gICAgfSA9IHByb3BzO1xuICAgIHJldHVybiBbc3R5bGVzLmljb24sIG93bmVyU3RhdGUudmFyaWFudCAmJiBzdHlsZXNbYGljb24ke2NhcGl0YWxpemUob3duZXJTdGF0ZS52YXJpYW50KX1gXSwgb3duZXJTdGF0ZS5vcGVuICYmIHN0eWxlcy5pY29uT3Blbl07XG4gIH1cbn0pKG5hdGl2ZVNlbGVjdEljb25TdHlsZXMpO1xuY29uc3QgU2VsZWN0TmF0aXZlSW5wdXQgPSBzdHlsZWQoJ2lucHV0Jywge1xuICBzaG91bGRGb3J3YXJkUHJvcDogcHJvcCA9PiBzbG90U2hvdWxkRm9yd2FyZFByb3AocHJvcCkgJiYgcHJvcCAhPT0gJ2NsYXNzZXMnLFxuICBuYW1lOiAnTXVpU2VsZWN0JyxcbiAgc2xvdDogJ05hdGl2ZUlucHV0JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiBzdHlsZXMubmF0aXZlSW5wdXRcbn0pKHtcbiAgYm90dG9tOiAwLFxuICBsZWZ0OiAwLFxuICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgb3BhY2l0eTogMCxcbiAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxuICB3aWR0aDogJzEwMCUnLFxuICBib3hTaXppbmc6ICdib3JkZXItYm94J1xufSk7XG5cbmZ1bmN0aW9uIGFyZUVxdWFsVmFsdWVzKGEsIGIpIHtcbiAgaWYgKHR5cGVvZiBiID09PSAnb2JqZWN0JyAmJiBiICE9PSBudWxsKSB7XG4gICAgcmV0dXJuIGEgPT09IGI7XG4gIH0gLy8gVGhlIHZhbHVlIGNvdWxkIGJlIGEgbnVtYmVyLCB0aGUgRE9NIHdpbGwgc3RyaW5naWZ5IGl0IGFueXdheS5cblxuXG4gIHJldHVybiBTdHJpbmcoYSkgPT09IFN0cmluZyhiKTtcbn1cblxuZnVuY3Rpb24gaXNFbXB0eShkaXNwbGF5KSB7XG4gIHJldHVybiBkaXNwbGF5ID09IG51bGwgfHwgdHlwZW9mIGRpc3BsYXkgPT09ICdzdHJpbmcnICYmICFkaXNwbGF5LnRyaW0oKTtcbn1cblxuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIGNsYXNzZXMsXG4gICAgdmFyaWFudCxcbiAgICBkaXNhYmxlZCxcbiAgICBtdWx0aXBsZSxcbiAgICBvcGVuXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICBzZWxlY3Q6IFsnc2VsZWN0JywgdmFyaWFudCwgZGlzYWJsZWQgJiYgJ2Rpc2FibGVkJywgbXVsdGlwbGUgJiYgJ211bHRpcGxlJ10sXG4gICAgaWNvbjogWydpY29uJywgYGljb24ke2NhcGl0YWxpemUodmFyaWFudCl9YCwgb3BlbiAmJiAnaWNvbk9wZW4nLCBkaXNhYmxlZCAmJiAnZGlzYWJsZWQnXSxcbiAgICBuYXRpdmVJbnB1dDogWyduYXRpdmVJbnB1dCddXG4gIH07XG4gIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0U2VsZWN0VXRpbGl0eUNsYXNzZXMsIGNsYXNzZXMpO1xufTtcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG5cbmNvbnN0IFNlbGVjdElucHV0ID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gU2VsZWN0SW5wdXQocHJvcHMsIHJlZikge1xuICBjb25zdCB7XG4gICAgJ2FyaWEtZGVzY3JpYmVkYnknOiBhcmlhRGVzY3JpYmVkYnksXG4gICAgJ2FyaWEtbGFiZWwnOiBhcmlhTGFiZWwsXG4gICAgYXV0b0ZvY3VzLFxuICAgIGF1dG9XaWR0aCxcbiAgICBjaGlsZHJlbixcbiAgICBjbGFzc05hbWUsXG4gICAgZGVmYXVsdE9wZW4sXG4gICAgZGVmYXVsdFZhbHVlLFxuICAgIGRpc2FibGVkLFxuICAgIGRpc3BsYXlFbXB0eSxcbiAgICBJY29uQ29tcG9uZW50LFxuICAgIGlucHV0UmVmOiBpbnB1dFJlZlByb3AsXG4gICAgbGFiZWxJZCxcbiAgICBNZW51UHJvcHMgPSB7fSxcbiAgICBtdWx0aXBsZSxcbiAgICBuYW1lLFxuICAgIG9uQmx1cixcbiAgICBvbkNoYW5nZSxcbiAgICBvbkNsb3NlLFxuICAgIG9uRm9jdXMsXG4gICAgb25PcGVuLFxuICAgIG9wZW46IG9wZW5Qcm9wLFxuICAgIHJlYWRPbmx5LFxuICAgIHJlbmRlclZhbHVlLFxuICAgIFNlbGVjdERpc3BsYXlQcm9wcyA9IHt9LFxuICAgIHRhYkluZGV4OiB0YWJJbmRleFByb3AsXG4gICAgdmFsdWU6IHZhbHVlUHJvcCxcbiAgICB2YXJpYW50ID0gJ3N0YW5kYXJkJ1xuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZVN0YXRlXSA9IHVzZUNvbnRyb2xsZWQoe1xuICAgIGNvbnRyb2xsZWQ6IHZhbHVlUHJvcCxcbiAgICBkZWZhdWx0OiBkZWZhdWx0VmFsdWUsXG4gICAgbmFtZTogJ1NlbGVjdCdcbiAgfSk7XG4gIGNvbnN0IFtvcGVuU3RhdGUsIHNldE9wZW5TdGF0ZV0gPSB1c2VDb250cm9sbGVkKHtcbiAgICBjb250cm9sbGVkOiBvcGVuUHJvcCxcbiAgICBkZWZhdWx0OiBkZWZhdWx0T3BlbixcbiAgICBuYW1lOiAnU2VsZWN0J1xuICB9KTtcbiAgY29uc3QgaW5wdXRSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gIGNvbnN0IGRpc3BsYXlSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gIGNvbnN0IFtkaXNwbGF5Tm9kZSwgc2V0RGlzcGxheU5vZGVdID0gUmVhY3QudXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IHtcbiAgICBjdXJyZW50OiBpc09wZW5Db250cm9sbGVkXG4gIH0gPSBSZWFjdC51c2VSZWYob3BlblByb3AgIT0gbnVsbCk7XG4gIGNvbnN0IFttZW51TWluV2lkdGhTdGF0ZSwgc2V0TWVudU1pbldpZHRoU3RhdGVdID0gUmVhY3QudXNlU3RhdGUoKTtcbiAgY29uc3QgaGFuZGxlUmVmID0gdXNlRm9ya1JlZihyZWYsIGlucHV0UmVmUHJvcCk7XG4gIGNvbnN0IGhhbmRsZURpc3BsYXlSZWYgPSBSZWFjdC51c2VDYWxsYmFjayhub2RlID0+IHtcbiAgICBkaXNwbGF5UmVmLmN1cnJlbnQgPSBub2RlO1xuXG4gICAgaWYgKG5vZGUpIHtcbiAgICAgIHNldERpc3BsYXlOb2RlKG5vZGUpO1xuICAgIH1cbiAgfSwgW10pO1xuICBSZWFjdC51c2VJbXBlcmF0aXZlSGFuZGxlKGhhbmRsZVJlZiwgKCkgPT4gKHtcbiAgICBmb2N1czogKCkgPT4ge1xuICAgICAgZGlzcGxheVJlZi5jdXJyZW50LmZvY3VzKCk7XG4gICAgfSxcbiAgICBub2RlOiBpbnB1dFJlZi5jdXJyZW50LFxuICAgIHZhbHVlXG4gIH0pLCBbdmFsdWVdKTsgLy8gUmVzaXplIG1lbnUgb24gYGRlZmF1bHRPcGVuYCBhdXRvbWF0aWMgdG9nZ2xlLlxuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGRlZmF1bHRPcGVuICYmIG9wZW5TdGF0ZSAmJiBkaXNwbGF5Tm9kZSAmJiAhaXNPcGVuQ29udHJvbGxlZCkge1xuICAgICAgc2V0TWVudU1pbldpZHRoU3RhdGUoYXV0b1dpZHRoID8gbnVsbCA6IGRpc3BsYXlOb2RlLmNsaWVudFdpZHRoKTtcbiAgICAgIGRpc3BsYXlSZWYuY3VycmVudC5mb2N1cygpO1xuICAgIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuXG4gIH0sIFtkaXNwbGF5Tm9kZSwgYXV0b1dpZHRoXSk7IC8vIGBpc09wZW5Db250cm9sbGVkYCBpcyBpZ25vcmVkIGJlY2F1c2UgdGhlIGNvbXBvbmVudCBzaG91bGQgbmV2ZXIgc3dpdGNoIGJldHdlZW4gY29udHJvbGxlZCBhbmQgdW5jb250cm9sbGVkIG1vZGVzLlxuICAvLyBgZGVmYXVsdE9wZW5gIGFuZCBgb3BlblN0YXRlYCBhcmUgaWdub3JlZCB0byBhdm9pZCB1bm5lY2Vzc2FyeSBjYWxsYmFja3MuXG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoYXV0b0ZvY3VzKSB7XG4gICAgICBkaXNwbGF5UmVmLmN1cnJlbnQuZm9jdXMoKTtcbiAgICB9XG4gIH0sIFthdXRvRm9jdXNdKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWxhYmVsSWQpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgY29uc3QgbGFiZWwgPSBvd25lckRvY3VtZW50KGRpc3BsYXlSZWYuY3VycmVudCkuZ2V0RWxlbWVudEJ5SWQobGFiZWxJZCk7XG5cbiAgICBpZiAobGFiZWwpIHtcbiAgICAgIGNvbnN0IGhhbmRsZXIgPSAoKSA9PiB7XG4gICAgICAgIGlmIChnZXRTZWxlY3Rpb24oKS5pc0NvbGxhcHNlZCkge1xuICAgICAgICAgIGRpc3BsYXlSZWYuY3VycmVudC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBsYWJlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZXIpO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgbGFiZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVyKTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfSwgW2xhYmVsSWRdKTtcblxuICBjb25zdCB1cGRhdGUgPSAob3BlbiwgZXZlbnQpID0+IHtcbiAgICBpZiAob3Blbikge1xuICAgICAgaWYgKG9uT3Blbikge1xuICAgICAgICBvbk9wZW4oZXZlbnQpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAob25DbG9zZSkge1xuICAgICAgb25DbG9zZShldmVudCk7XG4gICAgfVxuXG4gICAgaWYgKCFpc09wZW5Db250cm9sbGVkKSB7XG4gICAgICBzZXRNZW51TWluV2lkdGhTdGF0ZShhdXRvV2lkdGggPyBudWxsIDogZGlzcGxheU5vZGUuY2xpZW50V2lkdGgpO1xuICAgICAgc2V0T3BlblN0YXRlKG9wZW4pO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVNb3VzZURvd24gPSBldmVudCA9PiB7XG4gICAgLy8gSWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQtY2xpY2tcbiAgICBpZiAoZXZlbnQuYnV0dG9uICE9PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBIaWphY2sgdGhlIGRlZmF1bHQgZm9jdXMgYmVoYXZpb3IuXG5cblxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZGlzcGxheVJlZi5jdXJyZW50LmZvY3VzKCk7XG4gICAgdXBkYXRlKHRydWUsIGV2ZW50KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVDbG9zZSA9IGV2ZW50ID0+IHtcbiAgICB1cGRhdGUoZmFsc2UsIGV2ZW50KTtcbiAgfTtcblxuICBjb25zdCBjaGlsZHJlbkFycmF5ID0gUmVhY3QuQ2hpbGRyZW4udG9BcnJheShjaGlsZHJlbik7IC8vIFN1cHBvcnQgYXV0b2ZpbGwuXG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gZXZlbnQgPT4ge1xuICAgIGNvbnN0IGluZGV4ID0gY2hpbGRyZW5BcnJheS5tYXAoY2hpbGQgPT4gY2hpbGQucHJvcHMudmFsdWUpLmluZGV4T2YoZXZlbnQudGFyZ2V0LnZhbHVlKTtcblxuICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBjaGlsZCA9IGNoaWxkcmVuQXJyYXlbaW5kZXhdO1xuICAgIHNldFZhbHVlU3RhdGUoY2hpbGQucHJvcHMudmFsdWUpO1xuXG4gICAgaWYgKG9uQ2hhbmdlKSB7XG4gICAgICBvbkNoYW5nZShldmVudCwgY2hpbGQpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVJdGVtQ2xpY2sgPSBjaGlsZCA9PiBldmVudCA9PiB7XG4gICAgbGV0IG5ld1ZhbHVlOyAvLyBXZSB1c2UgdGhlIHRhYmluZGV4IGF0dHJpYnV0ZSB0byBzaWduYWwgdGhlIGF2YWlsYWJsZSBvcHRpb25zLlxuXG4gICAgaWYgKCFldmVudC5jdXJyZW50VGFyZ2V0Lmhhc0F0dHJpYnV0ZSgndGFiaW5kZXgnKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChtdWx0aXBsZSkge1xuICAgICAgbmV3VmFsdWUgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlLnNsaWNlKCkgOiBbXTtcbiAgICAgIGNvbnN0IGl0ZW1JbmRleCA9IHZhbHVlLmluZGV4T2YoY2hpbGQucHJvcHMudmFsdWUpO1xuXG4gICAgICBpZiAoaXRlbUluZGV4ID09PSAtMSkge1xuICAgICAgICBuZXdWYWx1ZS5wdXNoKGNoaWxkLnByb3BzLnZhbHVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5ld1ZhbHVlLnNwbGljZShpdGVtSW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBuZXdWYWx1ZSA9IGNoaWxkLnByb3BzLnZhbHVlO1xuICAgIH1cblxuICAgIGlmIChjaGlsZC5wcm9wcy5vbkNsaWNrKSB7XG4gICAgICBjaGlsZC5wcm9wcy5vbkNsaWNrKGV2ZW50KTtcbiAgICB9XG5cbiAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICBzZXRWYWx1ZVN0YXRlKG5ld1ZhbHVlKTtcblxuICAgICAgaWYgKG9uQ2hhbmdlKSB7XG4gICAgICAgIC8vIFJlZGVmaW5lIHRhcmdldCB0byBhbGxvdyBuYW1lIGFuZCB2YWx1ZSB0byBiZSByZWFkLlxuICAgICAgICAvLyBUaGlzIGFsbG93cyBzZWFtbGVzcyBpbnRlZ3JhdGlvbiB3aXRoIHRoZSBtb3N0IHBvcHVsYXIgZm9ybSBsaWJyYXJpZXMuXG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9tdWkvbWF0ZXJpYWwtdWkvaXNzdWVzLzEzNDg1I2lzc3VlY29tbWVudC02NzYwNDg0OTJcbiAgICAgICAgLy8gQ2xvbmUgdGhlIGV2ZW50IHRvIG5vdCBvdmVycmlkZSBgdGFyZ2V0YCBvZiB0aGUgb3JpZ2luYWwgZXZlbnQuXG4gICAgICAgIGNvbnN0IG5hdGl2ZUV2ZW50ID0gZXZlbnQubmF0aXZlRXZlbnQgfHwgZXZlbnQ7XG4gICAgICAgIGNvbnN0IGNsb25lZEV2ZW50ID0gbmV3IG5hdGl2ZUV2ZW50LmNvbnN0cnVjdG9yKG5hdGl2ZUV2ZW50LnR5cGUsIG5hdGl2ZUV2ZW50KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNsb25lZEV2ZW50LCAndGFyZ2V0Jywge1xuICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICB2YWx1ZTogbmV3VmFsdWUsXG4gICAgICAgICAgICBuYW1lXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgb25DaGFuZ2UoY2xvbmVkRXZlbnQsIGNoaWxkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIW11bHRpcGxlKSB7XG4gICAgICB1cGRhdGUoZmFsc2UsIGV2ZW50KTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlS2V5RG93biA9IGV2ZW50ID0+IHtcbiAgICBpZiAoIXJlYWRPbmx5KSB7XG4gICAgICBjb25zdCB2YWxpZEtleXMgPSBbJyAnLCAnQXJyb3dVcCcsICdBcnJvd0Rvd24nLCAvLyBUaGUgbmF0aXZlIHNlbGVjdCBkb2Vzbid0IHJlc3BvbmQgdG8gZW50ZXIgb24gbWFjT1MsIGJ1dCBpdCdzIHJlY29tbWVuZGVkIGJ5XG4gICAgICAvLyBodHRwczovL3d3dy53My5vcmcvV0FJL0FSSUEvYXBnL2V4YW1wbGUtaW5kZXgvY29tYm9ib3gvY29tYm9ib3gtc2VsZWN0LW9ubHkuaHRtbFxuICAgICAgJ0VudGVyJ107XG5cbiAgICAgIGlmICh2YWxpZEtleXMuaW5kZXhPZihldmVudC5rZXkpICE9PSAtMSkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB1cGRhdGUodHJ1ZSwgZXZlbnQpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBjb25zdCBvcGVuID0gZGlzcGxheU5vZGUgIT09IG51bGwgJiYgb3BlblN0YXRlO1xuXG4gIGNvbnN0IGhhbmRsZUJsdXIgPSBldmVudCA9PiB7XG4gICAgLy8gaWYgb3BlbiBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb25cbiAgICBpZiAoIW9wZW4gJiYgb25CbHVyKSB7XG4gICAgICAvLyBQcmVhY3Qgc3VwcG9ydCwgdGFyZ2V0IGlzIHJlYWQgb25seSBwcm9wZXJ0eSBvbiBhIG5hdGl2ZSBldmVudC5cbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShldmVudCwgJ3RhcmdldCcsIHtcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgbmFtZVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIG9uQmx1cihldmVudCk7XG4gICAgfVxuICB9O1xuXG4gIGRlbGV0ZSBvdGhlclsnYXJpYS1pbnZhbGlkJ107XG4gIGxldCBkaXNwbGF5O1xuICBsZXQgZGlzcGxheVNpbmdsZTtcbiAgY29uc3QgZGlzcGxheU11bHRpcGxlID0gW107XG4gIGxldCBjb21wdXRlRGlzcGxheSA9IGZhbHNlO1xuICBsZXQgZm91bmRNYXRjaCA9IGZhbHNlOyAvLyBObyBuZWVkIHRvIGRpc3BsYXkgYW55IHZhbHVlIGlmIHRoZSBmaWVsZCBpcyBlbXB0eS5cblxuICBpZiAoaXNGaWxsZWQoe1xuICAgIHZhbHVlXG4gIH0pIHx8IGRpc3BsYXlFbXB0eSkge1xuICAgIGlmIChyZW5kZXJWYWx1ZSkge1xuICAgICAgZGlzcGxheSA9IHJlbmRlclZhbHVlKHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29tcHV0ZURpc3BsYXkgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGl0ZW1zID0gY2hpbGRyZW5BcnJheS5tYXAoKGNoaWxkLCBpbmRleCwgYXJyKSA9PiB7XG4gICAgaWYgKCEgLyojX19QVVJFX18qL1JlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChpc0ZyYWdtZW50KGNoaWxkKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFtcIk1VSTogVGhlIFNlbGVjdCBjb21wb25lbnQgZG9lc24ndCBhY2NlcHQgYSBGcmFnbWVudCBhcyBhIGNoaWxkLlwiLCAnQ29uc2lkZXIgcHJvdmlkaW5nIGFuIGFycmF5IGluc3RlYWQuJ10uam9pbignXFxuJykpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxldCBzZWxlY3RlZDtcblxuICAgIGlmIChtdWx0aXBsZSkge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gYE1VSTogVGhlIFxcYHZhbHVlXFxgIHByb3AgbXVzdCBiZSBhbiBhcnJheSB3aGVuIHVzaW5nIHRoZSBcXGBTZWxlY3RcXGAgY29tcG9uZW50IHdpdGggXFxgbXVsdGlwbGVcXGAuYCA6IF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UoMikpO1xuICAgICAgfVxuXG4gICAgICBzZWxlY3RlZCA9IHZhbHVlLnNvbWUodiA9PiBhcmVFcXVhbFZhbHVlcyh2LCBjaGlsZC5wcm9wcy52YWx1ZSkpO1xuXG4gICAgICBpZiAoc2VsZWN0ZWQgJiYgY29tcHV0ZURpc3BsYXkpIHtcbiAgICAgICAgZGlzcGxheU11bHRpcGxlLnB1c2goY2hpbGQucHJvcHMuY2hpbGRyZW4pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzZWxlY3RlZCA9IGFyZUVxdWFsVmFsdWVzKHZhbHVlLCBjaGlsZC5wcm9wcy52YWx1ZSk7XG5cbiAgICAgIGlmIChzZWxlY3RlZCAmJiBjb21wdXRlRGlzcGxheSkge1xuICAgICAgICBkaXNwbGF5U2luZ2xlID0gY2hpbGQucHJvcHMuY2hpbGRyZW47XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHNlbGVjdGVkKSB7XG4gICAgICBmb3VuZE1hdGNoID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQucHJvcHMudmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgICAgJ2FyaWEtcmVhZG9ubHknOiB0cnVlLFxuICAgICAgICByb2xlOiAnb3B0aW9uJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgaXNGaXJzdFNlbGVjdGFibGVFbGVtZW50ID0gKCkgPT4ge1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBzZWxlY3RlZDtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZmlyc3RTZWxlY3RhYmxlRWxlbWVudCA9IGFyci5maW5kKGl0ZW0gPT4gaXRlbS5wcm9wcy52YWx1ZSAhPT0gdW5kZWZpbmVkICYmIGl0ZW0ucHJvcHMuZGlzYWJsZWQgIT09IHRydWUpO1xuXG4gICAgICBpZiAoY2hpbGQgPT09IGZpcnN0U2VsZWN0YWJsZUVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzZWxlY3RlZDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgICdhcmlhLXNlbGVjdGVkJzogc2VsZWN0ZWQgPyAndHJ1ZScgOiAnZmFsc2UnLFxuICAgICAgb25DbGljazogaGFuZGxlSXRlbUNsaWNrKGNoaWxkKSxcbiAgICAgIG9uS2V5VXA6IGV2ZW50ID0+IHtcbiAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJyAnKSB7XG4gICAgICAgICAgLy8gb3RoZXJ3aXNlIG91ciBNZW51SXRlbXMgZGlzcGF0Y2hlcyBhIGNsaWNrIGV2ZW50XG4gICAgICAgICAgLy8gaXQncyBub3QgYmVoYXZpb3Igb2YgdGhlIG5hdGl2ZSA8b3B0aW9uPiBhbmQgY2F1c2VzXG4gICAgICAgICAgLy8gdGhlIHNlbGVjdCB0byBjbG9zZSBpbW1lZGlhdGVseSBzaW5jZSB3ZSBvcGVuIG9uIHNwYWNlIGtleWRvd25cbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoaWxkLnByb3BzLm9uS2V5VXApIHtcbiAgICAgICAgICBjaGlsZC5wcm9wcy5vbktleVVwKGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHJvbGU6ICdvcHRpb24nLFxuICAgICAgc2VsZWN0ZWQ6IGFyclswXS5wcm9wcy52YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IGFyclswXS5wcm9wcy5kaXNhYmxlZCA9PT0gdHJ1ZSA/IGlzRmlyc3RTZWxlY3RhYmxlRWxlbWVudCgpIDogc2VsZWN0ZWQsXG4gICAgICB2YWx1ZTogdW5kZWZpbmVkLFxuICAgICAgLy8gVGhlIHZhbHVlIGlzIG1vc3QgbGlrZWx5IG5vdCBhIHZhbGlkIEhUTUwgYXR0cmlidXRlLlxuICAgICAgJ2RhdGEtdmFsdWUnOiBjaGlsZC5wcm9wcy52YWx1ZSAvLyBJbnN0ZWFkLCB3ZSBwcm92aWRlIGl0IGFzIGEgZGF0YSBhdHRyaWJ1dGUuXG5cbiAgICB9KTtcbiAgfSk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgaWYgKCFmb3VuZE1hdGNoICYmICFtdWx0aXBsZSAmJiB2YWx1ZSAhPT0gJycpIHtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gY2hpbGRyZW5BcnJheS5tYXAoY2hpbGQgPT4gY2hpbGQucHJvcHMudmFsdWUpO1xuICAgICAgICBjb25zb2xlLndhcm4oW2BNVUk6IFlvdSBoYXZlIHByb3ZpZGVkIGFuIG91dC1vZi1yYW5nZSB2YWx1ZSBcXGAke3ZhbHVlfVxcYCBmb3IgdGhlIHNlbGVjdCAke25hbWUgPyBgKG5hbWU9XCIke25hbWV9XCIpIGAgOiAnJ31jb21wb25lbnQuYCwgXCJDb25zaWRlciBwcm92aWRpbmcgYSB2YWx1ZSB0aGF0IG1hdGNoZXMgb25lIG9mIHRoZSBhdmFpbGFibGUgb3B0aW9ucyBvciAnJy5cIiwgYFRoZSBhdmFpbGFibGUgdmFsdWVzIGFyZSAke3ZhbHVlcy5maWx0ZXIoeCA9PiB4ICE9IG51bGwpLm1hcCh4ID0+IGBcXGAke3h9XFxgYCkuam9pbignLCAnKSB8fCAnXCJcIid9LmBdLmpvaW4oJ1xcbicpKTtcbiAgICAgIH1cbiAgICB9LCBbZm91bmRNYXRjaCwgY2hpbGRyZW5BcnJheSwgbXVsdGlwbGUsIG5hbWUsIHZhbHVlXSk7XG4gIH1cblxuICBpZiAoY29tcHV0ZURpc3BsYXkpIHtcbiAgICBpZiAobXVsdGlwbGUpIHtcbiAgICAgIGlmIChkaXNwbGF5TXVsdGlwbGUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGRpc3BsYXkgPSBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGlzcGxheSA9IGRpc3BsYXlNdWx0aXBsZS5yZWR1Y2UoKG91dHB1dCwgY2hpbGQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgb3V0cHV0LnB1c2goY2hpbGQpO1xuXG4gICAgICAgICAgaWYgKGluZGV4IDwgZGlzcGxheU11bHRpcGxlLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIG91dHB1dC5wdXNoKCcsICcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgICAgIH0sIFtdKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZGlzcGxheSA9IGRpc3BsYXlTaW5nbGU7XG4gICAgfVxuICB9IC8vIEF2b2lkIHBlcmZvcm1pbmcgYSBsYXlvdXQgY29tcHV0YXRpb24gaW4gdGhlIHJlbmRlciBtZXRob2QuXG5cblxuICBsZXQgbWVudU1pbldpZHRoID0gbWVudU1pbldpZHRoU3RhdGU7XG5cbiAgaWYgKCFhdXRvV2lkdGggJiYgaXNPcGVuQ29udHJvbGxlZCAmJiBkaXNwbGF5Tm9kZSkge1xuICAgIG1lbnVNaW5XaWR0aCA9IGRpc3BsYXlOb2RlLmNsaWVudFdpZHRoO1xuICB9XG5cbiAgbGV0IHRhYkluZGV4O1xuXG4gIGlmICh0eXBlb2YgdGFiSW5kZXhQcm9wICE9PSAndW5kZWZpbmVkJykge1xuICAgIHRhYkluZGV4ID0gdGFiSW5kZXhQcm9wO1xuICB9IGVsc2Uge1xuICAgIHRhYkluZGV4ID0gZGlzYWJsZWQgPyBudWxsIDogMDtcbiAgfVxuXG4gIGNvbnN0IGJ1dHRvbklkID0gU2VsZWN0RGlzcGxheVByb3BzLmlkIHx8IChuYW1lID8gYG11aS1jb21wb25lbnQtc2VsZWN0LSR7bmFtZX1gIDogdW5kZWZpbmVkKTtcblxuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgdmFyaWFudCxcbiAgICB2YWx1ZSxcbiAgICBvcGVuXG4gIH0pO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4cyhSZWFjdC5GcmFnbWVudCwge1xuICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3goU2VsZWN0U2VsZWN0LCBfZXh0ZW5kcyh7XG4gICAgICByZWY6IGhhbmRsZURpc3BsYXlSZWYsXG4gICAgICB0YWJJbmRleDogdGFiSW5kZXgsXG4gICAgICByb2xlOiBcImJ1dHRvblwiLFxuICAgICAgXCJhcmlhLWRpc2FibGVkXCI6IGRpc2FibGVkID8gJ3RydWUnIDogdW5kZWZpbmVkLFxuICAgICAgXCJhcmlhLWV4cGFuZGVkXCI6IG9wZW4gPyAndHJ1ZScgOiAnZmFsc2UnLFxuICAgICAgXCJhcmlhLWhhc3BvcHVwXCI6IFwibGlzdGJveFwiLFxuICAgICAgXCJhcmlhLWxhYmVsXCI6IGFyaWFMYWJlbCxcbiAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IFtsYWJlbElkLCBidXR0b25JZF0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oJyAnKSB8fCB1bmRlZmluZWQsXG4gICAgICBcImFyaWEtZGVzY3JpYmVkYnlcIjogYXJpYURlc2NyaWJlZGJ5LFxuICAgICAgb25LZXlEb3duOiBoYW5kbGVLZXlEb3duLFxuICAgICAgb25Nb3VzZURvd246IGRpc2FibGVkIHx8IHJlYWRPbmx5ID8gbnVsbCA6IGhhbmRsZU1vdXNlRG93bixcbiAgICAgIG9uQmx1cjogaGFuZGxlQmx1cixcbiAgICAgIG9uRm9jdXM6IG9uRm9jdXNcbiAgICB9LCBTZWxlY3REaXNwbGF5UHJvcHMsIHtcbiAgICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGUsXG4gICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5zZWxlY3QsIGNsYXNzTmFtZSwgU2VsZWN0RGlzcGxheVByb3BzLmNsYXNzTmFtZSkgLy8gVGhlIGlkIGlzIHJlcXVpcmVkIGZvciBwcm9wZXIgYTExeVxuICAgICAgLFxuICAgICAgaWQ6IGJ1dHRvbklkLFxuICAgICAgY2hpbGRyZW46IGlzRW1wdHkoZGlzcGxheSkgPyAvLyBub3RyYW5zbGF0ZSBuZWVkZWQgd2hpbGUgR29vZ2xlIFRyYW5zbGF0ZSB3aWxsIG5vdCBmaXggemVyby13aWR0aCBzcGFjZSBpc3N1ZVxuICAgICAgX3NwYW4gfHwgKF9zcGFuID0gLyojX19QVVJFX18qL19qc3goXCJzcGFuXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIm5vdHJhbnNsYXRlXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlxcdTIwMEJcIlxuICAgICAgfSkpIDogZGlzcGxheVxuICAgIH0pKSwgLyojX19QVVJFX18qL19qc3goU2VsZWN0TmF0aXZlSW5wdXQsIF9leHRlbmRzKHtcbiAgICAgIHZhbHVlOiBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlLmpvaW4oJywnKSA6IHZhbHVlLFxuICAgICAgbmFtZTogbmFtZSxcbiAgICAgIHJlZjogaW5wdXRSZWYsXG4gICAgICBcImFyaWEtaGlkZGVuXCI6IHRydWUsXG4gICAgICBvbkNoYW5nZTogaGFuZGxlQ2hhbmdlLFxuICAgICAgdGFiSW5kZXg6IC0xLFxuICAgICAgZGlzYWJsZWQ6IGRpc2FibGVkLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc2VzLm5hdGl2ZUlucHV0LFxuICAgICAgYXV0b0ZvY3VzOiBhdXRvRm9jdXMsXG4gICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlXG4gICAgfSwgb3RoZXIpKSwgLyojX19QVVJFX18qL19qc3goU2VsZWN0SWNvbiwge1xuICAgICAgYXM6IEljb25Db21wb25lbnQsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzZXMuaWNvbixcbiAgICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGVcbiAgICB9KSwgLyojX19QVVJFX18qL19qc3goTWVudSwgX2V4dGVuZHMoe1xuICAgICAgaWQ6IGBtZW51LSR7bmFtZSB8fCAnJ31gLFxuICAgICAgYW5jaG9yRWw6IGRpc3BsYXlOb2RlLFxuICAgICAgb3Blbjogb3BlbixcbiAgICAgIG9uQ2xvc2U6IGhhbmRsZUNsb3NlLFxuICAgICAgYW5jaG9yT3JpZ2luOiB7XG4gICAgICAgIHZlcnRpY2FsOiAnYm90dG9tJyxcbiAgICAgICAgaG9yaXpvbnRhbDogJ2NlbnRlcidcbiAgICAgIH0sXG4gICAgICB0cmFuc2Zvcm1PcmlnaW46IHtcbiAgICAgICAgdmVydGljYWw6ICd0b3AnLFxuICAgICAgICBob3Jpem9udGFsOiAnY2VudGVyJ1xuICAgICAgfVxuICAgIH0sIE1lbnVQcm9wcywge1xuICAgICAgTWVudUxpc3RQcm9wczogX2V4dGVuZHMoe1xuICAgICAgICAnYXJpYS1sYWJlbGxlZGJ5JzogbGFiZWxJZCxcbiAgICAgICAgcm9sZTogJ2xpc3Rib3gnLFxuICAgICAgICBkaXNhYmxlTGlzdFdyYXA6IHRydWVcbiAgICAgIH0sIE1lbnVQcm9wcy5NZW51TGlzdFByb3BzKSxcbiAgICAgIFBhcGVyUHJvcHM6IF9leHRlbmRzKHt9LCBNZW51UHJvcHMuUGFwZXJQcm9wcywge1xuICAgICAgICBzdHlsZTogX2V4dGVuZHMoe1xuICAgICAgICAgIG1pbldpZHRoOiBtZW51TWluV2lkdGhcbiAgICAgICAgfSwgTWVudVByb3BzLlBhcGVyUHJvcHMgIT0gbnVsbCA/IE1lbnVQcm9wcy5QYXBlclByb3BzLnN0eWxlIDogbnVsbClcbiAgICAgIH0pLFxuICAgICAgY2hpbGRyZW46IGl0ZW1zXG4gICAgfSkpXVxuICB9KTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gU2VsZWN0SW5wdXQucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgJ2FyaWEtZGVzY3JpYmVkYnknOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICAnYXJpYS1sYWJlbCc6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGF1dG9Gb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHdpZHRoIG9mIHRoZSBwb3BvdmVyIHdpbGwgYXV0b21hdGljYWxseSBiZSBzZXQgYWNjb3JkaW5nIHRvIHRoZSBpdGVtcyBpbnNpZGUgdGhlXG4gICAqIG1lbnUsIG90aGVyd2lzZSBpdCB3aWxsIGJlIGF0IGxlYXN0IHRoZSB3aWR0aCBvZiB0aGUgc2VsZWN0IGlucHV0LlxuICAgKi9cbiAgYXV0b1dpZHRoOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIG9wdGlvbiBlbGVtZW50cyB0byBwb3B1bGF0ZSB0aGUgc2VsZWN0IHdpdGguXG4gICAqIENhbiBiZSBzb21lIGA8TWVudUl0ZW0+YCBlbGVtZW50cy5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKiBTZWUgW0NTUyBBUEldKCNjc3MpIGJlbG93IGZvciBtb3JlIGRldGFpbHMuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBUaGUgQ1NTIGNsYXNzIG5hbWUgb2YgdGhlIHNlbGVjdCBlbGVtZW50LlxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaXMgdG9nZ2xlZCBvbiBtb3VudC4gVXNlIHdoZW4gdGhlIGNvbXBvbmVudCBvcGVuIHN0YXRlIGlzIG5vdCBjb250cm9sbGVkLlxuICAgKiBZb3UgY2FuIG9ubHkgdXNlIGl0IHdoZW4gdGhlIGBuYXRpdmVgIHByb3AgaXMgYGZhbHNlYCAoZGVmYXVsdCkuXG4gICAqL1xuICBkZWZhdWx0T3BlbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBkZWZhdWx0IHZhbHVlLiBVc2Ugd2hlbiB0aGUgY29tcG9uZW50IGlzIG5vdCBjb250cm9sbGVkLlxuICAgKi9cbiAgZGVmYXVsdFZhbHVlOiBQcm9wVHlwZXMuYW55LFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBzZWxlY3QgaXMgZGlzYWJsZWQuXG4gICAqL1xuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHNlbGVjdGVkIGl0ZW0gaXMgZGlzcGxheWVkIGV2ZW4gaWYgaXRzIHZhbHVlIGlzIGVtcHR5LlxuICAgKi9cbiAgZGlzcGxheUVtcHR5OiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIGljb24gdGhhdCBkaXNwbGF5cyB0aGUgYXJyb3cuXG4gICAqL1xuICBJY29uQ29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogSW1wZXJhdGl2ZSBoYW5kbGUgaW1wbGVtZW50aW5nIGB7IHZhbHVlOiBULCBub2RlOiBIVE1MRWxlbWVudCwgZm9jdXMoKTogdm9pZCB9YFxuICAgKiBFcXVpdmFsZW50IHRvIGByZWZgXG4gICAqL1xuICBpbnB1dFJlZjogcmVmVHlwZSxcblxuICAvKipcbiAgICogVGhlIElEIG9mIGFuIGVsZW1lbnQgdGhhdCBhY3RzIGFzIGFuIGFkZGl0aW9uYWwgbGFiZWwuIFRoZSBTZWxlY3Qgd2lsbFxuICAgKiBiZSBsYWJlbGxlZCBieSB0aGUgYWRkaXRpb25hbCBsYWJlbCBhbmQgdGhlIHNlbGVjdGVkIHZhbHVlLlxuICAgKi9cbiAgbGFiZWxJZDogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogUHJvcHMgYXBwbGllZCB0byB0aGUgW2BNZW51YF0oL21hdGVyaWFsLXVpL2FwaS9tZW51LykgZWxlbWVudC5cbiAgICovXG4gIE1lbnVQcm9wczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCBgdmFsdWVgIG11c3QgYmUgYW4gYXJyYXkgYW5kIHRoZSBtZW51IHdpbGwgc3VwcG9ydCBtdWx0aXBsZSBzZWxlY3Rpb25zLlxuICAgKi9cbiAgbXVsdGlwbGU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBOYW1lIGF0dHJpYnV0ZSBvZiB0aGUgYHNlbGVjdGAgb3IgaGlkZGVuIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uQmx1cjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gYSBtZW51IGl0ZW0gaXMgc2VsZWN0ZWQuXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBldmVudCBUaGUgZXZlbnQgc291cmNlIG9mIHRoZSBjYWxsYmFjay5cbiAgICogWW91IGNhbiBwdWxsIG91dCB0aGUgbmV3IHZhbHVlIGJ5IGFjY2Vzc2luZyBgZXZlbnQudGFyZ2V0LnZhbHVlYCAoYW55KS5cbiAgICogQHBhcmFtIHtvYmplY3R9IFtjaGlsZF0gVGhlIHJlYWN0IGVsZW1lbnQgdGhhdCB3YXMgc2VsZWN0ZWQuXG4gICAqL1xuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIGNvbXBvbmVudCByZXF1ZXN0cyB0byBiZSBjbG9zZWQuXG4gICAqIFVzZSBpbiBjb250cm9sbGVkIG1vZGUgKHNlZSBvcGVuKS5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKi9cbiAgb25DbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uRm9jdXM6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSBjb21wb25lbnQgcmVxdWVzdHMgdG8gYmUgb3BlbmVkLlxuICAgKiBVc2UgaW4gY29udHJvbGxlZCBtb2RlIChzZWUgb3BlbikuXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBldmVudCBUaGUgZXZlbnQgc291cmNlIG9mIHRoZSBjYWxsYmFjay5cbiAgICovXG4gIG9uT3BlbjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCBpcyBzaG93bi5cbiAgICovXG4gIG9wZW46IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICByZWFkT25seTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFJlbmRlciB0aGUgc2VsZWN0ZWQgdmFsdWUuXG4gICAqXG4gICAqIEBwYXJhbSB7YW55fSB2YWx1ZSBUaGUgYHZhbHVlYCBwcm92aWRlZCB0byB0aGUgY29tcG9uZW50LlxuICAgKiBAcmV0dXJucyB7UmVhY3ROb2RlfVxuICAgKi9cbiAgcmVuZGVyVmFsdWU6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBQcm9wcyBhcHBsaWVkIHRvIHRoZSBjbGlja2FibGUgZGl2IGVsZW1lbnQuXG4gICAqL1xuICBTZWxlY3REaXNwbGF5UHJvcHM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHRhYkluZGV4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHR5cGU6IFByb3BUeXBlcy5hbnksXG5cbiAgLyoqXG4gICAqIFRoZSBpbnB1dCB2YWx1ZS5cbiAgICovXG4gIHZhbHVlOiBQcm9wVHlwZXMuYW55LFxuXG4gIC8qKlxuICAgKiBUaGUgdmFyaWFudCB0byB1c2UuXG4gICAqL1xuICB2YXJpYW50OiBQcm9wVHlwZXMub25lT2YoWydzdGFuZGFyZCcsICdvdXRsaW5lZCcsICdmaWxsZWQnXSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBTZWxlY3RJbnB1dDsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0U3ZnSWNvblV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpU3ZnSWNvbicsIHNsb3QpO1xufVxuY29uc3Qgc3ZnSWNvbkNsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlTdmdJY29uJywgWydyb290JywgJ2NvbG9yUHJpbWFyeScsICdjb2xvclNlY29uZGFyeScsICdjb2xvckFjdGlvbicsICdjb2xvckVycm9yJywgJ2NvbG9yRGlzYWJsZWQnLCAnZm9udFNpemVJbmhlcml0JywgJ2ZvbnRTaXplU21hbGwnLCAnZm9udFNpemVNZWRpdW0nLCAnZm9udFNpemVMYXJnZSddKTtcbmV4cG9ydCBkZWZhdWx0IHN2Z0ljb25DbGFzc2VzOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJjaGlsZHJlblwiLCBcImNsYXNzTmFtZVwiLCBcImNvbG9yXCIsIFwiY29tcG9uZW50XCIsIFwiZm9udFNpemVcIiwgXCJodG1sQ29sb3JcIiwgXCJpbmhlcml0Vmlld0JveFwiLCBcInRpdGxlQWNjZXNzXCIsIFwidmlld0JveFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCBjYXBpdGFsaXplIGZyb20gJy4uL3V0aWxzL2NhcGl0YWxpemUnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCB7IGdldFN2Z0ljb25VdGlsaXR5Q2xhc3MgfSBmcm9tICcuL3N2Z0ljb25DbGFzc2VzJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjb2xvcixcbiAgICBmb250U2l6ZSxcbiAgICBjbGFzc2VzXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnLCBjb2xvciAhPT0gJ2luaGVyaXQnICYmIGBjb2xvciR7Y2FwaXRhbGl6ZShjb2xvcil9YCwgYGZvbnRTaXplJHtjYXBpdGFsaXplKGZvbnRTaXplKX1gXVxuICB9O1xuICByZXR1cm4gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldFN2Z0ljb25VdGlsaXR5Q2xhc3MsIGNsYXNzZXMpO1xufTtcblxuY29uc3QgU3ZnSWNvblJvb3QgPSBzdHlsZWQoJ3N2ZycsIHtcbiAgbmFtZTogJ011aVN2Z0ljb24nLFxuICBzbG90OiAnUm9vdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFtzdHlsZXMucm9vdCwgb3duZXJTdGF0ZS5jb2xvciAhPT0gJ2luaGVyaXQnICYmIHN0eWxlc1tgY29sb3Ike2NhcGl0YWxpemUob3duZXJTdGF0ZS5jb2xvcil9YF0sIHN0eWxlc1tgZm9udFNpemUke2NhcGl0YWxpemUob3duZXJTdGF0ZS5mb250U2l6ZSl9YF1dO1xuICB9XG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4ge1xuICB2YXIgX3RoZW1lJHRyYW5zaXRpb25zLCBfdGhlbWUkdHJhbnNpdGlvbnMkY3IsIF90aGVtZSR0cmFuc2l0aW9uczIsIF90aGVtZSR0cmFuc2l0aW9uczIkZCwgX3RoZW1lJHR5cG9ncmFwaHksIF90aGVtZSR0eXBvZ3JhcGh5JHB4VCwgX3RoZW1lJHR5cG9ncmFwaHkyLCBfdGhlbWUkdHlwb2dyYXBoeTIkcHgsIF90aGVtZSR0eXBvZ3JhcGh5MywgX3RoZW1lJHR5cG9ncmFwaHkzJHB4LCBfcGFsZXR0ZSRvd25lclN0YXRlJGMsIF9wYWxldHRlLCBfcGFsZXR0ZSRvd25lclN0YXRlJGMyLCBfcGFsZXR0ZTIsIF9wYWxldHRlMiRhY3Rpb24sIF9wYWxldHRlMywgX3BhbGV0dGUzJGFjdGlvbjtcblxuICByZXR1cm4ge1xuICAgIHVzZXJTZWxlY3Q6ICdub25lJyxcbiAgICB3aWR0aDogJzFlbScsXG4gICAgaGVpZ2h0OiAnMWVtJyxcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICBmaWxsOiAnY3VycmVudENvbG9yJyxcbiAgICBmbGV4U2hyaW5rOiAwLFxuICAgIHRyYW5zaXRpb246IChfdGhlbWUkdHJhbnNpdGlvbnMgPSB0aGVtZS50cmFuc2l0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IChfdGhlbWUkdHJhbnNpdGlvbnMkY3IgPSBfdGhlbWUkdHJhbnNpdGlvbnMuY3JlYXRlKSA9PSBudWxsID8gdm9pZCAwIDogX3RoZW1lJHRyYW5zaXRpb25zJGNyLmNhbGwoX3RoZW1lJHRyYW5zaXRpb25zLCAnZmlsbCcsIHtcbiAgICAgIGR1cmF0aW9uOiAoX3RoZW1lJHRyYW5zaXRpb25zMiA9IHRoZW1lLnRyYW5zaXRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogKF90aGVtZSR0cmFuc2l0aW9uczIkZCA9IF90aGVtZSR0cmFuc2l0aW9uczIuZHVyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfdGhlbWUkdHJhbnNpdGlvbnMyJGQuc2hvcnRlclxuICAgIH0pLFxuICAgIGZvbnRTaXplOiB7XG4gICAgICBpbmhlcml0OiAnaW5oZXJpdCcsXG4gICAgICBzbWFsbDogKChfdGhlbWUkdHlwb2dyYXBoeSA9IHRoZW1lLnR5cG9ncmFwaHkpID09IG51bGwgPyB2b2lkIDAgOiAoX3RoZW1lJHR5cG9ncmFwaHkkcHhUID0gX3RoZW1lJHR5cG9ncmFwaHkucHhUb1JlbSkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGVtZSR0eXBvZ3JhcGh5JHB4VC5jYWxsKF90aGVtZSR0eXBvZ3JhcGh5LCAyMCkpIHx8ICcxLjI1cmVtJyxcbiAgICAgIG1lZGl1bTogKChfdGhlbWUkdHlwb2dyYXBoeTIgPSB0aGVtZS50eXBvZ3JhcGh5KSA9PSBudWxsID8gdm9pZCAwIDogKF90aGVtZSR0eXBvZ3JhcGh5MiRweCA9IF90aGVtZSR0eXBvZ3JhcGh5Mi5weFRvUmVtKSA9PSBudWxsID8gdm9pZCAwIDogX3RoZW1lJHR5cG9ncmFwaHkyJHB4LmNhbGwoX3RoZW1lJHR5cG9ncmFwaHkyLCAyNCkpIHx8ICcxLjVyZW0nLFxuICAgICAgbGFyZ2U6ICgoX3RoZW1lJHR5cG9ncmFwaHkzID0gdGhlbWUudHlwb2dyYXBoeSkgPT0gbnVsbCA/IHZvaWQgMCA6IChfdGhlbWUkdHlwb2dyYXBoeTMkcHggPSBfdGhlbWUkdHlwb2dyYXBoeTMucHhUb1JlbSkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGVtZSR0eXBvZ3JhcGh5MyRweC5jYWxsKF90aGVtZSR0eXBvZ3JhcGh5MywgMzUpKSB8fCAnMi4xODc1J1xuICAgIH1bb3duZXJTdGF0ZS5mb250U2l6ZV0sXG4gICAgLy8gVE9ETyB2NSBkZXByZWNhdGUsIHY2IHJlbW92ZSBmb3Igc3hcbiAgICBjb2xvcjogKF9wYWxldHRlJG93bmVyU3RhdGUkYyA9IChfcGFsZXR0ZSA9ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlKSA9PSBudWxsID8gdm9pZCAwIDogKF9wYWxldHRlJG93bmVyU3RhdGUkYzIgPSBfcGFsZXR0ZVtvd25lclN0YXRlLmNvbG9yXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9wYWxldHRlJG93bmVyU3RhdGUkYzIubWFpbikgIT0gbnVsbCA/IF9wYWxldHRlJG93bmVyU3RhdGUkYyA6IHtcbiAgICAgIGFjdGlvbjogKF9wYWxldHRlMiA9ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlKSA9PSBudWxsID8gdm9pZCAwIDogKF9wYWxldHRlMiRhY3Rpb24gPSBfcGFsZXR0ZTIuYWN0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX3BhbGV0dGUyJGFjdGlvbi5hY3RpdmUsXG4gICAgICBkaXNhYmxlZDogKF9wYWxldHRlMyA9ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlKSA9PSBudWxsID8gdm9pZCAwIDogKF9wYWxldHRlMyRhY3Rpb24gPSBfcGFsZXR0ZTMuYWN0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX3BhbGV0dGUzJGFjdGlvbi5kaXNhYmxlZCxcbiAgICAgIGluaGVyaXQ6IHVuZGVmaW5lZFxuICAgIH1bb3duZXJTdGF0ZS5jb2xvcl1cbiAgfTtcbn0pO1xuY29uc3QgU3ZnSWNvbiA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFN2Z0ljb24oaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aVN2Z0ljb24nXG4gIH0pO1xuXG4gIGNvbnN0IHtcbiAgICBjaGlsZHJlbixcbiAgICBjbGFzc05hbWUsXG4gICAgY29sb3IgPSAnaW5oZXJpdCcsXG4gICAgY29tcG9uZW50ID0gJ3N2ZycsXG4gICAgZm9udFNpemUgPSAnbWVkaXVtJyxcbiAgICBodG1sQ29sb3IsXG4gICAgaW5oZXJpdFZpZXdCb3ggPSBmYWxzZSxcbiAgICB0aXRsZUFjY2VzcyxcbiAgICB2aWV3Qm94ID0gJzAgMCAyNCAyNCdcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBjb2xvcixcbiAgICBjb21wb25lbnQsXG4gICAgZm9udFNpemUsXG4gICAgaW5zdGFuY2VGb250U2l6ZTogaW5Qcm9wcy5mb250U2l6ZSxcbiAgICBpbmhlcml0Vmlld0JveCxcbiAgICB2aWV3Qm94XG4gIH0pO1xuXG4gIGNvbnN0IG1vcmUgPSB7fTtcblxuICBpZiAoIWluaGVyaXRWaWV3Qm94KSB7XG4gICAgbW9yZS52aWV3Qm94ID0gdmlld0JveDtcbiAgfVxuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4cyhTdmdJY29uUm9vdCwgX2V4dGVuZHMoe1xuICAgIGFzOiBjb21wb25lbnQsXG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKSxcbiAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgIGZvY3VzYWJsZTogXCJmYWxzZVwiLFxuICAgIGNvbG9yOiBodG1sQ29sb3IsXG4gICAgXCJhcmlhLWhpZGRlblwiOiB0aXRsZUFjY2VzcyA/IHVuZGVmaW5lZCA6IHRydWUsXG4gICAgcm9sZTogdGl0bGVBY2Nlc3MgPyAnaW1nJyA6IHVuZGVmaW5lZCxcbiAgICByZWY6IHJlZlxuICB9LCBtb3JlLCBvdGhlciwge1xuICAgIGNoaWxkcmVuOiBbY2hpbGRyZW4sIHRpdGxlQWNjZXNzID8gLyojX19QVVJFX18qL19qc3goXCJ0aXRsZVwiLCB7XG4gICAgICBjaGlsZHJlbjogdGl0bGVBY2Nlc3NcbiAgICB9KSA6IG51bGxdXG4gIH0pKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gU3ZnSWNvbi5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogTm9kZSBwYXNzZWQgaW50byB0aGUgU1ZHIGVsZW1lbnQuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbG9yIG9mIHRoZSBjb21wb25lbnQuXG4gICAqIEl0IHN1cHBvcnRzIGJvdGggZGVmYXVsdCBhbmQgY3VzdG9tIHRoZW1lIGNvbG9ycywgd2hpY2ggY2FuIGJlIGFkZGVkIGFzIHNob3duIGluIHRoZVxuICAgKiBbcGFsZXR0ZSBjdXN0b21pemF0aW9uIGd1aWRlXShodHRwczovL211aS5jb20vbWF0ZXJpYWwtdWkvY3VzdG9taXphdGlvbi9wYWxldHRlLyNhZGRpbmctbmV3LWNvbG9ycykuXG4gICAqIFlvdSBjYW4gdXNlIHRoZSBgaHRtbENvbG9yYCBwcm9wIHRvIGFwcGx5IGEgY29sb3IgYXR0cmlidXRlIHRvIHRoZSBTVkcgZWxlbWVudC5cbiAgICogQGRlZmF1bHQgJ2luaGVyaXQnXG4gICAqL1xuICBjb2xvcjogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnaW5oZXJpdCcsICdhY3Rpb24nLCAnZGlzYWJsZWQnLCAncHJpbWFyeScsICdzZWNvbmRhcnknLCAnZXJyb3InLCAnaW5mbycsICdzdWNjZXNzJywgJ3dhcm5pbmcnXSksIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgcm9vdCBub2RlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKi9cbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIFRoZSBmb250U2l6ZSBhcHBsaWVkIHRvIHRoZSBpY29uLiBEZWZhdWx0cyB0byAyNHB4LCBidXQgY2FuIGJlIGNvbmZpZ3VyZSB0byBpbmhlcml0IGZvbnQgc2l6ZS5cbiAgICogQGRlZmF1bHQgJ21lZGl1bSdcbiAgICovXG4gIGZvbnRTaXplOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWydpbmhlcml0JywgJ2xhcmdlJywgJ21lZGl1bScsICdzbWFsbCddKSwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBBcHBsaWVzIGEgY29sb3IgYXR0cmlidXRlIHRvIHRoZSBTVkcgZWxlbWVudC5cbiAgICovXG4gIGh0bWxDb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgcm9vdCBub2RlIHdpbGwgaW5oZXJpdCB0aGUgY3VzdG9tIGBjb21wb25lbnRgJ3Mgdmlld0JveCBhbmQgdGhlIGB2aWV3Qm94YFxuICAgKiBwcm9wIHdpbGwgYmUgaWdub3JlZC5cbiAgICogVXNlZnVsIHdoZW4geW91IHdhbnQgdG8gcmVmZXJlbmNlIGEgY3VzdG9tIGBjb21wb25lbnRgIGFuZCBoYXZlIGBTdmdJY29uYCBwYXNzIHRoYXRcbiAgICogYGNvbXBvbmVudGAncyB2aWV3Qm94IHRvIHRoZSByb290IG5vZGUuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBpbmhlcml0Vmlld0JveDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBzaGFwZS1yZW5kZXJpbmcgYXR0cmlidXRlLiBUaGUgYmVoYXZpb3Igb2YgdGhlIGRpZmZlcmVudCBvcHRpb25zIGlzIGRlc2NyaWJlZCBvbiB0aGVcbiAgICogW01ETiBXZWIgRG9jc10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvU1ZHL0F0dHJpYnV0ZS9zaGFwZS1yZW5kZXJpbmcpLlxuICAgKiBJZiB5b3UgYXJlIGhhdmluZyBpc3N1ZXMgd2l0aCBibHVycnkgaWNvbnMgeW91IHNob3VsZCBpbnZlc3RpZ2F0ZSB0aGlzIHByb3AuXG4gICAqL1xuICBzaGFwZVJlbmRlcmluZzogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pLFxuXG4gIC8qKlxuICAgKiBQcm92aWRlcyBhIGh1bWFuLXJlYWRhYmxlIHRpdGxlIGZvciB0aGUgZWxlbWVudCB0aGF0IGNvbnRhaW5zIGl0LlxuICAgKiBodHRwczovL3d3dy53My5vcmcvVFIvU1ZHLWFjY2Vzcy8jRXF1aXZhbGVudFxuICAgKi9cbiAgdGl0bGVBY2Nlc3M6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIEFsbG93cyB5b3UgdG8gcmVkZWZpbmUgd2hhdCB0aGUgY29vcmRpbmF0ZXMgd2l0aG91dCB1bml0cyBtZWFuIGluc2lkZSBhbiBTVkcgZWxlbWVudC5cbiAgICogRm9yIGV4YW1wbGUsIGlmIHRoZSBTVkcgZWxlbWVudCBpcyA1MDAgKHdpZHRoKSBieSAyMDAgKGhlaWdodCksXG4gICAqIGFuZCB5b3UgcGFzcyB2aWV3Qm94PVwiMCAwIDUwIDIwXCIsXG4gICAqIHRoaXMgbWVhbnMgdGhhdCB0aGUgY29vcmRpbmF0ZXMgaW5zaWRlIHRoZSBTVkcgd2lsbCBnbyBmcm9tIHRoZSB0b3AgbGVmdCBjb3JuZXIgKDAsMClcbiAgICogdG8gYm90dG9tIHJpZ2h0ICg1MCwyMCkgYW5kIGVhY2ggdW5pdCB3aWxsIGJlIHdvcnRoIDEwcHguXG4gICAqIEBkZWZhdWx0ICcwIDAgMjQgMjQnXG4gICAqL1xuICB2aWV3Qm94OiBQcm9wVHlwZXMuc3RyaW5nXG59IDogdm9pZCAwO1xuU3ZnSWNvbi5tdWlOYW1lID0gJ1N2Z0ljb24nO1xuZXhwb3J0IGRlZmF1bHQgU3ZnSWNvbjsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBTdmdJY29uIGZyb20gJy4uL1N2Z0ljb24nO1xuLyoqXG4gKiBQcml2YXRlIG1vZHVsZSByZXNlcnZlZCBmb3IgQG11aSBwYWNrYWdlcy5cbiAqL1xuXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlU3ZnSWNvbihwYXRoLCBkaXNwbGF5TmFtZSkge1xuICBjb25zdCBDb21wb25lbnQgPSAocHJvcHMsIHJlZikgPT4gLyojX19QVVJFX18qL19qc3goU3ZnSWNvbiwgX2V4dGVuZHMoe1xuICAgIFwiZGF0YS10ZXN0aWRcIjogYCR7ZGlzcGxheU5hbWV9SWNvbmAsXG4gICAgcmVmOiByZWZcbiAgfSwgcHJvcHMsIHtcbiAgICBjaGlsZHJlbjogcGF0aFxuICB9KSk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBOZWVkIHRvIHNldCBgZGlzcGxheU5hbWVgIG9uIHRoZSBpbm5lciBjb21wb25lbnQgZm9yIFJlYWN0Lm1lbW8uXG4gICAgLy8gUmVhY3QgcHJpb3IgdG8gMTYuMTQgaWdub3JlcyBgZGlzcGxheU5hbWVgIG9uIHRoZSB3cmFwcGVyLlxuICAgIENvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGAke2Rpc3BsYXlOYW1lfUljb25gO1xuICB9XG5cbiAgQ29tcG9uZW50Lm11aU5hbWUgPSBTdmdJY29uLm11aU5hbWU7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QubWVtbyggLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoQ29tcG9uZW50KSk7XG59IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNyZWF0ZVN2Z0ljb24gZnJvbSAnLi4vLi4vdXRpbHMvY3JlYXRlU3ZnSWNvbic7XG4vKipcbiAqIEBpZ25vcmUgLSBpbnRlcm5hbCBjb21wb25lbnQuXG4gKi9cblxuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN2Z0ljb24oIC8qI19fUFVSRV9fKi9fanN4KFwicGF0aFwiLCB7XG4gIGQ6IFwiTTcgMTBsNSA1IDUtNXpcIlxufSksICdBcnJvd0Ryb3BEb3duJyk7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcIm9uQ2hhbmdlXCIsIFwibWF4Um93c1wiLCBcIm1pblJvd3NcIiwgXCJzdHlsZVwiLCBcInZhbHVlXCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGZsdXNoU3luYyB9IGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyB1bnN0YWJsZV9kZWJvdW5jZSBhcyBkZWJvdW5jZSwgdW5zdGFibGVfdXNlRm9ya1JlZiBhcyB1c2VGb3JrUmVmLCB1bnN0YWJsZV91c2VFbmhhbmNlZEVmZmVjdCBhcyB1c2VFbmhhbmNlZEVmZmVjdCwgdW5zdGFibGVfb3duZXJXaW5kb3cgYXMgb3duZXJXaW5kb3cgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmZ1bmN0aW9uIGdldFN0eWxlVmFsdWUoY29tcHV0ZWRTdHlsZSwgcHJvcGVydHkpIHtcbiAgcmV0dXJuIHBhcnNlSW50KGNvbXB1dGVkU3R5bGVbcHJvcGVydHldLCAxMCkgfHwgMDtcbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBzaGFkb3c6IHtcbiAgICAvLyBWaXNpYmlsaXR5IG5lZWRlZCB0byBoaWRlIHRoZSBleHRyYSB0ZXh0IGFyZWEgb24gaVBhZHNcbiAgICB2aXNpYmlsaXR5OiAnaGlkZGVuJyxcbiAgICAvLyBSZW1vdmUgZnJvbSB0aGUgY29udGVudCBmbG93XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgLy8gSWdub3JlIHRoZSBzY3JvbGxiYXIgd2lkdGhcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgaGVpZ2h0OiAwLFxuICAgIHRvcDogMCxcbiAgICBsZWZ0OiAwLFxuICAgIC8vIENyZWF0ZSBhIG5ldyBsYXllciwgaW5jcmVhc2UgdGhlIGlzb2xhdGlvbiBvZiB0aGUgY29tcHV0ZWQgdmFsdWVzXG4gICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWigwKSdcbiAgfVxufTtcblxuZnVuY3Rpb24gaXNFbXB0eShvYmopIHtcbiAgcmV0dXJuIG9iaiA9PT0gdW5kZWZpbmVkIHx8IG9iaiA9PT0gbnVsbCB8fCBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gMDtcbn1cblxuY29uc3QgVGV4dGFyZWFBdXRvc2l6ZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRleHRhcmVhQXV0b3NpemUocHJvcHMsIHJlZikge1xuICBjb25zdCB7XG4gICAgb25DaGFuZ2UsXG4gICAgbWF4Um93cyxcbiAgICBtaW5Sb3dzID0gMSxcbiAgICBzdHlsZSxcbiAgICB2YWx1ZVxuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3Qge1xuICAgIGN1cnJlbnQ6IGlzQ29udHJvbGxlZFxuICB9ID0gUmVhY3QudXNlUmVmKHZhbHVlICE9IG51bGwpO1xuICBjb25zdCBpbnB1dFJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgaGFuZGxlUmVmID0gdXNlRm9ya1JlZihyZWYsIGlucHV0UmVmKTtcbiAgY29uc3Qgc2hhZG93UmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCByZW5kZXJzID0gUmVhY3QudXNlUmVmKDApO1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKHt9KTtcbiAgY29uc3QgZ2V0VXBkYXRlZFN0YXRlID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IGlucHV0ID0gaW5wdXRSZWYuY3VycmVudDtcbiAgICBjb25zdCBjb250YWluZXJXaW5kb3cgPSBvd25lcldpbmRvdyhpbnB1dCk7XG4gICAgY29uc3QgY29tcHV0ZWRTdHlsZSA9IGNvbnRhaW5lcldpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGlucHV0KTsgLy8gSWYgaW5wdXQncyB3aWR0aCBpcyBzaHJ1bmsgYW5kIGl0J3Mgbm90IHZpc2libGUsIGRvbid0IHN5bmMgaGVpZ2h0LlxuXG4gICAgaWYgKGNvbXB1dGVkU3R5bGUud2lkdGggPT09ICcwcHgnKSB7XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuXG4gICAgY29uc3QgaW5wdXRTaGFsbG93ID0gc2hhZG93UmVmLmN1cnJlbnQ7XG4gICAgaW5wdXRTaGFsbG93LnN0eWxlLndpZHRoID0gY29tcHV0ZWRTdHlsZS53aWR0aDtcbiAgICBpbnB1dFNoYWxsb3cudmFsdWUgPSBpbnB1dC52YWx1ZSB8fCBwcm9wcy5wbGFjZWhvbGRlciB8fCAneCc7XG5cbiAgICBpZiAoaW5wdXRTaGFsbG93LnZhbHVlLnNsaWNlKC0xKSA9PT0gJ1xcbicpIHtcbiAgICAgIC8vIENlcnRhaW4gZm9udHMgd2hpY2ggb3ZlcmZsb3cgdGhlIGxpbmUgaGVpZ2h0IHdpbGwgY2F1c2UgdGhlIHRleHRhcmVhXG4gICAgICAvLyB0byByZXBvcnQgYSBkaWZmZXJlbnQgc2Nyb2xsSGVpZ2h0IGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoZSBsYXN0IGxpbmVcbiAgICAgIC8vIGlzIGVtcHR5LiBNYWtlIGl0IG5vbi1lbXB0eSB0byBhdm9pZCB0aGlzIGlzc3VlLlxuICAgICAgaW5wdXRTaGFsbG93LnZhbHVlICs9ICcgJztcbiAgICB9XG5cbiAgICBjb25zdCBib3hTaXppbmcgPSBjb21wdXRlZFN0eWxlWydib3gtc2l6aW5nJ107XG4gICAgY29uc3QgcGFkZGluZyA9IGdldFN0eWxlVmFsdWUoY29tcHV0ZWRTdHlsZSwgJ3BhZGRpbmctYm90dG9tJykgKyBnZXRTdHlsZVZhbHVlKGNvbXB1dGVkU3R5bGUsICdwYWRkaW5nLXRvcCcpO1xuICAgIGNvbnN0IGJvcmRlciA9IGdldFN0eWxlVmFsdWUoY29tcHV0ZWRTdHlsZSwgJ2JvcmRlci1ib3R0b20td2lkdGgnKSArIGdldFN0eWxlVmFsdWUoY29tcHV0ZWRTdHlsZSwgJ2JvcmRlci10b3Atd2lkdGgnKTsgLy8gVGhlIGhlaWdodCBvZiB0aGUgaW5uZXIgY29udGVudFxuXG4gICAgY29uc3QgaW5uZXJIZWlnaHQgPSBpbnB1dFNoYWxsb3cuc2Nyb2xsSGVpZ2h0OyAvLyBNZWFzdXJlIGhlaWdodCBvZiBhIHRleHRhcmVhIHdpdGggYSBzaW5nbGUgcm93XG5cbiAgICBpbnB1dFNoYWxsb3cudmFsdWUgPSAneCc7XG4gICAgY29uc3Qgc2luZ2xlUm93SGVpZ2h0ID0gaW5wdXRTaGFsbG93LnNjcm9sbEhlaWdodDsgLy8gVGhlIGhlaWdodCBvZiB0aGUgb3V0ZXIgY29udGVudFxuXG4gICAgbGV0IG91dGVySGVpZ2h0ID0gaW5uZXJIZWlnaHQ7XG5cbiAgICBpZiAobWluUm93cykge1xuICAgICAgb3V0ZXJIZWlnaHQgPSBNYXRoLm1heChOdW1iZXIobWluUm93cykgKiBzaW5nbGVSb3dIZWlnaHQsIG91dGVySGVpZ2h0KTtcbiAgICB9XG5cbiAgICBpZiAobWF4Um93cykge1xuICAgICAgb3V0ZXJIZWlnaHQgPSBNYXRoLm1pbihOdW1iZXIobWF4Um93cykgKiBzaW5nbGVSb3dIZWlnaHQsIG91dGVySGVpZ2h0KTtcbiAgICB9XG5cbiAgICBvdXRlckhlaWdodCA9IE1hdGgubWF4KG91dGVySGVpZ2h0LCBzaW5nbGVSb3dIZWlnaHQpOyAvLyBUYWtlIHRoZSBib3ggc2l6aW5nIGludG8gYWNjb3VudCBmb3IgYXBwbHlpbmcgdGhpcyB2YWx1ZSBhcyBhIHN0eWxlLlxuXG4gICAgY29uc3Qgb3V0ZXJIZWlnaHRTdHlsZSA9IG91dGVySGVpZ2h0ICsgKGJveFNpemluZyA9PT0gJ2JvcmRlci1ib3gnID8gcGFkZGluZyArIGJvcmRlciA6IDApO1xuICAgIGNvbnN0IG92ZXJmbG93ID0gTWF0aC5hYnMob3V0ZXJIZWlnaHQgLSBpbm5lckhlaWdodCkgPD0gMTtcbiAgICByZXR1cm4ge1xuICAgICAgb3V0ZXJIZWlnaHRTdHlsZSxcbiAgICAgIG92ZXJmbG93XG4gICAgfTtcbiAgfSwgW21heFJvd3MsIG1pblJvd3MsIHByb3BzLnBsYWNlaG9sZGVyXSk7XG5cbiAgY29uc3QgdXBkYXRlU3RhdGUgPSAocHJldlN0YXRlLCBuZXdTdGF0ZSkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG91dGVySGVpZ2h0U3R5bGUsXG4gICAgICBvdmVyZmxvd1xuICAgIH0gPSBuZXdTdGF0ZTsgLy8gTmVlZCBhIGxhcmdlIGVub3VnaCBkaWZmZXJlbmNlIHRvIHVwZGF0ZSB0aGUgaGVpZ2h0LlxuICAgIC8vIFRoaXMgcHJldmVudHMgaW5maW5pdGUgcmVuZGVyaW5nIGxvb3AuXG5cbiAgICBpZiAocmVuZGVycy5jdXJyZW50IDwgMjAgJiYgKG91dGVySGVpZ2h0U3R5bGUgPiAwICYmIE1hdGguYWJzKChwcmV2U3RhdGUub3V0ZXJIZWlnaHRTdHlsZSB8fCAwKSAtIG91dGVySGVpZ2h0U3R5bGUpID4gMSB8fCBwcmV2U3RhdGUub3ZlcmZsb3cgIT09IG92ZXJmbG93KSkge1xuICAgICAgcmVuZGVycy5jdXJyZW50ICs9IDE7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBvdmVyZmxvdyxcbiAgICAgICAgb3V0ZXJIZWlnaHRTdHlsZVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKHJlbmRlcnMuY3VycmVudCA9PT0gMjApIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihbJ01VSTogVG9vIG1hbnkgcmUtcmVuZGVycy4gVGhlIGxheW91dCBpcyB1bnN0YWJsZS4nLCAnVGV4dGFyZWFBdXRvc2l6ZSBsaW1pdHMgdGhlIG51bWJlciBvZiByZW5kZXJzIHRvIHByZXZlbnQgYW4gaW5maW5pdGUgbG9vcC4nXS5qb2luKCdcXG4nKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHByZXZTdGF0ZTtcbiAgfTtcblxuICBjb25zdCBzeW5jSGVpZ2h0ID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IG5ld1N0YXRlID0gZ2V0VXBkYXRlZFN0YXRlKCk7XG5cbiAgICBpZiAoaXNFbXB0eShuZXdTdGF0ZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzZXRTdGF0ZShwcmV2U3RhdGUgPT4ge1xuICAgICAgcmV0dXJuIHVwZGF0ZVN0YXRlKHByZXZTdGF0ZSwgbmV3U3RhdGUpO1xuICAgIH0pO1xuICB9LCBbZ2V0VXBkYXRlZFN0YXRlXSk7XG5cbiAgY29uc3Qgc3luY0hlaWdodFdpdGhGbHVzaFN5Y24gPSAoKSA9PiB7XG4gICAgY29uc3QgbmV3U3RhdGUgPSBnZXRVcGRhdGVkU3RhdGUoKTtcblxuICAgIGlmIChpc0VtcHR5KG5ld1N0YXRlKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gSW4gUmVhY3QgMTgsIHN0YXRlIHVwZGF0ZXMgaW4gYSBSZXNpemVPYnNlcnZlcidzIGNhbGxiYWNrIGFyZSBoYXBwZW5pbmcgYWZ0ZXIgdGhlIHBhaW50IHdoaWNoIGNhdXNlcyBmbGlja2VyaW5nXG4gICAgLy8gd2hlbiBkb2luZyBzb21lIHZpc3VhbCB1cGRhdGVzIGluIGl0LiBVc2luZyBmbHVzaFN5bmMgZW5zdXJlcyB0aGF0IHRoZSBkb20gd2lsbCBiZSBwYWludGVkIGFmdGVyIHRoZSBzdGF0ZXMgdXBkYXRlcyBoYXBwZW5cbiAgICAvLyBSZWxhdGVkIGlzc3VlIC0gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8yNDMzMVxuXG5cbiAgICBmbHVzaFN5bmMoKCkgPT4ge1xuICAgICAgc2V0U3RhdGUocHJldlN0YXRlID0+IHtcbiAgICAgICAgcmV0dXJuIHVwZGF0ZVN0YXRlKHByZXZTdGF0ZSwgbmV3U3RhdGUpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVSZXNpemUgPSBkZWJvdW5jZSgoKSA9PiB7XG4gICAgICByZW5kZXJzLmN1cnJlbnQgPSAwOyAvLyBJZiB0aGUgVGV4dGFyZWFBdXRvc2l6ZSBjb21wb25lbnQgaXMgcmVwbGFjZWQgYnkgU3VzcGVuc2Ugd2l0aCBhIGZhbGxiYWNrLCB0aGUgbGFzdFxuICAgICAgLy8gUmVzaXplT2JzZXJ2ZXIncyBoYW5kbGVyIHRoYXQgcnVucyBiZWNhdXNlIG9mIHRoZSBjaGFuZ2UgaW4gdGhlIGxheW91dCBpcyB0cnlpbmcgdG9cbiAgICAgIC8vIGFjY2VzcyBhIGRvbSBub2RlIHRoYXQgaXMgbm8gbG9uZ2VyIHRoZXJlIChhcyB0aGUgZmFsbGJhY2sgY29tcG9uZW50IGlzIGJlaW5nIHNob3duIGluc3RlYWQpLlxuICAgICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9tdWkvbWF0ZXJpYWwtdWkvaXNzdWVzLzMyNjQwXG4gICAgICAvLyBUT0RPOiBBZGQgdGVzdHMgdGhhdCB3aWxsIGVuc3VyZSB0aGUgY29tcG9uZW50IGlzIG5vdCBmYWlsaW5nIHdoZW5cbiAgICAgIC8vIHJlcGxhY2VkIGJ5IFN1c3BlbnNlIHdpdGggYSBmYWxsYmFjaywgb25jZSBSZWFjdCBpcyB1cGRhdGVkIHRvIHZlcnNpb24gMThcblxuICAgICAgaWYgKGlucHV0UmVmLmN1cnJlbnQpIHtcbiAgICAgICAgc3luY0hlaWdodFdpdGhGbHVzaFN5Y24oKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCBjb250YWluZXJXaW5kb3cgPSBvd25lcldpbmRvdyhpbnB1dFJlZi5jdXJyZW50KTtcbiAgICBjb250YWluZXJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlUmVzaXplKTtcbiAgICBsZXQgcmVzaXplT2JzZXJ2ZXI7XG5cbiAgICBpZiAodHlwZW9mIFJlc2l6ZU9ic2VydmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcmVzaXplT2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoaGFuZGxlUmVzaXplKTtcbiAgICAgIHJlc2l6ZU9ic2VydmVyLm9ic2VydmUoaW5wdXRSZWYuY3VycmVudCk7XG4gICAgfVxuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGhhbmRsZVJlc2l6ZS5jbGVhcigpO1xuICAgICAgY29udGFpbmVyV2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZVJlc2l6ZSk7XG5cbiAgICAgIGlmIChyZXNpemVPYnNlcnZlcikge1xuICAgICAgICByZXNpemVPYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICB9XG4gICAgfTtcbiAgfSk7XG4gIHVzZUVuaGFuY2VkRWZmZWN0KCgpID0+IHtcbiAgICBzeW5jSGVpZ2h0KCk7XG4gIH0pO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJlbmRlcnMuY3VycmVudCA9IDA7XG4gIH0sIFt2YWx1ZV0pO1xuXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IGV2ZW50ID0+IHtcbiAgICByZW5kZXJzLmN1cnJlbnQgPSAwO1xuXG4gICAgaWYgKCFpc0NvbnRyb2xsZWQpIHtcbiAgICAgIHN5bmNIZWlnaHQoKTtcbiAgICB9XG5cbiAgICBpZiAob25DaGFuZ2UpIHtcbiAgICAgIG9uQ2hhbmdlKGV2ZW50KTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4cyhSZWFjdC5GcmFnbWVudCwge1xuICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3goXCJ0ZXh0YXJlYVwiLCBfZXh0ZW5kcyh7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBvbkNoYW5nZTogaGFuZGxlQ2hhbmdlLFxuICAgICAgcmVmOiBoYW5kbGVSZWYgLy8gQXBwbHkgdGhlIHJvd3MgcHJvcCB0byBnZXQgYSBcImNvcnJlY3RcIiBmaXJzdCBTU1IgcGFpbnRcbiAgICAgICxcbiAgICAgIHJvd3M6IG1pblJvd3MsXG4gICAgICBzdHlsZTogX2V4dGVuZHMoe1xuICAgICAgICBoZWlnaHQ6IHN0YXRlLm91dGVySGVpZ2h0U3R5bGUsXG4gICAgICAgIC8vIE5lZWQgYSBsYXJnZSBlbm91Z2ggZGlmZmVyZW5jZSB0byBhbGxvdyBzY3JvbGxpbmcuXG4gICAgICAgIC8vIFRoaXMgcHJldmVudHMgaW5maW5pdGUgcmVuZGVyaW5nIGxvb3AuXG4gICAgICAgIG92ZXJmbG93OiBzdGF0ZS5vdmVyZmxvdyA/ICdoaWRkZW4nIDogbnVsbFxuICAgICAgfSwgc3R5bGUpXG4gICAgfSwgb3RoZXIpKSwgLyojX19QVVJFX18qL19qc3goXCJ0ZXh0YXJlYVwiLCB7XG4gICAgICBcImFyaWEtaGlkZGVuXCI6IHRydWUsXG4gICAgICBjbGFzc05hbWU6IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIHJlYWRPbmx5OiB0cnVlLFxuICAgICAgcmVmOiBzaGFkb3dSZWYsXG4gICAgICB0YWJJbmRleDogLTEsXG4gICAgICBzdHlsZTogX2V4dGVuZHMoe30sIHN0eWxlcy5zaGFkb3csIHN0eWxlLCB7XG4gICAgICAgIHBhZGRpbmc6IDBcbiAgICAgIH0pXG4gICAgfSldXG4gIH0pO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBUZXh0YXJlYUF1dG9zaXplLnByb3BUeXBlc1xuLyogcmVtb3ZlLXByb3B0eXBlcyAqL1xuPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIE1heGltdW0gbnVtYmVyIG9mIHJvd3MgdG8gZGlzcGxheS5cbiAgICovXG4gIG1heFJvd3M6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogTWluaW11bSBudW1iZXIgb2Ygcm93cyB0byBkaXNwbGF5LlxuICAgKiBAZGVmYXVsdCAxXG4gICAqL1xuICBtaW5Sb3dzOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgcGxhY2Vob2xkZXI6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICB2YWx1ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyksIFByb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zdHJpbmddKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IFRleHRhcmVhQXV0b3NpemU7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IEdsb2JhbCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmZ1bmN0aW9uIGlzRW1wdHkob2JqKSB7XG4gIHJldHVybiBvYmogPT09IHVuZGVmaW5lZCB8fCBvYmogPT09IG51bGwgfHwgT2JqZWN0LmtleXMob2JqKS5sZW5ndGggPT09IDA7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEdsb2JhbFN0eWxlcyhwcm9wcykge1xuICBjb25zdCB7XG4gICAgc3R5bGVzLFxuICAgIGRlZmF1bHRUaGVtZSA9IHt9XG4gIH0gPSBwcm9wcztcbiAgY29uc3QgZ2xvYmFsU3R5bGVzID0gdHlwZW9mIHN0eWxlcyA9PT0gJ2Z1bmN0aW9uJyA/IHRoZW1lSW5wdXQgPT4gc3R5bGVzKGlzRW1wdHkodGhlbWVJbnB1dCkgPyBkZWZhdWx0VGhlbWUgOiB0aGVtZUlucHV0KSA6IHN0eWxlcztcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KEdsb2JhbCwge1xuICAgIHN0eWxlczogZ2xvYmFsU3R5bGVzXG4gIH0pO1xufVxucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gR2xvYmFsU3R5bGVzLnByb3BUeXBlcyA9IHtcbiAgZGVmYXVsdFRoZW1lOiBQcm9wVHlwZXMub2JqZWN0LFxuICBzdHlsZXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSlcbn0gOiB2b2lkIDA7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgR2xvYmFsU3R5bGVzIGFzIFN5c3RlbUdsb2JhbFN0eWxlcyB9IGZyb20gJ0BtdWkvc3lzdGVtJztcbmltcG9ydCBkZWZhdWx0VGhlbWUgZnJvbSAnLi4vc3R5bGVzL2RlZmF1bHRUaGVtZSc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuXG5mdW5jdGlvbiBHbG9iYWxTdHlsZXMocHJvcHMpIHtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KFN5c3RlbUdsb2JhbFN0eWxlcywgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgZGVmYXVsdFRoZW1lOiBkZWZhdWx0VGhlbWVcbiAgfSkpO1xufVxuXG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBHbG9iYWxTdHlsZXMucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoZSBzdHlsZXMgeW91IHdhbnQgdG8gYXBwbHkgZ2xvYmFsbHkuXG4gICAqL1xuICBzdHlsZXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIF9fZW1vdGlvbl9zdHlsZXM6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZFxuICB9KSwgUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmJvb2xdKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IEdsb2JhbFN0eWxlczsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0SW5wdXRCYXNlVXRpbGl0eUNsYXNzKHNsb3QpIHtcbiAgcmV0dXJuIGdlbmVyYXRlVXRpbGl0eUNsYXNzKCdNdWlJbnB1dEJhc2UnLCBzbG90KTtcbn1cbmNvbnN0IGlucHV0QmFzZUNsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlJbnB1dEJhc2UnLCBbJ3Jvb3QnLCAnZm9ybUNvbnRyb2wnLCAnZm9jdXNlZCcsICdkaXNhYmxlZCcsICdhZG9ybmVkU3RhcnQnLCAnYWRvcm5lZEVuZCcsICdlcnJvcicsICdzaXplU21hbGwnLCAnbXVsdGlsaW5lJywgJ2NvbG9yU2Vjb25kYXJ5JywgJ2Z1bGxXaWR0aCcsICdoaWRkZW5MYWJlbCcsICdpbnB1dCcsICdpbnB1dFNpemVTbWFsbCcsICdpbnB1dE11bHRpbGluZScsICdpbnB1dFR5cGVTZWFyY2gnLCAnaW5wdXRBZG9ybmVkU3RhcnQnLCAnaW5wdXRBZG9ybmVkRW5kJywgJ2lucHV0SGlkZGVuTGFiZWwnXSk7XG5leHBvcnQgZGVmYXVsdCBpbnB1dEJhc2VDbGFzc2VzOyIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgeyBmb3JtYXRNdWlFcnJvck1lc3NhZ2UgYXMgX2Zvcm1hdE11aUVycm9yTWVzc2FnZSB9IGZyb20gXCJAbXVpL3V0aWxzXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJhcmlhLWRlc2NyaWJlZGJ5XCIsIFwiYXV0b0NvbXBsZXRlXCIsIFwiYXV0b0ZvY3VzXCIsIFwiY2xhc3NOYW1lXCIsIFwiY29sb3JcIiwgXCJjb21wb25lbnRzXCIsIFwiY29tcG9uZW50c1Byb3BzXCIsIFwiZGVmYXVsdFZhbHVlXCIsIFwiZGlzYWJsZWRcIiwgXCJkaXNhYmxlSW5qZWN0aW5nR2xvYmFsU3R5bGVzXCIsIFwiZW5kQWRvcm5tZW50XCIsIFwiZXJyb3JcIiwgXCJmdWxsV2lkdGhcIiwgXCJpZFwiLCBcImlucHV0Q29tcG9uZW50XCIsIFwiaW5wdXRQcm9wc1wiLCBcImlucHV0UmVmXCIsIFwibWFyZ2luXCIsIFwibWF4Um93c1wiLCBcIm1pblJvd3NcIiwgXCJtdWx0aWxpbmVcIiwgXCJuYW1lXCIsIFwib25CbHVyXCIsIFwib25DaGFuZ2VcIiwgXCJvbkNsaWNrXCIsIFwib25Gb2N1c1wiLCBcIm9uS2V5RG93blwiLCBcIm9uS2V5VXBcIiwgXCJwbGFjZWhvbGRlclwiLCBcInJlYWRPbmx5XCIsIFwicmVuZGVyU3VmZml4XCIsIFwicm93c1wiLCBcInNpemVcIiwgXCJzdGFydEFkb3JubWVudFwiLCBcInR5cGVcIiwgXCJ2YWx1ZVwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHJlZlR5cGUsIGVsZW1lbnRUeXBlQWNjZXB0aW5nUmVmIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgeyB1bnN0YWJsZV9jb21wb3NlQ2xhc3NlcyBhcyBjb21wb3NlQ2xhc3NlcywgaXNIb3N0Q29tcG9uZW50LCBUZXh0YXJlYUF1dG9zaXplIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCBmb3JtQ29udHJvbFN0YXRlIGZyb20gJy4uL0Zvcm1Db250cm9sL2Zvcm1Db250cm9sU3RhdGUnO1xuaW1wb3J0IEZvcm1Db250cm9sQ29udGV4dCBmcm9tICcuLi9Gb3JtQ29udHJvbC9Gb3JtQ29udHJvbENvbnRleHQnO1xuaW1wb3J0IHVzZUZvcm1Db250cm9sIGZyb20gJy4uL0Zvcm1Db250cm9sL3VzZUZvcm1Db250cm9sJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wcyBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWVQcm9wcyc7XG5pbXBvcnQgY2FwaXRhbGl6ZSBmcm9tICcuLi91dGlscy9jYXBpdGFsaXplJztcbmltcG9ydCB1c2VGb3JrUmVmIGZyb20gJy4uL3V0aWxzL3VzZUZvcmtSZWYnO1xuaW1wb3J0IHVzZUVuaGFuY2VkRWZmZWN0IGZyb20gJy4uL3V0aWxzL3VzZUVuaGFuY2VkRWZmZWN0JztcbmltcG9ydCBHbG9iYWxTdHlsZXMgZnJvbSAnLi4vR2xvYmFsU3R5bGVzJztcbmltcG9ydCB7IGlzRmlsbGVkIH0gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgaW5wdXRCYXNlQ2xhc3NlcywgeyBnZXRJbnB1dEJhc2VVdGlsaXR5Q2xhc3MgfSBmcm9tICcuL2lucHV0QmFzZUNsYXNzZXMnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmV4cG9ydCBjb25zdCByb290T3ZlcnJpZGVzUmVzb2x2ZXIgPSAocHJvcHMsIHN0eWxlcykgPT4ge1xuICBjb25zdCB7XG4gICAgb3duZXJTdGF0ZVxuICB9ID0gcHJvcHM7XG4gIHJldHVybiBbc3R5bGVzLnJvb3QsIG93bmVyU3RhdGUuZm9ybUNvbnRyb2wgJiYgc3R5bGVzLmZvcm1Db250cm9sLCBvd25lclN0YXRlLnN0YXJ0QWRvcm5tZW50ICYmIHN0eWxlcy5hZG9ybmVkU3RhcnQsIG93bmVyU3RhdGUuZW5kQWRvcm5tZW50ICYmIHN0eWxlcy5hZG9ybmVkRW5kLCBvd25lclN0YXRlLmVycm9yICYmIHN0eWxlcy5lcnJvciwgb3duZXJTdGF0ZS5zaXplID09PSAnc21hbGwnICYmIHN0eWxlcy5zaXplU21hbGwsIG93bmVyU3RhdGUubXVsdGlsaW5lICYmIHN0eWxlcy5tdWx0aWxpbmUsIG93bmVyU3RhdGUuY29sb3IgJiYgc3R5bGVzW2Bjb2xvciR7Y2FwaXRhbGl6ZShvd25lclN0YXRlLmNvbG9yKX1gXSwgb3duZXJTdGF0ZS5mdWxsV2lkdGggJiYgc3R5bGVzLmZ1bGxXaWR0aCwgb3duZXJTdGF0ZS5oaWRkZW5MYWJlbCAmJiBzdHlsZXMuaGlkZGVuTGFiZWxdO1xufTtcbmV4cG9ydCBjb25zdCBpbnB1dE92ZXJyaWRlc1Jlc29sdmVyID0gKHByb3BzLCBzdHlsZXMpID0+IHtcbiAgY29uc3Qge1xuICAgIG93bmVyU3RhdGVcbiAgfSA9IHByb3BzO1xuICByZXR1cm4gW3N0eWxlcy5pbnB1dCwgb3duZXJTdGF0ZS5zaXplID09PSAnc21hbGwnICYmIHN0eWxlcy5pbnB1dFNpemVTbWFsbCwgb3duZXJTdGF0ZS5tdWx0aWxpbmUgJiYgc3R5bGVzLmlucHV0TXVsdGlsaW5lLCBvd25lclN0YXRlLnR5cGUgPT09ICdzZWFyY2gnICYmIHN0eWxlcy5pbnB1dFR5cGVTZWFyY2gsIG93bmVyU3RhdGUuc3RhcnRBZG9ybm1lbnQgJiYgc3R5bGVzLmlucHV0QWRvcm5lZFN0YXJ0LCBvd25lclN0YXRlLmVuZEFkb3JubWVudCAmJiBzdHlsZXMuaW5wdXRBZG9ybmVkRW5kLCBvd25lclN0YXRlLmhpZGRlbkxhYmVsICYmIHN0eWxlcy5pbnB1dEhpZGRlbkxhYmVsXTtcbn07XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc2VzLFxuICAgIGNvbG9yLFxuICAgIGRpc2FibGVkLFxuICAgIGVycm9yLFxuICAgIGVuZEFkb3JubWVudCxcbiAgICBmb2N1c2VkLFxuICAgIGZvcm1Db250cm9sLFxuICAgIGZ1bGxXaWR0aCxcbiAgICBoaWRkZW5MYWJlbCxcbiAgICBtdWx0aWxpbmUsXG4gICAgc2l6ZSxcbiAgICBzdGFydEFkb3JubWVudCxcbiAgICB0eXBlXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnLCBgY29sb3Ike2NhcGl0YWxpemUoY29sb3IpfWAsIGRpc2FibGVkICYmICdkaXNhYmxlZCcsIGVycm9yICYmICdlcnJvcicsIGZ1bGxXaWR0aCAmJiAnZnVsbFdpZHRoJywgZm9jdXNlZCAmJiAnZm9jdXNlZCcsIGZvcm1Db250cm9sICYmICdmb3JtQ29udHJvbCcsIHNpemUgPT09ICdzbWFsbCcgJiYgJ3NpemVTbWFsbCcsIG11bHRpbGluZSAmJiAnbXVsdGlsaW5lJywgc3RhcnRBZG9ybm1lbnQgJiYgJ2Fkb3JuZWRTdGFydCcsIGVuZEFkb3JubWVudCAmJiAnYWRvcm5lZEVuZCcsIGhpZGRlbkxhYmVsICYmICdoaWRkZW5MYWJlbCddLFxuICAgIGlucHV0OiBbJ2lucHV0JywgZGlzYWJsZWQgJiYgJ2Rpc2FibGVkJywgdHlwZSA9PT0gJ3NlYXJjaCcgJiYgJ2lucHV0VHlwZVNlYXJjaCcsIG11bHRpbGluZSAmJiAnaW5wdXRNdWx0aWxpbmUnLCBzaXplID09PSAnc21hbGwnICYmICdpbnB1dFNpemVTbWFsbCcsIGhpZGRlbkxhYmVsICYmICdpbnB1dEhpZGRlbkxhYmVsJywgc3RhcnRBZG9ybm1lbnQgJiYgJ2lucHV0QWRvcm5lZFN0YXJ0JywgZW5kQWRvcm5tZW50ICYmICdpbnB1dEFkb3JuZWRFbmQnXVxuICB9O1xuICByZXR1cm4gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldElucHV0QmFzZVV0aWxpdHlDbGFzcywgY2xhc3Nlcyk7XG59O1xuXG5leHBvcnQgY29uc3QgSW5wdXRCYXNlUm9vdCA9IHN0eWxlZCgnZGl2Jywge1xuICBuYW1lOiAnTXVpSW5wdXRCYXNlJyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogcm9vdE92ZXJyaWRlc1Jlc29sdmVyXG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4gX2V4dGVuZHMoe30sIHRoZW1lLnR5cG9ncmFwaHkuYm9keTEsIHtcbiAgY29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLnRleHQucHJpbWFyeSxcbiAgbGluZUhlaWdodDogJzEuNDM3NWVtJyxcbiAgLy8gMjNweFxuICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgLy8gUHJldmVudCBwYWRkaW5nIGlzc3VlIHdpdGggZnVsbFdpZHRoLlxuICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgY3Vyc29yOiAndGV4dCcsXG4gIGRpc3BsYXk6ICdpbmxpbmUtZmxleCcsXG4gIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICBbYCYuJHtpbnB1dEJhc2VDbGFzc2VzLmRpc2FibGVkfWBdOiB7XG4gICAgY29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLnRleHQuZGlzYWJsZWQsXG4gICAgY3Vyc29yOiAnZGVmYXVsdCdcbiAgfVxufSwgb3duZXJTdGF0ZS5tdWx0aWxpbmUgJiYgX2V4dGVuZHMoe1xuICBwYWRkaW5nOiAnNHB4IDAgNXB4J1xufSwgb3duZXJTdGF0ZS5zaXplID09PSAnc21hbGwnICYmIHtcbiAgcGFkZGluZ1RvcDogMVxufSksIG93bmVyU3RhdGUuZnVsbFdpZHRoICYmIHtcbiAgd2lkdGg6ICcxMDAlJ1xufSkpO1xuZXhwb3J0IGNvbnN0IElucHV0QmFzZUNvbXBvbmVudCA9IHN0eWxlZCgnaW5wdXQnLCB7XG4gIG5hbWU6ICdNdWlJbnB1dEJhc2UnLFxuICBzbG90OiAnSW5wdXQnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogaW5wdXRPdmVycmlkZXNSZXNvbHZlclxufSkoKHtcbiAgdGhlbWUsXG4gIG93bmVyU3RhdGVcbn0pID0+IHtcbiAgY29uc3QgbGlnaHQgPSB0aGVtZS5wYWxldHRlLm1vZGUgPT09ICdsaWdodCc7XG5cbiAgY29uc3QgcGxhY2Vob2xkZXIgPSBfZXh0ZW5kcyh7XG4gICAgY29sb3I6ICdjdXJyZW50Q29sb3InXG4gIH0sIHRoZW1lLnZhcnMgPyB7XG4gICAgb3BhY2l0eTogdGhlbWUudmFycy5vcGFjaXR5LmlucHV0UGxhY2Vob2xkZXJcbiAgfSA6IHtcbiAgICBvcGFjaXR5OiBsaWdodCA/IDAuNDIgOiAwLjVcbiAgfSwge1xuICAgIHRyYW5zaXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZSgnb3BhY2l0eScsIHtcbiAgICAgIGR1cmF0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5zaG9ydGVyXG4gICAgfSlcbiAgfSk7XG5cbiAgY29uc3QgcGxhY2Vob2xkZXJIaWRkZW4gPSB7XG4gICAgb3BhY2l0eTogJzAgIWltcG9ydGFudCdcbiAgfTtcbiAgY29uc3QgcGxhY2Vob2xkZXJWaXNpYmxlID0gdGhlbWUudmFycyA/IHtcbiAgICBvcGFjaXR5OiB0aGVtZS52YXJzLm9wYWNpdHkuaW5wdXRQbGFjZWhvbGRlclxuICB9IDoge1xuICAgIG9wYWNpdHk6IGxpZ2h0ID8gMC40MiA6IDAuNVxuICB9O1xuICByZXR1cm4gX2V4dGVuZHMoe1xuICAgIGZvbnQ6ICdpbmhlcml0JyxcbiAgICBsZXR0ZXJTcGFjaW5nOiAnaW5oZXJpdCcsXG4gICAgY29sb3I6ICdjdXJyZW50Q29sb3InLFxuICAgIHBhZGRpbmc6ICc0cHggMCA1cHgnLFxuICAgIGJvcmRlcjogMCxcbiAgICBib3hTaXppbmc6ICdjb250ZW50LWJveCcsXG4gICAgYmFja2dyb3VuZDogJ25vbmUnLFxuICAgIGhlaWdodDogJzEuNDM3NWVtJyxcbiAgICAvLyBSZXNldCAyM3B4dGhlIG5hdGl2ZSBpbnB1dCBsaW5lLWhlaWdodFxuICAgIG1hcmdpbjogMCxcbiAgICAvLyBSZXNldCBmb3IgU2FmYXJpXG4gICAgV2Via2l0VGFwSGlnaGxpZ2h0Q29sb3I6ICd0cmFuc3BhcmVudCcsXG4gICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAvLyBNYWtlIHRoZSBmbGV4IGl0ZW0gc2hyaW5rIHdpdGggRmlyZWZveFxuICAgIG1pbldpZHRoOiAwLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgLy8gRml4IElFMTEgd2lkdGggaXNzdWVcbiAgICBhbmltYXRpb25OYW1lOiAnbXVpLWF1dG8tZmlsbC1jYW5jZWwnLFxuICAgIGFuaW1hdGlvbkR1cmF0aW9uOiAnMTBtcycsXG4gICAgJyY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXInOiBwbGFjZWhvbGRlcixcbiAgICAnJjo6LW1vei1wbGFjZWhvbGRlcic6IHBsYWNlaG9sZGVyLFxuICAgIC8vIEZpcmVmb3ggMTkrXG4gICAgJyY6LW1zLWlucHV0LXBsYWNlaG9sZGVyJzogcGxhY2Vob2xkZXIsXG4gICAgLy8gSUUxMVxuICAgICcmOjotbXMtaW5wdXQtcGxhY2Vob2xkZXInOiBwbGFjZWhvbGRlcixcbiAgICAvLyBFZGdlXG4gICAgJyY6Zm9jdXMnOiB7XG4gICAgICBvdXRsaW5lOiAwXG4gICAgfSxcbiAgICAvLyBSZXNldCBGaXJlZm94IGludmFsaWQgcmVxdWlyZWQgaW5wdXQgc3R5bGVcbiAgICAnJjppbnZhbGlkJzoge1xuICAgICAgYm94U2hhZG93OiAnbm9uZSdcbiAgICB9LFxuICAgICcmOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uJzoge1xuICAgICAgLy8gUmVtb3ZlIHRoZSBwYWRkaW5nIHdoZW4gdHlwZT1zZWFyY2guXG4gICAgICBXZWJraXRBcHBlYXJhbmNlOiAnbm9uZSdcbiAgICB9LFxuICAgIC8vIFNob3cgYW5kIGhpZGUgdGhlIHBsYWNlaG9sZGVyIGxvZ2ljXG4gICAgW2BsYWJlbFtkYXRhLXNocmluaz1mYWxzZV0gKyAuJHtpbnB1dEJhc2VDbGFzc2VzLmZvcm1Db250cm9sfSAmYF06IHtcbiAgICAgICcmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyJzogcGxhY2Vob2xkZXJIaWRkZW4sXG4gICAgICAnJjo6LW1vei1wbGFjZWhvbGRlcic6IHBsYWNlaG9sZGVySGlkZGVuLFxuICAgICAgLy8gRmlyZWZveCAxOStcbiAgICAgICcmOi1tcy1pbnB1dC1wbGFjZWhvbGRlcic6IHBsYWNlaG9sZGVySGlkZGVuLFxuICAgICAgLy8gSUUxMVxuICAgICAgJyY6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlcic6IHBsYWNlaG9sZGVySGlkZGVuLFxuICAgICAgLy8gRWRnZVxuICAgICAgJyY6Zm9jdXM6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXInOiBwbGFjZWhvbGRlclZpc2libGUsXG4gICAgICAnJjpmb2N1czo6LW1vei1wbGFjZWhvbGRlcic6IHBsYWNlaG9sZGVyVmlzaWJsZSxcbiAgICAgIC8vIEZpcmVmb3ggMTkrXG4gICAgICAnJjpmb2N1czotbXMtaW5wdXQtcGxhY2Vob2xkZXInOiBwbGFjZWhvbGRlclZpc2libGUsXG4gICAgICAvLyBJRTExXG4gICAgICAnJjpmb2N1czo6LW1zLWlucHV0LXBsYWNlaG9sZGVyJzogcGxhY2Vob2xkZXJWaXNpYmxlIC8vIEVkZ2VcblxuICAgIH0sXG4gICAgW2AmLiR7aW5wdXRCYXNlQ2xhc3Nlcy5kaXNhYmxlZH1gXToge1xuICAgICAgb3BhY2l0eTogMSxcbiAgICAgIC8vIFJlc2V0IGlPUyBvcGFjaXR5XG4gICAgICBXZWJraXRUZXh0RmlsbENvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS50ZXh0LmRpc2FibGVkIC8vIEZpeCBvcGFjaXR5IFNhZmFyaSBidWdcblxuICAgIH0sXG4gICAgJyY6LXdlYmtpdC1hdXRvZmlsbCc6IHtcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiAnNTAwMHMnLFxuICAgICAgYW5pbWF0aW9uTmFtZTogJ211aS1hdXRvLWZpbGwnXG4gICAgfVxuICB9LCBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYge1xuICAgIHBhZGRpbmdUb3A6IDFcbiAgfSwgb3duZXJTdGF0ZS5tdWx0aWxpbmUgJiYge1xuICAgIGhlaWdodDogJ2F1dG8nLFxuICAgIHJlc2l6ZTogJ25vbmUnLFxuICAgIHBhZGRpbmc6IDAsXG4gICAgcGFkZGluZ1RvcDogMFxuICB9LCBvd25lclN0YXRlLnR5cGUgPT09ICdzZWFyY2gnICYmIHtcbiAgICAvLyBJbXByb3ZlIHR5cGUgc2VhcmNoIHN0eWxlLlxuICAgIE1vekFwcGVhcmFuY2U6ICd0ZXh0ZmllbGQnXG4gIH0pO1xufSk7XG5cbmNvbnN0IGlucHV0R2xvYmFsU3R5bGVzID0gLyojX19QVVJFX18qL19qc3goR2xvYmFsU3R5bGVzLCB7XG4gIHN0eWxlczoge1xuICAgICdAa2V5ZnJhbWVzIG11aS1hdXRvLWZpbGwnOiB7XG4gICAgICBmcm9tOiB7XG4gICAgICAgIGRpc3BsYXk6ICdibG9jaydcbiAgICAgIH1cbiAgICB9LFxuICAgICdAa2V5ZnJhbWVzIG11aS1hdXRvLWZpbGwtY2FuY2VsJzoge1xuICAgICAgZnJvbToge1xuICAgICAgICBkaXNwbGF5OiAnYmxvY2snXG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcbi8qKlxuICogYElucHV0QmFzZWAgY29udGFpbnMgYXMgZmV3IHN0eWxlcyBhcyBwb3NzaWJsZS5cbiAqIEl0IGFpbXMgdG8gYmUgYSBzaW1wbGUgYnVpbGRpbmcgYmxvY2sgZm9yIGNyZWF0aW5nIGFuIGlucHV0LlxuICogSXQgY29udGFpbnMgYSBsb2FkIG9mIHN0eWxlIHJlc2V0IGFuZCBzb21lIHN0YXRlIGxvZ2ljLlxuICovXG5cblxuY29uc3QgSW5wdXRCYXNlID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gSW5wdXRCYXNlKGluUHJvcHMsIHJlZikge1xuICBjb25zdCBwcm9wcyA9IHVzZVRoZW1lUHJvcHMoe1xuICAgIHByb3BzOiBpblByb3BzLFxuICAgIG5hbWU6ICdNdWlJbnB1dEJhc2UnXG4gIH0pO1xuXG4gIGNvbnN0IHtcbiAgICAnYXJpYS1kZXNjcmliZWRieSc6IGFyaWFEZXNjcmliZWRieSxcbiAgICBhdXRvQ29tcGxldGUsXG4gICAgYXV0b0ZvY3VzLFxuICAgIGNsYXNzTmFtZSxcbiAgICBjb21wb25lbnRzID0ge30sXG4gICAgY29tcG9uZW50c1Byb3BzID0ge30sXG4gICAgZGVmYXVsdFZhbHVlLFxuICAgIGRpc2FibGVkLFxuICAgIGRpc2FibGVJbmplY3RpbmdHbG9iYWxTdHlsZXMsXG4gICAgZW5kQWRvcm5tZW50LFxuICAgIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICAgIGlkLFxuICAgIGlucHV0Q29tcG9uZW50ID0gJ2lucHV0JyxcbiAgICBpbnB1dFByb3BzOiBpbnB1dFByb3BzUHJvcCA9IHt9LFxuICAgIGlucHV0UmVmOiBpbnB1dFJlZlByb3AsXG4gICAgbWF4Um93cyxcbiAgICBtaW5Sb3dzLFxuICAgIG11bHRpbGluZSA9IGZhbHNlLFxuICAgIG5hbWUsXG4gICAgb25CbHVyLFxuICAgIG9uQ2hhbmdlLFxuICAgIG9uQ2xpY2ssXG4gICAgb25Gb2N1cyxcbiAgICBvbktleURvd24sXG4gICAgb25LZXlVcCxcbiAgICBwbGFjZWhvbGRlcixcbiAgICByZWFkT25seSxcbiAgICByZW5kZXJTdWZmaXgsXG4gICAgcm93cyxcbiAgICBzdGFydEFkb3JubWVudCxcbiAgICB0eXBlID0gJ3RleHQnLFxuICAgIHZhbHVlOiB2YWx1ZVByb3BcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IHZhbHVlID0gaW5wdXRQcm9wc1Byb3AudmFsdWUgIT0gbnVsbCA/IGlucHV0UHJvcHNQcm9wLnZhbHVlIDogdmFsdWVQcm9wO1xuICBjb25zdCB7XG4gICAgY3VycmVudDogaXNDb250cm9sbGVkXG4gIH0gPSBSZWFjdC51c2VSZWYodmFsdWUgIT0gbnVsbCk7XG4gIGNvbnN0IGlucHV0UmVmID0gUmVhY3QudXNlUmVmKCk7XG4gIGNvbnN0IGhhbmRsZUlucHV0UmVmV2FybmluZyA9IFJlYWN0LnVzZUNhbGxiYWNrKGluc3RhbmNlID0+IHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKGluc3RhbmNlICYmIGluc3RhbmNlLm5vZGVOYW1lICE9PSAnSU5QVVQnICYmICFpbnN0YW5jZS5mb2N1cykge1xuICAgICAgICBjb25zb2xlLmVycm9yKFsnTVVJOiBZb3UgaGF2ZSBwcm92aWRlZCBhIGBpbnB1dENvbXBvbmVudGAgdG8gdGhlIGlucHV0IGNvbXBvbmVudCcsICd0aGF0IGRvZXMgbm90IGNvcnJlY3RseSBoYW5kbGUgdGhlIGByZWZgIHByb3AuJywgJ01ha2Ugc3VyZSB0aGUgYHJlZmAgcHJvcCBpcyBjYWxsZWQgd2l0aCBhIEhUTUxJbnB1dEVsZW1lbnQuJ10uam9pbignXFxuJykpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW10pO1xuICBjb25zdCBoYW5kbGVJbnB1dFByb3BzUmVmUHJvcCA9IHVzZUZvcmtSZWYoaW5wdXRQcm9wc1Byb3AucmVmLCBoYW5kbGVJbnB1dFJlZldhcm5pbmcpO1xuICBjb25zdCBoYW5kbGVJbnB1dFJlZlByb3AgPSB1c2VGb3JrUmVmKGlucHV0UmVmUHJvcCwgaGFuZGxlSW5wdXRQcm9wc1JlZlByb3ApO1xuICBjb25zdCBoYW5kbGVJbnB1dFJlZiA9IHVzZUZvcmtSZWYoaW5wdXRSZWYsIGhhbmRsZUlucHV0UmVmUHJvcCk7XG4gIGNvbnN0IFtmb2N1c2VkLCBzZXRGb2N1c2VkXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgbXVpRm9ybUNvbnRyb2wgPSB1c2VGb3JtQ29udHJvbCgpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGlmIChtdWlGb3JtQ29udHJvbCkge1xuICAgICAgICByZXR1cm4gbXVpRm9ybUNvbnRyb2wucmVnaXN0ZXJFZmZlY3QoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9LCBbbXVpRm9ybUNvbnRyb2xdKTtcbiAgfVxuXG4gIGNvbnN0IGZjcyA9IGZvcm1Db250cm9sU3RhdGUoe1xuICAgIHByb3BzLFxuICAgIG11aUZvcm1Db250cm9sLFxuICAgIHN0YXRlczogWydjb2xvcicsICdkaXNhYmxlZCcsICdlcnJvcicsICdoaWRkZW5MYWJlbCcsICdzaXplJywgJ3JlcXVpcmVkJywgJ2ZpbGxlZCddXG4gIH0pO1xuICBmY3MuZm9jdXNlZCA9IG11aUZvcm1Db250cm9sID8gbXVpRm9ybUNvbnRyb2wuZm9jdXNlZCA6IGZvY3VzZWQ7IC8vIFRoZSBibHVyIHdvbid0IGZpcmUgd2hlbiB0aGUgZGlzYWJsZWQgc3RhdGUgaXMgc2V0IG9uIGEgZm9jdXNlZCBpbnB1dC5cbiAgLy8gV2UgbmVlZCB0byBib29rIGtlZXAgdGhlIGZvY3VzZWQgc3RhdGUgbWFudWFsbHkuXG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIW11aUZvcm1Db250cm9sICYmIGRpc2FibGVkICYmIGZvY3VzZWQpIHtcbiAgICAgIHNldEZvY3VzZWQoZmFsc2UpO1xuXG4gICAgICBpZiAob25CbHVyKSB7XG4gICAgICAgIG9uQmx1cigpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW211aUZvcm1Db250cm9sLCBkaXNhYmxlZCwgZm9jdXNlZCwgb25CbHVyXSk7XG4gIGNvbnN0IG9uRmlsbGVkID0gbXVpRm9ybUNvbnRyb2wgJiYgbXVpRm9ybUNvbnRyb2wub25GaWxsZWQ7XG4gIGNvbnN0IG9uRW1wdHkgPSBtdWlGb3JtQ29udHJvbCAmJiBtdWlGb3JtQ29udHJvbC5vbkVtcHR5O1xuICBjb25zdCBjaGVja0RpcnR5ID0gUmVhY3QudXNlQ2FsbGJhY2sob2JqID0+IHtcbiAgICBpZiAoaXNGaWxsZWQob2JqKSkge1xuICAgICAgaWYgKG9uRmlsbGVkKSB7XG4gICAgICAgIG9uRmlsbGVkKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChvbkVtcHR5KSB7XG4gICAgICBvbkVtcHR5KCk7XG4gICAgfVxuICB9LCBbb25GaWxsZWQsIG9uRW1wdHldKTtcbiAgdXNlRW5oYW5jZWRFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0NvbnRyb2xsZWQpIHtcbiAgICAgIGNoZWNrRGlydHkoe1xuICAgICAgICB2YWx1ZVxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbdmFsdWUsIGNoZWNrRGlydHksIGlzQ29udHJvbGxlZF0pO1xuXG4gIGNvbnN0IGhhbmRsZUZvY3VzID0gZXZlbnQgPT4ge1xuICAgIC8vIEZpeCBhIGJ1ZyB3aXRoIElFMTEgd2hlcmUgdGhlIGZvY3VzL2JsdXIgZXZlbnRzIGFyZSB0cmlnZ2VyZWRcbiAgICAvLyB3aGlsZSB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkLlxuICAgIGlmIChmY3MuZGlzYWJsZWQpIHtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChvbkZvY3VzKSB7XG4gICAgICBvbkZvY3VzKGV2ZW50KTtcbiAgICB9XG5cbiAgICBpZiAoaW5wdXRQcm9wc1Byb3Aub25Gb2N1cykge1xuICAgICAgaW5wdXRQcm9wc1Byb3Aub25Gb2N1cyhldmVudCk7XG4gICAgfVxuXG4gICAgaWYgKG11aUZvcm1Db250cm9sICYmIG11aUZvcm1Db250cm9sLm9uRm9jdXMpIHtcbiAgICAgIG11aUZvcm1Db250cm9sLm9uRm9jdXMoZXZlbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRGb2N1c2VkKHRydWUpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVCbHVyID0gZXZlbnQgPT4ge1xuICAgIGlmIChvbkJsdXIpIHtcbiAgICAgIG9uQmx1cihldmVudCk7XG4gICAgfVxuXG4gICAgaWYgKGlucHV0UHJvcHNQcm9wLm9uQmx1cikge1xuICAgICAgaW5wdXRQcm9wc1Byb3Aub25CbHVyKGV2ZW50KTtcbiAgICB9XG5cbiAgICBpZiAobXVpRm9ybUNvbnRyb2wgJiYgbXVpRm9ybUNvbnRyb2wub25CbHVyKSB7XG4gICAgICBtdWlGb3JtQ29udHJvbC5vbkJsdXIoZXZlbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRGb2N1c2VkKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gKGV2ZW50LCAuLi5hcmdzKSA9PiB7XG4gICAgaWYgKCFpc0NvbnRyb2xsZWQpIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSBldmVudC50YXJnZXQgfHwgaW5wdXRSZWYuY3VycmVudDtcblxuICAgICAgaWYgKGVsZW1lbnQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gYE1VSTogRXhwZWN0ZWQgdmFsaWQgaW5wdXQgdGFyZ2V0LiBEaWQgeW91IHVzZSBhIGN1c3RvbSBcXGBpbnB1dENvbXBvbmVudFxcYCBhbmQgZm9yZ2V0IHRvIGZvcndhcmQgcmVmcz8gU2VlIGh0dHBzOi8vbXVpLmNvbS9yL2lucHV0LWNvbXBvbmVudC1yZWYtaW50ZXJmYWNlIGZvciBtb3JlIGluZm8uYCA6IF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UoMSkpO1xuICAgICAgfVxuXG4gICAgICBjaGVja0RpcnR5KHtcbiAgICAgICAgdmFsdWU6IGVsZW1lbnQudmFsdWVcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChpbnB1dFByb3BzUHJvcC5vbkNoYW5nZSkge1xuICAgICAgaW5wdXRQcm9wc1Byb3Aub25DaGFuZ2UoZXZlbnQsIC4uLmFyZ3MpO1xuICAgIH0gLy8gUGVyZm9ybSBpbiB0aGUgd2lsbFVwZGF0ZVxuXG5cbiAgICBpZiAob25DaGFuZ2UpIHtcbiAgICAgIG9uQ2hhbmdlKGV2ZW50LCAuLi5hcmdzKTtcbiAgICB9XG4gIH07IC8vIENoZWNrIHRoZSBpbnB1dCBzdGF0ZSBvbiBtb3VudCwgaW4gY2FzZSBpdCB3YXMgZmlsbGVkIGJ5IHRoZSB1c2VyXG4gIC8vIG9yIGF1dG8gZmlsbGVkIGJ5IHRoZSBicm93c2VyIGJlZm9yZSB0aGUgaHlkcmF0aW9uIChmb3IgU1NSKS5cblxuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY2hlY2tEaXJ0eShpbnB1dFJlZi5jdXJyZW50KTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICB9LCBbXSk7XG5cbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSBldmVudCA9PiB7XG4gICAgaWYgKGlucHV0UmVmLmN1cnJlbnQgJiYgZXZlbnQuY3VycmVudFRhcmdldCA9PT0gZXZlbnQudGFyZ2V0KSB7XG4gICAgICBpbnB1dFJlZi5jdXJyZW50LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgaWYgKG9uQ2xpY2spIHtcbiAgICAgIG9uQ2xpY2soZXZlbnQpO1xuICAgIH1cbiAgfTtcblxuICBsZXQgSW5wdXRDb21wb25lbnQgPSBpbnB1dENvbXBvbmVudDtcbiAgbGV0IGlucHV0UHJvcHMgPSBpbnB1dFByb3BzUHJvcDtcblxuICBpZiAobXVsdGlsaW5lICYmIElucHV0Q29tcG9uZW50ID09PSAnaW5wdXQnKSB7XG4gICAgaWYgKHJvd3MpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmIChtaW5Sb3dzIHx8IG1heFJvd3MpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ01VSTogWW91IGNhbiBub3QgdXNlIHRoZSBgbWluUm93c2Agb3IgYG1heFJvd3NgIHByb3BzIHdoZW4gdGhlIGlucHV0IGByb3dzYCBwcm9wIGlzIHNldC4nKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpbnB1dFByb3BzID0gX2V4dGVuZHMoe1xuICAgICAgICB0eXBlOiB1bmRlZmluZWQsXG4gICAgICAgIG1pblJvd3M6IHJvd3MsXG4gICAgICAgIG1heFJvd3M6IHJvd3NcbiAgICAgIH0sIGlucHV0UHJvcHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbnB1dFByb3BzID0gX2V4dGVuZHMoe1xuICAgICAgICB0eXBlOiB1bmRlZmluZWQsXG4gICAgICAgIG1heFJvd3MsXG4gICAgICAgIG1pblJvd3NcbiAgICAgIH0sIGlucHV0UHJvcHMpO1xuICAgIH1cblxuICAgIElucHV0Q29tcG9uZW50ID0gVGV4dGFyZWFBdXRvc2l6ZTtcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUF1dG9GaWxsID0gZXZlbnQgPT4ge1xuICAgIC8vIFByb3ZpZGUgYSBmYWtlIHZhbHVlIGFzIENocm9tZSBtaWdodCBub3QgbGV0IHlvdSBhY2Nlc3MgaXQgZm9yIHNlY3VyaXR5IHJlYXNvbnMuXG4gICAgY2hlY2tEaXJ0eShldmVudC5hbmltYXRpb25OYW1lID09PSAnbXVpLWF1dG8tZmlsbC1jYW5jZWwnID8gaW5wdXRSZWYuY3VycmVudCA6IHtcbiAgICAgIHZhbHVlOiAneCdcbiAgICB9KTtcbiAgfTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChtdWlGb3JtQ29udHJvbCkge1xuICAgICAgbXVpRm9ybUNvbnRyb2wuc2V0QWRvcm5lZFN0YXJ0KEJvb2xlYW4oc3RhcnRBZG9ybm1lbnQpKTtcbiAgICB9XG4gIH0sIFttdWlGb3JtQ29udHJvbCwgc3RhcnRBZG9ybm1lbnRdKTtcblxuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgY29sb3I6IGZjcy5jb2xvciB8fCAncHJpbWFyeScsXG4gICAgZGlzYWJsZWQ6IGZjcy5kaXNhYmxlZCxcbiAgICBlbmRBZG9ybm1lbnQsXG4gICAgZXJyb3I6IGZjcy5lcnJvcixcbiAgICBmb2N1c2VkOiBmY3MuZm9jdXNlZCxcbiAgICBmb3JtQ29udHJvbDogbXVpRm9ybUNvbnRyb2wsXG4gICAgZnVsbFdpZHRoLFxuICAgIGhpZGRlbkxhYmVsOiBmY3MuaGlkZGVuTGFiZWwsXG4gICAgbXVsdGlsaW5lLFxuICAgIHNpemU6IGZjcy5zaXplLFxuICAgIHN0YXJ0QWRvcm5tZW50LFxuICAgIHR5cGVcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuICBjb25zdCBSb290ID0gY29tcG9uZW50cy5Sb290IHx8IElucHV0QmFzZVJvb3Q7XG4gIGNvbnN0IHJvb3RQcm9wcyA9IGNvbXBvbmVudHNQcm9wcy5yb290IHx8IHt9O1xuICBjb25zdCBJbnB1dCA9IGNvbXBvbmVudHMuSW5wdXQgfHwgSW5wdXRCYXNlQ29tcG9uZW50O1xuICBpbnB1dFByb3BzID0gX2V4dGVuZHMoe30sIGlucHV0UHJvcHMsIGNvbXBvbmVudHNQcm9wcy5pbnB1dCk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeHMoUmVhY3QuRnJhZ21lbnQsIHtcbiAgICBjaGlsZHJlbjogWyFkaXNhYmxlSW5qZWN0aW5nR2xvYmFsU3R5bGVzICYmIGlucHV0R2xvYmFsU3R5bGVzLCAvKiNfX1BVUkVfXyovX2pzeHMoUm9vdCwgX2V4dGVuZHMoe30sIHJvb3RQcm9wcywgIWlzSG9zdENvbXBvbmVudChSb290KSAmJiB7XG4gICAgICBvd25lclN0YXRlOiBfZXh0ZW5kcyh7fSwgb3duZXJTdGF0ZSwgcm9vdFByb3BzLm93bmVyU3RhdGUpXG4gICAgfSwge1xuICAgICAgcmVmOiByZWYsXG4gICAgICBvbkNsaWNrOiBoYW5kbGVDbGlja1xuICAgIH0sIG90aGVyLCB7XG4gICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCByb290UHJvcHMuY2xhc3NOYW1lLCBjbGFzc05hbWUpLFxuICAgICAgY2hpbGRyZW46IFtzdGFydEFkb3JubWVudCwgLyojX19QVVJFX18qL19qc3goRm9ybUNvbnRyb2xDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goSW5wdXQsIF9leHRlbmRzKHtcbiAgICAgICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgICAgICAgIFwiYXJpYS1pbnZhbGlkXCI6IGZjcy5lcnJvcixcbiAgICAgICAgICBcImFyaWEtZGVzY3JpYmVkYnlcIjogYXJpYURlc2NyaWJlZGJ5LFxuICAgICAgICAgIGF1dG9Db21wbGV0ZTogYXV0b0NvbXBsZXRlLFxuICAgICAgICAgIGF1dG9Gb2N1czogYXV0b0ZvY3VzLFxuICAgICAgICAgIGRlZmF1bHRWYWx1ZTogZGVmYXVsdFZhbHVlLFxuICAgICAgICAgIGRpc2FibGVkOiBmY3MuZGlzYWJsZWQsXG4gICAgICAgICAgaWQ6IGlkLFxuICAgICAgICAgIG9uQW5pbWF0aW9uU3RhcnQ6IGhhbmRsZUF1dG9GaWxsLFxuICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgcGxhY2Vob2xkZXI6IHBsYWNlaG9sZGVyLFxuICAgICAgICAgIHJlYWRPbmx5OiByZWFkT25seSxcbiAgICAgICAgICByZXF1aXJlZDogZmNzLnJlcXVpcmVkLFxuICAgICAgICAgIHJvd3M6IHJvd3MsXG4gICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgIG9uS2V5RG93bjogb25LZXlEb3duLFxuICAgICAgICAgIG9uS2V5VXA6IG9uS2V5VXAsXG4gICAgICAgICAgdHlwZTogdHlwZVxuICAgICAgICB9LCBpbnB1dFByb3BzLCAhaXNIb3N0Q29tcG9uZW50KElucHV0KSAmJiB7XG4gICAgICAgICAgYXM6IElucHV0Q29tcG9uZW50LFxuICAgICAgICAgIG93bmVyU3RhdGU6IF9leHRlbmRzKHt9LCBvd25lclN0YXRlLCBpbnB1dFByb3BzLm93bmVyU3RhdGUpXG4gICAgICAgIH0sIHtcbiAgICAgICAgICByZWY6IGhhbmRsZUlucHV0UmVmLFxuICAgICAgICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLmlucHV0LCBpbnB1dFByb3BzLmNsYXNzTmFtZSksXG4gICAgICAgICAgb25CbHVyOiBoYW5kbGVCbHVyLFxuICAgICAgICAgIG9uQ2hhbmdlOiBoYW5kbGVDaGFuZ2UsXG4gICAgICAgICAgb25Gb2N1czogaGFuZGxlRm9jdXNcbiAgICAgICAgfSkpXG4gICAgICB9KSwgZW5kQWRvcm5tZW50LCByZW5kZXJTdWZmaXggPyByZW5kZXJTdWZmaXgoX2V4dGVuZHMoe30sIGZjcywge1xuICAgICAgICBzdGFydEFkb3JubWVudFxuICAgICAgfSkpIDogbnVsbF1cbiAgICB9KSldXG4gIH0pO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBJbnB1dEJhc2UucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gICdhcmlhLWRlc2NyaWJlZGJ5JzogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhpcyBwcm9wIGhlbHBzIHVzZXJzIHRvIGZpbGwgZm9ybXMgZmFzdGVyLCBlc3BlY2lhbGx5IG9uIG1vYmlsZSBkZXZpY2VzLlxuICAgKiBUaGUgbmFtZSBjYW4gYmUgY29uZnVzaW5nLCBhcyBpdCdzIG1vcmUgbGlrZSBhbiBhdXRvZmlsbC5cbiAgICogWW91IGNhbiBsZWFybiBtb3JlIGFib3V0IGl0IFtmb2xsb3dpbmcgdGhlIHNwZWNpZmljYXRpb25dKGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm0tY29udHJvbC1pbmZyYXN0cnVjdHVyZS5odG1sI2F1dG9maWxsKS5cbiAgICovXG4gIGF1dG9Db21wbGV0ZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgYGlucHV0YCBlbGVtZW50IGlzIGZvY3VzZWQgZHVyaW5nIHRoZSBmaXJzdCBtb3VudC5cbiAgICovXG4gIGF1dG9Gb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbG9yIG9mIHRoZSBjb21wb25lbnQuXG4gICAqIEl0IHN1cHBvcnRzIGJvdGggZGVmYXVsdCBhbmQgY3VzdG9tIHRoZW1lIGNvbG9ycywgd2hpY2ggY2FuIGJlIGFkZGVkIGFzIHNob3duIGluIHRoZVxuICAgKiBbcGFsZXR0ZSBjdXN0b21pemF0aW9uIGd1aWRlXShodHRwczovL211aS5jb20vbWF0ZXJpYWwtdWkvY3VzdG9taXphdGlvbi9wYWxldHRlLyNhZGRpbmctbmV3LWNvbG9ycykuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYCdwcmltYXJ5J2ApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgRm9ybUNvbnRyb2wgY29tcG9uZW50LlxuICAgKi9cbiAgY29sb3I6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ3ByaW1hcnknLCAnc2Vjb25kYXJ5JywgJ2Vycm9yJywgJ2luZm8nLCAnc3VjY2VzcycsICd3YXJuaW5nJ10pLCBQcm9wVHlwZXMuc3RyaW5nXSksXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnRzIHVzZWQgZm9yIGVhY2ggc2xvdCBpbnNpZGUgdGhlIElucHV0QmFzZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgSW5wdXQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICBSb290OiBQcm9wVHlwZXMuZWxlbWVudFR5cGVcbiAgfSksXG5cbiAgLyoqXG4gICAqIFRoZSBwcm9wcyB1c2VkIGZvciBlYWNoIHNsb3QgaW5zaWRlIHRoZSBJbnB1dC5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIGNvbXBvbmVudHNQcm9wczogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBpbnB1dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICByb290OiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pLFxuXG4gIC8qKlxuICAgKiBUaGUgZGVmYXVsdCB2YWx1ZS4gVXNlIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBub3QgY29udHJvbGxlZC5cbiAgICovXG4gIGRlZmF1bHRWYWx1ZTogUHJvcFR5cGVzLmFueSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkLlxuICAgKiBUaGUgcHJvcCBkZWZhdWx0cyB0byB0aGUgdmFsdWUgKGBmYWxzZWApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgRm9ybUNvbnRyb2wgY29tcG9uZW50LlxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIEdsb2JhbFN0eWxlcyBmb3IgdGhlIGF1dG8tZmlsbCBrZXlmcmFtZXMgd2lsbCBub3QgYmUgaW5qZWN0ZWQvcmVtb3ZlZCBvbiBtb3VudC91bm1vdW50LiBNYWtlIHN1cmUgdG8gaW5qZWN0IHRoZW0gYXQgdGhlIHRvcCBvZiB5b3VyIGFwcGxpY2F0aW9uLlxuICAgKiBUaGlzIG9wdGlvbiBpcyBpbnRlbmRlZCB0byBoZWxwIHdpdGggYm9vc3RpbmcgdGhlIGluaXRpYWwgcmVuZGVyaW5nIHBlcmZvcm1hbmNlIGlmIHlvdSBhcmUgbG9hZGluZyBhIGJpZyBhbW91bnQgb2YgSW5wdXQgY29tcG9uZW50cyBhdCBvbmNlLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZUluamVjdGluZ0dsb2JhbFN0eWxlczogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEVuZCBgSW5wdXRBZG9ybm1lbnRgIGZvciB0aGlzIGNvbXBvbmVudC5cbiAgICovXG4gIGVuZEFkb3JubWVudDogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGBpbnB1dGAgd2lsbCBpbmRpY2F0ZSBhbiBlcnJvci5cbiAgICogVGhlIHByb3AgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIChgZmFsc2VgKSBpbmhlcml0ZWQgZnJvbSB0aGUgcGFyZW50IEZvcm1Db250cm9sIGNvbXBvbmVudC5cbiAgICovXG4gIGVycm9yOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgYGlucHV0YCB3aWxsIHRha2UgdXAgdGhlIGZ1bGwgd2lkdGggb2YgaXRzIGNvbnRhaW5lci5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGZ1bGxXaWR0aDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBpZCBvZiB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKi9cbiAgaWQ6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICogQGRlZmF1bHQgJ2lucHV0J1xuICAgKi9cbiAgaW5wdXRDb21wb25lbnQ6IGVsZW1lbnRUeXBlQWNjZXB0aW5nUmVmLFxuXG4gIC8qKlxuICAgKiBbQXR0cmlidXRlc10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I0F0dHJpYnV0ZXMpIGFwcGxpZWQgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIGlucHV0UHJvcHM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFBhc3MgYSByZWYgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlucHV0UmVmOiByZWZUeXBlLFxuXG4gIC8qKlxuICAgKiBJZiBgZGVuc2VgLCB3aWxsIGFkanVzdCB2ZXJ0aWNhbCBzcGFjaW5nLiBUaGlzIGlzIG5vcm1hbGx5IG9idGFpbmVkIHZpYSBjb250ZXh0IGZyb21cbiAgICogRm9ybUNvbnRyb2wuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYCdub25lJ2ApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgRm9ybUNvbnRyb2wgY29tcG9uZW50LlxuICAgKi9cbiAgbWFyZ2luOiBQcm9wVHlwZXMub25lT2YoWydkZW5zZScsICdub25lJ10pLFxuXG4gIC8qKlxuICAgKiBNYXhpbXVtIG51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgbWF4Um93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBNaW5pbXVtIG51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgbWluUm93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIGEgW1RleHRhcmVhQXV0b3NpemVdKC9tYXRlcmlhbC11aS9yZWFjdC10ZXh0YXJlYS1hdXRvc2l6ZS8pIGVsZW1lbnQgaXMgcmVuZGVyZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBtdWx0aWxpbmU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBOYW1lIGF0dHJpYnV0ZSBvZiB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKi9cbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgYGlucHV0YCBpcyBibHVycmVkLlxuICAgKlxuICAgKiBOb3RpY2UgdGhhdCB0aGUgZmlyc3QgYXJndW1lbnQgKGV2ZW50KSBtaWdodCBiZSB1bmRlZmluZWQuXG4gICAqL1xuICBvbkJsdXI6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSB2YWx1ZSBpcyBjaGFuZ2VkLlxuICAgKlxuICAgKiBAcGFyYW0ge1JlYWN0LkNoYW5nZUV2ZW50PEhUTUxUZXh0QXJlYUVsZW1lbnQgfCBIVE1MSW5wdXRFbGVtZW50Pn0gZXZlbnQgVGhlIGV2ZW50IHNvdXJjZSBvZiB0aGUgY2FsbGJhY2suXG4gICAqIFlvdSBjYW4gcHVsbCBvdXQgdGhlIG5ldyB2YWx1ZSBieSBhY2Nlc3NpbmcgYGV2ZW50LnRhcmdldC52YWx1ZWAgKHN0cmluZykuXG4gICAqL1xuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkZvY3VzOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25LZXlEb3duOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25LZXlVcDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIFRoZSBzaG9ydCBoaW50IGRpc3BsYXllZCBpbiB0aGUgYGlucHV0YCBiZWZvcmUgdGhlIHVzZXIgZW50ZXJzIGEgdmFsdWUuXG4gICAqL1xuICBwbGFjZWhvbGRlcjogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogSXQgcHJldmVudHMgdGhlIHVzZXIgZnJvbSBjaGFuZ2luZyB0aGUgdmFsdWUgb2YgdGhlIGZpZWxkXG4gICAqIChub3QgZnJvbSBpbnRlcmFjdGluZyB3aXRoIHRoZSBmaWVsZCkuXG4gICAqL1xuICByZWFkT25seTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHJlbmRlclN1ZmZpeDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGBpbnB1dGAgZWxlbWVudCBpcyByZXF1aXJlZC5cbiAgICogVGhlIHByb3AgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIChgZmFsc2VgKSBpbmhlcml0ZWQgZnJvbSB0aGUgcGFyZW50IEZvcm1Db250cm9sIGNvbXBvbmVudC5cbiAgICovXG4gIHJlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogTnVtYmVyIG9mIHJvd3MgdG8gZGlzcGxheSB3aGVuIG11bHRpbGluZSBvcHRpb24gaXMgc2V0IHRvIHRydWUuXG4gICAqL1xuICByb3dzOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG5cbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBzaXplOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWydtZWRpdW0nLCAnc21hbGwnXSksIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogU3RhcnQgYElucHV0QWRvcm5tZW50YCBmb3IgdGhpcyBjb21wb25lbnQuXG4gICAqL1xuICBzdGFydEFkb3JubWVudDogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIFRoZSBzeXN0ZW0gcHJvcCB0aGF0IGFsbG93cyBkZWZpbmluZyBzeXN0ZW0gb3ZlcnJpZGVzIGFzIHdlbGwgYXMgYWRkaXRpb25hbCBDU1Mgc3R5bGVzLlxuICAgKi9cbiAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKSxcblxuICAvKipcbiAgICogVHlwZSBvZiB0aGUgYGlucHV0YCBlbGVtZW50LiBJdCBzaG91bGQgYmUgW2EgdmFsaWQgSFRNTDUgaW5wdXQgdHlwZV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I0Zvcm1fJTNDaW5wdXQlM0VfdHlwZXMpLlxuICAgKiBAZGVmYXVsdCAndGV4dCdcbiAgICovXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBvZiB0aGUgYGlucHV0YCBlbGVtZW50LCByZXF1aXJlZCBmb3IgYSBjb250cm9sbGVkIGNvbXBvbmVudC5cbiAgICovXG4gIHZhbHVlOiBQcm9wVHlwZXMuYW55XG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgSW5wdXRCYXNlOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IHsgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MgfSBmcm9tICdAbXVpL2Jhc2UnO1xuaW1wb3J0IHsgaW5wdXRCYXNlQ2xhc3NlcyB9IGZyb20gJy4uL0lucHV0QmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0SW5wdXRVdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aUlucHV0Jywgc2xvdCk7XG59XG5cbmNvbnN0IGlucHV0Q2xhc3NlcyA9IF9leHRlbmRzKHt9LCBpbnB1dEJhc2VDbGFzc2VzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlJbnB1dCcsIFsncm9vdCcsICd1bmRlcmxpbmUnLCAnaW5wdXQnXSkpO1xuXG5leHBvcnQgZGVmYXVsdCBpbnB1dENsYXNzZXM7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImRpc2FibGVVbmRlcmxpbmVcIiwgXCJjb21wb25lbnRzXCIsIFwiY29tcG9uZW50c1Byb3BzXCIsIFwiZnVsbFdpZHRoXCIsIFwiaW5wdXRDb21wb25lbnRcIiwgXCJtdWx0aWxpbmVcIiwgXCJ0eXBlXCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCB7IHJlZlR5cGUsIGRlZXBtZXJnZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IElucHV0QmFzZSBmcm9tICcuLi9JbnB1dEJhc2UnO1xuaW1wb3J0IHN0eWxlZCwgeyByb290U2hvdWxkRm9yd2FyZFByb3AgfSBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCB1c2VUaGVtZVByb3BzIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZVByb3BzJztcbmltcG9ydCBpbnB1dENsYXNzZXMsIHsgZ2V0SW5wdXRVdGlsaXR5Q2xhc3MgfSBmcm9tICcuL2lucHV0Q2xhc3Nlcyc7XG5pbXBvcnQgeyByb290T3ZlcnJpZGVzUmVzb2x2ZXIgYXMgaW5wdXRCYXNlUm9vdE92ZXJyaWRlc1Jlc29sdmVyLCBpbnB1dE92ZXJyaWRlc1Jlc29sdmVyIGFzIGlucHV0QmFzZUlucHV0T3ZlcnJpZGVzUmVzb2x2ZXIsIElucHV0QmFzZVJvb3QsIElucHV0QmFzZUNvbXBvbmVudCBhcyBJbnB1dEJhc2VJbnB1dCB9IGZyb20gJy4uL0lucHV0QmFzZS9JbnB1dEJhc2UnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIGNsYXNzZXMsXG4gICAgZGlzYWJsZVVuZGVybGluZVxuICB9ID0gb3duZXJTdGF0ZTtcbiAgY29uc3Qgc2xvdHMgPSB7XG4gICAgcm9vdDogWydyb290JywgIWRpc2FibGVVbmRlcmxpbmUgJiYgJ3VuZGVybGluZSddLFxuICAgIGlucHV0OiBbJ2lucHV0J11cbiAgfTtcbiAgY29uc3QgY29tcG9zZWRDbGFzc2VzID0gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldElucHV0VXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBjbGFzc2VzLCBjb21wb3NlZENsYXNzZXMpO1xufTtcblxuY29uc3QgSW5wdXRSb290ID0gc3R5bGVkKElucHV0QmFzZVJvb3QsIHtcbiAgc2hvdWxkRm9yd2FyZFByb3A6IHByb3AgPT4gcm9vdFNob3VsZEZvcndhcmRQcm9wKHByb3ApIHx8IHByb3AgPT09ICdjbGFzc2VzJyxcbiAgbmFtZTogJ011aUlucHV0JyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBvd25lclN0YXRlXG4gICAgfSA9IHByb3BzO1xuICAgIHJldHVybiBbLi4uaW5wdXRCYXNlUm9vdE92ZXJyaWRlc1Jlc29sdmVyKHByb3BzLCBzdHlsZXMpLCAhb3duZXJTdGF0ZS5kaXNhYmxlVW5kZXJsaW5lICYmIHN0eWxlcy51bmRlcmxpbmVdO1xuICB9XG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4ge1xuICBjb25zdCBsaWdodCA9IHRoZW1lLnBhbGV0dGUubW9kZSA9PT0gJ2xpZ2h0JztcbiAgbGV0IGJvdHRvbUxpbmVDb2xvciA9IGxpZ2h0ID8gJ3JnYmEoMCwgMCwgMCwgMC40MiknIDogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC43KSc7XG5cbiAgaWYgKHRoZW1lLnZhcnMpIHtcbiAgICBib3R0b21MaW5lQ29sb3IgPSBgcmdiYSgke3RoZW1lLnZhcnMucGFsZXR0ZS5jb21tb24ub25CYWNrZ3JvdW5kQ2hhbm5lbH0gLyAke3RoZW1lLnZhcnMub3BhY2l0eS5pbnB1dFVuZGVybGluZX0pYDtcbiAgfVxuXG4gIHJldHVybiBfZXh0ZW5kcyh7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZSdcbiAgfSwgb3duZXJTdGF0ZS5mb3JtQ29udHJvbCAmJiB7XG4gICAgJ2xhYmVsICsgJic6IHtcbiAgICAgIG1hcmdpblRvcDogMTZcbiAgICB9XG4gIH0sICFvd25lclN0YXRlLmRpc2FibGVVbmRlcmxpbmUgJiYge1xuICAgICcmOmFmdGVyJzoge1xuICAgICAgYm9yZGVyQm90dG9tOiBgMnB4IHNvbGlkICR7KHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGVbb3duZXJTdGF0ZS5jb2xvcl0ubWFpbn1gLFxuICAgICAgbGVmdDogMCxcbiAgICAgIGJvdHRvbTogMCxcbiAgICAgIC8vIERvaW5nIHRoZSBvdGhlciB3YXkgYXJvdW5kIGNyYXNoIG9uIElFMTEgXCInJ1wiIGh0dHBzOi8vZ2l0aHViLmNvbS9jc3NpbmpzL2pzcy9pc3N1ZXMvMjQyXG4gICAgICBjb250ZW50OiAnXCJcIicsXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHJpZ2h0OiAwLFxuICAgICAgdHJhbnNmb3JtOiAnc2NhbGVYKDApJyxcbiAgICAgIHRyYW5zaXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZSgndHJhbnNmb3JtJywge1xuICAgICAgICBkdXJhdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uc2hvcnRlcixcbiAgICAgICAgZWFzaW5nOiB0aGVtZS50cmFuc2l0aW9ucy5lYXNpbmcuZWFzZU91dFxuICAgICAgfSksXG4gICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScgLy8gVHJhbnNwYXJlbnQgdG8gdGhlIGhvdmVyIHN0eWxlLlxuXG4gICAgfSxcbiAgICBbYCYuJHtpbnB1dENsYXNzZXMuZm9jdXNlZH06YWZ0ZXJgXToge1xuICAgICAgLy8gdHJhbnNsYXRlWCgwKSBpcyBhIHdvcmthcm91bmQgZm9yIFNhZmFyaSB0cmFuc2Zvcm0gc2NhbGUgYnVnXG4gICAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL211aS9tYXRlcmlhbC11aS9pc3N1ZXMvMzE3NjZcbiAgICAgIHRyYW5zZm9ybTogJ3NjYWxlWCgxKSB0cmFuc2xhdGVYKDApJ1xuICAgIH0sXG4gICAgW2AmLiR7aW5wdXRDbGFzc2VzLmVycm9yfTphZnRlcmBdOiB7XG4gICAgICBib3JkZXJCb3R0b21Db2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuZXJyb3IubWFpbixcbiAgICAgIHRyYW5zZm9ybTogJ3NjYWxlWCgxKScgLy8gZXJyb3IgaXMgYWx3YXlzIHVuZGVybGluZWQgaW4gcmVkXG5cbiAgICB9LFxuICAgICcmOmJlZm9yZSc6IHtcbiAgICAgIGJvcmRlckJvdHRvbTogYDFweCBzb2xpZCAke2JvdHRvbUxpbmVDb2xvcn1gLFxuICAgICAgbGVmdDogMCxcbiAgICAgIGJvdHRvbTogMCxcbiAgICAgIC8vIERvaW5nIHRoZSBvdGhlciB3YXkgYXJvdW5kIGNyYXNoIG9uIElFMTEgXCInJ1wiIGh0dHBzOi8vZ2l0aHViLmNvbS9jc3NpbmpzL2pzcy9pc3N1ZXMvMjQyXG4gICAgICBjb250ZW50OiAnXCJcXFxcMDBhMFwiJyxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgcmlnaHQ6IDAsXG4gICAgICB0cmFuc2l0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ2JvcmRlci1ib3R0b20tY29sb3InLCB7XG4gICAgICAgIGR1cmF0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5zaG9ydGVyXG4gICAgICB9KSxcbiAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyAvLyBUcmFuc3BhcmVudCB0byB0aGUgaG92ZXIgc3R5bGUuXG5cbiAgICB9LFxuICAgIFtgJjpob3Zlcjpub3QoLiR7aW5wdXRDbGFzc2VzLmRpc2FibGVkfSk6YmVmb3JlYF06IHtcbiAgICAgIGJvcmRlckJvdHRvbTogYDJweCBzb2xpZCAkeyh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLnRleHQucHJpbWFyeX1gLFxuICAgICAgLy8gUmVzZXQgb24gdG91Y2ggZGV2aWNlcywgaXQgZG9lc24ndCBhZGQgc3BlY2lmaWNpdHlcbiAgICAgICdAbWVkaWEgKGhvdmVyOiBub25lKSc6IHtcbiAgICAgICAgYm9yZGVyQm90dG9tOiBgMXB4IHNvbGlkICR7Ym90dG9tTGluZUNvbG9yfWBcbiAgICAgIH1cbiAgICB9LFxuICAgIFtgJi4ke2lucHV0Q2xhc3Nlcy5kaXNhYmxlZH06YmVmb3JlYF06IHtcbiAgICAgIGJvcmRlckJvdHRvbVN0eWxlOiAnZG90dGVkJ1xuICAgIH1cbiAgfSk7XG59KTtcbmNvbnN0IElucHV0SW5wdXQgPSBzdHlsZWQoSW5wdXRCYXNlSW5wdXQsIHtcbiAgbmFtZTogJ011aUlucHV0JyxcbiAgc2xvdDogJ0lucHV0JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IGlucHV0QmFzZUlucHV0T3ZlcnJpZGVzUmVzb2x2ZXJcbn0pKHt9KTtcbmNvbnN0IElucHV0ID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gSW5wdXQoaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aUlucHV0J1xuICB9KTtcblxuICBjb25zdCB7XG4gICAgZGlzYWJsZVVuZGVybGluZSxcbiAgICBjb21wb25lbnRzID0ge30sXG4gICAgY29tcG9uZW50c1Byb3BzOiBjb21wb25lbnRzUHJvcHNQcm9wLFxuICAgIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICAgIGlucHV0Q29tcG9uZW50ID0gJ2lucHV0JyxcbiAgICBtdWx0aWxpbmUgPSBmYWxzZSxcbiAgICB0eXBlID0gJ3RleHQnXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBjbGFzc2VzID0gdXNlVXRpbGl0eUNsYXNzZXMocHJvcHMpO1xuICBjb25zdCBvd25lclN0YXRlID0ge1xuICAgIGRpc2FibGVVbmRlcmxpbmVcbiAgfTtcbiAgY29uc3QgaW5wdXRDb21wb25lbnRzUHJvcHMgPSB7XG4gICAgcm9vdDoge1xuICAgICAgb3duZXJTdGF0ZVxuICAgIH1cbiAgfTtcbiAgY29uc3QgY29tcG9uZW50c1Byb3BzID0gY29tcG9uZW50c1Byb3BzUHJvcCA/IGRlZXBtZXJnZShjb21wb25lbnRzUHJvcHNQcm9wLCBpbnB1dENvbXBvbmVudHNQcm9wcykgOiBpbnB1dENvbXBvbmVudHNQcm9wcztcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KElucHV0QmFzZSwgX2V4dGVuZHMoe1xuICAgIGNvbXBvbmVudHM6IF9leHRlbmRzKHtcbiAgICAgIFJvb3Q6IElucHV0Um9vdCxcbiAgICAgIElucHV0OiBJbnB1dElucHV0XG4gICAgfSwgY29tcG9uZW50cyksXG4gICAgY29tcG9uZW50c1Byb3BzOiBjb21wb25lbnRzUHJvcHMsXG4gICAgZnVsbFdpZHRoOiBmdWxsV2lkdGgsXG4gICAgaW5wdXRDb21wb25lbnQ6IGlucHV0Q29tcG9uZW50LFxuICAgIG11bHRpbGluZTogbXVsdGlsaW5lLFxuICAgIHJlZjogcmVmLFxuICAgIHR5cGU6IHR5cGVcbiAgfSwgb3RoZXIsIHtcbiAgICBjbGFzc2VzOiBjbGFzc2VzXG4gIH0pKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gSW5wdXQucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoaXMgcHJvcCBoZWxwcyB1c2VycyB0byBmaWxsIGZvcm1zIGZhc3RlciwgZXNwZWNpYWxseSBvbiBtb2JpbGUgZGV2aWNlcy5cbiAgICogVGhlIG5hbWUgY2FuIGJlIGNvbmZ1c2luZywgYXMgaXQncyBtb3JlIGxpa2UgYW4gYXV0b2ZpbGwuXG4gICAqIFlvdSBjYW4gbGVhcm4gbW9yZSBhYm91dCBpdCBbZm9sbG93aW5nIHRoZSBzcGVjaWZpY2F0aW9uXShodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3JtLWNvbnRyb2wtaW5mcmFzdHJ1Y3R1cmUuaHRtbCNhdXRvZmlsbCkuXG4gICAqL1xuICBhdXRvQ29tcGxldGU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGBpbnB1dGAgZWxlbWVudCBpcyBmb2N1c2VkIGR1cmluZyB0aGUgZmlyc3QgbW91bnQuXG4gICAqL1xuICBhdXRvRm9jdXM6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGNvbXBvbmVudC5cbiAgICogSXQgc3VwcG9ydHMgYm90aCBkZWZhdWx0IGFuZCBjdXN0b20gdGhlbWUgY29sb3JzLCB3aGljaCBjYW4gYmUgYWRkZWQgYXMgc2hvd24gaW4gdGhlXG4gICAqIFtwYWxldHRlIGN1c3RvbWl6YXRpb24gZ3VpZGVdKGh0dHBzOi8vbXVpLmNvbS9tYXRlcmlhbC11aS9jdXN0b21pemF0aW9uL3BhbGV0dGUvI2FkZGluZy1uZXctY29sb3JzKS5cbiAgICogVGhlIHByb3AgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIChgJ3ByaW1hcnknYCkgaW5oZXJpdGVkIGZyb20gdGhlIHBhcmVudCBGb3JtQ29udHJvbCBjb21wb25lbnQuXG4gICAqL1xuICBjb2xvcjogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsncHJpbWFyeScsICdzZWNvbmRhcnknXSksIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudHMgdXNlZCBmb3IgZWFjaCBzbG90IGluc2lkZSB0aGUgSW5wdXRCYXNlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCB7fVxuICAgKi9cbiAgY29tcG9uZW50czogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBJbnB1dDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAgIFJvb3Q6IFByb3BUeXBlcy5lbGVtZW50VHlwZVxuICB9KSxcblxuICAvKipcbiAgICogVGhlIHByb3BzIHVzZWQgZm9yIGVhY2ggc2xvdCBpbnNpZGUgdGhlIElucHV0LlxuICAgKiBAZGVmYXVsdCB7fVxuICAgKi9cbiAgY29tcG9uZW50c1Byb3BzOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGlucHV0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHJvb3Q6IFByb3BUeXBlcy5vYmplY3RcbiAgfSksXG5cbiAgLyoqXG4gICAqIFRoZSBkZWZhdWx0IHZhbHVlLiBVc2Ugd2hlbiB0aGUgY29tcG9uZW50IGlzIG5vdCBjb250cm9sbGVkLlxuICAgKi9cbiAgZGVmYXVsdFZhbHVlOiBQcm9wVHlwZXMuYW55LFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaXMgZGlzYWJsZWQuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYGZhbHNlYCkgaW5oZXJpdGVkIGZyb20gdGhlIHBhcmVudCBGb3JtQ29udHJvbCBjb21wb25lbnQuXG4gICAqL1xuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGBpbnB1dGAgd2lsbCBub3QgaGF2ZSBhbiB1bmRlcmxpbmUuXG4gICAqL1xuICBkaXNhYmxlVW5kZXJsaW5lOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogRW5kIGBJbnB1dEFkb3JubWVudGAgZm9yIHRoaXMgY29tcG9uZW50LlxuICAgKi9cbiAgZW5kQWRvcm5tZW50OiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgYGlucHV0YCB3aWxsIGluZGljYXRlIGFuIGVycm9yLlxuICAgKiBUaGUgcHJvcCBkZWZhdWx0cyB0byB0aGUgdmFsdWUgKGBmYWxzZWApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgRm9ybUNvbnRyb2wgY29tcG9uZW50LlxuICAgKi9cbiAgZXJyb3I6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBgaW5wdXRgIHdpbGwgdGFrZSB1cCB0aGUgZnVsbCB3aWR0aCBvZiBpdHMgY29udGFpbmVyLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZnVsbFdpZHRoOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIGlkIG9mIHRoZSBgaW5wdXRgIGVsZW1lbnQuXG4gICAqL1xuICBpZDogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCAnaW5wdXQnXG4gICAqL1xuICBpbnB1dENvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBbQXR0cmlidXRlc10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I0F0dHJpYnV0ZXMpIGFwcGxpZWQgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIGlucHV0UHJvcHM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFBhc3MgYSByZWYgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlucHV0UmVmOiByZWZUeXBlLFxuXG4gIC8qKlxuICAgKiBJZiBgZGVuc2VgLCB3aWxsIGFkanVzdCB2ZXJ0aWNhbCBzcGFjaW5nLiBUaGlzIGlzIG5vcm1hbGx5IG9idGFpbmVkIHZpYSBjb250ZXh0IGZyb21cbiAgICogRm9ybUNvbnRyb2wuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYCdub25lJ2ApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgRm9ybUNvbnRyb2wgY29tcG9uZW50LlxuICAgKi9cbiAgbWFyZ2luOiBQcm9wVHlwZXMub25lT2YoWydkZW5zZScsICdub25lJ10pLFxuXG4gIC8qKlxuICAgKiBNYXhpbXVtIG51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgbWF4Um93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBNaW5pbXVtIG51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgbWluUm93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIGEgW1RleHRhcmVhQXV0b3NpemVdKC9tYXRlcmlhbC11aS9yZWFjdC10ZXh0YXJlYS1hdXRvc2l6ZS8pIGVsZW1lbnQgaXMgcmVuZGVyZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBtdWx0aWxpbmU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBOYW1lIGF0dHJpYnV0ZSBvZiB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKi9cbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgdmFsdWUgaXMgY2hhbmdlZC5cbiAgICpcbiAgICogQHBhcmFtIHtSZWFjdC5DaGFuZ2VFdmVudDxIVE1MVGV4dEFyZWFFbGVtZW50IHwgSFRNTElucHV0RWxlbWVudD59IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKiBZb3UgY2FuIHB1bGwgb3V0IHRoZSBuZXcgdmFsdWUgYnkgYWNjZXNzaW5nIGBldmVudC50YXJnZXQudmFsdWVgIChzdHJpbmcpLlxuICAgKi9cbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBUaGUgc2hvcnQgaGludCBkaXNwbGF5ZWQgaW4gdGhlIGBpbnB1dGAgYmVmb3JlIHRoZSB1c2VyIGVudGVycyBhIHZhbHVlLlxuICAgKi9cbiAgcGxhY2Vob2xkZXI6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIEl0IHByZXZlbnRzIHRoZSB1c2VyIGZyb20gY2hhbmdpbmcgdGhlIHZhbHVlIG9mIHRoZSBmaWVsZFxuICAgKiAobm90IGZyb20gaW50ZXJhY3Rpbmcgd2l0aCB0aGUgZmllbGQpLlxuICAgKi9cbiAgcmVhZE9ubHk6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBgaW5wdXRgIGVsZW1lbnQgaXMgcmVxdWlyZWQuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYGZhbHNlYCkgaW5oZXJpdGVkIGZyb20gdGhlIHBhcmVudCBGb3JtQ29udHJvbCBjb21wb25lbnQuXG4gICAqL1xuICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIE51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgcm93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBTdGFydCBgSW5wdXRBZG9ybm1lbnRgIGZvciB0aGlzIGNvbXBvbmVudC5cbiAgICovXG4gIHN0YXJ0QWRvcm5tZW50OiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pLFxuXG4gIC8qKlxuICAgKiBUeXBlIG9mIHRoZSBgaW5wdXRgIGVsZW1lbnQuIEl0IHNob3VsZCBiZSBbYSB2YWxpZCBIVE1MNSBpbnB1dCB0eXBlXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVE1ML0VsZW1lbnQvaW5wdXQjRm9ybV8lM0NpbnB1dCUzRV90eXBlcykuXG4gICAqIEBkZWZhdWx0ICd0ZXh0J1xuICAgKi9cbiAgdHlwZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIHZhbHVlIG9mIHRoZSBgaW5wdXRgIGVsZW1lbnQsIHJlcXVpcmVkIGZvciBhIGNvbnRyb2xsZWQgY29tcG9uZW50LlxuICAgKi9cbiAgdmFsdWU6IFByb3BUeXBlcy5hbnlcbn0gOiB2b2lkIDA7XG5JbnB1dC5tdWlOYW1lID0gJ0lucHV0JztcbmV4cG9ydCBkZWZhdWx0IElucHV0OyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IHsgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MgfSBmcm9tICdAbXVpL2Jhc2UnO1xuaW1wb3J0IHsgaW5wdXRCYXNlQ2xhc3NlcyB9IGZyb20gJy4uL0lucHV0QmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RmlsbGVkSW5wdXRVdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aUZpbGxlZElucHV0Jywgc2xvdCk7XG59XG5cbmNvbnN0IGZpbGxlZElucHV0Q2xhc3NlcyA9IF9leHRlbmRzKHt9LCBpbnB1dEJhc2VDbGFzc2VzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlGaWxsZWRJbnB1dCcsIFsncm9vdCcsICd1bmRlcmxpbmUnLCAnaW5wdXQnXSkpO1xuXG5leHBvcnQgZGVmYXVsdCBmaWxsZWRJbnB1dENsYXNzZXM7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImRpc2FibGVVbmRlcmxpbmVcIiwgXCJjb21wb25lbnRzXCIsIFwiY29tcG9uZW50c1Byb3BzXCIsIFwiZnVsbFdpZHRoXCIsIFwiaGlkZGVuTGFiZWxcIiwgXCJpbnB1dENvbXBvbmVudFwiLCBcIm11bHRpbGluZVwiLCBcInR5cGVcIl07XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZWZUeXBlLCBkZWVwbWVyZ2UgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyB1bnN0YWJsZV9jb21wb3NlQ2xhc3NlcyBhcyBjb21wb3NlQ2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5pbXBvcnQgSW5wdXRCYXNlIGZyb20gJy4uL0lucHV0QmFzZSc7XG5pbXBvcnQgc3R5bGVkLCB7IHJvb3RTaG91bGRGb3J3YXJkUHJvcCB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IGZpbGxlZElucHV0Q2xhc3NlcywgeyBnZXRGaWxsZWRJbnB1dFV0aWxpdHlDbGFzcyB9IGZyb20gJy4vZmlsbGVkSW5wdXRDbGFzc2VzJztcbmltcG9ydCB7IHJvb3RPdmVycmlkZXNSZXNvbHZlciBhcyBpbnB1dEJhc2VSb290T3ZlcnJpZGVzUmVzb2x2ZXIsIGlucHV0T3ZlcnJpZGVzUmVzb2x2ZXIgYXMgaW5wdXRCYXNlSW5wdXRPdmVycmlkZXNSZXNvbHZlciwgSW5wdXRCYXNlUm9vdCwgSW5wdXRCYXNlQ29tcG9uZW50IGFzIElucHV0QmFzZUlucHV0IH0gZnJvbSAnLi4vSW5wdXRCYXNlL0lucHV0QmFzZSc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuXG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3NlcyxcbiAgICBkaXNhYmxlVW5kZXJsaW5lXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnLCAhZGlzYWJsZVVuZGVybGluZSAmJiAndW5kZXJsaW5lJ10sXG4gICAgaW5wdXQ6IFsnaW5wdXQnXVxuICB9O1xuICBjb25zdCBjb21wb3NlZENsYXNzZXMgPSBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0RmlsbGVkSW5wdXRVdGlsaXR5Q2xhc3MsIGNsYXNzZXMpO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGNsYXNzZXMsIGNvbXBvc2VkQ2xhc3Nlcyk7XG59O1xuXG5jb25zdCBGaWxsZWRJbnB1dFJvb3QgPSBzdHlsZWQoSW5wdXRCYXNlUm9vdCwge1xuICBzaG91bGRGb3J3YXJkUHJvcDogcHJvcCA9PiByb290U2hvdWxkRm9yd2FyZFByb3AocHJvcCkgfHwgcHJvcCA9PT0gJ2NsYXNzZXMnLFxuICBuYW1lOiAnTXVpRmlsbGVkSW5wdXQnLFxuICBzbG90OiAnUm9vdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFsuLi5pbnB1dEJhc2VSb290T3ZlcnJpZGVzUmVzb2x2ZXIocHJvcHMsIHN0eWxlcyksICFvd25lclN0YXRlLmRpc2FibGVVbmRlcmxpbmUgJiYgc3R5bGVzLnVuZGVybGluZV07XG4gIH1cbn0pKCh7XG4gIHRoZW1lLFxuICBvd25lclN0YXRlXG59KSA9PiB7XG4gIHZhciBfcGFsZXR0ZTtcblxuICBjb25zdCBsaWdodCA9IHRoZW1lLnBhbGV0dGUubW9kZSA9PT0gJ2xpZ2h0JztcbiAgY29uc3QgYm90dG9tTGluZUNvbG9yID0gbGlnaHQgPyAncmdiYSgwLCAwLCAwLCAwLjQyKScgOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpJztcbiAgY29uc3QgYmFja2dyb3VuZENvbG9yID0gbGlnaHQgPyAncmdiYSgwLCAwLCAwLCAwLjA2KScgOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA5KSc7XG4gIGNvbnN0IGhvdmVyQmFja2dyb3VuZCA9IGxpZ2h0ID8gJ3JnYmEoMCwgMCwgMCwgMC4wOSknIDogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4xMyknO1xuICBjb25zdCBkaXNhYmxlZEJhY2tncm91bmQgPSBsaWdodCA/ICdyZ2JhKDAsIDAsIDAsIDAuMTIpJyA6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTIpJztcbiAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnZhcnMgPyB0aGVtZS52YXJzLnBhbGV0dGUuRmlsbGVkSW5wdXQuYmcgOiBiYWNrZ3JvdW5kQ29sb3IsXG4gICAgYm9yZGVyVG9wTGVmdFJhZGl1czogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnNoYXBlLmJvcmRlclJhZGl1cyxcbiAgICBib3JkZXJUb3BSaWdodFJhZGl1czogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnNoYXBlLmJvcmRlclJhZGl1cyxcbiAgICB0cmFuc2l0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ2JhY2tncm91bmQtY29sb3InLCB7XG4gICAgICBkdXJhdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uc2hvcnRlcixcbiAgICAgIGVhc2luZzogdGhlbWUudHJhbnNpdGlvbnMuZWFzaW5nLmVhc2VPdXRcbiAgICB9KSxcbiAgICAnJjpob3Zlcic6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUudmFycyA/IHRoZW1lLnZhcnMucGFsZXR0ZS5GaWxsZWRJbnB1dC5ob3ZlckJnIDogaG92ZXJCYWNrZ3JvdW5kLFxuICAgICAgLy8gUmVzZXQgb24gdG91Y2ggZGV2aWNlcywgaXQgZG9lc24ndCBhZGQgc3BlY2lmaWNpdHlcbiAgICAgICdAbWVkaWEgKGhvdmVyOiBub25lKSc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS52YXJzID8gdGhlbWUudmFycy5wYWxldHRlLkZpbGxlZElucHV0LmJnIDogYmFja2dyb3VuZENvbG9yXG4gICAgICB9XG4gICAgfSxcbiAgICBbYCYuJHtmaWxsZWRJbnB1dENsYXNzZXMuZm9jdXNlZH1gXToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS52YXJzID8gdGhlbWUudmFycy5wYWxldHRlLkZpbGxlZElucHV0LmJnIDogYmFja2dyb3VuZENvbG9yXG4gICAgfSxcbiAgICBbYCYuJHtmaWxsZWRJbnB1dENsYXNzZXMuZGlzYWJsZWR9YF06IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUudmFycyA/IHRoZW1lLnZhcnMucGFsZXR0ZS5GaWxsZWRJbnB1dC5kaXNhYmxlZEJnIDogZGlzYWJsZWRCYWNrZ3JvdW5kXG4gICAgfVxuICB9LCAhb3duZXJTdGF0ZS5kaXNhYmxlVW5kZXJsaW5lICYmIHtcbiAgICAnJjphZnRlcic6IHtcbiAgICAgIGJvcmRlckJvdHRvbTogYDJweCBzb2xpZCAkeyhfcGFsZXR0ZSA9ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlW293bmVyU3RhdGUuY29sb3IgfHwgJ3ByaW1hcnknXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9wYWxldHRlLm1haW59YCxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICBib3R0b206IDAsXG4gICAgICAvLyBEb2luZyB0aGUgb3RoZXIgd2F5IGFyb3VuZCBjcmFzaCBvbiBJRTExIFwiJydcIiBodHRwczovL2dpdGh1Yi5jb20vY3NzaW5qcy9qc3MvaXNzdWVzLzI0MlxuICAgICAgY29udGVudDogJ1wiXCInLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICByaWdodDogMCxcbiAgICAgIHRyYW5zZm9ybTogJ3NjYWxlWCgwKScsXG4gICAgICB0cmFuc2l0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ3RyYW5zZm9ybScsIHtcbiAgICAgICAgZHVyYXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmR1cmF0aW9uLnNob3J0ZXIsXG4gICAgICAgIGVhc2luZzogdGhlbWUudHJhbnNpdGlvbnMuZWFzaW5nLmVhc2VPdXRcbiAgICAgIH0pLFxuICAgICAgcG9pbnRlckV2ZW50czogJ25vbmUnIC8vIFRyYW5zcGFyZW50IHRvIHRoZSBob3ZlciBzdHlsZS5cblxuICAgIH0sXG4gICAgW2AmLiR7ZmlsbGVkSW5wdXRDbGFzc2VzLmZvY3VzZWR9OmFmdGVyYF06IHtcbiAgICAgIC8vIHRyYW5zbGF0ZVgoMCkgaXMgYSB3b3JrYXJvdW5kIGZvciBTYWZhcmkgdHJhbnNmb3JtIHNjYWxlIGJ1Z1xuICAgICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9tdWkvbWF0ZXJpYWwtdWkvaXNzdWVzLzMxNzY2XG4gICAgICB0cmFuc2Zvcm06ICdzY2FsZVgoMSkgdHJhbnNsYXRlWCgwKSdcbiAgICB9LFxuICAgIFtgJi4ke2ZpbGxlZElucHV0Q2xhc3Nlcy5lcnJvcn06YWZ0ZXJgXToge1xuICAgICAgYm9yZGVyQm90dG9tQ29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLmVycm9yLm1haW4sXG4gICAgICB0cmFuc2Zvcm06ICdzY2FsZVgoMSknIC8vIGVycm9yIGlzIGFsd2F5cyB1bmRlcmxpbmVkIGluIHJlZFxuXG4gICAgfSxcbiAgICAnJjpiZWZvcmUnOiB7XG4gICAgICBib3JkZXJCb3R0b206IGAxcHggc29saWQgJHt0aGVtZS52YXJzID8gYHJnYmEoJHt0aGVtZS52YXJzLnBhbGV0dGUuY29tbW9uLm9uQmFja2dyb3VuZENoYW5uZWx9IC8gJHt0aGVtZS52YXJzLm9wYWNpdHkuaW5wdXRVbmRlcmxpbmV9KWAgOiBib3R0b21MaW5lQ29sb3J9YCxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICBib3R0b206IDAsXG4gICAgICAvLyBEb2luZyB0aGUgb3RoZXIgd2F5IGFyb3VuZCBjcmFzaCBvbiBJRTExIFwiJydcIiBodHRwczovL2dpdGh1Yi5jb20vY3NzaW5qcy9qc3MvaXNzdWVzLzI0MlxuICAgICAgY29udGVudDogJ1wiXFxcXDAwYTBcIicsXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHJpZ2h0OiAwLFxuICAgICAgdHJhbnNpdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKCdib3JkZXItYm90dG9tLWNvbG9yJywge1xuICAgICAgICBkdXJhdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uc2hvcnRlclxuICAgICAgfSksXG4gICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScgLy8gVHJhbnNwYXJlbnQgdG8gdGhlIGhvdmVyIHN0eWxlLlxuXG4gICAgfSxcbiAgICBbYCY6aG92ZXI6bm90KC4ke2ZpbGxlZElucHV0Q2xhc3Nlcy5kaXNhYmxlZH0pOmJlZm9yZWBdOiB7XG4gICAgICBib3JkZXJCb3R0b206IGAxcHggc29saWQgJHsodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS50ZXh0LnByaW1hcnl9YFxuICAgIH0sXG4gICAgW2AmLiR7ZmlsbGVkSW5wdXRDbGFzc2VzLmRpc2FibGVkfTpiZWZvcmVgXToge1xuICAgICAgYm9yZGVyQm90dG9tU3R5bGU6ICdkb3R0ZWQnXG4gICAgfVxuICB9LCBvd25lclN0YXRlLnN0YXJ0QWRvcm5tZW50ICYmIHtcbiAgICBwYWRkaW5nTGVmdDogMTJcbiAgfSwgb3duZXJTdGF0ZS5lbmRBZG9ybm1lbnQgJiYge1xuICAgIHBhZGRpbmdSaWdodDogMTJcbiAgfSwgb3duZXJTdGF0ZS5tdWx0aWxpbmUgJiYgX2V4dGVuZHMoe1xuICAgIHBhZGRpbmc6ICcyNXB4IDEycHggOHB4J1xuICB9LCBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYge1xuICAgIHBhZGRpbmdUb3A6IDIxLFxuICAgIHBhZGRpbmdCb3R0b206IDRcbiAgfSwgb3duZXJTdGF0ZS5oaWRkZW5MYWJlbCAmJiB7XG4gICAgcGFkZGluZ1RvcDogMTYsXG4gICAgcGFkZGluZ0JvdHRvbTogMTdcbiAgfSkpO1xufSk7XG5jb25zdCBGaWxsZWRJbnB1dElucHV0ID0gc3R5bGVkKElucHV0QmFzZUlucHV0LCB7XG4gIG5hbWU6ICdNdWlGaWxsZWRJbnB1dCcsXG4gIHNsb3Q6ICdJbnB1dCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiBpbnB1dEJhc2VJbnB1dE92ZXJyaWRlc1Jlc29sdmVyXG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4gX2V4dGVuZHMoe1xuICBwYWRkaW5nVG9wOiAyNSxcbiAgcGFkZGluZ1JpZ2h0OiAxMixcbiAgcGFkZGluZ0JvdHRvbTogOCxcbiAgcGFkZGluZ0xlZnQ6IDEyXG59LCAhdGhlbWUudmFycyAmJiB7XG4gICcmOi13ZWJraXQtYXV0b2ZpbGwnOiB7XG4gICAgV2Via2l0Qm94U2hhZG93OiB0aGVtZS5wYWxldHRlLm1vZGUgPT09ICdsaWdodCcgPyBudWxsIDogJzAgMCAwIDEwMHB4ICMyNjY3OTggaW5zZXQnLFxuICAgIFdlYmtpdFRleHRGaWxsQ29sb3I6IHRoZW1lLnBhbGV0dGUubW9kZSA9PT0gJ2xpZ2h0JyA/IG51bGwgOiAnI2ZmZicsXG4gICAgY2FyZXRDb2xvcjogdGhlbWUucGFsZXR0ZS5tb2RlID09PSAnbGlnaHQnID8gbnVsbCA6ICcjZmZmJyxcbiAgICBib3JkZXJUb3BMZWZ0UmFkaXVzOiAnaW5oZXJpdCcsXG4gICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6ICdpbmhlcml0J1xuICB9XG59LCB0aGVtZS52YXJzICYmIHtcbiAgJyY6LXdlYmtpdC1hdXRvZmlsbCc6IHtcbiAgICBib3JkZXJUb3BMZWZ0UmFkaXVzOiAnaW5oZXJpdCcsXG4gICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6ICdpbmhlcml0J1xuICB9LFxuICBbdGhlbWUuZ2V0Q29sb3JTY2hlbWVTZWxlY3RvcignZGFyaycpXToge1xuICAgICcmOi13ZWJraXQtYXV0b2ZpbGwnOiB7XG4gICAgICBXZWJraXRCb3hTaGFkb3c6ICcwIDAgMCAxMDBweCAjMjY2Nzk4IGluc2V0JyxcbiAgICAgIFdlYmtpdFRleHRGaWxsQ29sb3I6ICcjZmZmJyxcbiAgICAgIGNhcmV0Q29sb3I6ICcjZmZmJ1xuICAgIH1cbiAgfVxufSwgb3duZXJTdGF0ZS5zaXplID09PSAnc21hbGwnICYmIHtcbiAgcGFkZGluZ1RvcDogMjEsXG4gIHBhZGRpbmdCb3R0b206IDRcbn0sIG93bmVyU3RhdGUuaGlkZGVuTGFiZWwgJiYge1xuICBwYWRkaW5nVG9wOiAxNixcbiAgcGFkZGluZ0JvdHRvbTogMTdcbn0sIG93bmVyU3RhdGUubXVsdGlsaW5lICYmIHtcbiAgcGFkZGluZ1RvcDogMCxcbiAgcGFkZGluZ0JvdHRvbTogMCxcbiAgcGFkZGluZ0xlZnQ6IDAsXG4gIHBhZGRpbmdSaWdodDogMFxufSwgb3duZXJTdGF0ZS5zdGFydEFkb3JubWVudCAmJiB7XG4gIHBhZGRpbmdMZWZ0OiAwXG59LCBvd25lclN0YXRlLmVuZEFkb3JubWVudCAmJiB7XG4gIHBhZGRpbmdSaWdodDogMFxufSwgb3duZXJTdGF0ZS5oaWRkZW5MYWJlbCAmJiBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYge1xuICBwYWRkaW5nVG9wOiA4LFxuICBwYWRkaW5nQm90dG9tOiA5XG59KSk7XG5jb25zdCBGaWxsZWRJbnB1dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIEZpbGxlZElucHV0KGluUHJvcHMsIHJlZikge1xuICBjb25zdCBwcm9wcyA9IHVzZVRoZW1lUHJvcHMoe1xuICAgIHByb3BzOiBpblByb3BzLFxuICAgIG5hbWU6ICdNdWlGaWxsZWRJbnB1dCdcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGNvbXBvbmVudHMgPSB7fSxcbiAgICBjb21wb25lbnRzUHJvcHM6IGNvbXBvbmVudHNQcm9wc1Byb3AsXG4gICAgZnVsbFdpZHRoID0gZmFsc2UsXG4gICAgLy8gZGVjbGFyZSBoZXJlIHRvIHByZXZlbnQgc3ByZWFkaW5nIHRvIERPTVxuICAgIGlucHV0Q29tcG9uZW50ID0gJ2lucHV0JyxcbiAgICBtdWx0aWxpbmUgPSBmYWxzZSxcbiAgICB0eXBlID0gJ3RleHQnXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgZnVsbFdpZHRoLFxuICAgIGlucHV0Q29tcG9uZW50LFxuICAgIG11bHRpbGluZSxcbiAgICB0eXBlXG4gIH0pO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhwcm9wcyk7XG4gIGNvbnN0IGZpbGxlZElucHV0Q29tcG9uZW50c1Byb3BzID0ge1xuICAgIHJvb3Q6IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9LFxuICAgIGlucHV0OiB7XG4gICAgICBvd25lclN0YXRlXG4gICAgfVxuICB9O1xuICBjb25zdCBjb21wb25lbnRzUHJvcHMgPSBjb21wb25lbnRzUHJvcHNQcm9wID8gZGVlcG1lcmdlKGNvbXBvbmVudHNQcm9wc1Byb3AsIGZpbGxlZElucHV0Q29tcG9uZW50c1Byb3BzKSA6IGZpbGxlZElucHV0Q29tcG9uZW50c1Byb3BzO1xuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goSW5wdXRCYXNlLCBfZXh0ZW5kcyh7XG4gICAgY29tcG9uZW50czogX2V4dGVuZHMoe1xuICAgICAgUm9vdDogRmlsbGVkSW5wdXRSb290LFxuICAgICAgSW5wdXQ6IEZpbGxlZElucHV0SW5wdXRcbiAgICB9LCBjb21wb25lbnRzKSxcbiAgICBjb21wb25lbnRzUHJvcHM6IGNvbXBvbmVudHNQcm9wcyxcbiAgICBmdWxsV2lkdGg6IGZ1bGxXaWR0aCxcbiAgICBpbnB1dENvbXBvbmVudDogaW5wdXRDb21wb25lbnQsXG4gICAgbXVsdGlsaW5lOiBtdWx0aWxpbmUsXG4gICAgcmVmOiByZWYsXG4gICAgdHlwZTogdHlwZVxuICB9LCBvdGhlciwge1xuICAgIGNsYXNzZXM6IGNsYXNzZXNcbiAgfSkpO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBGaWxsZWRJbnB1dC5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogVGhpcyBwcm9wIGhlbHBzIHVzZXJzIHRvIGZpbGwgZm9ybXMgZmFzdGVyLCBlc3BlY2lhbGx5IG9uIG1vYmlsZSBkZXZpY2VzLlxuICAgKiBUaGUgbmFtZSBjYW4gYmUgY29uZnVzaW5nLCBhcyBpdCdzIG1vcmUgbGlrZSBhbiBhdXRvZmlsbC5cbiAgICogWW91IGNhbiBsZWFybiBtb3JlIGFib3V0IGl0IFtmb2xsb3dpbmcgdGhlIHNwZWNpZmljYXRpb25dKGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm0tY29udHJvbC1pbmZyYXN0cnVjdHVyZS5odG1sI2F1dG9maWxsKS5cbiAgICovXG4gIGF1dG9Db21wbGV0ZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgYGlucHV0YCBlbGVtZW50IGlzIGZvY3VzZWQgZHVyaW5nIHRoZSBmaXJzdCBtb3VudC5cbiAgICovXG4gIGF1dG9Gb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFRoZSBjb2xvciBvZiB0aGUgY29tcG9uZW50LlxuICAgKiBJdCBzdXBwb3J0cyBib3RoIGRlZmF1bHQgYW5kIGN1c3RvbSB0aGVtZSBjb2xvcnMsIHdoaWNoIGNhbiBiZSBhZGRlZCBhcyBzaG93biBpbiB0aGVcbiAgICogW3BhbGV0dGUgY3VzdG9taXphdGlvbiBndWlkZV0oaHR0cHM6Ly9tdWkuY29tL21hdGVyaWFsLXVpL2N1c3RvbWl6YXRpb24vcGFsZXR0ZS8jYWRkaW5nLW5ldy1jb2xvcnMpLlxuICAgKiBUaGUgcHJvcCBkZWZhdWx0cyB0byB0aGUgdmFsdWUgKGAncHJpbWFyeSdgKSBpbmhlcml0ZWQgZnJvbSB0aGUgcGFyZW50IEZvcm1Db250cm9sIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbG9yOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWydwcmltYXJ5JywgJ3NlY29uZGFyeSddKSwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50cyB1c2VkIGZvciBlYWNoIHNsb3QgaW5zaWRlIHRoZSBJbnB1dEJhc2UuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBjb21wb25lbnRzOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIElucHV0OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgUm9vdDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlXG4gIH0pLFxuXG4gIC8qKlxuICAgKiBUaGUgcHJvcHMgdXNlZCBmb3IgZWFjaCBzbG90IGluc2lkZSB0aGUgSW5wdXQuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBjb21wb25lbnRzUHJvcHM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaW5wdXQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcm9vdDogUHJvcFR5cGVzLm9iamVjdFxuICB9KSxcblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQgdmFsdWUuIFVzZSB3aGVuIHRoZSBjb21wb25lbnQgaXMgbm90IGNvbnRyb2xsZWQuXG4gICAqL1xuICBkZWZhdWx0VmFsdWU6IFByb3BUeXBlcy5hbnksXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCBpcyBkaXNhYmxlZC5cbiAgICogVGhlIHByb3AgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIChgZmFsc2VgKSBpbmhlcml0ZWQgZnJvbSB0aGUgcGFyZW50IEZvcm1Db250cm9sIGNvbXBvbmVudC5cbiAgICovXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgaW5wdXQgd2lsbCBub3QgaGF2ZSBhbiB1bmRlcmxpbmUuXG4gICAqL1xuICBkaXNhYmxlVW5kZXJsaW5lOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogRW5kIGBJbnB1dEFkb3JubWVudGAgZm9yIHRoaXMgY29tcG9uZW50LlxuICAgKi9cbiAgZW5kQWRvcm5tZW50OiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgYGlucHV0YCB3aWxsIGluZGljYXRlIGFuIGVycm9yLlxuICAgKiBUaGUgcHJvcCBkZWZhdWx0cyB0byB0aGUgdmFsdWUgKGBmYWxzZWApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgRm9ybUNvbnRyb2wgY29tcG9uZW50LlxuICAgKi9cbiAgZXJyb3I6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBgaW5wdXRgIHdpbGwgdGFrZSB1cCB0aGUgZnVsbCB3aWR0aCBvZiBpdHMgY29udGFpbmVyLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZnVsbFdpZHRoOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgbGFiZWwgaXMgaGlkZGVuLlxuICAgKiBUaGlzIGlzIHVzZWQgdG8gaW5jcmVhc2UgZGVuc2l0eSBmb3IgYSBgRmlsbGVkSW5wdXRgLlxuICAgKiBCZSBzdXJlIHRvIGFkZCBgYXJpYS1sYWJlbGAgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGhpZGRlbkxhYmVsOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIGlkIG9mIHRoZSBgaW5wdXRgIGVsZW1lbnQuXG4gICAqL1xuICBpZDogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCAnaW5wdXQnXG4gICAqL1xuICBpbnB1dENvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBbQXR0cmlidXRlc10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I0F0dHJpYnV0ZXMpIGFwcGxpZWQgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIGlucHV0UHJvcHM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFBhc3MgYSByZWYgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlucHV0UmVmOiByZWZUeXBlLFxuXG4gIC8qKlxuICAgKiBJZiBgZGVuc2VgLCB3aWxsIGFkanVzdCB2ZXJ0aWNhbCBzcGFjaW5nLiBUaGlzIGlzIG5vcm1hbGx5IG9idGFpbmVkIHZpYSBjb250ZXh0IGZyb21cbiAgICogRm9ybUNvbnRyb2wuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYCdub25lJ2ApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgRm9ybUNvbnRyb2wgY29tcG9uZW50LlxuICAgKi9cbiAgbWFyZ2luOiBQcm9wVHlwZXMub25lT2YoWydkZW5zZScsICdub25lJ10pLFxuXG4gIC8qKlxuICAgKiBNYXhpbXVtIG51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgbWF4Um93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBNaW5pbXVtIG51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgbWluUm93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIGEgW1RleHRhcmVhQXV0b3NpemVdKC9tYXRlcmlhbC11aS9yZWFjdC10ZXh0YXJlYS1hdXRvc2l6ZS8pIGVsZW1lbnQgaXMgcmVuZGVyZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBtdWx0aWxpbmU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBOYW1lIGF0dHJpYnV0ZSBvZiB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKi9cbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgdmFsdWUgaXMgY2hhbmdlZC5cbiAgICpcbiAgICogQHBhcmFtIHtSZWFjdC5DaGFuZ2VFdmVudDxIVE1MVGV4dEFyZWFFbGVtZW50IHwgSFRNTElucHV0RWxlbWVudD59IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKiBZb3UgY2FuIHB1bGwgb3V0IHRoZSBuZXcgdmFsdWUgYnkgYWNjZXNzaW5nIGBldmVudC50YXJnZXQudmFsdWVgIChzdHJpbmcpLlxuICAgKi9cbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBUaGUgc2hvcnQgaGludCBkaXNwbGF5ZWQgaW4gdGhlIGBpbnB1dGAgYmVmb3JlIHRoZSB1c2VyIGVudGVycyBhIHZhbHVlLlxuICAgKi9cbiAgcGxhY2Vob2xkZXI6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIEl0IHByZXZlbnRzIHRoZSB1c2VyIGZyb20gY2hhbmdpbmcgdGhlIHZhbHVlIG9mIHRoZSBmaWVsZFxuICAgKiAobm90IGZyb20gaW50ZXJhY3Rpbmcgd2l0aCB0aGUgZmllbGQpLlxuICAgKi9cbiAgcmVhZE9ubHk6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBgaW5wdXRgIGVsZW1lbnQgaXMgcmVxdWlyZWQuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYGZhbHNlYCkgaW5oZXJpdGVkIGZyb20gdGhlIHBhcmVudCBGb3JtQ29udHJvbCBjb21wb25lbnQuXG4gICAqL1xuICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIE51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgcm93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBTdGFydCBgSW5wdXRBZG9ybm1lbnRgIGZvciB0aGlzIGNvbXBvbmVudC5cbiAgICovXG4gIHN0YXJ0QWRvcm5tZW50OiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pLFxuXG4gIC8qKlxuICAgKiBUeXBlIG9mIHRoZSBgaW5wdXRgIGVsZW1lbnQuIEl0IHNob3VsZCBiZSBbYSB2YWxpZCBIVE1MNSBpbnB1dCB0eXBlXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVE1ML0VsZW1lbnQvaW5wdXQjRm9ybV8lM0NpbnB1dCUzRV90eXBlcykuXG4gICAqIEBkZWZhdWx0ICd0ZXh0J1xuICAgKi9cbiAgdHlwZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIHZhbHVlIG9mIHRoZSBgaW5wdXRgIGVsZW1lbnQsIHJlcXVpcmVkIGZvciBhIGNvbnRyb2xsZWQgY29tcG9uZW50LlxuICAgKi9cbiAgdmFsdWU6IFByb3BUeXBlcy5hbnlcbn0gOiB2b2lkIDA7XG5GaWxsZWRJbnB1dC5tdWlOYW1lID0gJ0lucHV0JztcbmV4cG9ydCBkZWZhdWx0IEZpbGxlZElucHV0OyIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5cbnZhciBfc3BhbjtcblxuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2hpbGRyZW5cIiwgXCJjbGFzc2VzXCIsIFwiY2xhc3NOYW1lXCIsIFwibGFiZWxcIiwgXCJub3RjaGVkXCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3QgTm90Y2hlZE91dGxpbmVSb290ID0gc3R5bGVkKCdmaWVsZHNldCcpKHtcbiAgdGV4dEFsaWduOiAnbGVmdCcsXG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICBib3R0b206IDAsXG4gIHJpZ2h0OiAwLFxuICB0b3A6IC01LFxuICBsZWZ0OiAwLFxuICBtYXJnaW46IDAsXG4gIHBhZGRpbmc6ICcwIDhweCcsXG4gIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgYm9yZGVyUmFkaXVzOiAnaW5oZXJpdCcsXG4gIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICBib3JkZXJXaWR0aDogMSxcbiAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICBtaW5XaWR0aDogJzAlJ1xufSk7XG5jb25zdCBOb3RjaGVkT3V0bGluZUxlZ2VuZCA9IHN0eWxlZCgnbGVnZW5kJykoKHtcbiAgb3duZXJTdGF0ZSxcbiAgdGhlbWVcbn0pID0+IF9leHRlbmRzKHtcbiAgZmxvYXQ6ICd1bnNldCcsXG4gIC8vIEZpeCBjb25mbGljdCB3aXRoIGJvb3RzdHJhcFxuICBvdmVyZmxvdzogJ2hpZGRlbidcbn0sICFvd25lclN0YXRlLndpdGhMYWJlbCAmJiB7XG4gIHBhZGRpbmc6IDAsXG4gIGxpbmVIZWlnaHQ6ICcxMXB4JyxcbiAgLy8gc3luYyB3aXRoIGBoZWlnaHRgIGluIGBsZWdlbmRgIHN0eWxlc1xuICB0cmFuc2l0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ3dpZHRoJywge1xuICAgIGR1cmF0aW9uOiAxNTAsXG4gICAgZWFzaW5nOiB0aGVtZS50cmFuc2l0aW9ucy5lYXNpbmcuZWFzZU91dFxuICB9KVxufSwgb3duZXJTdGF0ZS53aXRoTGFiZWwgJiYgX2V4dGVuZHMoe1xuICBkaXNwbGF5OiAnYmxvY2snLFxuICAvLyBGaXggY29uZmxpY3Qgd2l0aCBub3JtYWxpemUuY3NzIGFuZCBzYW5pdGl6ZS5jc3NcbiAgd2lkdGg6ICdhdXRvJyxcbiAgLy8gRml4IGNvbmZsaWN0IHdpdGggYm9vdHN0cmFwXG4gIHBhZGRpbmc6IDAsXG4gIGhlaWdodDogMTEsXG4gIC8vIHN5bmMgd2l0aCBgbGluZUhlaWdodGAgaW4gYGxlZ2VuZGAgc3R5bGVzXG4gIGZvbnRTaXplOiAnMC43NWVtJyxcbiAgdmlzaWJpbGl0eTogJ2hpZGRlbicsXG4gIG1heFdpZHRoOiAwLjAxLFxuICB0cmFuc2l0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ21heC13aWR0aCcsIHtcbiAgICBkdXJhdGlvbjogNTAsXG4gICAgZWFzaW5nOiB0aGVtZS50cmFuc2l0aW9ucy5lYXNpbmcuZWFzZU91dFxuICB9KSxcbiAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gICcmID4gc3Bhbic6IHtcbiAgICBwYWRkaW5nTGVmdDogNSxcbiAgICBwYWRkaW5nUmlnaHQ6IDUsXG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgb3BhY2l0eTogMCxcbiAgICB2aXNpYmlsaXR5OiAndmlzaWJsZSdcbiAgfVxufSwgb3duZXJTdGF0ZS5ub3RjaGVkICYmIHtcbiAgbWF4V2lkdGg6ICcxMDAlJyxcbiAgdHJhbnNpdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKCdtYXgtd2lkdGgnLCB7XG4gICAgZHVyYXRpb246IDEwMCxcbiAgICBlYXNpbmc6IHRoZW1lLnRyYW5zaXRpb25zLmVhc2luZy5lYXNlT3V0LFxuICAgIGRlbGF5OiA1MFxuICB9KVxufSkpKTtcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOb3RjaGVkT3V0bGluZShwcm9wcykge1xuICBjb25zdCB7XG4gICAgY2xhc3NOYW1lLFxuICAgIGxhYmVsLFxuICAgIG5vdGNoZWRcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IHdpdGhMYWJlbCA9IGxhYmVsICE9IG51bGwgJiYgbGFiZWwgIT09ICcnO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBub3RjaGVkLFxuICAgIHdpdGhMYWJlbFxuICB9KTtcblxuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goTm90Y2hlZE91dGxpbmVSb290LCBfZXh0ZW5kcyh7XG4gICAgXCJhcmlhLWhpZGRlblwiOiB0cnVlLFxuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGVcbiAgfSwgb3RoZXIsIHtcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goTm90Y2hlZE91dGxpbmVMZWdlbmQsIHtcbiAgICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGUsXG4gICAgICBjaGlsZHJlbjogd2l0aExhYmVsID8gLyojX19QVVJFX18qL19qc3goXCJzcGFuXCIsIHtcbiAgICAgICAgY2hpbGRyZW46IGxhYmVsXG4gICAgICB9KSA6IC8vIG5vdHJhbnNsYXRlIG5lZWRlZCB3aGlsZSBHb29nbGUgVHJhbnNsYXRlIHdpbGwgbm90IGZpeCB6ZXJvLXdpZHRoIHNwYWNlIGlzc3VlXG4gICAgICBfc3BhbiB8fCAoX3NwYW4gPSAvKiNfX1BVUkVfXyovX2pzeChcInNwYW5cIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwibm90cmFuc2xhdGVcIixcbiAgICAgICAgY2hpbGRyZW46IFwiXFx1MjAwQlwiXG4gICAgICB9KSlcbiAgICB9KVxuICB9KSk7XG59XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBOb3RjaGVkT3V0bGluZS5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUaGUgY29udGVudCBvZiB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqIFNlZSBbQ1NTIEFQSV0oI2NzcykgYmVsb3cgZm9yIG1vcmUgZGV0YWlscy5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGxhYmVsLlxuICAgKi9cbiAgbGFiZWw6IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBvdXRsaW5lIGlzIG5vdGNoZWQgdG8gYWNjb21tb2RhdGUgdGhlIGxhYmVsLlxuICAgKi9cbiAgbm90Y2hlZDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3Rcbn0gOiB2b2lkIDA7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5pbXBvcnQgeyBpbnB1dEJhc2VDbGFzc2VzIH0gZnJvbSAnLi4vSW5wdXRCYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRPdXRsaW5lZElucHV0VXRpbGl0eUNsYXNzKHNsb3QpIHtcbiAgcmV0dXJuIGdlbmVyYXRlVXRpbGl0eUNsYXNzKCdNdWlPdXRsaW5lZElucHV0Jywgc2xvdCk7XG59XG5cbmNvbnN0IG91dGxpbmVkSW5wdXRDbGFzc2VzID0gX2V4dGVuZHMoe30sIGlucHV0QmFzZUNsYXNzZXMsIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aU91dGxpbmVkSW5wdXQnLCBbJ3Jvb3QnLCAnbm90Y2hlZE91dGxpbmUnLCAnaW5wdXQnXSkpO1xuXG5leHBvcnQgZGVmYXVsdCBvdXRsaW5lZElucHV0Q2xhc3NlczsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY29tcG9uZW50c1wiLCBcImZ1bGxXaWR0aFwiLCBcImlucHV0Q29tcG9uZW50XCIsIFwibGFiZWxcIiwgXCJtdWx0aWxpbmVcIiwgXCJub3RjaGVkXCIsIFwidHlwZVwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyByZWZUeXBlIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgeyB1bnN0YWJsZV9jb21wb3NlQ2xhc3NlcyBhcyBjb21wb3NlQ2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5pbXBvcnQgTm90Y2hlZE91dGxpbmUgZnJvbSAnLi9Ob3RjaGVkT3V0bGluZSc7XG5pbXBvcnQgdXNlRm9ybUNvbnRyb2wgZnJvbSAnLi4vRm9ybUNvbnRyb2wvdXNlRm9ybUNvbnRyb2wnO1xuaW1wb3J0IGZvcm1Db250cm9sU3RhdGUgZnJvbSAnLi4vRm9ybUNvbnRyb2wvZm9ybUNvbnRyb2xTdGF0ZSc7XG5pbXBvcnQgc3R5bGVkLCB7IHJvb3RTaG91bGRGb3J3YXJkUHJvcCB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IG91dGxpbmVkSW5wdXRDbGFzc2VzLCB7IGdldE91dGxpbmVkSW5wdXRVdGlsaXR5Q2xhc3MgfSBmcm9tICcuL291dGxpbmVkSW5wdXRDbGFzc2VzJztcbmltcG9ydCBJbnB1dEJhc2UsIHsgcm9vdE92ZXJyaWRlc1Jlc29sdmVyIGFzIGlucHV0QmFzZVJvb3RPdmVycmlkZXNSZXNvbHZlciwgaW5wdXRPdmVycmlkZXNSZXNvbHZlciBhcyBpbnB1dEJhc2VJbnB1dE92ZXJyaWRlc1Jlc29sdmVyLCBJbnB1dEJhc2VSb290LCBJbnB1dEJhc2VDb21wb25lbnQgYXMgSW5wdXRCYXNlSW5wdXQgfSBmcm9tICcuLi9JbnB1dEJhc2UvSW5wdXRCYXNlJztcbmltcG9ydCB1c2VUaGVtZVByb3BzIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZVByb3BzJztcbmltcG9ydCB7IGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc2VzXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnXSxcbiAgICBub3RjaGVkT3V0bGluZTogWydub3RjaGVkT3V0bGluZSddLFxuICAgIGlucHV0OiBbJ2lucHV0J11cbiAgfTtcbiAgY29uc3QgY29tcG9zZWRDbGFzc2VzID0gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldE91dGxpbmVkSW5wdXRVdGlsaXR5Q2xhc3MsIGNsYXNzZXMpO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGNsYXNzZXMsIGNvbXBvc2VkQ2xhc3Nlcyk7XG59O1xuXG5jb25zdCBPdXRsaW5lZElucHV0Um9vdCA9IHN0eWxlZChJbnB1dEJhc2VSb290LCB7XG4gIHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+IHJvb3RTaG91bGRGb3J3YXJkUHJvcChwcm9wKSB8fCBwcm9wID09PSAnY2xhc3NlcycsXG4gIG5hbWU6ICdNdWlPdXRsaW5lZElucHV0JyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogaW5wdXRCYXNlUm9vdE92ZXJyaWRlc1Jlc29sdmVyXG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4ge1xuICBjb25zdCBib3JkZXJDb2xvciA9IHRoZW1lLnBhbGV0dGUubW9kZSA9PT0gJ2xpZ2h0JyA/ICdyZ2JhKDAsIDAsIDAsIDAuMjMpJyA6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjMpJztcbiAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICBib3JkZXJSYWRpdXM6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5zaGFwZS5ib3JkZXJSYWRpdXMsXG4gICAgW2AmOmhvdmVyIC4ke291dGxpbmVkSW5wdXRDbGFzc2VzLm5vdGNoZWRPdXRsaW5lfWBdOiB7XG4gICAgICBib3JkZXJDb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUudGV4dC5wcmltYXJ5XG4gICAgfSxcbiAgICAvLyBSZXNldCBvbiB0b3VjaCBkZXZpY2VzLCBpdCBkb2Vzbid0IGFkZCBzcGVjaWZpY2l0eVxuICAgICdAbWVkaWEgKGhvdmVyOiBub25lKSc6IHtcbiAgICAgIFtgJjpob3ZlciAuJHtvdXRsaW5lZElucHV0Q2xhc3Nlcy5ub3RjaGVkT3V0bGluZX1gXToge1xuICAgICAgICBib3JkZXJDb2xvcjogdGhlbWUudmFycyA/IGByZ2JhKCR7dGhlbWUudmFycy5wYWxldHRlLmNvbW1vbi5vbkJhY2tncm91bmRDaGFubmVsfSAvIDAuMjMpYCA6IGJvcmRlckNvbG9yXG4gICAgICB9XG4gICAgfSxcbiAgICBbYCYuJHtvdXRsaW5lZElucHV0Q2xhc3Nlcy5mb2N1c2VkfSAuJHtvdXRsaW5lZElucHV0Q2xhc3Nlcy5ub3RjaGVkT3V0bGluZX1gXToge1xuICAgICAgYm9yZGVyQ29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlW293bmVyU3RhdGUuY29sb3JdLm1haW4sXG4gICAgICBib3JkZXJXaWR0aDogMlxuICAgIH0sXG4gICAgW2AmLiR7b3V0bGluZWRJbnB1dENsYXNzZXMuZXJyb3J9IC4ke291dGxpbmVkSW5wdXRDbGFzc2VzLm5vdGNoZWRPdXRsaW5lfWBdOiB7XG4gICAgICBib3JkZXJDb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuZXJyb3IubWFpblxuICAgIH0sXG4gICAgW2AmLiR7b3V0bGluZWRJbnB1dENsYXNzZXMuZGlzYWJsZWR9IC4ke291dGxpbmVkSW5wdXRDbGFzc2VzLm5vdGNoZWRPdXRsaW5lfWBdOiB7XG4gICAgICBib3JkZXJDb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuYWN0aW9uLmRpc2FibGVkXG4gICAgfVxuICB9LCBvd25lclN0YXRlLnN0YXJ0QWRvcm5tZW50ICYmIHtcbiAgICBwYWRkaW5nTGVmdDogMTRcbiAgfSwgb3duZXJTdGF0ZS5lbmRBZG9ybm1lbnQgJiYge1xuICAgIHBhZGRpbmdSaWdodDogMTRcbiAgfSwgb3duZXJTdGF0ZS5tdWx0aWxpbmUgJiYgX2V4dGVuZHMoe1xuICAgIHBhZGRpbmc6ICcxNi41cHggMTRweCdcbiAgfSwgb3duZXJTdGF0ZS5zaXplID09PSAnc21hbGwnICYmIHtcbiAgICBwYWRkaW5nOiAnOC41cHggMTRweCdcbiAgfSkpO1xufSk7XG5jb25zdCBOb3RjaGVkT3V0bGluZVJvb3QgPSBzdHlsZWQoTm90Y2hlZE91dGxpbmUsIHtcbiAgbmFtZTogJ011aU91dGxpbmVkSW5wdXQnLFxuICBzbG90OiAnTm90Y2hlZE91dGxpbmUnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHN0eWxlcy5ub3RjaGVkT3V0bGluZVxufSkoKHtcbiAgdGhlbWVcbn0pID0+IHtcbiAgY29uc3QgYm9yZGVyQ29sb3IgPSB0aGVtZS5wYWxldHRlLm1vZGUgPT09ICdsaWdodCcgPyAncmdiYSgwLCAwLCAwLCAwLjIzKScgOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIzKSc7XG4gIHJldHVybiB7XG4gICAgYm9yZGVyQ29sb3I6IHRoZW1lLnZhcnMgPyBgcmdiYSgke3RoZW1lLnZhcnMucGFsZXR0ZS5jb21tb24ub25CYWNrZ3JvdW5kQ2hhbm5lbH0gLyAwLjIzKWAgOiBib3JkZXJDb2xvclxuICB9O1xufSk7XG5jb25zdCBPdXRsaW5lZElucHV0SW5wdXQgPSBzdHlsZWQoSW5wdXRCYXNlSW5wdXQsIHtcbiAgbmFtZTogJ011aU91dGxpbmVkSW5wdXQnLFxuICBzbG90OiAnSW5wdXQnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogaW5wdXRCYXNlSW5wdXRPdmVycmlkZXNSZXNvbHZlclxufSkoKHtcbiAgdGhlbWUsXG4gIG93bmVyU3RhdGVcbn0pID0+IF9leHRlbmRzKHtcbiAgcGFkZGluZzogJzE2LjVweCAxNHB4J1xufSwgIXRoZW1lLnZhcnMgJiYge1xuICAnJjotd2Via2l0LWF1dG9maWxsJzoge1xuICAgIFdlYmtpdEJveFNoYWRvdzogdGhlbWUucGFsZXR0ZS5tb2RlID09PSAnbGlnaHQnID8gbnVsbCA6ICcwIDAgMCAxMDBweCAjMjY2Nzk4IGluc2V0JyxcbiAgICBXZWJraXRUZXh0RmlsbENvbG9yOiB0aGVtZS5wYWxldHRlLm1vZGUgPT09ICdsaWdodCcgPyBudWxsIDogJyNmZmYnLFxuICAgIGNhcmV0Q29sb3I6IHRoZW1lLnBhbGV0dGUubW9kZSA9PT0gJ2xpZ2h0JyA/IG51bGwgOiAnI2ZmZicsXG4gICAgYm9yZGVyUmFkaXVzOiAnaW5oZXJpdCdcbiAgfVxufSwgdGhlbWUudmFycyAmJiB7XG4gICcmOi13ZWJraXQtYXV0b2ZpbGwnOiB7XG4gICAgYm9yZGVyUmFkaXVzOiAnaW5oZXJpdCdcbiAgfSxcbiAgW3RoZW1lLmdldENvbG9yU2NoZW1lU2VsZWN0b3IoJ2RhcmsnKV06IHtcbiAgICAnJjotd2Via2l0LWF1dG9maWxsJzoge1xuICAgICAgV2Via2l0Qm94U2hhZG93OiAnMCAwIDAgMTAwcHggIzI2Njc5OCBpbnNldCcsXG4gICAgICBXZWJraXRUZXh0RmlsbENvbG9yOiAnI2ZmZicsXG4gICAgICBjYXJldENvbG9yOiAnI2ZmZidcbiAgICB9XG4gIH1cbn0sIG93bmVyU3RhdGUuc2l6ZSA9PT0gJ3NtYWxsJyAmJiB7XG4gIHBhZGRpbmc6ICc4LjVweCAxNHB4J1xufSwgb3duZXJTdGF0ZS5tdWx0aWxpbmUgJiYge1xuICBwYWRkaW5nOiAwXG59LCBvd25lclN0YXRlLnN0YXJ0QWRvcm5tZW50ICYmIHtcbiAgcGFkZGluZ0xlZnQ6IDBcbn0sIG93bmVyU3RhdGUuZW5kQWRvcm5tZW50ICYmIHtcbiAgcGFkZGluZ1JpZ2h0OiAwXG59KSk7XG5jb25zdCBPdXRsaW5lZElucHV0ID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gT3V0bGluZWRJbnB1dChpblByb3BzLCByZWYpIHtcbiAgdmFyIF9SZWFjdCRGcmFnbWVudDtcblxuICBjb25zdCBwcm9wcyA9IHVzZVRoZW1lUHJvcHMoe1xuICAgIHByb3BzOiBpblByb3BzLFxuICAgIG5hbWU6ICdNdWlPdXRsaW5lZElucHV0J1xuICB9KTtcblxuICBjb25zdCB7XG4gICAgY29tcG9uZW50cyA9IHt9LFxuICAgIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICAgIGlucHV0Q29tcG9uZW50ID0gJ2lucHV0JyxcbiAgICBsYWJlbCxcbiAgICBtdWx0aWxpbmUgPSBmYWxzZSxcbiAgICBub3RjaGVkLFxuICAgIHR5cGUgPSAndGV4dCdcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhwcm9wcyk7XG4gIGNvbnN0IG11aUZvcm1Db250cm9sID0gdXNlRm9ybUNvbnRyb2woKTtcbiAgY29uc3QgZmNzID0gZm9ybUNvbnRyb2xTdGF0ZSh7XG4gICAgcHJvcHMsXG4gICAgbXVpRm9ybUNvbnRyb2wsXG4gICAgc3RhdGVzOiBbJ3JlcXVpcmVkJ11cbiAgfSk7XG5cbiAgY29uc3Qgb3duZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGNvbG9yOiBmY3MuY29sb3IgfHwgJ3ByaW1hcnknLFxuICAgIGRpc2FibGVkOiBmY3MuZGlzYWJsZWQsXG4gICAgZXJyb3I6IGZjcy5lcnJvcixcbiAgICBmb2N1c2VkOiBmY3MuZm9jdXNlZCxcbiAgICBmb3JtQ29udHJvbDogbXVpRm9ybUNvbnRyb2wsXG4gICAgZnVsbFdpZHRoLFxuICAgIGhpZGRlbkxhYmVsOiBmY3MuaGlkZGVuTGFiZWwsXG4gICAgbXVsdGlsaW5lLFxuICAgIHNpemU6IGZjcy5zaXplLFxuICAgIHR5cGVcbiAgfSk7XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KElucHV0QmFzZSwgX2V4dGVuZHMoe1xuICAgIGNvbXBvbmVudHM6IF9leHRlbmRzKHtcbiAgICAgIFJvb3Q6IE91dGxpbmVkSW5wdXRSb290LFxuICAgICAgSW5wdXQ6IE91dGxpbmVkSW5wdXRJbnB1dFxuICAgIH0sIGNvbXBvbmVudHMpLFxuICAgIHJlbmRlclN1ZmZpeDogc3RhdGUgPT4gLyojX19QVVJFX18qL19qc3goTm90Y2hlZE91dGxpbmVSb290LCB7XG4gICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc2VzLm5vdGNoZWRPdXRsaW5lLFxuICAgICAgbGFiZWw6IGxhYmVsICE9IG51bGwgJiYgbGFiZWwgIT09ICcnICYmIGZjcy5yZXF1aXJlZCA/IF9SZWFjdCRGcmFnbWVudCB8fCAoX1JlYWN0JEZyYWdtZW50ID0gLyojX19QVVJFX18qL19qc3hzKFJlYWN0LkZyYWdtZW50LCB7XG4gICAgICAgIGNoaWxkcmVuOiBbbGFiZWwsIFwiXFx4QTBcIiwgJyonXVxuICAgICAgfSkpIDogbGFiZWwsXG4gICAgICBub3RjaGVkOiB0eXBlb2Ygbm90Y2hlZCAhPT0gJ3VuZGVmaW5lZCcgPyBub3RjaGVkIDogQm9vbGVhbihzdGF0ZS5zdGFydEFkb3JubWVudCB8fCBzdGF0ZS5maWxsZWQgfHwgc3RhdGUuZm9jdXNlZClcbiAgICB9KSxcbiAgICBmdWxsV2lkdGg6IGZ1bGxXaWR0aCxcbiAgICBpbnB1dENvbXBvbmVudDogaW5wdXRDb21wb25lbnQsXG4gICAgbXVsdGlsaW5lOiBtdWx0aWxpbmUsXG4gICAgcmVmOiByZWYsXG4gICAgdHlwZTogdHlwZVxuICB9LCBvdGhlciwge1xuICAgIGNsYXNzZXM6IF9leHRlbmRzKHt9LCBjbGFzc2VzLCB7XG4gICAgICBub3RjaGVkT3V0bGluZTogbnVsbFxuICAgIH0pXG4gIH0pKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gT3V0bGluZWRJbnB1dC5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogVGhpcyBwcm9wIGhlbHBzIHVzZXJzIHRvIGZpbGwgZm9ybXMgZmFzdGVyLCBlc3BlY2lhbGx5IG9uIG1vYmlsZSBkZXZpY2VzLlxuICAgKiBUaGUgbmFtZSBjYW4gYmUgY29uZnVzaW5nLCBhcyBpdCdzIG1vcmUgbGlrZSBhbiBhdXRvZmlsbC5cbiAgICogWW91IGNhbiBsZWFybiBtb3JlIGFib3V0IGl0IFtmb2xsb3dpbmcgdGhlIHNwZWNpZmljYXRpb25dKGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm0tY29udHJvbC1pbmZyYXN0cnVjdHVyZS5odG1sI2F1dG9maWxsKS5cbiAgICovXG4gIGF1dG9Db21wbGV0ZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgYGlucHV0YCBlbGVtZW50IGlzIGZvY3VzZWQgZHVyaW5nIHRoZSBmaXJzdCBtb3VudC5cbiAgICovXG4gIGF1dG9Gb2N1czogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFRoZSBjb2xvciBvZiB0aGUgY29tcG9uZW50LlxuICAgKiBJdCBzdXBwb3J0cyBib3RoIGRlZmF1bHQgYW5kIGN1c3RvbSB0aGVtZSBjb2xvcnMsIHdoaWNoIGNhbiBiZSBhZGRlZCBhcyBzaG93biBpbiB0aGVcbiAgICogW3BhbGV0dGUgY3VzdG9taXphdGlvbiBndWlkZV0oaHR0cHM6Ly9tdWkuY29tL21hdGVyaWFsLXVpL2N1c3RvbWl6YXRpb24vcGFsZXR0ZS8jYWRkaW5nLW5ldy1jb2xvcnMpLlxuICAgKiBUaGUgcHJvcCBkZWZhdWx0cyB0byB0aGUgdmFsdWUgKGAncHJpbWFyeSdgKSBpbmhlcml0ZWQgZnJvbSB0aGUgcGFyZW50IEZvcm1Db250cm9sIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbG9yOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWydwcmltYXJ5JywgJ3NlY29uZGFyeSddKSwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50cyB1c2VkIGZvciBlYWNoIHNsb3QgaW5zaWRlIHRoZSBJbnB1dEJhc2UuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBjb21wb25lbnRzOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIElucHV0OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgUm9vdDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlXG4gIH0pLFxuXG4gIC8qKlxuICAgKiBUaGUgZGVmYXVsdCB2YWx1ZS4gVXNlIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBub3QgY29udHJvbGxlZC5cbiAgICovXG4gIGRlZmF1bHRWYWx1ZTogUHJvcFR5cGVzLmFueSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkLlxuICAgKiBUaGUgcHJvcCBkZWZhdWx0cyB0byB0aGUgdmFsdWUgKGBmYWxzZWApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgRm9ybUNvbnRyb2wgY29tcG9uZW50LlxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBFbmQgYElucHV0QWRvcm5tZW50YCBmb3IgdGhpcyBjb21wb25lbnQuXG4gICAqL1xuICBlbmRBZG9ybm1lbnQ6IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBgaW5wdXRgIHdpbGwgaW5kaWNhdGUgYW4gZXJyb3IuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYGZhbHNlYCkgaW5oZXJpdGVkIGZyb20gdGhlIHBhcmVudCBGb3JtQ29udHJvbCBjb21wb25lbnQuXG4gICAqL1xuICBlcnJvcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGBpbnB1dGAgd2lsbCB0YWtlIHVwIHRoZSBmdWxsIHdpZHRoIG9mIGl0cyBjb250YWluZXIuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBmdWxsV2lkdGg6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgaWQgb2YgdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlkOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSBgaW5wdXRgIGVsZW1lbnQuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0ICdpbnB1dCdcbiAgICovXG4gIGlucHV0Q29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIFtBdHRyaWJ1dGVzXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVE1ML0VsZW1lbnQvaW5wdXQjQXR0cmlidXRlcykgYXBwbGllZCB0byB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKiBAZGVmYXVsdCB7fVxuICAgKi9cbiAgaW5wdXRQcm9wczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogUGFzcyBhIHJlZiB0byB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKi9cbiAgaW5wdXRSZWY6IHJlZlR5cGUsXG5cbiAgLyoqXG4gICAqIFRoZSBsYWJlbCBvZiB0aGUgYGlucHV0YC4gSXQgaXMgb25seSB1c2VkIGZvciBsYXlvdXQuIFRoZSBhY3R1YWwgbGFiZWxsaW5nXG4gICAqIGlzIGhhbmRsZWQgYnkgYElucHV0TGFiZWxgLlxuICAgKi9cbiAgbGFiZWw6IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBJZiBgZGVuc2VgLCB3aWxsIGFkanVzdCB2ZXJ0aWNhbCBzcGFjaW5nLiBUaGlzIGlzIG5vcm1hbGx5IG9idGFpbmVkIHZpYSBjb250ZXh0IGZyb21cbiAgICogRm9ybUNvbnRyb2wuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYCdub25lJ2ApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgRm9ybUNvbnRyb2wgY29tcG9uZW50LlxuICAgKi9cbiAgbWFyZ2luOiBQcm9wVHlwZXMub25lT2YoWydkZW5zZScsICdub25lJ10pLFxuXG4gIC8qKlxuICAgKiBNYXhpbXVtIG51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgbWF4Um93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBNaW5pbXVtIG51bWJlciBvZiByb3dzIHRvIGRpc3BsYXkgd2hlbiBtdWx0aWxpbmUgb3B0aW9uIGlzIHNldCB0byB0cnVlLlxuICAgKi9cbiAgbWluUm93czogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIGEgW1RleHRhcmVhQXV0b3NpemVdKC9tYXRlcmlhbC11aS9yZWFjdC10ZXh0YXJlYS1hdXRvc2l6ZS8pIGVsZW1lbnQgaXMgcmVuZGVyZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBtdWx0aWxpbmU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBOYW1lIGF0dHJpYnV0ZSBvZiB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKi9cbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgb3V0bGluZSBpcyBub3RjaGVkIHRvIGFjY29tbW9kYXRlIHRoZSBsYWJlbC5cbiAgICovXG4gIG5vdGNoZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSB2YWx1ZSBpcyBjaGFuZ2VkLlxuICAgKlxuICAgKiBAcGFyYW0ge1JlYWN0LkNoYW5nZUV2ZW50PEhUTUxUZXh0QXJlYUVsZW1lbnQgfCBIVE1MSW5wdXRFbGVtZW50Pn0gZXZlbnQgVGhlIGV2ZW50IHNvdXJjZSBvZiB0aGUgY2FsbGJhY2suXG4gICAqIFlvdSBjYW4gcHVsbCBvdXQgdGhlIG5ldyB2YWx1ZSBieSBhY2Nlc3NpbmcgYGV2ZW50LnRhcmdldC52YWx1ZWAgKHN0cmluZykuXG4gICAqL1xuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIFRoZSBzaG9ydCBoaW50IGRpc3BsYXllZCBpbiB0aGUgYGlucHV0YCBiZWZvcmUgdGhlIHVzZXIgZW50ZXJzIGEgdmFsdWUuXG4gICAqL1xuICBwbGFjZWhvbGRlcjogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogSXQgcHJldmVudHMgdGhlIHVzZXIgZnJvbSBjaGFuZ2luZyB0aGUgdmFsdWUgb2YgdGhlIGZpZWxkXG4gICAqIChub3QgZnJvbSBpbnRlcmFjdGluZyB3aXRoIHRoZSBmaWVsZCkuXG4gICAqL1xuICByZWFkT25seTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGBpbnB1dGAgZWxlbWVudCBpcyByZXF1aXJlZC5cbiAgICogVGhlIHByb3AgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIChgZmFsc2VgKSBpbmhlcml0ZWQgZnJvbSB0aGUgcGFyZW50IEZvcm1Db250cm9sIGNvbXBvbmVudC5cbiAgICovXG4gIHJlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogTnVtYmVyIG9mIHJvd3MgdG8gZGlzcGxheSB3aGVuIG11bHRpbGluZSBvcHRpb24gaXMgc2V0IHRvIHRydWUuXG4gICAqL1xuICByb3dzOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG5cbiAgLyoqXG4gICAqIFN0YXJ0IGBJbnB1dEFkb3JubWVudGAgZm9yIHRoaXMgY29tcG9uZW50LlxuICAgKi9cbiAgc3RhcnRBZG9ybm1lbnQ6IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG5cbiAgLyoqXG4gICAqIFR5cGUgb2YgdGhlIGBpbnB1dGAgZWxlbWVudC4gSXQgc2hvdWxkIGJlIFthIHZhbGlkIEhUTUw1IGlucHV0IHR5cGVdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUTUwvRWxlbWVudC9pbnB1dCNGb3JtXyUzQ2lucHV0JTNFX3R5cGVzKS5cbiAgICogQGRlZmF1bHQgJ3RleHQnXG4gICAqL1xuICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgdmFsdWUgb2YgdGhlIGBpbnB1dGAgZWxlbWVudCwgcmVxdWlyZWQgZm9yIGEgY29udHJvbGxlZCBjb21wb25lbnQuXG4gICAqL1xuICB2YWx1ZTogUHJvcFR5cGVzLmFueVxufSA6IHZvaWQgMDtcbk91dGxpbmVkSW5wdXQubXVpTmFtZSA9ICdJbnB1dCc7XG5leHBvcnQgZGVmYXVsdCBPdXRsaW5lZElucHV0OyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5cbnZhciBfU3R5bGVkSW5wdXQsIF9TdHlsZWRGaWxsZWRJbnB1dDtcblxuY29uc3QgX2V4Y2x1ZGVkID0gW1wiYXV0b1dpZHRoXCIsIFwiY2hpbGRyZW5cIiwgXCJjbGFzc2VzXCIsIFwiY2xhc3NOYW1lXCIsIFwiZGVmYXVsdE9wZW5cIiwgXCJkaXNwbGF5RW1wdHlcIiwgXCJJY29uQ29tcG9uZW50XCIsIFwiaWRcIiwgXCJpbnB1dFwiLCBcImlucHV0UHJvcHNcIiwgXCJsYWJlbFwiLCBcImxhYmVsSWRcIiwgXCJNZW51UHJvcHNcIiwgXCJtdWx0aXBsZVwiLCBcIm5hdGl2ZVwiLCBcIm9uQ2xvc2VcIiwgXCJvbk9wZW5cIiwgXCJvcGVuXCIsIFwicmVuZGVyVmFsdWVcIiwgXCJTZWxlY3REaXNwbGF5UHJvcHNcIiwgXCJ2YXJpYW50XCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgU2VsZWN0SW5wdXQgZnJvbSAnLi9TZWxlY3RJbnB1dCc7XG5pbXBvcnQgZm9ybUNvbnRyb2xTdGF0ZSBmcm9tICcuLi9Gb3JtQ29udHJvbC9mb3JtQ29udHJvbFN0YXRlJztcbmltcG9ydCB1c2VGb3JtQ29udHJvbCBmcm9tICcuLi9Gb3JtQ29udHJvbC91c2VGb3JtQ29udHJvbCc7XG5pbXBvcnQgQXJyb3dEcm9wRG93bkljb24gZnJvbSAnLi4vaW50ZXJuYWwvc3ZnLWljb25zL0Fycm93RHJvcERvd24nO1xuaW1wb3J0IElucHV0IGZyb20gJy4uL0lucHV0JztcbmltcG9ydCBOYXRpdmVTZWxlY3RJbnB1dCBmcm9tICcuLi9OYXRpdmVTZWxlY3QvTmF0aXZlU2VsZWN0SW5wdXQnO1xuaW1wb3J0IEZpbGxlZElucHV0IGZyb20gJy4uL0ZpbGxlZElucHV0JztcbmltcG9ydCBPdXRsaW5lZElucHV0IGZyb20gJy4uL091dGxpbmVkSW5wdXQnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IHVzZUZvcmtSZWYgZnJvbSAnLi4vdXRpbHMvdXNlRm9ya1JlZic7XG5pbXBvcnQgc3R5bGVkLCB7IHJvb3RTaG91bGRGb3J3YXJkUHJvcCB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIGNsYXNzZXNcbiAgfSA9IG93bmVyU3RhdGU7XG4gIHJldHVybiBjbGFzc2VzO1xufTtcblxuY29uc3Qgc3R5bGVkUm9vdENvbmZpZyA9IHtcbiAgbmFtZTogJ011aVNlbGVjdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4gc3R5bGVzLnJvb3QsXG4gIHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+IHJvb3RTaG91bGRGb3J3YXJkUHJvcChwcm9wKSAmJiBwcm9wICE9PSAndmFyaWFudCcsXG4gIHNsb3Q6ICdSb290J1xufTtcbmNvbnN0IFN0eWxlZElucHV0ID0gc3R5bGVkKElucHV0LCBzdHlsZWRSb290Q29uZmlnKSgnJyk7XG5jb25zdCBTdHlsZWRPdXRsaW5lZElucHV0ID0gc3R5bGVkKE91dGxpbmVkSW5wdXQsIHN0eWxlZFJvb3RDb25maWcpKCcnKTtcbmNvbnN0IFN0eWxlZEZpbGxlZElucHV0ID0gc3R5bGVkKEZpbGxlZElucHV0LCBzdHlsZWRSb290Q29uZmlnKSgnJyk7XG5jb25zdCBTZWxlY3QgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBTZWxlY3QoaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgbmFtZTogJ011aVNlbGVjdCcsXG4gICAgcHJvcHM6IGluUHJvcHNcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGF1dG9XaWR0aCA9IGZhbHNlLFxuICAgIGNoaWxkcmVuLFxuICAgIGNsYXNzZXM6IGNsYXNzZXNQcm9wID0ge30sXG4gICAgY2xhc3NOYW1lLFxuICAgIGRlZmF1bHRPcGVuID0gZmFsc2UsXG4gICAgZGlzcGxheUVtcHR5ID0gZmFsc2UsXG4gICAgSWNvbkNvbXBvbmVudCA9IEFycm93RHJvcERvd25JY29uLFxuICAgIGlkLFxuICAgIGlucHV0LFxuICAgIGlucHV0UHJvcHMsXG4gICAgbGFiZWwsXG4gICAgbGFiZWxJZCxcbiAgICBNZW51UHJvcHMsXG4gICAgbXVsdGlwbGUgPSBmYWxzZSxcbiAgICBuYXRpdmUgPSBmYWxzZSxcbiAgICBvbkNsb3NlLFxuICAgIG9uT3BlbixcbiAgICBvcGVuLFxuICAgIHJlbmRlclZhbHVlLFxuICAgIFNlbGVjdERpc3BsYXlQcm9wcyxcbiAgICB2YXJpYW50OiB2YXJpYW50UHJvcCA9ICdvdXRsaW5lZCdcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IGlucHV0Q29tcG9uZW50ID0gbmF0aXZlID8gTmF0aXZlU2VsZWN0SW5wdXQgOiBTZWxlY3RJbnB1dDtcbiAgY29uc3QgbXVpRm9ybUNvbnRyb2wgPSB1c2VGb3JtQ29udHJvbCgpO1xuICBjb25zdCBmY3MgPSBmb3JtQ29udHJvbFN0YXRlKHtcbiAgICBwcm9wcyxcbiAgICBtdWlGb3JtQ29udHJvbCxcbiAgICBzdGF0ZXM6IFsndmFyaWFudCddXG4gIH0pO1xuICBjb25zdCB2YXJpYW50ID0gZmNzLnZhcmlhbnQgfHwgdmFyaWFudFByb3A7XG4gIGNvbnN0IElucHV0Q29tcG9uZW50ID0gaW5wdXQgfHwge1xuICAgIHN0YW5kYXJkOiBfU3R5bGVkSW5wdXQgfHwgKF9TdHlsZWRJbnB1dCA9IC8qI19fUFVSRV9fKi9fanN4KFN0eWxlZElucHV0LCB7fSkpLFxuICAgIG91dGxpbmVkOiAvKiNfX1BVUkVfXyovX2pzeChTdHlsZWRPdXRsaW5lZElucHV0LCB7XG4gICAgICBsYWJlbDogbGFiZWxcbiAgICB9KSxcbiAgICBmaWxsZWQ6IF9TdHlsZWRGaWxsZWRJbnB1dCB8fCAoX1N0eWxlZEZpbGxlZElucHV0ID0gLyojX19QVVJFX18qL19qc3goU3R5bGVkRmlsbGVkSW5wdXQsIHt9KSlcbiAgfVt2YXJpYW50XTtcblxuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgdmFyaWFudCxcbiAgICBjbGFzc2VzOiBjbGFzc2VzUHJvcFxuICB9KTtcblxuICBjb25zdCBjbGFzc2VzID0gdXNlVXRpbGl0eUNsYXNzZXMob3duZXJTdGF0ZSk7XG4gIGNvbnN0IGlucHV0Q29tcG9uZW50UmVmID0gdXNlRm9ya1JlZihyZWYsIElucHV0Q29tcG9uZW50LnJlZik7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KElucHV0Q29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgLy8gTW9zdCBvZiB0aGUgbG9naWMgaXMgaW1wbGVtZW50ZWQgaW4gYFNlbGVjdElucHV0YC5cbiAgICAvLyBUaGUgYFNlbGVjdGAgY29tcG9uZW50IGlzIGEgc2ltcGxlIEFQSSB3cmFwcGVyIHRvIGV4cG9zZSBzb21ldGhpbmcgYmV0dGVyIHRvIHBsYXkgd2l0aC5cbiAgICBpbnB1dENvbXBvbmVudCxcbiAgICBpbnB1dFByb3BzOiBfZXh0ZW5kcyh7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIEljb25Db21wb25lbnQsXG4gICAgICB2YXJpYW50LFxuICAgICAgdHlwZTogdW5kZWZpbmVkLFxuICAgICAgLy8gV2UgcmVuZGVyIGEgc2VsZWN0LiBXZSBjYW4gaWdub3JlIHRoZSB0eXBlIHByb3ZpZGVkIGJ5IHRoZSBgSW5wdXRgLlxuICAgICAgbXVsdGlwbGVcbiAgICB9LCBuYXRpdmUgPyB7XG4gICAgICBpZFxuICAgIH0gOiB7XG4gICAgICBhdXRvV2lkdGgsXG4gICAgICBkZWZhdWx0T3BlbixcbiAgICAgIGRpc3BsYXlFbXB0eSxcbiAgICAgIGxhYmVsSWQsXG4gICAgICBNZW51UHJvcHMsXG4gICAgICBvbkNsb3NlLFxuICAgICAgb25PcGVuLFxuICAgICAgb3BlbixcbiAgICAgIHJlbmRlclZhbHVlLFxuICAgICAgU2VsZWN0RGlzcGxheVByb3BzOiBfZXh0ZW5kcyh7XG4gICAgICAgIGlkXG4gICAgICB9LCBTZWxlY3REaXNwbGF5UHJvcHMpXG4gICAgfSwgaW5wdXRQcm9wcywge1xuICAgICAgY2xhc3NlczogaW5wdXRQcm9wcyA/IGRlZXBtZXJnZShjbGFzc2VzLCBpbnB1dFByb3BzLmNsYXNzZXMpIDogY2xhc3Nlc1xuICAgIH0sIGlucHV0ID8gaW5wdXQucHJvcHMuaW5wdXRQcm9wcyA6IHt9KVxuICB9LCBtdWx0aXBsZSAmJiBuYXRpdmUgJiYgdmFyaWFudCA9PT0gJ291dGxpbmVkJyA/IHtcbiAgICBub3RjaGVkOiB0cnVlXG4gIH0gOiB7fSwge1xuICAgIHJlZjogaW5wdXRDb21wb25lbnRSZWYsXG4gICAgY2xhc3NOYW1lOiBjbHN4KElucHV0Q29tcG9uZW50LnByb3BzLmNsYXNzTmFtZSwgY2xhc3NOYW1lKSxcbiAgICB2YXJpYW50XG4gIH0sIG90aGVyKSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFNlbGVjdC5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgd2lkdGggb2YgdGhlIHBvcG92ZXIgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHNldCBhY2NvcmRpbmcgdG8gdGhlIGl0ZW1zIGluc2lkZSB0aGVcbiAgICogbWVudSwgb3RoZXJ3aXNlIGl0IHdpbGwgYmUgYXQgbGVhc3QgdGhlIHdpZHRoIG9mIHRoZSBzZWxlY3QgaW5wdXQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBhdXRvV2lkdGg6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgb3B0aW9uIGVsZW1lbnRzIHRvIHBvcHVsYXRlIHRoZSBzZWxlY3Qgd2l0aC5cbiAgICogQ2FuIGJlIHNvbWUgYE1lbnVJdGVtYCB3aGVuIGBuYXRpdmVgIGlzIGZhbHNlIGFuZCBgb3B0aW9uYCB3aGVuIGBuYXRpdmVgIGlzIHRydWUuXG4gICAqXG4gICAqIOKaoO+4j1RoZSBgTWVudUl0ZW1gIGVsZW1lbnRzICoqbXVzdCoqIGJlIGRpcmVjdCBkZXNjZW5kYW50cyB3aGVuIGBuYXRpdmVgIGlzIGZhbHNlLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCBpcyBpbml0aWFsbHkgb3Blbi4gVXNlIHdoZW4gdGhlIGNvbXBvbmVudCBvcGVuIHN0YXRlIGlzIG5vdCBjb250cm9sbGVkIChpLmUuIHRoZSBgb3BlbmAgcHJvcCBpcyBub3QgZGVmaW5lZCkuXG4gICAqIFlvdSBjYW4gb25seSB1c2UgaXQgd2hlbiB0aGUgYG5hdGl2ZWAgcHJvcCBpcyBgZmFsc2VgIChkZWZhdWx0KS5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRlZmF1bHRPcGVuOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQgdmFsdWUuIFVzZSB3aGVuIHRoZSBjb21wb25lbnQgaXMgbm90IGNvbnRyb2xsZWQuXG4gICAqL1xuICBkZWZhdWx0VmFsdWU6IFByb3BUeXBlcy5hbnksXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgYSB2YWx1ZSBpcyBkaXNwbGF5ZWQgZXZlbiBpZiBubyBpdGVtcyBhcmUgc2VsZWN0ZWQuXG4gICAqXG4gICAqIEluIG9yZGVyIHRvIGRpc3BsYXkgYSBtZWFuaW5nZnVsIHZhbHVlLCBhIGZ1bmN0aW9uIGNhbiBiZSBwYXNzZWQgdG8gdGhlIGByZW5kZXJWYWx1ZWAgcHJvcCB3aGljaFxuICAgKiByZXR1cm5zIHRoZSB2YWx1ZSB0byBiZSBkaXNwbGF5ZWQgd2hlbiBubyBpdGVtcyBhcmUgc2VsZWN0ZWQuXG4gICAqXG4gICAqIOKaoO+4jyBXaGVuIHVzaW5nIHRoaXMgcHJvcCwgbWFrZSBzdXJlIHRoZSBsYWJlbCBkb2Vzbid0IG92ZXJsYXAgd2l0aCB0aGUgZW1wdHkgZGlzcGxheWVkIHZhbHVlLlxuICAgKiBUaGUgbGFiZWwgc2hvdWxkIGVpdGhlciBiZSBoaWRkZW4gb3IgZm9yY2VkIHRvIGEgc2hydW5rIHN0YXRlLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzcGxheUVtcHR5OiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIGljb24gdGhhdCBkaXNwbGF5cyB0aGUgYXJyb3cuXG4gICAqIEBkZWZhdWx0IEFycm93RHJvcERvd25JY29uXG4gICAqL1xuICBJY29uQ29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIFRoZSBgaWRgIG9mIHRoZSB3cmFwcGVyIGVsZW1lbnQgb3IgdGhlIGBzZWxlY3RgIGVsZW1lbnQgd2hlbiBgbmF0aXZlYC5cbiAgICovXG4gIGlkOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBBbiBgSW5wdXRgIGVsZW1lbnQ7IGRvZXMgbm90IGhhdmUgdG8gYmUgYSBtYXRlcmlhbC11aSBzcGVjaWZpYyBgSW5wdXRgLlxuICAgKi9cbiAgaW5wdXQ6IFByb3BUeXBlcy5lbGVtZW50LFxuXG4gIC8qKlxuICAgKiBbQXR0cmlidXRlc10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I0F0dHJpYnV0ZXMpIGFwcGxpZWQgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICogV2hlbiBgbmF0aXZlYCBpcyBgdHJ1ZWAsIHRoZSBhdHRyaWJ1dGVzIGFyZSBhcHBsaWVkIG9uIHRoZSBgc2VsZWN0YCBlbGVtZW50LlxuICAgKi9cbiAgaW5wdXRQcm9wczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogU2VlIFtPdXRsaW5lZElucHV0I2xhYmVsXSgvbWF0ZXJpYWwtdWkvYXBpL291dGxpbmVkLWlucHV0LyNwcm9wcylcbiAgICovXG4gIGxhYmVsOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogVGhlIElEIG9mIGFuIGVsZW1lbnQgdGhhdCBhY3RzIGFzIGFuIGFkZGl0aW9uYWwgbGFiZWwuIFRoZSBTZWxlY3Qgd2lsbFxuICAgKiBiZSBsYWJlbGxlZCBieSB0aGUgYWRkaXRpb25hbCBsYWJlbCBhbmQgdGhlIHNlbGVjdGVkIHZhbHVlLlxuICAgKi9cbiAgbGFiZWxJZDogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogUHJvcHMgYXBwbGllZCB0byB0aGUgW2BNZW51YF0oL21hdGVyaWFsLXVpL2FwaS9tZW51LykgZWxlbWVudC5cbiAgICovXG4gIE1lbnVQcm9wczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCBgdmFsdWVgIG11c3QgYmUgYW4gYXJyYXkgYW5kIHRoZSBtZW51IHdpbGwgc3VwcG9ydCBtdWx0aXBsZSBzZWxlY3Rpb25zLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgbXVsdGlwbGU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgdXNlcyBhIG5hdGl2ZSBgc2VsZWN0YCBlbGVtZW50LlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgbmF0aXZlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiBhIG1lbnUgaXRlbSBpcyBzZWxlY3RlZC5cbiAgICpcbiAgICogQHBhcmFtIHtTZWxlY3RDaGFuZ2VFdmVudDxUPn0gZXZlbnQgVGhlIGV2ZW50IHNvdXJjZSBvZiB0aGUgY2FsbGJhY2suXG4gICAqIFlvdSBjYW4gcHVsbCBvdXQgdGhlIG5ldyB2YWx1ZSBieSBhY2Nlc3NpbmcgYGV2ZW50LnRhcmdldC52YWx1ZWAgKGFueSkuXG4gICAqICoqV2FybmluZyoqOiBUaGlzIGlzIGEgZ2VuZXJpYyBldmVudCBub3QgYSBjaGFuZ2UgZXZlbnQgdW5sZXNzIHRoZSBjaGFuZ2UgZXZlbnQgaXMgY2F1c2VkIGJ5IGJyb3dzZXIgYXV0b2ZpbGwuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbY2hpbGRdIFRoZSByZWFjdCBlbGVtZW50IHRoYXQgd2FzIHNlbGVjdGVkIHdoZW4gYG5hdGl2ZWAgaXMgYGZhbHNlYCAoZGVmYXVsdCkuXG4gICAqL1xuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIGNvbXBvbmVudCByZXF1ZXN0cyB0byBiZSBjbG9zZWQuXG4gICAqIFVzZSBpbiBjb250cm9sbGVkIG1vZGUgKHNlZSBvcGVuKS5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKi9cbiAgb25DbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIGNvbXBvbmVudCByZXF1ZXN0cyB0byBiZSBvcGVuZWQuXG4gICAqIFVzZSBpbiBjb250cm9sbGVkIG1vZGUgKHNlZSBvcGVuKS5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKi9cbiAgb25PcGVuOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IGlzIHNob3duLlxuICAgKiBZb3UgY2FuIG9ubHkgdXNlIGl0IHdoZW4gdGhlIGBuYXRpdmVgIHByb3AgaXMgYGZhbHNlYCAoZGVmYXVsdCkuXG4gICAqL1xuICBvcGVuOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogUmVuZGVyIHRoZSBzZWxlY3RlZCB2YWx1ZS5cbiAgICogWW91IGNhbiBvbmx5IHVzZSBpdCB3aGVuIHRoZSBgbmF0aXZlYCBwcm9wIGlzIGBmYWxzZWAgKGRlZmF1bHQpLlxuICAgKlxuICAgKiBAcGFyYW0ge2FueX0gdmFsdWUgVGhlIGB2YWx1ZWAgcHJvdmlkZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICogQHJldHVybnMge1JlYWN0Tm9kZX1cbiAgICovXG4gIHJlbmRlclZhbHVlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogUHJvcHMgYXBwbGllZCB0byB0aGUgY2xpY2thYmxlIGRpdiBlbGVtZW50LlxuICAgKi9cbiAgU2VsZWN0RGlzcGxheVByb3BzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG5cbiAgLyoqXG4gICAqIFRoZSBgaW5wdXRgIHZhbHVlLiBQcm92aWRpbmcgYW4gZW1wdHkgc3RyaW5nIHdpbGwgc2VsZWN0IG5vIG9wdGlvbnMuXG4gICAqIFNldCB0byBhbiBlbXB0eSBzdHJpbmcgYCcnYCBpZiB5b3UgZG9uJ3Qgd2FudCBhbnkgb2YgdGhlIGF2YWlsYWJsZSBvcHRpb25zIHRvIGJlIHNlbGVjdGVkLlxuICAgKlxuICAgKiBJZiB0aGUgdmFsdWUgaXMgYW4gb2JqZWN0IGl0IG11c3QgaGF2ZSByZWZlcmVuY2UgZXF1YWxpdHkgd2l0aCB0aGUgb3B0aW9uIGluIG9yZGVyIHRvIGJlIHNlbGVjdGVkLlxuICAgKiBJZiB0aGUgdmFsdWUgaXMgbm90IGFuIG9iamVjdCwgdGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBtdXN0IG1hdGNoIHdpdGggdGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgb3B0aW9uIGluIG9yZGVyIHRvIGJlIHNlbGVjdGVkLlxuICAgKi9cbiAgdmFsdWU6IFByb3BUeXBlcy5hbnksXG5cbiAgLyoqXG4gICAqIFRoZSB2YXJpYW50IHRvIHVzZS5cbiAgICogQGRlZmF1bHQgJ291dGxpbmVkJ1xuICAgKi9cbiAgdmFyaWFudDogUHJvcFR5cGVzLm9uZU9mKFsnZmlsbGVkJywgJ291dGxpbmVkJywgJ3N0YW5kYXJkJ10pXG59IDogdm9pZCAwO1xuU2VsZWN0Lm11aU5hbWUgPSAnU2VsZWN0JztcbmV4cG9ydCBkZWZhdWx0IFNlbGVjdDsiLCJpbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheVwiO1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBCdXR0b24gZnJvbSAnQG11aS9tYXRlcmlhbC9CdXR0b24nO1xuaW1wb3J0IEZvcm1Db250cm9sIGZyb20gJ0BtdWkvbWF0ZXJpYWwvRm9ybUNvbnRyb2wnO1xuaW1wb3J0IElucHV0TGFiZWwgZnJvbSAnQG11aS9tYXRlcmlhbC9JbnB1dExhYmVsJztcbmltcG9ydCBNZW51SXRlbSBmcm9tICdAbXVpL21hdGVyaWFsL01lbnVJdGVtJztcbmltcG9ydCBTZWxlY3QgZnJvbSAnQG11aS9tYXRlcmlhbC9TZWxlY3QnO1xuaW1wb3J0ICcuL0hlYWRlci5zY3NzJztcbmV4cG9ydCBmdW5jdGlvbiBIZWFkZXIocHJvcHMpIHtcbiAgdmFyIG9mZmljZUxpc3QgPSBwcm9wcy5vZmZpY2VMaXN0LFxuICAgICAgY3VycmVudE9mZmljZUlkID0gcHJvcHMuY3VycmVudE9mZmljZUlkLFxuICAgICAgcmlnaHRzID0gcHJvcHMucmlnaHRzO1xuXG4gIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZSgnJyksXG4gICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSxcbiAgICAgIGN1cnJlbnRPZmZpY2UgPSBfdXNlU3RhdGUyWzBdLFxuICAgICAgc2V0Q3VycmVudE9mZmljZSA9IF91c2VTdGF0ZTJbMV07XG5cbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY3VycmVudE9mZmljZSkge1xuICAgICAgc2V0Q3VycmVudE9mZmljZShvZmZpY2VMaXN0LmZpbmQoZnVuY3Rpb24gKG9mZmljZSkge1xuICAgICAgICByZXR1cm4gb2ZmaWNlLmlkID09PSBjdXJyZW50T2ZmaWNlSWQ7XG4gICAgICB9KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldEN1cnJlbnRPZmZpY2UoJycpO1xuICAgIH1cbiAgfSwgW2N1cnJlbnRPZmZpY2VJZF0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJoZWFkZXJcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImltZ1wiLCB7XG4gICAgY2xhc3NOYW1lOiBcImhlYWRlcl9fbG9nb1wiLFxuICAgIHNyYzogXCJodHRwczovL2NybS5jZW50cmFsbm9lLnJ1L2RlYWxpbmNvbS9hc3NldHMvbG9nb19jYW4uanBnXCIsXG4gICAgYWx0OiBcImxvZ29cIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJoZWFkZXJfX2ZpbHRlclwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEZvcm1Db250cm9sLCB7XG4gICAgc2l6ZTogXCJzbWFsbFwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TGFiZWwsIHtcbiAgICBpZDogXCJkZW1vLXNpbXBsZS1zZWxlY3QtbGFiZWxcIlxuICB9LCBcIlxcdTA0MUVcXHUwNDQ0XFx1MDQzOFxcdTA0NDFcIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdCwge1xuICAgIGxhYmVsSWQ6IFwiZGVtby1zaW1wbGUtc2VsZWN0LWxhYmVsXCIsXG4gICAgaWQ6IFwiZGVtby1zaW1wbGUtc2VsZWN0XCIsXG4gICAgdmFsdWU6IGN1cnJlbnRPZmZpY2UsXG4gICAgbGFiZWw6IFwiXFx1MDQxRVxcdTA0NDRcXHUwNDM4XFx1MDQ0MVwiLFxuICAgIG5hbWU6ICdvZmZpY2UnLFxuICAgIHNpemU6IFwic21hbGxcIixcbiAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UoZXZlbnQpIHtcbiAgICAgIHNldEN1cnJlbnRPZmZpY2UoZXZlbnQudGFyZ2V0LnZhbHVlKTtcbiAgICB9LFxuICAgIGRpc2FibGVkOiByaWdodHMgIT09ICdjaGllZidcbiAgfSwgb2ZmaWNlTGlzdC5tYXAoZnVuY3Rpb24gKG9mZmljZSkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwge1xuICAgICAga2V5OiBvZmZpY2UuaWQsXG4gICAgICB2YWx1ZTogb2ZmaWNlXG4gICAgfSwgb2ZmaWNlLm5hbWUpO1xuICB9KSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtcbiAgICB2YXJpYW50OiBcImNvbnRhaW5lZFwiXG4gIH0sIFwiXFx1MDQyMVxcdTA0NDRcXHUwNDNFXFx1MDQ0MFxcdTA0M0NcXHUwNDM4XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0NDJcXHUwNDRDXCIpKSk7XG59IiwiZXhwb3J0ICogZnJvbSAnLi9IZWFkZXInOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSIsInZhciBfcGF0aDtcblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG52YXIgU3ZnQXJyb3cgPSBmdW5jdGlvbiBTdmdBcnJvdyhwcm9wcykge1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX2V4dGVuZHMoe1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgdmlld0JveDogXCIwIDAgMTYgMTZcIixcbiAgICBmaWxsOiBcIiMyMTI1MjlcIlxuICB9LCBwcm9wcyksIF9wYXRoIHx8IChfcGF0aCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZmlsbFJ1bGU6IFwiZXZlbm9kZFwiLFxuICAgIGQ6IFwiTTEuNjQ2IDQuNjQ2YS41LjUgMCAwIDEgLjcwOCAwTDggMTAuMjkzbDUuNjQ2LTUuNjQ3YS41LjUgMCAwIDEgLjcwOC43MDhsLTYgNmEuNS41IDAgMCAxLS43MDggMGwtNi02YS41LjUgMCAwIDEgMC0uNzA4elwiXG4gIH0pKSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdmdBcnJvdzsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRXaW5kb3cobm9kZSkge1xuICBpZiAobm9kZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHdpbmRvdztcbiAgfVxuXG4gIGlmIChub2RlLnRvU3RyaW5nKCkgIT09ICdbb2JqZWN0IFdpbmRvd10nKSB7XG4gICAgdmFyIG93bmVyRG9jdW1lbnQgPSBub2RlLm93bmVyRG9jdW1lbnQ7XG4gICAgcmV0dXJuIG93bmVyRG9jdW1lbnQgPyBvd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IHx8IHdpbmRvdyA6IHdpbmRvdztcbiAgfVxuXG4gIHJldHVybiBub2RlO1xufSIsImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5cbmZ1bmN0aW9uIGlzRWxlbWVudChub2RlKSB7XG4gIHZhciBPd25FbGVtZW50ID0gZ2V0V2luZG93KG5vZGUpLkVsZW1lbnQ7XG4gIHJldHVybiBub2RlIGluc3RhbmNlb2YgT3duRWxlbWVudCB8fCBub2RlIGluc3RhbmNlb2YgRWxlbWVudDtcbn1cblxuZnVuY3Rpb24gaXNIVE1MRWxlbWVudChub2RlKSB7XG4gIHZhciBPd25FbGVtZW50ID0gZ2V0V2luZG93KG5vZGUpLkhUTUxFbGVtZW50O1xuICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE93bkVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50O1xufVxuXG5mdW5jdGlvbiBpc1NoYWRvd1Jvb3Qobm9kZSkge1xuICAvLyBJRSAxMSBoYXMgbm8gU2hhZG93Um9vdFxuICBpZiAodHlwZW9mIFNoYWRvd1Jvb3QgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIE93bkVsZW1lbnQgPSBnZXRXaW5kb3cobm9kZSkuU2hhZG93Um9vdDtcbiAgcmV0dXJuIG5vZGUgaW5zdGFuY2VvZiBPd25FbGVtZW50IHx8IG5vZGUgaW5zdGFuY2VvZiBTaGFkb3dSb290O1xufVxuXG5leHBvcnQgeyBpc0VsZW1lbnQsIGlzSFRNTEVsZW1lbnQsIGlzU2hhZG93Um9vdCB9OyIsImV4cG9ydCB2YXIgbWF4ID0gTWF0aC5tYXg7XG5leHBvcnQgdmFyIG1pbiA9IE1hdGgubWluO1xuZXhwb3J0IHZhciByb3VuZCA9IE1hdGgucm91bmQ7IiwiaW1wb3J0IHsgaXNIVE1MRWxlbWVudCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCB7IHJvdW5kIH0gZnJvbSBcIi4uL3V0aWxzL21hdGguanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCBpbmNsdWRlU2NhbGUpIHtcbiAgaWYgKGluY2x1ZGVTY2FsZSA9PT0gdm9pZCAwKSB7XG4gICAgaW5jbHVkZVNjYWxlID0gZmFsc2U7XG4gIH1cblxuICB2YXIgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciBzY2FsZVggPSAxO1xuICB2YXIgc2NhbGVZID0gMTtcblxuICBpZiAoaXNIVE1MRWxlbWVudChlbGVtZW50KSAmJiBpbmNsdWRlU2NhbGUpIHtcbiAgICB2YXIgb2Zmc2V0SGVpZ2h0ID0gZWxlbWVudC5vZmZzZXRIZWlnaHQ7XG4gICAgdmFyIG9mZnNldFdpZHRoID0gZWxlbWVudC5vZmZzZXRXaWR0aDsgLy8gRG8gbm90IGF0dGVtcHQgdG8gZGl2aWRlIGJ5IDAsIG90aGVyd2lzZSB3ZSBnZXQgYEluZmluaXR5YCBhcyBzY2FsZVxuICAgIC8vIEZhbGxiYWNrIHRvIDEgaW4gY2FzZSBib3RoIHZhbHVlcyBhcmUgYDBgXG5cbiAgICBpZiAob2Zmc2V0V2lkdGggPiAwKSB7XG4gICAgICBzY2FsZVggPSByb3VuZChyZWN0LndpZHRoKSAvIG9mZnNldFdpZHRoIHx8IDE7XG4gICAgfVxuXG4gICAgaWYgKG9mZnNldEhlaWdodCA+IDApIHtcbiAgICAgIHNjYWxlWSA9IHJvdW5kKHJlY3QuaGVpZ2h0KSAvIG9mZnNldEhlaWdodCB8fCAxO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgd2lkdGg6IHJlY3Qud2lkdGggLyBzY2FsZVgsXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodCAvIHNjYWxlWSxcbiAgICB0b3A6IHJlY3QudG9wIC8gc2NhbGVZLFxuICAgIHJpZ2h0OiByZWN0LnJpZ2h0IC8gc2NhbGVYLFxuICAgIGJvdHRvbTogcmVjdC5ib3R0b20gLyBzY2FsZVksXG4gICAgbGVmdDogcmVjdC5sZWZ0IC8gc2NhbGVYLFxuICAgIHg6IHJlY3QubGVmdCAvIHNjYWxlWCxcbiAgICB5OiByZWN0LnRvcCAvIHNjYWxlWVxuICB9O1xufSIsImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRXaW5kb3dTY3JvbGwobm9kZSkge1xuICB2YXIgd2luID0gZ2V0V2luZG93KG5vZGUpO1xuICB2YXIgc2Nyb2xsTGVmdCA9IHdpbi5wYWdlWE9mZnNldDtcbiAgdmFyIHNjcm9sbFRvcCA9IHdpbi5wYWdlWU9mZnNldDtcbiAgcmV0dXJuIHtcbiAgICBzY3JvbGxMZWZ0OiBzY3JvbGxMZWZ0LFxuICAgIHNjcm9sbFRvcDogc2Nyb2xsVG9wXG4gIH07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0SFRNTEVsZW1lbnRTY3JvbGwoZWxlbWVudCkge1xuICByZXR1cm4ge1xuICAgIHNjcm9sbExlZnQ6IGVsZW1lbnQuc2Nyb2xsTGVmdCxcbiAgICBzY3JvbGxUb3A6IGVsZW1lbnQuc2Nyb2xsVG9wXG4gIH07XG59IiwiaW1wb3J0IGdldFdpbmRvd1Njcm9sbCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGwuanNcIjtcbmltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IGdldEhUTUxFbGVtZW50U2Nyb2xsIGZyb20gXCIuL2dldEhUTUxFbGVtZW50U2Nyb2xsLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXROb2RlU2Nyb2xsKG5vZGUpIHtcbiAgaWYgKG5vZGUgPT09IGdldFdpbmRvdyhub2RlKSB8fCAhaXNIVE1MRWxlbWVudChub2RlKSkge1xuICAgIHJldHVybiBnZXRXaW5kb3dTY3JvbGwobm9kZSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGdldEhUTUxFbGVtZW50U2Nyb2xsKG5vZGUpO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Tm9kZU5hbWUoZWxlbWVudCkge1xuICByZXR1cm4gZWxlbWVudCA/IChlbGVtZW50Lm5vZGVOYW1lIHx8ICcnKS50b0xvd2VyQ2FzZSgpIDogbnVsbDtcbn0iLCJpbXBvcnQgeyBpc0VsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkge1xuICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBhc3N1bWUgYm9keSBpcyBhbHdheXMgYXZhaWxhYmxlXG4gIHJldHVybiAoKGlzRWxlbWVudChlbGVtZW50KSA/IGVsZW1lbnQub3duZXJEb2N1bWVudCA6IC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuICBlbGVtZW50LmRvY3VtZW50KSB8fCB3aW5kb3cuZG9jdW1lbnQpLmRvY3VtZW50RWxlbWVudDtcbn0iLCJpbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRXaW5kb3dTY3JvbGwgZnJvbSBcIi4vZ2V0V2luZG93U2Nyb2xsLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRXaW5kb3dTY3JvbGxCYXJYKGVsZW1lbnQpIHtcbiAgLy8gSWYgPGh0bWw+IGhhcyBhIENTUyB3aWR0aCBncmVhdGVyIHRoYW4gdGhlIHZpZXdwb3J0LCB0aGVuIHRoaXMgd2lsbCBiZVxuICAvLyBpbmNvcnJlY3QgZm9yIFJUTC5cbiAgLy8gUG9wcGVyIDEgaXMgYnJva2VuIGluIHRoaXMgY2FzZSBhbmQgbmV2ZXIgaGFkIGEgYnVnIHJlcG9ydCBzbyBsZXQncyBhc3N1bWVcbiAgLy8gaXQncyBub3QgYW4gaXNzdWUuIEkgZG9uJ3QgdGhpbmsgYW55b25lIGV2ZXIgc3BlY2lmaWVzIHdpZHRoIG9uIDxodG1sPlxuICAvLyBhbnl3YXkuXG4gIC8vIEJyb3dzZXJzIHdoZXJlIHRoZSBsZWZ0IHNjcm9sbGJhciBkb2Vzbid0IGNhdXNlIGFuIGlzc3VlIHJlcG9ydCBgMGAgZm9yXG4gIC8vIHRoaXMgKGUuZy4gRWRnZSAyMDE5LCBJRTExLCBTYWZhcmkpXG4gIHJldHVybiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpKS5sZWZ0ICsgZ2V0V2luZG93U2Nyb2xsKGVsZW1lbnQpLnNjcm9sbExlZnQ7XG59IiwiaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi9nZXRXaW5kb3cuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkge1xuICByZXR1cm4gZ2V0V2luZG93KGVsZW1lbnQpLmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG59IiwiaW1wb3J0IGdldENvbXB1dGVkU3R5bGUgZnJvbSBcIi4vZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNTY3JvbGxQYXJlbnQoZWxlbWVudCkge1xuICAvLyBGaXJlZm94IHdhbnRzIHVzIHRvIGNoZWNrIGAteGAgYW5kIGAteWAgdmFyaWF0aW9ucyBhcyB3ZWxsXG4gIHZhciBfZ2V0Q29tcHV0ZWRTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCksXG4gICAgICBvdmVyZmxvdyA9IF9nZXRDb21wdXRlZFN0eWxlLm92ZXJmbG93LFxuICAgICAgb3ZlcmZsb3dYID0gX2dldENvbXB1dGVkU3R5bGUub3ZlcmZsb3dYLFxuICAgICAgb3ZlcmZsb3dZID0gX2dldENvbXB1dGVkU3R5bGUub3ZlcmZsb3dZO1xuXG4gIHJldHVybiAvYXV0b3xzY3JvbGx8b3ZlcmxheXxoaWRkZW4vLnRlc3Qob3ZlcmZsb3cgKyBvdmVyZmxvd1kgKyBvdmVyZmxvd1gpO1xufSIsImltcG9ydCBnZXRCb3VuZGluZ0NsaWVudFJlY3QgZnJvbSBcIi4vZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZVNjcm9sbCBmcm9tIFwiLi9nZXROb2RlU2Nyb2xsLmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsQmFyWCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGxCYXJYLmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGlzU2Nyb2xsUGFyZW50IGZyb20gXCIuL2lzU2Nyb2xsUGFyZW50LmpzXCI7XG5pbXBvcnQgeyByb3VuZCB9IGZyb20gXCIuLi91dGlscy9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIGlzRWxlbWVudFNjYWxlZChlbGVtZW50KSB7XG4gIHZhciByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgdmFyIHNjYWxlWCA9IHJvdW5kKHJlY3Qud2lkdGgpIC8gZWxlbWVudC5vZmZzZXRXaWR0aCB8fCAxO1xuICB2YXIgc2NhbGVZID0gcm91bmQocmVjdC5oZWlnaHQpIC8gZWxlbWVudC5vZmZzZXRIZWlnaHQgfHwgMTtcbiAgcmV0dXJuIHNjYWxlWCAhPT0gMSB8fCBzY2FsZVkgIT09IDE7XG59IC8vIFJldHVybnMgdGhlIGNvbXBvc2l0ZSByZWN0IG9mIGFuIGVsZW1lbnQgcmVsYXRpdmUgdG8gaXRzIG9mZnNldFBhcmVudC5cbi8vIENvbXBvc2l0ZSBtZWFucyBpdCB0YWtlcyBpbnRvIGFjY291bnQgdHJhbnNmb3JtcyBhcyB3ZWxsIGFzIGxheW91dC5cblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRDb21wb3NpdGVSZWN0KGVsZW1lbnRPclZpcnR1YWxFbGVtZW50LCBvZmZzZXRQYXJlbnQsIGlzRml4ZWQpIHtcbiAgaWYgKGlzRml4ZWQgPT09IHZvaWQgMCkge1xuICAgIGlzRml4ZWQgPSBmYWxzZTtcbiAgfVxuXG4gIHZhciBpc09mZnNldFBhcmVudEFuRWxlbWVudCA9IGlzSFRNTEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgdmFyIG9mZnNldFBhcmVudElzU2NhbGVkID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpICYmIGlzRWxlbWVudFNjYWxlZChvZmZzZXRQYXJlbnQpO1xuICB2YXIgZG9jdW1lbnRFbGVtZW50ID0gZ2V0RG9jdW1lbnRFbGVtZW50KG9mZnNldFBhcmVudCk7XG4gIHZhciByZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnRPclZpcnR1YWxFbGVtZW50LCBvZmZzZXRQYXJlbnRJc1NjYWxlZCk7XG4gIHZhciBzY3JvbGwgPSB7XG4gICAgc2Nyb2xsTGVmdDogMCxcbiAgICBzY3JvbGxUb3A6IDBcbiAgfTtcbiAgdmFyIG9mZnNldHMgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG5cbiAgaWYgKGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50IHx8ICFpc09mZnNldFBhcmVudEFuRWxlbWVudCAmJiAhaXNGaXhlZCkge1xuICAgIGlmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpICE9PSAnYm9keScgfHwgLy8gaHR0cHM6Ly9naXRodWIuY29tL3BvcHBlcmpzL3BvcHBlci1jb3JlL2lzc3Vlcy8xMDc4XG4gICAgaXNTY3JvbGxQYXJlbnQoZG9jdW1lbnRFbGVtZW50KSkge1xuICAgICAgc2Nyb2xsID0gZ2V0Tm9kZVNjcm9sbChvZmZzZXRQYXJlbnQpO1xuICAgIH1cblxuICAgIGlmIChpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgIG9mZnNldHMgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50LCB0cnVlKTtcbiAgICAgIG9mZnNldHMueCArPSBvZmZzZXRQYXJlbnQuY2xpZW50TGVmdDtcbiAgICAgIG9mZnNldHMueSArPSBvZmZzZXRQYXJlbnQuY2xpZW50VG9wO1xuICAgIH0gZWxzZSBpZiAoZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgICBvZmZzZXRzLnggPSBnZXRXaW5kb3dTY3JvbGxCYXJYKGRvY3VtZW50RWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB4OiByZWN0LmxlZnQgKyBzY3JvbGwuc2Nyb2xsTGVmdCAtIG9mZnNldHMueCxcbiAgICB5OiByZWN0LnRvcCArIHNjcm9sbC5zY3JvbGxUb3AgLSBvZmZzZXRzLnksXG4gICAgd2lkdGg6IHJlY3Qud2lkdGgsXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodFxuICB9O1xufSIsImltcG9ydCBnZXRCb3VuZGluZ0NsaWVudFJlY3QgZnJvbSBcIi4vZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzXCI7IC8vIFJldHVybnMgdGhlIGxheW91dCByZWN0IG9mIGFuIGVsZW1lbnQgcmVsYXRpdmUgdG8gaXRzIG9mZnNldFBhcmVudC4gTGF5b3V0XG4vLyBtZWFucyBpdCBkb2Vzbid0IHRha2UgaW50byBhY2NvdW50IHRyYW5zZm9ybXMuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldExheW91dFJlY3QoZWxlbWVudCkge1xuICB2YXIgY2xpZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50KTsgLy8gVXNlIHRoZSBjbGllbnRSZWN0IHNpemVzIGlmIGl0J3Mgbm90IGJlZW4gdHJhbnNmb3JtZWQuXG4gIC8vIEZpeGVzIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3BwZXJqcy9wb3BwZXItY29yZS9pc3N1ZXMvMTIyM1xuXG4gIHZhciB3aWR0aCA9IGVsZW1lbnQub2Zmc2V0V2lkdGg7XG4gIHZhciBoZWlnaHQgPSBlbGVtZW50Lm9mZnNldEhlaWdodDtcblxuICBpZiAoTWF0aC5hYnMoY2xpZW50UmVjdC53aWR0aCAtIHdpZHRoKSA8PSAxKSB7XG4gICAgd2lkdGggPSBjbGllbnRSZWN0LndpZHRoO1xuICB9XG5cbiAgaWYgKE1hdGguYWJzKGNsaWVudFJlY3QuaGVpZ2h0IC0gaGVpZ2h0KSA8PSAxKSB7XG4gICAgaGVpZ2h0ID0gY2xpZW50UmVjdC5oZWlnaHQ7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHg6IGVsZW1lbnQub2Zmc2V0TGVmdCxcbiAgICB5OiBlbGVtZW50Lm9mZnNldFRvcCxcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHRcbiAgfTtcbn0iLCJpbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgeyBpc1NoYWRvd1Jvb3QgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRQYXJlbnROb2RlKGVsZW1lbnQpIHtcbiAgaWYgKGdldE5vZGVOYW1lKGVsZW1lbnQpID09PSAnaHRtbCcpIHtcbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfVxuXG4gIHJldHVybiAoLy8gdGhpcyBpcyBhIHF1aWNrZXIgKGJ1dCBsZXNzIHR5cGUgc2FmZSkgd2F5IHRvIHNhdmUgcXVpdGUgc29tZSBieXRlcyBmcm9tIHRoZSBidW5kbGVcbiAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dXG4gICAgLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddXG4gICAgZWxlbWVudC5hc3NpZ25lZFNsb3QgfHwgLy8gc3RlcCBpbnRvIHRoZSBzaGFkb3cgRE9NIG9mIHRoZSBwYXJlbnQgb2YgYSBzbG90dGVkIG5vZGVcbiAgICBlbGVtZW50LnBhcmVudE5vZGUgfHwgKCAvLyBET00gRWxlbWVudCBkZXRlY3RlZFxuICAgIGlzU2hhZG93Um9vdChlbGVtZW50KSA/IGVsZW1lbnQuaG9zdCA6IG51bGwpIHx8IC8vIFNoYWRvd1Jvb3QgZGV0ZWN0ZWRcbiAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1jYWxsXTogSFRNTEVsZW1lbnQgaXMgYSBOb2RlXG4gICAgZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpIC8vIGZhbGxiYWNrXG5cbiAgKTtcbn0iLCJpbXBvcnQgZ2V0UGFyZW50Tm9kZSBmcm9tIFwiLi9nZXRQYXJlbnROb2RlLmpzXCI7XG5pbXBvcnQgaXNTY3JvbGxQYXJlbnQgZnJvbSBcIi4vaXNTY3JvbGxQYXJlbnQuanNcIjtcbmltcG9ydCBnZXROb2RlTmFtZSBmcm9tIFwiLi9nZXROb2RlTmFtZS5qc1wiO1xuaW1wb3J0IHsgaXNIVE1MRWxlbWVudCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFNjcm9sbFBhcmVudChub2RlKSB7XG4gIGlmIChbJ2h0bWwnLCAnYm9keScsICcjZG9jdW1lbnQnXS5pbmRleE9mKGdldE5vZGVOYW1lKG5vZGUpKSA+PSAwKSB7XG4gICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtcmV0dXJuXTogYXNzdW1lIGJvZHkgaXMgYWx3YXlzIGF2YWlsYWJsZVxuICAgIHJldHVybiBub2RlLm93bmVyRG9jdW1lbnQuYm9keTtcbiAgfVxuXG4gIGlmIChpc0hUTUxFbGVtZW50KG5vZGUpICYmIGlzU2Nyb2xsUGFyZW50KG5vZGUpKSB7XG4gICAgcmV0dXJuIG5vZGU7XG4gIH1cblxuICByZXR1cm4gZ2V0U2Nyb2xsUGFyZW50KGdldFBhcmVudE5vZGUobm9kZSkpO1xufSIsImltcG9ydCBnZXRTY3JvbGxQYXJlbnQgZnJvbSBcIi4vZ2V0U2Nyb2xsUGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0UGFyZW50Tm9kZSBmcm9tIFwiLi9nZXRQYXJlbnROb2RlLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuaW1wb3J0IGlzU2Nyb2xsUGFyZW50IGZyb20gXCIuL2lzU2Nyb2xsUGFyZW50LmpzXCI7XG4vKlxuZ2l2ZW4gYSBET00gZWxlbWVudCwgcmV0dXJuIHRoZSBsaXN0IG9mIGFsbCBzY3JvbGwgcGFyZW50cywgdXAgdGhlIGxpc3Qgb2YgYW5jZXNvcnNcbnVudGlsIHdlIGdldCB0byB0aGUgdG9wIHdpbmRvdyBvYmplY3QuIFRoaXMgbGlzdCBpcyB3aGF0IHdlIGF0dGFjaCBzY3JvbGwgbGlzdGVuZXJzXG50bywgYmVjYXVzZSBpZiBhbnkgb2YgdGhlc2UgcGFyZW50IGVsZW1lbnRzIHNjcm9sbCwgd2UnbGwgbmVlZCB0byByZS1jYWxjdWxhdGUgdGhlXG5yZWZlcmVuY2UgZWxlbWVudCdzIHBvc2l0aW9uLlxuKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbGlzdFNjcm9sbFBhcmVudHMoZWxlbWVudCwgbGlzdCkge1xuICB2YXIgX2VsZW1lbnQkb3duZXJEb2N1bWVuO1xuXG4gIGlmIChsaXN0ID09PSB2b2lkIDApIHtcbiAgICBsaXN0ID0gW107XG4gIH1cblxuICB2YXIgc2Nyb2xsUGFyZW50ID0gZ2V0U2Nyb2xsUGFyZW50KGVsZW1lbnQpO1xuICB2YXIgaXNCb2R5ID0gc2Nyb2xsUGFyZW50ID09PSAoKF9lbGVtZW50JG93bmVyRG9jdW1lbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lbGVtZW50JG93bmVyRG9jdW1lbi5ib2R5KTtcbiAgdmFyIHdpbiA9IGdldFdpbmRvdyhzY3JvbGxQYXJlbnQpO1xuICB2YXIgdGFyZ2V0ID0gaXNCb2R5ID8gW3dpbl0uY29uY2F0KHdpbi52aXN1YWxWaWV3cG9ydCB8fCBbXSwgaXNTY3JvbGxQYXJlbnQoc2Nyb2xsUGFyZW50KSA/IHNjcm9sbFBhcmVudCA6IFtdKSA6IHNjcm9sbFBhcmVudDtcbiAgdmFyIHVwZGF0ZWRMaXN0ID0gbGlzdC5jb25jYXQodGFyZ2V0KTtcbiAgcmV0dXJuIGlzQm9keSA/IHVwZGF0ZWRMaXN0IDogLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtY2FsbF06IGlzQm9keSB0ZWxscyB1cyB0YXJnZXQgd2lsbCBiZSBhbiBIVE1MRWxlbWVudCBoZXJlXG4gIHVwZGF0ZWRMaXN0LmNvbmNhdChsaXN0U2Nyb2xsUGFyZW50cyhnZXRQYXJlbnROb2RlKHRhcmdldCkpKTtcbn0iLCJpbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzVGFibGVFbGVtZW50KGVsZW1lbnQpIHtcbiAgcmV0dXJuIFsndGFibGUnLCAndGQnLCAndGgnXS5pbmRleE9mKGdldE5vZGVOYW1lKGVsZW1lbnQpKSA+PSAwO1xufSIsImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCBnZXRDb21wdXRlZFN0eWxlIGZyb20gXCIuL2dldENvbXB1dGVkU3R5bGUuanNcIjtcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQsIGlzU2hhZG93Um9vdCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCBpc1RhYmxlRWxlbWVudCBmcm9tIFwiLi9pc1RhYmxlRWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldFBhcmVudE5vZGUgZnJvbSBcIi4vZ2V0UGFyZW50Tm9kZS5qc1wiO1xuXG5mdW5jdGlvbiBnZXRUcnVlT2Zmc2V0UGFyZW50KGVsZW1lbnQpIHtcbiAgaWYgKCFpc0hUTUxFbGVtZW50KGVsZW1lbnQpIHx8IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3BwZXJqcy9wb3BwZXItY29yZS9pc3N1ZXMvODM3XG4gIGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucG9zaXRpb24gPT09ICdmaXhlZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBlbGVtZW50Lm9mZnNldFBhcmVudDtcbn0gLy8gYC5vZmZzZXRQYXJlbnRgIHJlcG9ydHMgYG51bGxgIGZvciBmaXhlZCBlbGVtZW50cywgd2hpbGUgYWJzb2x1dGUgZWxlbWVudHNcbi8vIHJldHVybiB0aGUgY29udGFpbmluZyBibG9ja1xuXG5cbmZ1bmN0aW9uIGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB7XG4gIHZhciBpc0ZpcmVmb3ggPSBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignZmlyZWZveCcpICE9PSAtMTtcbiAgdmFyIGlzSUUgPSBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSAhPT0gLTE7XG5cbiAgaWYgKGlzSUUgJiYgaXNIVE1MRWxlbWVudChlbGVtZW50KSkge1xuICAgIC8vIEluIElFIDksIDEwIGFuZCAxMSBmaXhlZCBlbGVtZW50cyBjb250YWluaW5nIGJsb2NrIGlzIGFsd2F5cyBlc3RhYmxpc2hlZCBieSB0aGUgdmlld3BvcnRcbiAgICB2YXIgZWxlbWVudENzcyA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG5cbiAgICBpZiAoZWxlbWVudENzcy5wb3NpdGlvbiA9PT0gJ2ZpeGVkJykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG5cbiAgdmFyIGN1cnJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShlbGVtZW50KTtcblxuICBpZiAoaXNTaGFkb3dSb290KGN1cnJlbnROb2RlKSkge1xuICAgIGN1cnJlbnROb2RlID0gY3VycmVudE5vZGUuaG9zdDtcbiAgfVxuXG4gIHdoaWxlIChpc0hUTUxFbGVtZW50KGN1cnJlbnROb2RlKSAmJiBbJ2h0bWwnLCAnYm9keSddLmluZGV4T2YoZ2V0Tm9kZU5hbWUoY3VycmVudE5vZGUpKSA8IDApIHtcbiAgICB2YXIgY3NzID0gZ2V0Q29tcHV0ZWRTdHlsZShjdXJyZW50Tm9kZSk7IC8vIFRoaXMgaXMgbm9uLWV4aGF1c3RpdmUgYnV0IGNvdmVycyB0aGUgbW9zdCBjb21tb24gQ1NTIHByb3BlcnRpZXMgdGhhdFxuICAgIC8vIGNyZWF0ZSBhIGNvbnRhaW5pbmcgYmxvY2suXG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NvbnRhaW5pbmdfYmxvY2sjaWRlbnRpZnlpbmdfdGhlX2NvbnRhaW5pbmdfYmxvY2tcblxuICAgIGlmIChjc3MudHJhbnNmb3JtICE9PSAnbm9uZScgfHwgY3NzLnBlcnNwZWN0aXZlICE9PSAnbm9uZScgfHwgY3NzLmNvbnRhaW4gPT09ICdwYWludCcgfHwgWyd0cmFuc2Zvcm0nLCAncGVyc3BlY3RpdmUnXS5pbmRleE9mKGNzcy53aWxsQ2hhbmdlKSAhPT0gLTEgfHwgaXNGaXJlZm94ICYmIGNzcy53aWxsQ2hhbmdlID09PSAnZmlsdGVyJyB8fCBpc0ZpcmVmb3ggJiYgY3NzLmZpbHRlciAmJiBjc3MuZmlsdGVyICE9PSAnbm9uZScpIHtcbiAgICAgIHJldHVybiBjdXJyZW50Tm9kZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5wYXJlbnROb2RlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufSAvLyBHZXRzIHRoZSBjbG9zZXN0IGFuY2VzdG9yIHBvc2l0aW9uZWQgZWxlbWVudC4gSGFuZGxlcyBzb21lIGVkZ2UgY2FzZXMsXG4vLyBzdWNoIGFzIHRhYmxlIGFuY2VzdG9ycyBhbmQgY3Jvc3MgYnJvd3NlciBidWdzLlxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE9mZnNldFBhcmVudChlbGVtZW50KSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIHZhciBvZmZzZXRQYXJlbnQgPSBnZXRUcnVlT2Zmc2V0UGFyZW50KGVsZW1lbnQpO1xuXG4gIHdoaWxlIChvZmZzZXRQYXJlbnQgJiYgaXNUYWJsZUVsZW1lbnQob2Zmc2V0UGFyZW50KSAmJiBnZXRDb21wdXRlZFN0eWxlKG9mZnNldFBhcmVudCkucG9zaXRpb24gPT09ICdzdGF0aWMnKSB7XG4gICAgb2Zmc2V0UGFyZW50ID0gZ2V0VHJ1ZU9mZnNldFBhcmVudChvZmZzZXRQYXJlbnQpO1xuICB9XG5cbiAgaWYgKG9mZnNldFBhcmVudCAmJiAoZ2V0Tm9kZU5hbWUob2Zmc2V0UGFyZW50KSA9PT0gJ2h0bWwnIHx8IGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgPT09ICdib2R5JyAmJiBnZXRDb21wdXRlZFN0eWxlKG9mZnNldFBhcmVudCkucG9zaXRpb24gPT09ICdzdGF0aWMnKSkge1xuICAgIHJldHVybiB3aW5kb3c7XG4gIH1cblxuICByZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB8fCB3aW5kb3c7XG59IiwiZXhwb3J0IHZhciB0b3AgPSAndG9wJztcbmV4cG9ydCB2YXIgYm90dG9tID0gJ2JvdHRvbSc7XG5leHBvcnQgdmFyIHJpZ2h0ID0gJ3JpZ2h0JztcbmV4cG9ydCB2YXIgbGVmdCA9ICdsZWZ0JztcbmV4cG9ydCB2YXIgYXV0byA9ICdhdXRvJztcbmV4cG9ydCB2YXIgYmFzZVBsYWNlbWVudHMgPSBbdG9wLCBib3R0b20sIHJpZ2h0LCBsZWZ0XTtcbmV4cG9ydCB2YXIgc3RhcnQgPSAnc3RhcnQnO1xuZXhwb3J0IHZhciBlbmQgPSAnZW5kJztcbmV4cG9ydCB2YXIgY2xpcHBpbmdQYXJlbnRzID0gJ2NsaXBwaW5nUGFyZW50cyc7XG5leHBvcnQgdmFyIHZpZXdwb3J0ID0gJ3ZpZXdwb3J0JztcbmV4cG9ydCB2YXIgcG9wcGVyID0gJ3BvcHBlcic7XG5leHBvcnQgdmFyIHJlZmVyZW5jZSA9ICdyZWZlcmVuY2UnO1xuZXhwb3J0IHZhciB2YXJpYXRpb25QbGFjZW1lbnRzID0gLyojX19QVVJFX18qL2Jhc2VQbGFjZW1lbnRzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIGFjYy5jb25jYXQoW3BsYWNlbWVudCArIFwiLVwiICsgc3RhcnQsIHBsYWNlbWVudCArIFwiLVwiICsgZW5kXSk7XG59LCBbXSk7XG5leHBvcnQgdmFyIHBsYWNlbWVudHMgPSAvKiNfX1BVUkVfXyovW10uY29uY2F0KGJhc2VQbGFjZW1lbnRzLCBbYXV0b10pLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIGFjYy5jb25jYXQoW3BsYWNlbWVudCwgcGxhY2VtZW50ICsgXCItXCIgKyBzdGFydCwgcGxhY2VtZW50ICsgXCItXCIgKyBlbmRdKTtcbn0sIFtdKTsgLy8gbW9kaWZpZXJzIHRoYXQgbmVlZCB0byByZWFkIHRoZSBET01cblxuZXhwb3J0IHZhciBiZWZvcmVSZWFkID0gJ2JlZm9yZVJlYWQnO1xuZXhwb3J0IHZhciByZWFkID0gJ3JlYWQnO1xuZXhwb3J0IHZhciBhZnRlclJlYWQgPSAnYWZ0ZXJSZWFkJzsgLy8gcHVyZS1sb2dpYyBtb2RpZmllcnNcblxuZXhwb3J0IHZhciBiZWZvcmVNYWluID0gJ2JlZm9yZU1haW4nO1xuZXhwb3J0IHZhciBtYWluID0gJ21haW4nO1xuZXhwb3J0IHZhciBhZnRlck1haW4gPSAnYWZ0ZXJNYWluJzsgLy8gbW9kaWZpZXIgd2l0aCB0aGUgcHVycG9zZSB0byB3cml0ZSB0byB0aGUgRE9NIChvciB3cml0ZSBpbnRvIGEgZnJhbWV3b3JrIHN0YXRlKVxuXG5leHBvcnQgdmFyIGJlZm9yZVdyaXRlID0gJ2JlZm9yZVdyaXRlJztcbmV4cG9ydCB2YXIgd3JpdGUgPSAnd3JpdGUnO1xuZXhwb3J0IHZhciBhZnRlcldyaXRlID0gJ2FmdGVyV3JpdGUnO1xuZXhwb3J0IHZhciBtb2RpZmllclBoYXNlcyA9IFtiZWZvcmVSZWFkLCByZWFkLCBhZnRlclJlYWQsIGJlZm9yZU1haW4sIG1haW4sIGFmdGVyTWFpbiwgYmVmb3JlV3JpdGUsIHdyaXRlLCBhZnRlcldyaXRlXTsiLCJpbXBvcnQgeyBtb2RpZmllclBoYXNlcyB9IGZyb20gXCIuLi9lbnVtcy5qc1wiOyAvLyBzb3VyY2U6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQ5ODc1MjU1XG5cbmZ1bmN0aW9uIG9yZGVyKG1vZGlmaWVycykge1xuICB2YXIgbWFwID0gbmV3IE1hcCgpO1xuICB2YXIgdmlzaXRlZCA9IG5ldyBTZXQoKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBtb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICBtYXAuc2V0KG1vZGlmaWVyLm5hbWUsIG1vZGlmaWVyKTtcbiAgfSk7IC8vIE9uIHZpc2l0aW5nIG9iamVjdCwgY2hlY2sgZm9yIGl0cyBkZXBlbmRlbmNpZXMgYW5kIHZpc2l0IHRoZW0gcmVjdXJzaXZlbHlcblxuICBmdW5jdGlvbiBzb3J0KG1vZGlmaWVyKSB7XG4gICAgdmlzaXRlZC5hZGQobW9kaWZpZXIubmFtZSk7XG4gICAgdmFyIHJlcXVpcmVzID0gW10uY29uY2F0KG1vZGlmaWVyLnJlcXVpcmVzIHx8IFtdLCBtb2RpZmllci5yZXF1aXJlc0lmRXhpc3RzIHx8IFtdKTtcbiAgICByZXF1aXJlcy5mb3JFYWNoKGZ1bmN0aW9uIChkZXApIHtcbiAgICAgIGlmICghdmlzaXRlZC5oYXMoZGVwKSkge1xuICAgICAgICB2YXIgZGVwTW9kaWZpZXIgPSBtYXAuZ2V0KGRlcCk7XG5cbiAgICAgICAgaWYgKGRlcE1vZGlmaWVyKSB7XG4gICAgICAgICAgc29ydChkZXBNb2RpZmllcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXN1bHQucHVzaChtb2RpZmllcik7XG4gIH1cblxuICBtb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICBpZiAoIXZpc2l0ZWQuaGFzKG1vZGlmaWVyLm5hbWUpKSB7XG4gICAgICAvLyBjaGVjayBmb3IgdmlzaXRlZCBvYmplY3RcbiAgICAgIHNvcnQobW9kaWZpZXIpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9yZGVyTW9kaWZpZXJzKG1vZGlmaWVycykge1xuICAvLyBvcmRlciBiYXNlZCBvbiBkZXBlbmRlbmNpZXNcbiAgdmFyIG9yZGVyZWRNb2RpZmllcnMgPSBvcmRlcihtb2RpZmllcnMpOyAvLyBvcmRlciBiYXNlZCBvbiBwaGFzZVxuXG4gIHJldHVybiBtb2RpZmllclBoYXNlcy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGhhc2UpIHtcbiAgICByZXR1cm4gYWNjLmNvbmNhdChvcmRlcmVkTW9kaWZpZXJzLmZpbHRlcihmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICAgIHJldHVybiBtb2RpZmllci5waGFzZSA9PT0gcGhhc2U7XG4gICAgfSkpO1xuICB9LCBbXSk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGVib3VuY2UoZm4pIHtcbiAgdmFyIHBlbmRpbmc7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCFwZW5kaW5nKSB7XG4gICAgICBwZW5kaW5nID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcGVuZGluZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICByZXNvbHZlKGZuKCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBwZW5kaW5nO1xuICB9O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1lcmdlQnlOYW1lKG1vZGlmaWVycykge1xuICB2YXIgbWVyZ2VkID0gbW9kaWZpZXJzLnJlZHVjZShmdW5jdGlvbiAobWVyZ2VkLCBjdXJyZW50KSB7XG4gICAgdmFyIGV4aXN0aW5nID0gbWVyZ2VkW2N1cnJlbnQubmFtZV07XG4gICAgbWVyZ2VkW2N1cnJlbnQubmFtZV0gPSBleGlzdGluZyA/IE9iamVjdC5hc3NpZ24oe30sIGV4aXN0aW5nLCBjdXJyZW50LCB7XG4gICAgICBvcHRpb25zOiBPYmplY3QuYXNzaWduKHt9LCBleGlzdGluZy5vcHRpb25zLCBjdXJyZW50Lm9wdGlvbnMpLFxuICAgICAgZGF0YTogT2JqZWN0LmFzc2lnbih7fSwgZXhpc3RpbmcuZGF0YSwgY3VycmVudC5kYXRhKVxuICAgIH0pIDogY3VycmVudDtcbiAgICByZXR1cm4gbWVyZ2VkO1xuICB9LCB7fSk7IC8vIElFMTEgZG9lcyBub3Qgc3VwcG9ydCBPYmplY3QudmFsdWVzXG5cbiAgcmV0dXJuIE9iamVjdC5rZXlzKG1lcmdlZCkubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gbWVyZ2VkW2tleV07XG4gIH0pO1xufSIsImltcG9ydCBnZXRDb21wb3NpdGVSZWN0IGZyb20gXCIuL2RvbS11dGlscy9nZXRDb21wb3NpdGVSZWN0LmpzXCI7XG5pbXBvcnQgZ2V0TGF5b3V0UmVjdCBmcm9tIFwiLi9kb20tdXRpbHMvZ2V0TGF5b3V0UmVjdC5qc1wiO1xuaW1wb3J0IGxpc3RTY3JvbGxQYXJlbnRzIGZyb20gXCIuL2RvbS11dGlscy9saXN0U2Nyb2xsUGFyZW50cy5qc1wiO1xuaW1wb3J0IGdldE9mZnNldFBhcmVudCBmcm9tIFwiLi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IG9yZGVyTW9kaWZpZXJzIGZyb20gXCIuL3V0aWxzL29yZGVyTW9kaWZpZXJzLmpzXCI7XG5pbXBvcnQgZGVib3VuY2UgZnJvbSBcIi4vdXRpbHMvZGVib3VuY2UuanNcIjtcbmltcG9ydCB2YWxpZGF0ZU1vZGlmaWVycyBmcm9tIFwiLi91dGlscy92YWxpZGF0ZU1vZGlmaWVycy5qc1wiO1xuaW1wb3J0IHVuaXF1ZUJ5IGZyb20gXCIuL3V0aWxzL3VuaXF1ZUJ5LmpzXCI7XG5pbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgbWVyZ2VCeU5hbWUgZnJvbSBcIi4vdXRpbHMvbWVyZ2VCeU5hbWUuanNcIjtcbmltcG9ydCBkZXRlY3RPdmVyZmxvdyBmcm9tIFwiLi91dGlscy9kZXRlY3RPdmVyZmxvdy5qc1wiO1xuaW1wb3J0IHsgaXNFbGVtZW50IH0gZnJvbSBcIi4vZG9tLXV0aWxzL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCB7IGF1dG8gfSBmcm9tIFwiLi9lbnVtcy5qc1wiO1xudmFyIElOVkFMSURfRUxFTUVOVF9FUlJPUiA9ICdQb3BwZXI6IEludmFsaWQgcmVmZXJlbmNlIG9yIHBvcHBlciBhcmd1bWVudCBwcm92aWRlZC4gVGhleSBtdXN0IGJlIGVpdGhlciBhIERPTSBlbGVtZW50IG9yIHZpcnR1YWwgZWxlbWVudC4nO1xudmFyIElORklOSVRFX0xPT1BfRVJST1IgPSAnUG9wcGVyOiBBbiBpbmZpbml0ZSBsb29wIGluIHRoZSBtb2RpZmllcnMgY3ljbGUgaGFzIGJlZW4gZGV0ZWN0ZWQhIFRoZSBjeWNsZSBoYXMgYmVlbiBpbnRlcnJ1cHRlZCB0byBwcmV2ZW50IGEgYnJvd3NlciBjcmFzaC4nO1xudmFyIERFRkFVTFRfT1BUSU9OUyA9IHtcbiAgcGxhY2VtZW50OiAnYm90dG9tJyxcbiAgbW9kaWZpZXJzOiBbXSxcbiAgc3RyYXRlZ3k6ICdhYnNvbHV0ZSdcbn07XG5cbmZ1bmN0aW9uIGFyZVZhbGlkRWxlbWVudHMoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gIWFyZ3Muc29tZShmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgIHJldHVybiAhKGVsZW1lbnQgJiYgdHlwZW9mIGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0ID09PSAnZnVuY3Rpb24nKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3BwZXJHZW5lcmF0b3IoZ2VuZXJhdG9yT3B0aW9ucykge1xuICBpZiAoZ2VuZXJhdG9yT3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgZ2VuZXJhdG9yT3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9nZW5lcmF0b3JPcHRpb25zID0gZ2VuZXJhdG9yT3B0aW9ucyxcbiAgICAgIF9nZW5lcmF0b3JPcHRpb25zJGRlZiA9IF9nZW5lcmF0b3JPcHRpb25zLmRlZmF1bHRNb2RpZmllcnMsXG4gICAgICBkZWZhdWx0TW9kaWZpZXJzID0gX2dlbmVyYXRvck9wdGlvbnMkZGVmID09PSB2b2lkIDAgPyBbXSA6IF9nZW5lcmF0b3JPcHRpb25zJGRlZixcbiAgICAgIF9nZW5lcmF0b3JPcHRpb25zJGRlZjIgPSBfZ2VuZXJhdG9yT3B0aW9ucy5kZWZhdWx0T3B0aW9ucyxcbiAgICAgIGRlZmF1bHRPcHRpb25zID0gX2dlbmVyYXRvck9wdGlvbnMkZGVmMiA9PT0gdm9pZCAwID8gREVGQVVMVF9PUFRJT05TIDogX2dlbmVyYXRvck9wdGlvbnMkZGVmMjtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNyZWF0ZVBvcHBlcihyZWZlcmVuY2UsIHBvcHBlciwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSBkZWZhdWx0T3B0aW9ucztcbiAgICB9XG5cbiAgICB2YXIgc3RhdGUgPSB7XG4gICAgICBwbGFjZW1lbnQ6ICdib3R0b20nLFxuICAgICAgb3JkZXJlZE1vZGlmaWVyczogW10sXG4gICAgICBvcHRpb25zOiBPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX09QVElPTlMsIGRlZmF1bHRPcHRpb25zKSxcbiAgICAgIG1vZGlmaWVyc0RhdGE6IHt9LFxuICAgICAgZWxlbWVudHM6IHtcbiAgICAgICAgcmVmZXJlbmNlOiByZWZlcmVuY2UsXG4gICAgICAgIHBvcHBlcjogcG9wcGVyXG4gICAgICB9LFxuICAgICAgYXR0cmlidXRlczoge30sXG4gICAgICBzdHlsZXM6IHt9XG4gICAgfTtcbiAgICB2YXIgZWZmZWN0Q2xlYW51cEZucyA9IFtdO1xuICAgIHZhciBpc0Rlc3Ryb3llZCA9IGZhbHNlO1xuICAgIHZhciBpbnN0YW5jZSA9IHtcbiAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgIHNldE9wdGlvbnM6IGZ1bmN0aW9uIHNldE9wdGlvbnMoc2V0T3B0aW9uc0FjdGlvbikge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzZXRPcHRpb25zQWN0aW9uID09PSAnZnVuY3Rpb24nID8gc2V0T3B0aW9uc0FjdGlvbihzdGF0ZS5vcHRpb25zKSA6IHNldE9wdGlvbnNBY3Rpb247XG4gICAgICAgIGNsZWFudXBNb2RpZmllckVmZmVjdHMoKTtcbiAgICAgICAgc3RhdGUub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRPcHRpb25zLCBzdGF0ZS5vcHRpb25zLCBvcHRpb25zKTtcbiAgICAgICAgc3RhdGUuc2Nyb2xsUGFyZW50cyA9IHtcbiAgICAgICAgICByZWZlcmVuY2U6IGlzRWxlbWVudChyZWZlcmVuY2UpID8gbGlzdFNjcm9sbFBhcmVudHMocmVmZXJlbmNlKSA6IHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCA/IGxpc3RTY3JvbGxQYXJlbnRzKHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCkgOiBbXSxcbiAgICAgICAgICBwb3BwZXI6IGxpc3RTY3JvbGxQYXJlbnRzKHBvcHBlcilcbiAgICAgICAgfTsgLy8gT3JkZXJzIHRoZSBtb2RpZmllcnMgYmFzZWQgb24gdGhlaXIgZGVwZW5kZW5jaWVzIGFuZCBgcGhhc2VgXG4gICAgICAgIC8vIHByb3BlcnRpZXNcblxuICAgICAgICB2YXIgb3JkZXJlZE1vZGlmaWVycyA9IG9yZGVyTW9kaWZpZXJzKG1lcmdlQnlOYW1lKFtdLmNvbmNhdChkZWZhdWx0TW9kaWZpZXJzLCBzdGF0ZS5vcHRpb25zLm1vZGlmaWVycykpKTsgLy8gU3RyaXAgb3V0IGRpc2FibGVkIG1vZGlmaWVyc1xuXG4gICAgICAgIHN0YXRlLm9yZGVyZWRNb2RpZmllcnMgPSBvcmRlcmVkTW9kaWZpZXJzLmZpbHRlcihmdW5jdGlvbiAobSkge1xuICAgICAgICAgIHJldHVybiBtLmVuYWJsZWQ7XG4gICAgICAgIH0pOyAvLyBWYWxpZGF0ZSB0aGUgcHJvdmlkZWQgbW9kaWZpZXJzIHNvIHRoYXQgdGhlIGNvbnN1bWVyIHdpbGwgZ2V0IHdhcm5lZFxuICAgICAgICAvLyBpZiBvbmUgb2YgdGhlIG1vZGlmaWVycyBpcyBpbnZhbGlkIGZvciBhbnkgcmVhc29uXG5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgIHZhciBtb2RpZmllcnMgPSB1bmlxdWVCeShbXS5jb25jYXQob3JkZXJlZE1vZGlmaWVycywgc3RhdGUub3B0aW9ucy5tb2RpZmllcnMpLCBmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICAgICAgdmFyIG5hbWUgPSBfcmVmLm5hbWU7XG4gICAgICAgICAgICByZXR1cm4gbmFtZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB2YWxpZGF0ZU1vZGlmaWVycyhtb2RpZmllcnMpO1xuXG4gICAgICAgICAgaWYgKGdldEJhc2VQbGFjZW1lbnQoc3RhdGUub3B0aW9ucy5wbGFjZW1lbnQpID09PSBhdXRvKSB7XG4gICAgICAgICAgICB2YXIgZmxpcE1vZGlmaWVyID0gc3RhdGUub3JkZXJlZE1vZGlmaWVycy5maW5kKGZ1bmN0aW9uIChfcmVmMikge1xuICAgICAgICAgICAgICB2YXIgbmFtZSA9IF9yZWYyLm5hbWU7XG4gICAgICAgICAgICAgIHJldHVybiBuYW1lID09PSAnZmxpcCc7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKCFmbGlwTW9kaWZpZXIpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihbJ1BvcHBlcjogXCJhdXRvXCIgcGxhY2VtZW50cyByZXF1aXJlIHRoZSBcImZsaXBcIiBtb2RpZmllciBiZScsICdwcmVzZW50IGFuZCBlbmFibGVkIHRvIHdvcmsuJ10uam9pbignICcpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgX2dldENvbXB1dGVkU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKHBvcHBlciksXG4gICAgICAgICAgICAgIG1hcmdpblRvcCA9IF9nZXRDb21wdXRlZFN0eWxlLm1hcmdpblRvcCxcbiAgICAgICAgICAgICAgbWFyZ2luUmlnaHQgPSBfZ2V0Q29tcHV0ZWRTdHlsZS5tYXJnaW5SaWdodCxcbiAgICAgICAgICAgICAgbWFyZ2luQm90dG9tID0gX2dldENvbXB1dGVkU3R5bGUubWFyZ2luQm90dG9tLFxuICAgICAgICAgICAgICBtYXJnaW5MZWZ0ID0gX2dldENvbXB1dGVkU3R5bGUubWFyZ2luTGVmdDsgLy8gV2Ugbm8gbG9uZ2VyIHRha2UgaW50byBhY2NvdW50IGBtYXJnaW5zYCBvbiB0aGUgcG9wcGVyLCBhbmQgaXQgY2FuXG4gICAgICAgICAgLy8gY2F1c2UgYnVncyB3aXRoIHBvc2l0aW9uaW5nLCBzbyB3ZSdsbCB3YXJuIHRoZSBjb25zdW1lclxuXG5cbiAgICAgICAgICBpZiAoW21hcmdpblRvcCwgbWFyZ2luUmlnaHQsIG1hcmdpbkJvdHRvbSwgbWFyZ2luTGVmdF0uc29tZShmdW5jdGlvbiAobWFyZ2luKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChtYXJnaW4pO1xuICAgICAgICAgIH0pKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oWydQb3BwZXI6IENTUyBcIm1hcmdpblwiIHN0eWxlcyBjYW5ub3QgYmUgdXNlZCB0byBhcHBseSBwYWRkaW5nJywgJ2JldHdlZW4gdGhlIHBvcHBlciBhbmQgaXRzIHJlZmVyZW5jZSBlbGVtZW50IG9yIGJvdW5kYXJ5LicsICdUbyByZXBsaWNhdGUgbWFyZ2luLCB1c2UgdGhlIGBvZmZzZXRgIG1vZGlmaWVyLCBhcyB3ZWxsIGFzJywgJ3RoZSBgcGFkZGluZ2Agb3B0aW9uIGluIHRoZSBgcHJldmVudE92ZXJmbG93YCBhbmQgYGZsaXBgJywgJ21vZGlmaWVycy4nXS5qb2luKCcgJykpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJ1bk1vZGlmaWVyRWZmZWN0cygpO1xuICAgICAgICByZXR1cm4gaW5zdGFuY2UudXBkYXRlKCk7XG4gICAgICB9LFxuICAgICAgLy8gU3luYyB1cGRhdGUg4oCTIGl0IHdpbGwgYWx3YXlzIGJlIGV4ZWN1dGVkLCBldmVuIGlmIG5vdCBuZWNlc3NhcnkuIFRoaXNcbiAgICAgIC8vIGlzIHVzZWZ1bCBmb3IgbG93IGZyZXF1ZW5jeSB1cGRhdGVzIHdoZXJlIHN5bmMgYmVoYXZpb3Igc2ltcGxpZmllcyB0aGVcbiAgICAgIC8vIGxvZ2ljLlxuICAgICAgLy8gRm9yIGhpZ2ggZnJlcXVlbmN5IHVwZGF0ZXMgKGUuZy4gYHJlc2l6ZWAgYW5kIGBzY3JvbGxgIGV2ZW50cyksIGFsd2F5c1xuICAgICAgLy8gcHJlZmVyIHRoZSBhc3luYyBQb3BwZXIjdXBkYXRlIG1ldGhvZFxuICAgICAgZm9yY2VVcGRhdGU6IGZ1bmN0aW9uIGZvcmNlVXBkYXRlKCkge1xuICAgICAgICBpZiAoaXNEZXN0cm95ZWQpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgX3N0YXRlJGVsZW1lbnRzID0gc3RhdGUuZWxlbWVudHMsXG4gICAgICAgICAgICByZWZlcmVuY2UgPSBfc3RhdGUkZWxlbWVudHMucmVmZXJlbmNlLFxuICAgICAgICAgICAgcG9wcGVyID0gX3N0YXRlJGVsZW1lbnRzLnBvcHBlcjsgLy8gRG9uJ3QgcHJvY2VlZCBpZiBgcmVmZXJlbmNlYCBvciBgcG9wcGVyYCBhcmUgbm90IHZhbGlkIGVsZW1lbnRzXG4gICAgICAgIC8vIGFueW1vcmVcblxuICAgICAgICBpZiAoIWFyZVZhbGlkRWxlbWVudHMocmVmZXJlbmNlLCBwb3BwZXIpKSB7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihJTlZBTElEX0VMRU1FTlRfRVJST1IpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSAvLyBTdG9yZSB0aGUgcmVmZXJlbmNlIGFuZCBwb3BwZXIgcmVjdHMgdG8gYmUgcmVhZCBieSBtb2RpZmllcnNcblxuXG4gICAgICAgIHN0YXRlLnJlY3RzID0ge1xuICAgICAgICAgIHJlZmVyZW5jZTogZ2V0Q29tcG9zaXRlUmVjdChyZWZlcmVuY2UsIGdldE9mZnNldFBhcmVudChwb3BwZXIpLCBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5ID09PSAnZml4ZWQnKSxcbiAgICAgICAgICBwb3BwZXI6IGdldExheW91dFJlY3QocG9wcGVyKVxuICAgICAgICB9OyAvLyBNb2RpZmllcnMgaGF2ZSB0aGUgYWJpbGl0eSB0byByZXNldCB0aGUgY3VycmVudCB1cGRhdGUgY3ljbGUuIFRoZVxuICAgICAgICAvLyBtb3N0IGNvbW1vbiB1c2UgY2FzZSBmb3IgdGhpcyBpcyB0aGUgYGZsaXBgIG1vZGlmaWVyIGNoYW5naW5nIHRoZVxuICAgICAgICAvLyBwbGFjZW1lbnQsIHdoaWNoIHRoZW4gbmVlZHMgdG8gcmUtcnVuIGFsbCB0aGUgbW9kaWZpZXJzLCBiZWNhdXNlIHRoZVxuICAgICAgICAvLyBsb2dpYyB3YXMgcHJldmlvdXNseSByYW4gZm9yIHRoZSBwcmV2aW91cyBwbGFjZW1lbnQgYW5kIGlzIHRoZXJlZm9yZVxuICAgICAgICAvLyBzdGFsZS9pbmNvcnJlY3RcblxuICAgICAgICBzdGF0ZS5yZXNldCA9IGZhbHNlO1xuICAgICAgICBzdGF0ZS5wbGFjZW1lbnQgPSBzdGF0ZS5vcHRpb25zLnBsYWNlbWVudDsgLy8gT24gZWFjaCB1cGRhdGUgY3ljbGUsIHRoZSBgbW9kaWZpZXJzRGF0YWAgcHJvcGVydHkgZm9yIGVhY2ggbW9kaWZpZXJcbiAgICAgICAgLy8gaXMgZmlsbGVkIHdpdGggdGhlIGluaXRpYWwgZGF0YSBzcGVjaWZpZWQgYnkgdGhlIG1vZGlmaWVyLiBUaGlzIG1lYW5zXG4gICAgICAgIC8vIGl0IGRvZXNuJ3QgcGVyc2lzdCBhbmQgaXMgZnJlc2ggb24gZWFjaCB1cGRhdGUuXG4gICAgICAgIC8vIFRvIGVuc3VyZSBwZXJzaXN0ZW50IGRhdGEsIHVzZSBgJHtuYW1lfSNwZXJzaXN0ZW50YFxuXG4gICAgICAgIHN0YXRlLm9yZGVyZWRNb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICAgICAgICByZXR1cm4gc3RhdGUubW9kaWZpZXJzRGF0YVttb2RpZmllci5uYW1lXSA9IE9iamVjdC5hc3NpZ24oe30sIG1vZGlmaWVyLmRhdGEpO1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIF9fZGVidWdfbG9vcHNfXyA9IDA7XG5cbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IHN0YXRlLm9yZGVyZWRNb2RpZmllcnMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgX19kZWJ1Z19sb29wc19fICs9IDE7XG5cbiAgICAgICAgICAgIGlmIChfX2RlYnVnX2xvb3BzX18gPiAxMDApIHtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihJTkZJTklURV9MT09QX0VSUk9SKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHN0YXRlLnJlc2V0ID09PSB0cnVlKSB7XG4gICAgICAgICAgICBzdGF0ZS5yZXNldCA9IGZhbHNlO1xuICAgICAgICAgICAgaW5kZXggPSAtMTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhciBfc3RhdGUkb3JkZXJlZE1vZGlmaWUgPSBzdGF0ZS5vcmRlcmVkTW9kaWZpZXJzW2luZGV4XSxcbiAgICAgICAgICAgICAgZm4gPSBfc3RhdGUkb3JkZXJlZE1vZGlmaWUuZm4sXG4gICAgICAgICAgICAgIF9zdGF0ZSRvcmRlcmVkTW9kaWZpZTIgPSBfc3RhdGUkb3JkZXJlZE1vZGlmaWUub3B0aW9ucyxcbiAgICAgICAgICAgICAgX29wdGlvbnMgPSBfc3RhdGUkb3JkZXJlZE1vZGlmaWUyID09PSB2b2lkIDAgPyB7fSA6IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZTIsXG4gICAgICAgICAgICAgIG5hbWUgPSBfc3RhdGUkb3JkZXJlZE1vZGlmaWUubmFtZTtcblxuICAgICAgICAgIGlmICh0eXBlb2YgZm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHN0YXRlID0gZm4oe1xuICAgICAgICAgICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICAgICAgICAgIG9wdGlvbnM6IF9vcHRpb25zLFxuICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2VcbiAgICAgICAgICAgIH0pIHx8IHN0YXRlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC8vIEFzeW5jIGFuZCBvcHRpbWlzdGljYWxseSBvcHRpbWl6ZWQgdXBkYXRlIOKAkyBpdCB3aWxsIG5vdCBiZSBleGVjdXRlZCBpZlxuICAgICAgLy8gbm90IG5lY2Vzc2FyeSAoZGVib3VuY2VkIHRvIHJ1biBhdCBtb3N0IG9uY2UtcGVyLXRpY2spXG4gICAgICB1cGRhdGU6IGRlYm91bmNlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICAgICAgaW5zdGFuY2UuZm9yY2VVcGRhdGUoKTtcbiAgICAgICAgICByZXNvbHZlKHN0YXRlKTtcbiAgICAgICAgfSk7XG4gICAgICB9KSxcbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgICAgIGNsZWFudXBNb2RpZmllckVmZmVjdHMoKTtcbiAgICAgICAgaXNEZXN0cm95ZWQgPSB0cnVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAoIWFyZVZhbGlkRWxlbWVudHMocmVmZXJlbmNlLCBwb3BwZXIpKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoSU5WQUxJRF9FTEVNRU5UX0VSUk9SKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH1cblxuICAgIGluc3RhbmNlLnNldE9wdGlvbnMob3B0aW9ucykudGhlbihmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgIGlmICghaXNEZXN0cm95ZWQgJiYgb3B0aW9ucy5vbkZpcnN0VXBkYXRlKSB7XG4gICAgICAgIG9wdGlvbnMub25GaXJzdFVwZGF0ZShzdGF0ZSk7XG4gICAgICB9XG4gICAgfSk7IC8vIE1vZGlmaWVycyBoYXZlIHRoZSBhYmlsaXR5IHRvIGV4ZWN1dGUgYXJiaXRyYXJ5IGNvZGUgYmVmb3JlIHRoZSBmaXJzdFxuICAgIC8vIHVwZGF0ZSBjeWNsZSBydW5zLiBUaGV5IHdpbGwgYmUgZXhlY3V0ZWQgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlIHVwZGF0ZVxuICAgIC8vIGN5Y2xlLiBUaGlzIGlzIHVzZWZ1bCB3aGVuIGEgbW9kaWZpZXIgYWRkcyBzb21lIHBlcnNpc3RlbnQgZGF0YSB0aGF0XG4gICAgLy8gb3RoZXIgbW9kaWZpZXJzIG5lZWQgdG8gdXNlLCBidXQgdGhlIG1vZGlmaWVyIGlzIHJ1biBhZnRlciB0aGUgZGVwZW5kZW50XG4gICAgLy8gb25lLlxuXG4gICAgZnVuY3Rpb24gcnVuTW9kaWZpZXJFZmZlY3RzKCkge1xuICAgICAgc3RhdGUub3JkZXJlZE1vZGlmaWVycy5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmMykge1xuICAgICAgICB2YXIgbmFtZSA9IF9yZWYzLm5hbWUsXG4gICAgICAgICAgICBfcmVmMyRvcHRpb25zID0gX3JlZjMub3B0aW9ucyxcbiAgICAgICAgICAgIG9wdGlvbnMgPSBfcmVmMyRvcHRpb25zID09PSB2b2lkIDAgPyB7fSA6IF9yZWYzJG9wdGlvbnMsXG4gICAgICAgICAgICBlZmZlY3QgPSBfcmVmMy5lZmZlY3Q7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBlZmZlY3QgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB2YXIgY2xlYW51cEZuID0gZWZmZWN0KHtcbiAgICAgICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2UsXG4gICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICB2YXIgbm9vcEZuID0gZnVuY3Rpb24gbm9vcEZuKCkge307XG5cbiAgICAgICAgICBlZmZlY3RDbGVhbnVwRm5zLnB1c2goY2xlYW51cEZuIHx8IG5vb3BGbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFudXBNb2RpZmllckVmZmVjdHMoKSB7XG4gICAgICBlZmZlY3RDbGVhbnVwRm5zLmZvckVhY2goZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgIHJldHVybiBmbigpO1xuICAgICAgfSk7XG4gICAgICBlZmZlY3RDbGVhbnVwRm5zID0gW107XG4gICAgfVxuXG4gICAgcmV0dXJuIGluc3RhbmNlO1xuICB9O1xufVxuZXhwb3J0IHZhciBjcmVhdGVQb3BwZXIgPSAvKiNfX1BVUkVfXyovcG9wcGVyR2VuZXJhdG9yKCk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuZXhwb3J0IHsgZGV0ZWN0T3ZlcmZsb3cgfTsiLCJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0V2luZG93LmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxudmFyIHBhc3NpdmUgPSB7XG4gIHBhc3NpdmU6IHRydWVcbn07XG5cbmZ1bmN0aW9uIGVmZmVjdChfcmVmKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsXG4gICAgICBpbnN0YW5jZSA9IF9yZWYuaW5zdGFuY2UsXG4gICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zO1xuICB2YXIgX29wdGlvbnMkc2Nyb2xsID0gb3B0aW9ucy5zY3JvbGwsXG4gICAgICBzY3JvbGwgPSBfb3B0aW9ucyRzY3JvbGwgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRzY3JvbGwsXG4gICAgICBfb3B0aW9ucyRyZXNpemUgPSBvcHRpb25zLnJlc2l6ZSxcbiAgICAgIHJlc2l6ZSA9IF9vcHRpb25zJHJlc2l6ZSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJHJlc2l6ZTtcbiAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdyhzdGF0ZS5lbGVtZW50cy5wb3BwZXIpO1xuICB2YXIgc2Nyb2xsUGFyZW50cyA9IFtdLmNvbmNhdChzdGF0ZS5zY3JvbGxQYXJlbnRzLnJlZmVyZW5jZSwgc3RhdGUuc2Nyb2xsUGFyZW50cy5wb3BwZXIpO1xuXG4gIGlmIChzY3JvbGwpIHtcbiAgICBzY3JvbGxQYXJlbnRzLmZvckVhY2goZnVuY3Rpb24gKHNjcm9sbFBhcmVudCkge1xuICAgICAgc2Nyb2xsUGFyZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gICAgfSk7XG4gIH1cblxuICBpZiAocmVzaXplKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGlmIChzY3JvbGwpIHtcbiAgICAgIHNjcm9sbFBhcmVudHMuZm9yRWFjaChmdW5jdGlvbiAoc2Nyb2xsUGFyZW50KSB7XG4gICAgICAgIHNjcm9sbFBhcmVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBpbnN0YW5jZS51cGRhdGUsIHBhc3NpdmUpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHJlc2l6ZSkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gICAgfVxuICB9O1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnZXZlbnRMaXN0ZW5lcnMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ3dyaXRlJyxcbiAgZm46IGZ1bmN0aW9uIGZuKCkge30sXG4gIGVmZmVjdDogZWZmZWN0LFxuICBkYXRhOiB7fVxufTsiLCJpbXBvcnQgeyBhdXRvIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KCctJylbMF07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KCctJylbMV07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gWyd0b3AnLCAnYm90dG9tJ10uaW5kZXhPZihwbGFjZW1lbnQpID49IDAgPyAneCcgOiAneSc7XG59IiwiaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4vZ2V0QmFzZVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGdldFZhcmlhdGlvbiBmcm9tIFwiLi9nZXRWYXJpYXRpb24uanNcIjtcbmltcG9ydCBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQgZnJvbSBcIi4vZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgeyB0b3AsIHJpZ2h0LCBib3R0b20sIGxlZnQsIHN0YXJ0LCBlbmQgfSBmcm9tIFwiLi4vZW51bXMuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXB1dGVPZmZzZXRzKF9yZWYpIHtcbiAgdmFyIHJlZmVyZW5jZSA9IF9yZWYucmVmZXJlbmNlLFxuICAgICAgZWxlbWVudCA9IF9yZWYuZWxlbWVudCxcbiAgICAgIHBsYWNlbWVudCA9IF9yZWYucGxhY2VtZW50O1xuICB2YXIgYmFzZVBsYWNlbWVudCA9IHBsYWNlbWVudCA/IGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSA6IG51bGw7XG4gIHZhciB2YXJpYXRpb24gPSBwbGFjZW1lbnQgPyBnZXRWYXJpYXRpb24ocGxhY2VtZW50KSA6IG51bGw7XG4gIHZhciBjb21tb25YID0gcmVmZXJlbmNlLnggKyByZWZlcmVuY2Uud2lkdGggLyAyIC0gZWxlbWVudC53aWR0aCAvIDI7XG4gIHZhciBjb21tb25ZID0gcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0IC8gMiAtIGVsZW1lbnQuaGVpZ2h0IC8gMjtcbiAgdmFyIG9mZnNldHM7XG5cbiAgc3dpdGNoIChiYXNlUGxhY2VtZW50KSB7XG4gICAgY2FzZSB0b3A6XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSAtIGVsZW1lbnQuaGVpZ2h0XG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIGJvdHRvbTpcbiAgICAgIG9mZnNldHMgPSB7XG4gICAgICAgIHg6IGNvbW1vblgsXG4gICAgICAgIHk6IHJlZmVyZW5jZS55ICsgcmVmZXJlbmNlLmhlaWdodFxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSByaWdodDpcbiAgICAgIG9mZnNldHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIGxlZnQ6XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiByZWZlcmVuY2UueCAtIGVsZW1lbnQud2lkdGgsXG4gICAgICAgIHk6IGNvbW1vbllcbiAgICAgIH07XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiByZWZlcmVuY2UueCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnlcbiAgICAgIH07XG4gIH1cblxuICB2YXIgbWFpbkF4aXMgPSBiYXNlUGxhY2VtZW50ID8gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KGJhc2VQbGFjZW1lbnQpIDogbnVsbDtcblxuICBpZiAobWFpbkF4aXMgIT0gbnVsbCkge1xuICAgIHZhciBsZW4gPSBtYWluQXhpcyA9PT0gJ3knID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuXG4gICAgc3dpdGNoICh2YXJpYXRpb24pIHtcbiAgICAgIGNhc2Ugc3RhcnQ6XG4gICAgICAgIG9mZnNldHNbbWFpbkF4aXNdID0gb2Zmc2V0c1ttYWluQXhpc10gLSAocmVmZXJlbmNlW2xlbl0gLyAyIC0gZWxlbWVudFtsZW5dIC8gMik7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIGVuZDpcbiAgICAgICAgb2Zmc2V0c1ttYWluQXhpc10gPSBvZmZzZXRzW21haW5BeGlzXSArIChyZWZlcmVuY2VbbGVuXSAvIDIgLSBlbGVtZW50W2xlbl0gLyAyKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG9mZnNldHM7XG59IiwiaW1wb3J0IGNvbXB1dGVPZmZzZXRzIGZyb20gXCIuLi91dGlscy9jb21wdXRlT2Zmc2V0cy5qc1wiO1xuXG5mdW5jdGlvbiBwb3BwZXJPZmZzZXRzKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIC8vIE9mZnNldHMgYXJlIHRoZSBhY3R1YWwgcG9zaXRpb24gdGhlIHBvcHBlciBuZWVkcyB0byBoYXZlIHRvIGJlXG4gIC8vIHByb3Blcmx5IHBvc2l0aW9uZWQgbmVhciBpdHMgcmVmZXJlbmNlIGVsZW1lbnRcbiAgLy8gVGhpcyBpcyB0aGUgbW9zdCBiYXNpYyBwbGFjZW1lbnQsIGFuZCB3aWxsIGJlIGFkanVzdGVkIGJ5XG4gIC8vIHRoZSBtb2RpZmllcnMgaW4gdGhlIG5leHQgc3RlcFxuICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0gY29tcHV0ZU9mZnNldHMoe1xuICAgIHJlZmVyZW5jZTogc3RhdGUucmVjdHMucmVmZXJlbmNlLFxuICAgIGVsZW1lbnQ6IHN0YXRlLnJlY3RzLnBvcHBlcixcbiAgICBzdHJhdGVneTogJ2Fic29sdXRlJyxcbiAgICBwbGFjZW1lbnQ6IHN0YXRlLnBsYWNlbWVudFxuICB9KTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ3BvcHBlck9mZnNldHMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ3JlYWQnLFxuICBmbjogcG9wcGVyT2Zmc2V0cyxcbiAgZGF0YToge31cbn07IiwiaW1wb3J0IHsgdG9wLCBsZWZ0LCByaWdodCwgYm90dG9tLCBlbmQgfSBmcm9tIFwiLi4vZW51bXMuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRXaW5kb3cuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRDb21wdXRlZFN0eWxlIGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4uL3V0aWxzL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IHsgcm91bmQgfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbnZhciB1bnNldFNpZGVzID0ge1xuICB0b3A6ICdhdXRvJyxcbiAgcmlnaHQ6ICdhdXRvJyxcbiAgYm90dG9tOiAnYXV0bycsXG4gIGxlZnQ6ICdhdXRvJ1xufTsgLy8gUm91bmQgdGhlIG9mZnNldHMgdG8gdGhlIG5lYXJlc3Qgc3VpdGFibGUgc3VicGl4ZWwgYmFzZWQgb24gdGhlIERQUi5cbi8vIFpvb21pbmcgY2FuIGNoYW5nZSB0aGUgRFBSLCBidXQgaXQgc2VlbXMgdG8gcmVwb3J0IGEgdmFsdWUgdGhhdCB3aWxsXG4vLyBjbGVhbmx5IGRpdmlkZSB0aGUgdmFsdWVzIGludG8gdGhlIGFwcHJvcHJpYXRlIHN1YnBpeGVscy5cblxuZnVuY3Rpb24gcm91bmRPZmZzZXRzQnlEUFIoX3JlZikge1xuICB2YXIgeCA9IF9yZWYueCxcbiAgICAgIHkgPSBfcmVmLnk7XG4gIHZhciB3aW4gPSB3aW5kb3c7XG4gIHZhciBkcHIgPSB3aW4uZGV2aWNlUGl4ZWxSYXRpbyB8fCAxO1xuICByZXR1cm4ge1xuICAgIHg6IHJvdW5kKHggKiBkcHIpIC8gZHByIHx8IDAsXG4gICAgeTogcm91bmQoeSAqIGRwcikgLyBkcHIgfHwgMFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFwVG9TdHlsZXMoX3JlZjIpIHtcbiAgdmFyIF9PYmplY3QkYXNzaWduMjtcblxuICB2YXIgcG9wcGVyID0gX3JlZjIucG9wcGVyLFxuICAgICAgcG9wcGVyUmVjdCA9IF9yZWYyLnBvcHBlclJlY3QsXG4gICAgICBwbGFjZW1lbnQgPSBfcmVmMi5wbGFjZW1lbnQsXG4gICAgICB2YXJpYXRpb24gPSBfcmVmMi52YXJpYXRpb24sXG4gICAgICBvZmZzZXRzID0gX3JlZjIub2Zmc2V0cyxcbiAgICAgIHBvc2l0aW9uID0gX3JlZjIucG9zaXRpb24sXG4gICAgICBncHVBY2NlbGVyYXRpb24gPSBfcmVmMi5ncHVBY2NlbGVyYXRpb24sXG4gICAgICBhZGFwdGl2ZSA9IF9yZWYyLmFkYXB0aXZlLFxuICAgICAgcm91bmRPZmZzZXRzID0gX3JlZjIucm91bmRPZmZzZXRzLFxuICAgICAgaXNGaXhlZCA9IF9yZWYyLmlzRml4ZWQ7XG4gIHZhciBfb2Zmc2V0cyR4ID0gb2Zmc2V0cy54LFxuICAgICAgeCA9IF9vZmZzZXRzJHggPT09IHZvaWQgMCA/IDAgOiBfb2Zmc2V0cyR4LFxuICAgICAgX29mZnNldHMkeSA9IG9mZnNldHMueSxcbiAgICAgIHkgPSBfb2Zmc2V0cyR5ID09PSB2b2lkIDAgPyAwIDogX29mZnNldHMkeTtcblxuICB2YXIgX3JlZjMgPSB0eXBlb2Ygcm91bmRPZmZzZXRzID09PSAnZnVuY3Rpb24nID8gcm91bmRPZmZzZXRzKHtcbiAgICB4OiB4LFxuICAgIHk6IHlcbiAgfSkgOiB7XG4gICAgeDogeCxcbiAgICB5OiB5XG4gIH07XG5cbiAgeCA9IF9yZWYzLng7XG4gIHkgPSBfcmVmMy55O1xuICB2YXIgaGFzWCA9IG9mZnNldHMuaGFzT3duUHJvcGVydHkoJ3gnKTtcbiAgdmFyIGhhc1kgPSBvZmZzZXRzLmhhc093blByb3BlcnR5KCd5Jyk7XG4gIHZhciBzaWRlWCA9IGxlZnQ7XG4gIHZhciBzaWRlWSA9IHRvcDtcbiAgdmFyIHdpbiA9IHdpbmRvdztcblxuICBpZiAoYWRhcHRpdmUpIHtcbiAgICB2YXIgb2Zmc2V0UGFyZW50ID0gZ2V0T2Zmc2V0UGFyZW50KHBvcHBlcik7XG4gICAgdmFyIGhlaWdodFByb3AgPSAnY2xpZW50SGVpZ2h0JztcbiAgICB2YXIgd2lkdGhQcm9wID0gJ2NsaWVudFdpZHRoJztcblxuICAgIGlmIChvZmZzZXRQYXJlbnQgPT09IGdldFdpbmRvdyhwb3BwZXIpKSB7XG4gICAgICBvZmZzZXRQYXJlbnQgPSBnZXREb2N1bWVudEVsZW1lbnQocG9wcGVyKTtcblxuICAgICAgaWYgKGdldENvbXB1dGVkU3R5bGUob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiAhPT0gJ3N0YXRpYycgJiYgcG9zaXRpb24gPT09ICdhYnNvbHV0ZScpIHtcbiAgICAgICAgaGVpZ2h0UHJvcCA9ICdzY3JvbGxIZWlnaHQnO1xuICAgICAgICB3aWR0aFByb3AgPSAnc2Nyb2xsV2lkdGgnO1xuICAgICAgfVxuICAgIH0gLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtY2FzdF06IGZvcmNlIHR5cGUgcmVmaW5lbWVudCwgd2UgY29tcGFyZSBvZmZzZXRQYXJlbnQgd2l0aCB3aW5kb3cgYWJvdmUsIGJ1dCBGbG93IGRvZXNuJ3QgZGV0ZWN0IGl0XG5cblxuICAgIG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudDtcblxuICAgIGlmIChwbGFjZW1lbnQgPT09IHRvcCB8fCAocGxhY2VtZW50ID09PSBsZWZ0IHx8IHBsYWNlbWVudCA9PT0gcmlnaHQpICYmIHZhcmlhdGlvbiA9PT0gZW5kKSB7XG4gICAgICBzaWRlWSA9IGJvdHRvbTtcbiAgICAgIHZhciBvZmZzZXRZID0gaXNGaXhlZCAmJiBvZmZzZXRQYXJlbnQgPT09IHdpbiAmJiB3aW4udmlzdWFsVmlld3BvcnQgPyB3aW4udmlzdWFsVmlld3BvcnQuaGVpZ2h0IDogLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddXG4gICAgICBvZmZzZXRQYXJlbnRbaGVpZ2h0UHJvcF07XG4gICAgICB5IC09IG9mZnNldFkgLSBwb3BwZXJSZWN0LmhlaWdodDtcbiAgICAgIHkgKj0gZ3B1QWNjZWxlcmF0aW9uID8gMSA6IC0xO1xuICAgIH1cblxuICAgIGlmIChwbGFjZW1lbnQgPT09IGxlZnQgfHwgKHBsYWNlbWVudCA9PT0gdG9wIHx8IHBsYWNlbWVudCA9PT0gYm90dG9tKSAmJiB2YXJpYXRpb24gPT09IGVuZCkge1xuICAgICAgc2lkZVggPSByaWdodDtcbiAgICAgIHZhciBvZmZzZXRYID0gaXNGaXhlZCAmJiBvZmZzZXRQYXJlbnQgPT09IHdpbiAmJiB3aW4udmlzdWFsVmlld3BvcnQgPyB3aW4udmlzdWFsVmlld3BvcnQud2lkdGggOiAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cbiAgICAgIG9mZnNldFBhcmVudFt3aWR0aFByb3BdO1xuICAgICAgeCAtPSBvZmZzZXRYIC0gcG9wcGVyUmVjdC53aWR0aDtcbiAgICAgIHggKj0gZ3B1QWNjZWxlcmF0aW9uID8gMSA6IC0xO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjb21tb25TdHlsZXMgPSBPYmplY3QuYXNzaWduKHtcbiAgICBwb3NpdGlvbjogcG9zaXRpb25cbiAgfSwgYWRhcHRpdmUgJiYgdW5zZXRTaWRlcyk7XG5cbiAgdmFyIF9yZWY0ID0gcm91bmRPZmZzZXRzID09PSB0cnVlID8gcm91bmRPZmZzZXRzQnlEUFIoe1xuICAgIHg6IHgsXG4gICAgeTogeVxuICB9KSA6IHtcbiAgICB4OiB4LFxuICAgIHk6IHlcbiAgfTtcblxuICB4ID0gX3JlZjQueDtcbiAgeSA9IF9yZWY0Lnk7XG5cbiAgaWYgKGdwdUFjY2VsZXJhdGlvbikge1xuICAgIHZhciBfT2JqZWN0JGFzc2lnbjtcblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIChfT2JqZWN0JGFzc2lnbiA9IHt9LCBfT2JqZWN0JGFzc2lnbltzaWRlWV0gPSBoYXNZID8gJzAnIDogJycsIF9PYmplY3QkYXNzaWduW3NpZGVYXSA9IGhhc1ggPyAnMCcgOiAnJywgX09iamVjdCRhc3NpZ24udHJhbnNmb3JtID0gKHdpbi5kZXZpY2VQaXhlbFJhdGlvIHx8IDEpIDw9IDEgPyBcInRyYW5zbGF0ZShcIiArIHggKyBcInB4LCBcIiArIHkgKyBcInB4KVwiIDogXCJ0cmFuc2xhdGUzZChcIiArIHggKyBcInB4LCBcIiArIHkgKyBcInB4LCAwKVwiLCBfT2JqZWN0JGFzc2lnbikpO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGNvbW1vblN0eWxlcywgKF9PYmplY3QkYXNzaWduMiA9IHt9LCBfT2JqZWN0JGFzc2lnbjJbc2lkZVldID0gaGFzWSA/IHkgKyBcInB4XCIgOiAnJywgX09iamVjdCRhc3NpZ24yW3NpZGVYXSA9IGhhc1ggPyB4ICsgXCJweFwiIDogJycsIF9PYmplY3QkYXNzaWduMi50cmFuc2Zvcm0gPSAnJywgX09iamVjdCRhc3NpZ24yKSk7XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVTdHlsZXMoX3JlZjUpIHtcbiAgdmFyIHN0YXRlID0gX3JlZjUuc3RhdGUsXG4gICAgICBvcHRpb25zID0gX3JlZjUub3B0aW9ucztcbiAgdmFyIF9vcHRpb25zJGdwdUFjY2VsZXJhdCA9IG9wdGlvbnMuZ3B1QWNjZWxlcmF0aW9uLFxuICAgICAgZ3B1QWNjZWxlcmF0aW9uID0gX29wdGlvbnMkZ3B1QWNjZWxlcmF0ID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkZ3B1QWNjZWxlcmF0LFxuICAgICAgX29wdGlvbnMkYWRhcHRpdmUgPSBvcHRpb25zLmFkYXB0aXZlLFxuICAgICAgYWRhcHRpdmUgPSBfb3B0aW9ucyRhZGFwdGl2ZSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGFkYXB0aXZlLFxuICAgICAgX29wdGlvbnMkcm91bmRPZmZzZXRzID0gb3B0aW9ucy5yb3VuZE9mZnNldHMsXG4gICAgICByb3VuZE9mZnNldHMgPSBfb3B0aW9ucyRyb3VuZE9mZnNldHMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRyb3VuZE9mZnNldHM7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIHZhciB0cmFuc2l0aW9uUHJvcGVydHkgPSBnZXRDb21wdXRlZFN0eWxlKHN0YXRlLmVsZW1lbnRzLnBvcHBlcikudHJhbnNpdGlvblByb3BlcnR5IHx8ICcnO1xuXG4gICAgaWYgKGFkYXB0aXZlICYmIFsndHJhbnNmb3JtJywgJ3RvcCcsICdyaWdodCcsICdib3R0b20nLCAnbGVmdCddLnNvbWUoZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICByZXR1cm4gdHJhbnNpdGlvblByb3BlcnR5LmluZGV4T2YocHJvcGVydHkpID49IDA7XG4gICAgfSkpIHtcbiAgICAgIGNvbnNvbGUud2FybihbJ1BvcHBlcjogRGV0ZWN0ZWQgQ1NTIHRyYW5zaXRpb25zIG9uIGF0IGxlYXN0IG9uZSBvZiB0aGUgZm9sbG93aW5nJywgJ0NTUyBwcm9wZXJ0aWVzOiBcInRyYW5zZm9ybVwiLCBcInRvcFwiLCBcInJpZ2h0XCIsIFwiYm90dG9tXCIsIFwibGVmdFwiLicsICdcXG5cXG4nLCAnRGlzYWJsZSB0aGUgXCJjb21wdXRlU3R5bGVzXCIgbW9kaWZpZXJcXCdzIGBhZGFwdGl2ZWAgb3B0aW9uIHRvIGFsbG93JywgJ2ZvciBzbW9vdGggdHJhbnNpdGlvbnMsIG9yIHJlbW92ZSB0aGVzZSBwcm9wZXJ0aWVzIGZyb20gdGhlIENTUycsICd0cmFuc2l0aW9uIGRlY2xhcmF0aW9uIG9uIHRoZSBwb3BwZXIgZWxlbWVudCBpZiBvbmx5IHRyYW5zaXRpb25pbmcnLCAnb3BhY2l0eSBvciBiYWNrZ3JvdW5kLWNvbG9yIGZvciBleGFtcGxlLicsICdcXG5cXG4nLCAnV2UgcmVjb21tZW5kIHVzaW5nIHRoZSBwb3BwZXIgZWxlbWVudCBhcyBhIHdyYXBwZXIgYXJvdW5kIGFuIGlubmVyJywgJ2VsZW1lbnQgdGhhdCBjYW4gaGF2ZSBhbnkgQ1NTIHByb3BlcnR5IHRyYW5zaXRpb25lZCBmb3IgYW5pbWF0aW9ucy4nXS5qb2luKCcgJykpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjb21tb25TdHlsZXMgPSB7XG4gICAgcGxhY2VtZW50OiBnZXRCYXNlUGxhY2VtZW50KHN0YXRlLnBsYWNlbWVudCksXG4gICAgdmFyaWF0aW9uOiBnZXRWYXJpYXRpb24oc3RhdGUucGxhY2VtZW50KSxcbiAgICBwb3BwZXI6IHN0YXRlLmVsZW1lbnRzLnBvcHBlcixcbiAgICBwb3BwZXJSZWN0OiBzdGF0ZS5yZWN0cy5wb3BwZXIsXG4gICAgZ3B1QWNjZWxlcmF0aW9uOiBncHVBY2NlbGVyYXRpb24sXG4gICAgaXNGaXhlZDogc3RhdGUub3B0aW9ucy5zdHJhdGVneSA9PT0gJ2ZpeGVkJ1xuICB9O1xuXG4gIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMgIT0gbnVsbCkge1xuICAgIHN0YXRlLnN0eWxlcy5wb3BwZXIgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5zdHlsZXMucG9wcGVyLCBtYXBUb1N0eWxlcyhPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIHtcbiAgICAgIG9mZnNldHM6IHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cyxcbiAgICAgIHBvc2l0aW9uOiBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5LFxuICAgICAgYWRhcHRpdmU6IGFkYXB0aXZlLFxuICAgICAgcm91bmRPZmZzZXRzOiByb3VuZE9mZnNldHNcbiAgICB9KSkpO1xuICB9XG5cbiAgaWYgKHN0YXRlLm1vZGlmaWVyc0RhdGEuYXJyb3cgIT0gbnVsbCkge1xuICAgIHN0YXRlLnN0eWxlcy5hcnJvdyA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnN0eWxlcy5hcnJvdywgbWFwVG9TdHlsZXMoT2JqZWN0LmFzc2lnbih7fSwgY29tbW9uU3R5bGVzLCB7XG4gICAgICBvZmZzZXRzOiBzdGF0ZS5tb2RpZmllcnNEYXRhLmFycm93LFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBhZGFwdGl2ZTogZmFsc2UsXG4gICAgICByb3VuZE9mZnNldHM6IHJvdW5kT2Zmc2V0c1xuICAgIH0pKSk7XG4gIH1cblxuICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyLCB7XG4gICAgJ2RhdGEtcG9wcGVyLXBsYWNlbWVudCc6IHN0YXRlLnBsYWNlbWVudFxuICB9KTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2NvbXB1dGVTdHlsZXMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ2JlZm9yZVdyaXRlJyxcbiAgZm46IGNvbXB1dGVTdHlsZXMsXG4gIGRhdGE6IHt9XG59OyIsImltcG9ydCBnZXROb2RlTmFtZSBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4uL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzXCI7IC8vIFRoaXMgbW9kaWZpZXIgdGFrZXMgdGhlIHN0eWxlcyBwcmVwYXJlZCBieSB0aGUgYGNvbXB1dGVTdHlsZXNgIG1vZGlmaWVyXG4vLyBhbmQgYXBwbGllcyB0aGVtIHRvIHRoZSBIVE1MRWxlbWVudHMgc3VjaCBhcyBwb3BwZXIgYW5kIGFycm93XG5cbmZ1bmN0aW9uIGFwcGx5U3R5bGVzKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZTtcbiAgT2JqZWN0LmtleXMoc3RhdGUuZWxlbWVudHMpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB2YXIgc3R5bGUgPSBzdGF0ZS5zdHlsZXNbbmFtZV0gfHwge307XG4gICAgdmFyIGF0dHJpYnV0ZXMgPSBzdGF0ZS5hdHRyaWJ1dGVzW25hbWVdIHx8IHt9O1xuICAgIHZhciBlbGVtZW50ID0gc3RhdGUuZWxlbWVudHNbbmFtZV07IC8vIGFycm93IGlzIG9wdGlvbmFsICsgdmlydHVhbCBlbGVtZW50c1xuXG4gICAgaWYgKCFpc0hUTUxFbGVtZW50KGVsZW1lbnQpIHx8ICFnZXROb2RlTmFtZShlbGVtZW50KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gRmxvdyBkb2Vzbid0IHN1cHBvcnQgdG8gZXh0ZW5kIHRoaXMgcHJvcGVydHksIGJ1dCBpdCdzIHRoZSBtb3N0XG4gICAgLy8gZWZmZWN0aXZlIHdheSB0byBhcHBseSBzdHlsZXMgdG8gYW4gSFRNTEVsZW1lbnRcbiAgICAvLyAkRmxvd0ZpeE1lW2Nhbm5vdC13cml0ZV1cblxuXG4gICAgT2JqZWN0LmFzc2lnbihlbGVtZW50LnN0eWxlLCBzdHlsZSk7XG4gICAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlc1tuYW1lXTtcblxuICAgICAgaWYgKHZhbHVlID09PSBmYWxzZSkge1xuICAgICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlID09PSB0cnVlID8gJycgOiB2YWx1ZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBlZmZlY3QoX3JlZjIpIHtcbiAgdmFyIHN0YXRlID0gX3JlZjIuc3RhdGU7XG4gIHZhciBpbml0aWFsU3R5bGVzID0ge1xuICAgIHBvcHBlcjoge1xuICAgICAgcG9zaXRpb246IHN0YXRlLm9wdGlvbnMuc3RyYXRlZ3ksXG4gICAgICBsZWZ0OiAnMCcsXG4gICAgICB0b3A6ICcwJyxcbiAgICAgIG1hcmdpbjogJzAnXG4gICAgfSxcbiAgICBhcnJvdzoge1xuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZSdcbiAgICB9LFxuICAgIHJlZmVyZW5jZToge31cbiAgfTtcbiAgT2JqZWN0LmFzc2lnbihzdGF0ZS5lbGVtZW50cy5wb3BwZXIuc3R5bGUsIGluaXRpYWxTdHlsZXMucG9wcGVyKTtcbiAgc3RhdGUuc3R5bGVzID0gaW5pdGlhbFN0eWxlcztcblxuICBpZiAoc3RhdGUuZWxlbWVudHMuYXJyb3cpIHtcbiAgICBPYmplY3QuYXNzaWduKHN0YXRlLmVsZW1lbnRzLmFycm93LnN0eWxlLCBpbml0aWFsU3R5bGVzLmFycm93KTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgT2JqZWN0LmtleXMoc3RhdGUuZWxlbWVudHMpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgIHZhciBlbGVtZW50ID0gc3RhdGUuZWxlbWVudHNbbmFtZV07XG4gICAgICB2YXIgYXR0cmlidXRlcyA9IHN0YXRlLmF0dHJpYnV0ZXNbbmFtZV0gfHwge307XG4gICAgICB2YXIgc3R5bGVQcm9wZXJ0aWVzID0gT2JqZWN0LmtleXMoc3RhdGUuc3R5bGVzLmhhc093blByb3BlcnR5KG5hbWUpID8gc3RhdGUuc3R5bGVzW25hbWVdIDogaW5pdGlhbFN0eWxlc1tuYW1lXSk7IC8vIFNldCBhbGwgdmFsdWVzIHRvIGFuIGVtcHR5IHN0cmluZyB0byB1bnNldCB0aGVtXG5cbiAgICAgIHZhciBzdHlsZSA9IHN0eWxlUHJvcGVydGllcy5yZWR1Y2UoZnVuY3Rpb24gKHN0eWxlLCBwcm9wZXJ0eSkge1xuICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSAnJztcbiAgICAgICAgcmV0dXJuIHN0eWxlO1xuICAgICAgfSwge30pOyAvLyBhcnJvdyBpcyBvcHRpb25hbCArIHZpcnR1YWwgZWxlbWVudHNcblxuICAgICAgaWYgKCFpc0hUTUxFbGVtZW50KGVsZW1lbnQpIHx8ICFnZXROb2RlTmFtZShlbGVtZW50KSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIE9iamVjdC5hc3NpZ24oZWxlbWVudC5zdHlsZSwgc3R5bGUpO1xuICAgICAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoYXR0cmlidXRlKSB7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2FwcGx5U3R5bGVzJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICd3cml0ZScsXG4gIGZuOiBhcHBseVN0eWxlcyxcbiAgZWZmZWN0OiBlZmZlY3QsXG4gIHJlcXVpcmVzOiBbJ2NvbXB1dGVTdHlsZXMnXVxufTsiLCJpbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IHsgdG9wLCBsZWZ0LCByaWdodCwgcGxhY2VtZW50cyB9IGZyb20gXCIuLi9lbnVtcy5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCBmdW5jdGlvbiBkaXN0YW5jZUFuZFNraWRkaW5nVG9YWShwbGFjZW1lbnQsIHJlY3RzLCBvZmZzZXQpIHtcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIHZhciBpbnZlcnREaXN0YW5jZSA9IFtsZWZ0LCB0b3BdLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgPj0gMCA/IC0xIDogMTtcblxuICB2YXIgX3JlZiA9IHR5cGVvZiBvZmZzZXQgPT09ICdmdW5jdGlvbicgPyBvZmZzZXQoT2JqZWN0LmFzc2lnbih7fSwgcmVjdHMsIHtcbiAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudFxuICB9KSkgOiBvZmZzZXQsXG4gICAgICBza2lkZGluZyA9IF9yZWZbMF0sXG4gICAgICBkaXN0YW5jZSA9IF9yZWZbMV07XG5cbiAgc2tpZGRpbmcgPSBza2lkZGluZyB8fCAwO1xuICBkaXN0YW5jZSA9IChkaXN0YW5jZSB8fCAwKSAqIGludmVydERpc3RhbmNlO1xuICByZXR1cm4gW2xlZnQsIHJpZ2h0XS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpID49IDAgPyB7XG4gICAgeDogZGlzdGFuY2UsXG4gICAgeTogc2tpZGRpbmdcbiAgfSA6IHtcbiAgICB4OiBza2lkZGluZyxcbiAgICB5OiBkaXN0YW5jZVxuICB9O1xufVxuXG5mdW5jdGlvbiBvZmZzZXQoX3JlZjIpIHtcbiAgdmFyIHN0YXRlID0gX3JlZjIuc3RhdGUsXG4gICAgICBvcHRpb25zID0gX3JlZjIub3B0aW9ucyxcbiAgICAgIG5hbWUgPSBfcmVmMi5uYW1lO1xuICB2YXIgX29wdGlvbnMkb2Zmc2V0ID0gb3B0aW9ucy5vZmZzZXQsXG4gICAgICBvZmZzZXQgPSBfb3B0aW9ucyRvZmZzZXQgPT09IHZvaWQgMCA/IFswLCAwXSA6IF9vcHRpb25zJG9mZnNldDtcbiAgdmFyIGRhdGEgPSBwbGFjZW1lbnRzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwbGFjZW1lbnQpIHtcbiAgICBhY2NbcGxhY2VtZW50XSA9IGRpc3RhbmNlQW5kU2tpZGRpbmdUb1hZKHBsYWNlbWVudCwgc3RhdGUucmVjdHMsIG9mZnNldCk7XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuICB2YXIgX2RhdGEkc3RhdGUkcGxhY2VtZW50ID0gZGF0YVtzdGF0ZS5wbGFjZW1lbnRdLFxuICAgICAgeCA9IF9kYXRhJHN0YXRlJHBsYWNlbWVudC54LFxuICAgICAgeSA9IF9kYXRhJHN0YXRlJHBsYWNlbWVudC55O1xuXG4gIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMgIT0gbnVsbCkge1xuICAgIHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cy54ICs9IHg7XG4gICAgc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzLnkgKz0geTtcbiAgfVxuXG4gIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0gPSBkYXRhO1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnb2Zmc2V0JyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgcmVxdWlyZXM6IFsncG9wcGVyT2Zmc2V0cyddLFxuICBmbjogb2Zmc2V0XG59OyIsInZhciBoYXNoID0ge1xuICBsZWZ0OiAncmlnaHQnLFxuICByaWdodDogJ2xlZnQnLFxuICBib3R0b206ICd0b3AnLFxuICB0b3A6ICdib3R0b20nXG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csIGZ1bmN0aW9uIChtYXRjaGVkKSB7XG4gICAgcmV0dXJuIGhhc2hbbWF0Y2hlZF07XG4gIH0pO1xufSIsInZhciBoYXNoID0ge1xuICBzdGFydDogJ2VuZCcsXG4gIGVuZDogJ3N0YXJ0J1xufTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnJlcGxhY2UoL3N0YXJ0fGVuZC9nLCBmdW5jdGlvbiAobWF0Y2hlZCkge1xuICAgIHJldHVybiBoYXNoW21hdGNoZWRdO1xuICB9KTtcbn0iLCJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRXaW5kb3dTY3JvbGxCYXJYIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbEJhclguanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFZpZXdwb3J0UmVjdChlbGVtZW50KSB7XG4gIHZhciB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIHZhciBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICB2YXIgdmlzdWFsVmlld3BvcnQgPSB3aW4udmlzdWFsVmlld3BvcnQ7XG4gIHZhciB3aWR0aCA9IGh0bWwuY2xpZW50V2lkdGg7XG4gIHZhciBoZWlnaHQgPSBodG1sLmNsaWVudEhlaWdodDtcbiAgdmFyIHggPSAwO1xuICB2YXIgeSA9IDA7IC8vIE5COiBUaGlzIGlzbid0IHN1cHBvcnRlZCBvbiBpT1MgPD0gMTIuIElmIHRoZSBrZXlib2FyZCBpcyBvcGVuLCB0aGUgcG9wcGVyXG4gIC8vIGNhbiBiZSBvYnNjdXJlZCB1bmRlcm5lYXRoIGl0LlxuICAvLyBBbHNvLCBgaHRtbC5jbGllbnRIZWlnaHRgIGFkZHMgdGhlIGJvdHRvbSBiYXIgaGVpZ2h0IGluIFNhZmFyaSBpT1MsIGV2ZW5cbiAgLy8gaWYgaXQgaXNuJ3Qgb3Blbiwgc28gaWYgdGhpcyBpc24ndCBhdmFpbGFibGUsIHRoZSBwb3BwZXIgd2lsbCBiZSBkZXRlY3RlZFxuICAvLyB0byBvdmVyZmxvdyB0aGUgYm90dG9tIG9mIHRoZSBzY3JlZW4gdG9vIGVhcmx5LlxuXG4gIGlmICh2aXN1YWxWaWV3cG9ydCkge1xuICAgIHdpZHRoID0gdmlzdWFsVmlld3BvcnQud2lkdGg7XG4gICAgaGVpZ2h0ID0gdmlzdWFsVmlld3BvcnQuaGVpZ2h0OyAvLyBVc2VzIExheW91dCBWaWV3cG9ydCAobGlrZSBDaHJvbWU7IFNhZmFyaSBkb2VzIG5vdCBjdXJyZW50bHkpXG4gICAgLy8gSW4gQ2hyb21lLCBpdCByZXR1cm5zIGEgdmFsdWUgdmVyeSBjbG9zZSB0byAwICgrLy0pIGJ1dCBjb250YWlucyByb3VuZGluZ1xuICAgIC8vIGVycm9ycyBkdWUgdG8gZmxvYXRpbmcgcG9pbnQgbnVtYmVycywgc28gd2UgbmVlZCB0byBjaGVjayBwcmVjaXNpb24uXG4gICAgLy8gU2FmYXJpIHJldHVybnMgYSBudW1iZXIgPD0gMCwgdXN1YWxseSA8IC0xIHdoZW4gcGluY2gtem9vbWVkXG4gICAgLy8gRmVhdHVyZSBkZXRlY3Rpb24gZmFpbHMgaW4gbW9iaWxlIGVtdWxhdGlvbiBtb2RlIGluIENocm9tZS5cbiAgICAvLyBNYXRoLmFicyh3aW4uaW5uZXJXaWR0aCAvIHZpc3VhbFZpZXdwb3J0LnNjYWxlIC0gdmlzdWFsVmlld3BvcnQud2lkdGgpIDxcbiAgICAvLyAwLjAwMVxuICAgIC8vIEZhbGxiYWNrIGhlcmU6IFwiTm90IFNhZmFyaVwiIHVzZXJBZ2VudFxuXG4gICAgaWYgKCEvXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgICB4ID0gdmlzdWFsVmlld3BvcnQub2Zmc2V0TGVmdDtcbiAgICAgIHkgPSB2aXN1YWxWaWV3cG9ydC5vZmZzZXRUb3A7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgeDogeCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCksXG4gICAgeTogeVxuICB9O1xufSIsImltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9nZXRDb21wdXRlZFN0eWxlLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsQmFyWCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGxCYXJYLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbC5qc1wiO1xuaW1wb3J0IHsgbWF4IH0gZnJvbSBcIi4uL3V0aWxzL21hdGguanNcIjsgLy8gR2V0cyB0aGUgZW50aXJlIHNpemUgb2YgdGhlIHNjcm9sbGFibGUgZG9jdW1lbnQgYXJlYSwgZXZlbiBleHRlbmRpbmcgb3V0c2lkZVxuLy8gb2YgdGhlIGA8aHRtbD5gIGFuZCBgPGJvZHk+YCByZWN0IGJvdW5kcyBpZiBob3Jpem9udGFsbHkgc2Nyb2xsYWJsZVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXREb2N1bWVudFJlY3QoZWxlbWVudCkge1xuICB2YXIgX2VsZW1lbnQkb3duZXJEb2N1bWVuO1xuXG4gIHZhciBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICB2YXIgd2luU2Nyb2xsID0gZ2V0V2luZG93U2Nyb2xsKGVsZW1lbnQpO1xuICB2YXIgYm9keSA9IChfZWxlbWVudCRvd25lckRvY3VtZW4gPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfZWxlbWVudCRvd25lckRvY3VtZW4uYm9keTtcbiAgdmFyIHdpZHRoID0gbWF4KGh0bWwuc2Nyb2xsV2lkdGgsIGh0bWwuY2xpZW50V2lkdGgsIGJvZHkgPyBib2R5LnNjcm9sbFdpZHRoIDogMCwgYm9keSA/IGJvZHkuY2xpZW50V2lkdGggOiAwKTtcbiAgdmFyIGhlaWdodCA9IG1heChodG1sLnNjcm9sbEhlaWdodCwgaHRtbC5jbGllbnRIZWlnaHQsIGJvZHkgPyBib2R5LnNjcm9sbEhlaWdodCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudEhlaWdodCA6IDApO1xuICB2YXIgeCA9IC13aW5TY3JvbGwuc2Nyb2xsTGVmdCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCk7XG4gIHZhciB5ID0gLXdpblNjcm9sbC5zY3JvbGxUb3A7XG5cbiAgaWYgKGdldENvbXB1dGVkU3R5bGUoYm9keSB8fCBodG1sKS5kaXJlY3Rpb24gPT09ICdydGwnKSB7XG4gICAgeCArPSBtYXgoaHRtbC5jbGllbnRXaWR0aCwgYm9keSA/IGJvZHkuY2xpZW50V2lkdGggOiAwKSAtIHdpZHRoO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgeDogeCxcbiAgICB5OiB5XG4gIH07XG59IiwiaW1wb3J0IHsgaXNTaGFkb3dSb290IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29udGFpbnMocGFyZW50LCBjaGlsZCkge1xuICB2YXIgcm9vdE5vZGUgPSBjaGlsZC5nZXRSb290Tm9kZSAmJiBjaGlsZC5nZXRSb290Tm9kZSgpOyAvLyBGaXJzdCwgYXR0ZW1wdCB3aXRoIGZhc3RlciBuYXRpdmUgbWV0aG9kXG5cbiAgaWYgKHBhcmVudC5jb250YWlucyhjaGlsZCkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSAvLyB0aGVuIGZhbGxiYWNrIHRvIGN1c3RvbSBpbXBsZW1lbnRhdGlvbiB3aXRoIFNoYWRvdyBET00gc3VwcG9ydFxuICBlbHNlIGlmIChyb290Tm9kZSAmJiBpc1NoYWRvd1Jvb3Qocm9vdE5vZGUpKSB7XG4gICAgICB2YXIgbmV4dCA9IGNoaWxkO1xuXG4gICAgICBkbyB7XG4gICAgICAgIGlmIChuZXh0ICYmIHBhcmVudC5pc1NhbWVOb2RlKG5leHQpKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddOiBuZWVkIGEgYmV0dGVyIHdheSB0byBoYW5kbGUgdGhpcy4uLlxuXG5cbiAgICAgICAgbmV4dCA9IG5leHQucGFyZW50Tm9kZSB8fCBuZXh0Lmhvc3Q7XG4gICAgICB9IHdoaWxlIChuZXh0KTtcbiAgICB9IC8vIEdpdmUgdXAsIHRoZSByZXN1bHQgaXMgZmFsc2VcblxuXG4gIHJldHVybiBmYWxzZTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWN0VG9DbGllbnRSZWN0KHJlY3QpIHtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHJlY3QsIHtcbiAgICBsZWZ0OiByZWN0LngsXG4gICAgdG9wOiByZWN0LnksXG4gICAgcmlnaHQ6IHJlY3QueCArIHJlY3Qud2lkdGgsXG4gICAgYm90dG9tOiByZWN0LnkgKyByZWN0LmhlaWdodFxuICB9KTtcbn0iLCJpbXBvcnQgeyB2aWV3cG9ydCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGdldFZpZXdwb3J0UmVjdCBmcm9tIFwiLi9nZXRWaWV3cG9ydFJlY3QuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudFJlY3QgZnJvbSBcIi4vZ2V0RG9jdW1lbnRSZWN0LmpzXCI7XG5pbXBvcnQgbGlzdFNjcm9sbFBhcmVudHMgZnJvbSBcIi4vbGlzdFNjcm9sbFBhcmVudHMuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4vZ2V0T2Zmc2V0UGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldENvbXB1dGVkU3R5bGUgZnJvbSBcIi4vZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IHsgaXNFbGVtZW50LCBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanNcIjtcbmltcG9ydCBnZXRQYXJlbnROb2RlIGZyb20gXCIuL2dldFBhcmVudE5vZGUuanNcIjtcbmltcG9ydCBjb250YWlucyBmcm9tIFwiLi9jb250YWlucy5qc1wiO1xuaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgcmVjdFRvQ2xpZW50UmVjdCBmcm9tIFwiLi4vdXRpbHMvcmVjdFRvQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IHsgbWF4LCBtaW4gfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBnZXRJbm5lckJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50KSB7XG4gIHZhciByZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQpO1xuICByZWN0LnRvcCA9IHJlY3QudG9wICsgZWxlbWVudC5jbGllbnRUb3A7XG4gIHJlY3QubGVmdCA9IHJlY3QubGVmdCArIGVsZW1lbnQuY2xpZW50TGVmdDtcbiAgcmVjdC5ib3R0b20gPSByZWN0LnRvcCArIGVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuICByZWN0LnJpZ2h0ID0gcmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRXaWR0aDtcbiAgcmVjdC53aWR0aCA9IGVsZW1lbnQuY2xpZW50V2lkdGg7XG4gIHJlY3QuaGVpZ2h0ID0gZWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gIHJlY3QueCA9IHJlY3QubGVmdDtcbiAgcmVjdC55ID0gcmVjdC50b3A7XG4gIHJldHVybiByZWN0O1xufVxuXG5mdW5jdGlvbiBnZXRDbGllbnRSZWN0RnJvbU1peGVkVHlwZShlbGVtZW50LCBjbGlwcGluZ1BhcmVudCkge1xuICByZXR1cm4gY2xpcHBpbmdQYXJlbnQgPT09IHZpZXdwb3J0ID8gcmVjdFRvQ2xpZW50UmVjdChnZXRWaWV3cG9ydFJlY3QoZWxlbWVudCkpIDogaXNFbGVtZW50KGNsaXBwaW5nUGFyZW50KSA/IGdldElubmVyQm91bmRpbmdDbGllbnRSZWN0KGNsaXBwaW5nUGFyZW50KSA6IHJlY3RUb0NsaWVudFJlY3QoZ2V0RG9jdW1lbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSkpO1xufSAvLyBBIFwiY2xpcHBpbmcgcGFyZW50XCIgaXMgYW4gb3ZlcmZsb3dhYmxlIGNvbnRhaW5lciB3aXRoIHRoZSBjaGFyYWN0ZXJpc3RpYyBvZlxuLy8gY2xpcHBpbmcgKG9yIGhpZGluZykgb3ZlcmZsb3dpbmcgZWxlbWVudHMgd2l0aCBhIHBvc2l0aW9uIGRpZmZlcmVudCBmcm9tXG4vLyBgaW5pdGlhbGBcblxuXG5mdW5jdGlvbiBnZXRDbGlwcGluZ1BhcmVudHMoZWxlbWVudCkge1xuICB2YXIgY2xpcHBpbmdQYXJlbnRzID0gbGlzdFNjcm9sbFBhcmVudHMoZ2V0UGFyZW50Tm9kZShlbGVtZW50KSk7XG4gIHZhciBjYW5Fc2NhcGVDbGlwcGluZyA9IFsnYWJzb2x1dGUnLCAnZml4ZWQnXS5pbmRleE9mKGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucG9zaXRpb24pID49IDA7XG4gIHZhciBjbGlwcGVyRWxlbWVudCA9IGNhbkVzY2FwZUNsaXBwaW5nICYmIGlzSFRNTEVsZW1lbnQoZWxlbWVudCkgPyBnZXRPZmZzZXRQYXJlbnQoZWxlbWVudCkgOiBlbGVtZW50O1xuXG4gIGlmICghaXNFbGVtZW50KGNsaXBwZXJFbGVtZW50KSkge1xuICAgIHJldHVybiBbXTtcbiAgfSAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZmxvdy9pc3N1ZXMvMTQxNFxuXG5cbiAgcmV0dXJuIGNsaXBwaW5nUGFyZW50cy5maWx0ZXIoZnVuY3Rpb24gKGNsaXBwaW5nUGFyZW50KSB7XG4gICAgcmV0dXJuIGlzRWxlbWVudChjbGlwcGluZ1BhcmVudCkgJiYgY29udGFpbnMoY2xpcHBpbmdQYXJlbnQsIGNsaXBwZXJFbGVtZW50KSAmJiBnZXROb2RlTmFtZShjbGlwcGluZ1BhcmVudCkgIT09ICdib2R5JztcbiAgfSk7XG59IC8vIEdldHMgdGhlIG1heGltdW0gYXJlYSB0aGF0IHRoZSBlbGVtZW50IGlzIHZpc2libGUgaW4gZHVlIHRvIGFueSBudW1iZXIgb2Zcbi8vIGNsaXBwaW5nIHBhcmVudHNcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRDbGlwcGluZ1JlY3QoZWxlbWVudCwgYm91bmRhcnksIHJvb3RCb3VuZGFyeSkge1xuICB2YXIgbWFpbkNsaXBwaW5nUGFyZW50cyA9IGJvdW5kYXJ5ID09PSAnY2xpcHBpbmdQYXJlbnRzJyA/IGdldENsaXBwaW5nUGFyZW50cyhlbGVtZW50KSA6IFtdLmNvbmNhdChib3VuZGFyeSk7XG4gIHZhciBjbGlwcGluZ1BhcmVudHMgPSBbXS5jb25jYXQobWFpbkNsaXBwaW5nUGFyZW50cywgW3Jvb3RCb3VuZGFyeV0pO1xuICB2YXIgZmlyc3RDbGlwcGluZ1BhcmVudCA9IGNsaXBwaW5nUGFyZW50c1swXTtcbiAgdmFyIGNsaXBwaW5nUmVjdCA9IGNsaXBwaW5nUGFyZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjY1JlY3QsIGNsaXBwaW5nUGFyZW50KSB7XG4gICAgdmFyIHJlY3QgPSBnZXRDbGllbnRSZWN0RnJvbU1peGVkVHlwZShlbGVtZW50LCBjbGlwcGluZ1BhcmVudCk7XG4gICAgYWNjUmVjdC50b3AgPSBtYXgocmVjdC50b3AsIGFjY1JlY3QudG9wKTtcbiAgICBhY2NSZWN0LnJpZ2h0ID0gbWluKHJlY3QucmlnaHQsIGFjY1JlY3QucmlnaHQpO1xuICAgIGFjY1JlY3QuYm90dG9tID0gbWluKHJlY3QuYm90dG9tLCBhY2NSZWN0LmJvdHRvbSk7XG4gICAgYWNjUmVjdC5sZWZ0ID0gbWF4KHJlY3QubGVmdCwgYWNjUmVjdC5sZWZ0KTtcbiAgICByZXR1cm4gYWNjUmVjdDtcbiAgfSwgZ2V0Q2xpZW50UmVjdEZyb21NaXhlZFR5cGUoZWxlbWVudCwgZmlyc3RDbGlwcGluZ1BhcmVudCkpO1xuICBjbGlwcGluZ1JlY3Qud2lkdGggPSBjbGlwcGluZ1JlY3QucmlnaHQgLSBjbGlwcGluZ1JlY3QubGVmdDtcbiAgY2xpcHBpbmdSZWN0LmhlaWdodCA9IGNsaXBwaW5nUmVjdC5ib3R0b20gLSBjbGlwcGluZ1JlY3QudG9wO1xuICBjbGlwcGluZ1JlY3QueCA9IGNsaXBwaW5nUmVjdC5sZWZ0O1xuICBjbGlwcGluZ1JlY3QueSA9IGNsaXBwaW5nUmVjdC50b3A7XG4gIHJldHVybiBjbGlwcGluZ1JlY3Q7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RnJlc2hTaWRlT2JqZWN0KCkge1xuICByZXR1cm4ge1xuICAgIHRvcDogMCxcbiAgICByaWdodDogMCxcbiAgICBib3R0b206IDAsXG4gICAgbGVmdDogMFxuICB9O1xufSIsImltcG9ydCBnZXRGcmVzaFNpZGVPYmplY3QgZnJvbSBcIi4vZ2V0RnJlc2hTaWRlT2JqZWN0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtZXJnZVBhZGRpbmdPYmplY3QocGFkZGluZ09iamVjdCkge1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgZ2V0RnJlc2hTaWRlT2JqZWN0KCksIHBhZGRpbmdPYmplY3QpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGV4cGFuZFRvSGFzaE1hcCh2YWx1ZSwga2V5cykge1xuICByZXR1cm4ga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKGhhc2hNYXAsIGtleSkge1xuICAgIGhhc2hNYXBba2V5XSA9IHZhbHVlO1xuICAgIHJldHVybiBoYXNoTWFwO1xuICB9LCB7fSk7XG59IiwiaW1wb3J0IGdldENsaXBwaW5nUmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldENsaXBwaW5nUmVjdC5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IGNvbXB1dGVPZmZzZXRzIGZyb20gXCIuL2NvbXB1dGVPZmZzZXRzLmpzXCI7XG5pbXBvcnQgcmVjdFRvQ2xpZW50UmVjdCBmcm9tIFwiLi9yZWN0VG9DbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgeyBjbGlwcGluZ1BhcmVudHMsIHJlZmVyZW5jZSwgcG9wcGVyLCBib3R0b20sIHRvcCwgcmlnaHQsIGJhc2VQbGFjZW1lbnRzLCB2aWV3cG9ydCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IHsgaXNFbGVtZW50IH0gZnJvbSBcIi4uL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgbWVyZ2VQYWRkaW5nT2JqZWN0IGZyb20gXCIuL21lcmdlUGFkZGluZ09iamVjdC5qc1wiO1xuaW1wb3J0IGV4cGFuZFRvSGFzaE1hcCBmcm9tIFwiLi9leHBhbmRUb0hhc2hNYXAuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIF9vcHRpb25zJHBsYWNlbWVudCA9IF9vcHRpb25zLnBsYWNlbWVudCxcbiAgICAgIHBsYWNlbWVudCA9IF9vcHRpb25zJHBsYWNlbWVudCA9PT0gdm9pZCAwID8gc3RhdGUucGxhY2VtZW50IDogX29wdGlvbnMkcGxhY2VtZW50LFxuICAgICAgX29wdGlvbnMkYm91bmRhcnkgPSBfb3B0aW9ucy5ib3VuZGFyeSxcbiAgICAgIGJvdW5kYXJ5ID0gX29wdGlvbnMkYm91bmRhcnkgPT09IHZvaWQgMCA/IGNsaXBwaW5nUGFyZW50cyA6IF9vcHRpb25zJGJvdW5kYXJ5LFxuICAgICAgX29wdGlvbnMkcm9vdEJvdW5kYXJ5ID0gX29wdGlvbnMucm9vdEJvdW5kYXJ5LFxuICAgICAgcm9vdEJvdW5kYXJ5ID0gX29wdGlvbnMkcm9vdEJvdW5kYXJ5ID09PSB2b2lkIDAgPyB2aWV3cG9ydCA6IF9vcHRpb25zJHJvb3RCb3VuZGFyeSxcbiAgICAgIF9vcHRpb25zJGVsZW1lbnRDb250ZSA9IF9vcHRpb25zLmVsZW1lbnRDb250ZXh0LFxuICAgICAgZWxlbWVudENvbnRleHQgPSBfb3B0aW9ucyRlbGVtZW50Q29udGUgPT09IHZvaWQgMCA/IHBvcHBlciA6IF9vcHRpb25zJGVsZW1lbnRDb250ZSxcbiAgICAgIF9vcHRpb25zJGFsdEJvdW5kYXJ5ID0gX29wdGlvbnMuYWx0Qm91bmRhcnksXG4gICAgICBhbHRCb3VuZGFyeSA9IF9vcHRpb25zJGFsdEJvdW5kYXJ5ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGFsdEJvdW5kYXJ5LFxuICAgICAgX29wdGlvbnMkcGFkZGluZyA9IF9vcHRpb25zLnBhZGRpbmcsXG4gICAgICBwYWRkaW5nID0gX29wdGlvbnMkcGFkZGluZyA9PT0gdm9pZCAwID8gMCA6IF9vcHRpb25zJHBhZGRpbmc7XG4gIHZhciBwYWRkaW5nT2JqZWN0ID0gbWVyZ2VQYWRkaW5nT2JqZWN0KHR5cGVvZiBwYWRkaW5nICE9PSAnbnVtYmVyJyA/IHBhZGRpbmcgOiBleHBhbmRUb0hhc2hNYXAocGFkZGluZywgYmFzZVBsYWNlbWVudHMpKTtcbiAgdmFyIGFsdENvbnRleHQgPSBlbGVtZW50Q29udGV4dCA9PT0gcG9wcGVyID8gcmVmZXJlbmNlIDogcG9wcGVyO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIGVsZW1lbnQgPSBzdGF0ZS5lbGVtZW50c1thbHRCb3VuZGFyeSA/IGFsdENvbnRleHQgOiBlbGVtZW50Q29udGV4dF07XG4gIHZhciBjbGlwcGluZ0NsaWVudFJlY3QgPSBnZXRDbGlwcGluZ1JlY3QoaXNFbGVtZW50KGVsZW1lbnQpID8gZWxlbWVudCA6IGVsZW1lbnQuY29udGV4dEVsZW1lbnQgfHwgZ2V0RG9jdW1lbnRFbGVtZW50KHN0YXRlLmVsZW1lbnRzLnBvcHBlciksIGJvdW5kYXJ5LCByb290Qm91bmRhcnkpO1xuICB2YXIgcmVmZXJlbmNlQ2xpZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChzdGF0ZS5lbGVtZW50cy5yZWZlcmVuY2UpO1xuICB2YXIgcG9wcGVyT2Zmc2V0cyA9IGNvbXB1dGVPZmZzZXRzKHtcbiAgICByZWZlcmVuY2U6IHJlZmVyZW5jZUNsaWVudFJlY3QsXG4gICAgZWxlbWVudDogcG9wcGVyUmVjdCxcbiAgICBzdHJhdGVneTogJ2Fic29sdXRlJyxcbiAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudFxuICB9KTtcbiAgdmFyIHBvcHBlckNsaWVudFJlY3QgPSByZWN0VG9DbGllbnRSZWN0KE9iamVjdC5hc3NpZ24oe30sIHBvcHBlclJlY3QsIHBvcHBlck9mZnNldHMpKTtcbiAgdmFyIGVsZW1lbnRDbGllbnRSZWN0ID0gZWxlbWVudENvbnRleHQgPT09IHBvcHBlciA/IHBvcHBlckNsaWVudFJlY3QgOiByZWZlcmVuY2VDbGllbnRSZWN0OyAvLyBwb3NpdGl2ZSA9IG92ZXJmbG93aW5nIHRoZSBjbGlwcGluZyByZWN0XG4gIC8vIDAgb3IgbmVnYXRpdmUgPSB3aXRoaW4gdGhlIGNsaXBwaW5nIHJlY3RcblxuICB2YXIgb3ZlcmZsb3dPZmZzZXRzID0ge1xuICAgIHRvcDogY2xpcHBpbmdDbGllbnRSZWN0LnRvcCAtIGVsZW1lbnRDbGllbnRSZWN0LnRvcCArIHBhZGRpbmdPYmplY3QudG9wLFxuICAgIGJvdHRvbTogZWxlbWVudENsaWVudFJlY3QuYm90dG9tIC0gY2xpcHBpbmdDbGllbnRSZWN0LmJvdHRvbSArIHBhZGRpbmdPYmplY3QuYm90dG9tLFxuICAgIGxlZnQ6IGNsaXBwaW5nQ2xpZW50UmVjdC5sZWZ0IC0gZWxlbWVudENsaWVudFJlY3QubGVmdCArIHBhZGRpbmdPYmplY3QubGVmdCxcbiAgICByaWdodDogZWxlbWVudENsaWVudFJlY3QucmlnaHQgLSBjbGlwcGluZ0NsaWVudFJlY3QucmlnaHQgKyBwYWRkaW5nT2JqZWN0LnJpZ2h0XG4gIH07XG4gIHZhciBvZmZzZXREYXRhID0gc3RhdGUubW9kaWZpZXJzRGF0YS5vZmZzZXQ7IC8vIE9mZnNldHMgY2FuIGJlIGFwcGxpZWQgb25seSB0byB0aGUgcG9wcGVyIGVsZW1lbnRcblxuICBpZiAoZWxlbWVudENvbnRleHQgPT09IHBvcHBlciAmJiBvZmZzZXREYXRhKSB7XG4gICAgdmFyIG9mZnNldCA9IG9mZnNldERhdGFbcGxhY2VtZW50XTtcbiAgICBPYmplY3Qua2V5cyhvdmVyZmxvd09mZnNldHMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgdmFyIG11bHRpcGx5ID0gW3JpZ2h0LCBib3R0b21dLmluZGV4T2Yoa2V5KSA+PSAwID8gMSA6IC0xO1xuICAgICAgdmFyIGF4aXMgPSBbdG9wLCBib3R0b21dLmluZGV4T2Yoa2V5KSA+PSAwID8gJ3knIDogJ3gnO1xuICAgICAgb3ZlcmZsb3dPZmZzZXRzW2tleV0gKz0gb2Zmc2V0W2F4aXNdICogbXVsdGlwbHk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gb3ZlcmZsb3dPZmZzZXRzO1xufSIsImltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4vZ2V0VmFyaWF0aW9uLmpzXCI7XG5pbXBvcnQgeyB2YXJpYXRpb25QbGFjZW1lbnRzLCBiYXNlUGxhY2VtZW50cywgcGxhY2VtZW50cyBhcyBhbGxQbGFjZW1lbnRzIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZGV0ZWN0T3ZlcmZsb3cgZnJvbSBcIi4vZGV0ZWN0T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXB1dGVBdXRvUGxhY2VtZW50KHN0YXRlLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGxhY2VtZW50ID0gX29wdGlvbnMucGxhY2VtZW50LFxuICAgICAgYm91bmRhcnkgPSBfb3B0aW9ucy5ib3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeSA9IF9vcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmcgPSBfb3B0aW9ucy5wYWRkaW5nLFxuICAgICAgZmxpcFZhcmlhdGlvbnMgPSBfb3B0aW9ucy5mbGlwVmFyaWF0aW9ucyxcbiAgICAgIF9vcHRpb25zJGFsbG93ZWRBdXRvUCA9IF9vcHRpb25zLmFsbG93ZWRBdXRvUGxhY2VtZW50cyxcbiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50cyA9IF9vcHRpb25zJGFsbG93ZWRBdXRvUCA9PT0gdm9pZCAwID8gYWxsUGxhY2VtZW50cyA6IF9vcHRpb25zJGFsbG93ZWRBdXRvUDtcbiAgdmFyIHZhcmlhdGlvbiA9IGdldFZhcmlhdGlvbihwbGFjZW1lbnQpO1xuICB2YXIgcGxhY2VtZW50cyA9IHZhcmlhdGlvbiA/IGZsaXBWYXJpYXRpb25zID8gdmFyaWF0aW9uUGxhY2VtZW50cyA6IHZhcmlhdGlvblBsYWNlbWVudHMuZmlsdGVyKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICByZXR1cm4gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkgPT09IHZhcmlhdGlvbjtcbiAgfSkgOiBiYXNlUGxhY2VtZW50cztcbiAgdmFyIGFsbG93ZWRQbGFjZW1lbnRzID0gcGxhY2VtZW50cy5maWx0ZXIoZnVuY3Rpb24gKHBsYWNlbWVudCkge1xuICAgIHJldHVybiBhbGxvd2VkQXV0b1BsYWNlbWVudHMuaW5kZXhPZihwbGFjZW1lbnQpID49IDA7XG4gIH0pO1xuXG4gIGlmIChhbGxvd2VkUGxhY2VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICBhbGxvd2VkUGxhY2VtZW50cyA9IHBsYWNlbWVudHM7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiBUaGUgYGFsbG93ZWRBdXRvUGxhY2VtZW50c2Agb3B0aW9uIGRpZCBub3QgYWxsb3cgYW55JywgJ3BsYWNlbWVudHMuIEVuc3VyZSB0aGUgYHBsYWNlbWVudGAgb3B0aW9uIG1hdGNoZXMgdGhlIHZhcmlhdGlvbicsICdvZiB0aGUgYWxsb3dlZCBwbGFjZW1lbnRzLicsICdGb3IgZXhhbXBsZSwgXCJhdXRvXCIgY2Fubm90IGJlIHVzZWQgdG8gYWxsb3cgXCJib3R0b20tc3RhcnRcIi4nLCAnVXNlIFwiYXV0by1zdGFydFwiIGluc3RlYWQuJ10uam9pbignICcpKTtcbiAgICB9XG4gIH0gLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtdHlwZV06IEZsb3cgc2VlbXMgdG8gaGF2ZSBwcm9ibGVtcyB3aXRoIHR3byBhcnJheSB1bmlvbnMuLi5cblxuXG4gIHZhciBvdmVyZmxvd3MgPSBhbGxvd2VkUGxhY2VtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gICAgYWNjW3BsYWNlbWVudF0gPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQsXG4gICAgICBib3VuZGFyeTogYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmc6IHBhZGRpbmdcbiAgICB9KVtnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCldO1xuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG92ZXJmbG93cykuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBvdmVyZmxvd3NbYV0gLSBvdmVyZmxvd3NbYl07XG4gIH0pO1xufSIsImltcG9ydCBnZXRPcHBvc2l0ZVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0T3Bwb3NpdGVQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZGV0ZWN0T3ZlcmZsb3cgZnJvbSBcIi4uL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzXCI7XG5pbXBvcnQgY29tcHV0ZUF1dG9QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2NvbXB1dGVBdXRvUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgeyBib3R0b20sIHRvcCwgc3RhcnQsIHJpZ2h0LCBsZWZ0LCBhdXRvIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0VmFyaWF0aW9uIGZyb20gXCIuLi91dGlscy9nZXRWYXJpYXRpb24uanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5mdW5jdGlvbiBnZXRFeHBhbmRlZEZhbGxiYWNrUGxhY2VtZW50cyhwbGFjZW1lbnQpIHtcbiAgaWYgKGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSA9PT0gYXV0bykge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIHZhciBvcHBvc2l0ZVBsYWNlbWVudCA9IGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIHJldHVybiBbZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQocGxhY2VtZW50KSwgb3Bwb3NpdGVQbGFjZW1lbnQsIGdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50KG9wcG9zaXRlUGxhY2VtZW50KV07XG59XG5cbmZ1bmN0aW9uIGZsaXAoX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG5cbiAgaWYgKHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0uX3NraXApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgX29wdGlvbnMkbWFpbkF4aXMgPSBvcHRpb25zLm1haW5BeGlzLFxuICAgICAgY2hlY2tNYWluQXhpcyA9IF9vcHRpb25zJG1haW5BeGlzID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkbWFpbkF4aXMsXG4gICAgICBfb3B0aW9ucyRhbHRBeGlzID0gb3B0aW9ucy5hbHRBeGlzLFxuICAgICAgY2hlY2tBbHRBeGlzID0gX29wdGlvbnMkYWx0QXhpcyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGFsdEF4aXMsXG4gICAgICBzcGVjaWZpZWRGYWxsYmFja1BsYWNlbWVudHMgPSBvcHRpb25zLmZhbGxiYWNrUGxhY2VtZW50cyxcbiAgICAgIHBhZGRpbmcgPSBvcHRpb25zLnBhZGRpbmcsXG4gICAgICBib3VuZGFyeSA9IG9wdGlvbnMuYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBvcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIF9vcHRpb25zJGZsaXBWYXJpYXRpbyA9IG9wdGlvbnMuZmxpcFZhcmlhdGlvbnMsXG4gICAgICBmbGlwVmFyaWF0aW9ucyA9IF9vcHRpb25zJGZsaXBWYXJpYXRpbyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGZsaXBWYXJpYXRpbyxcbiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50cyA9IG9wdGlvbnMuYWxsb3dlZEF1dG9QbGFjZW1lbnRzO1xuICB2YXIgcHJlZmVycmVkUGxhY2VtZW50ID0gc3RhdGUub3B0aW9ucy5wbGFjZW1lbnQ7XG4gIHZhciBiYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChwcmVmZXJyZWRQbGFjZW1lbnQpO1xuICB2YXIgaXNCYXNlUGxhY2VtZW50ID0gYmFzZVBsYWNlbWVudCA9PT0gcHJlZmVycmVkUGxhY2VtZW50O1xuICB2YXIgZmFsbGJhY2tQbGFjZW1lbnRzID0gc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzIHx8IChpc0Jhc2VQbGFjZW1lbnQgfHwgIWZsaXBWYXJpYXRpb25zID8gW2dldE9wcG9zaXRlUGxhY2VtZW50KHByZWZlcnJlZFBsYWNlbWVudCldIDogZ2V0RXhwYW5kZWRGYWxsYmFja1BsYWNlbWVudHMocHJlZmVycmVkUGxhY2VtZW50KSk7XG4gIHZhciBwbGFjZW1lbnRzID0gW3ByZWZlcnJlZFBsYWNlbWVudF0uY29uY2F0KGZhbGxiYWNrUGxhY2VtZW50cykucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBsYWNlbWVudCkge1xuICAgIHJldHVybiBhY2MuY29uY2F0KGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSA9PT0gYXV0byA/IGNvbXB1dGVBdXRvUGxhY2VtZW50KHN0YXRlLCB7XG4gICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudCxcbiAgICAgIGJvdW5kYXJ5OiBib3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeTogcm9vdEJvdW5kYXJ5LFxuICAgICAgcGFkZGluZzogcGFkZGluZyxcbiAgICAgIGZsaXBWYXJpYXRpb25zOiBmbGlwVmFyaWF0aW9ucyxcbiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50czogYWxsb3dlZEF1dG9QbGFjZW1lbnRzXG4gICAgfSkgOiBwbGFjZW1lbnQpO1xuICB9LCBbXSk7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIGNoZWNrc01hcCA9IG5ldyBNYXAoKTtcbiAgdmFyIG1ha2VGYWxsYmFja0NoZWNrcyA9IHRydWU7XG4gIHZhciBmaXJzdEZpdHRpbmdQbGFjZW1lbnQgPSBwbGFjZW1lbnRzWzBdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGxhY2VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBwbGFjZW1lbnQgPSBwbGFjZW1lbnRzW2ldO1xuXG4gICAgdmFyIF9iYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpO1xuXG4gICAgdmFyIGlzU3RhcnRWYXJpYXRpb24gPSBnZXRWYXJpYXRpb24ocGxhY2VtZW50KSA9PT0gc3RhcnQ7XG4gICAgdmFyIGlzVmVydGljYWwgPSBbdG9wLCBib3R0b21dLmluZGV4T2YoX2Jhc2VQbGFjZW1lbnQpID49IDA7XG4gICAgdmFyIGxlbiA9IGlzVmVydGljYWwgPyAnd2lkdGgnIDogJ2hlaWdodCc7XG4gICAgdmFyIG92ZXJmbG93ID0gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgYm91bmRhcnk6IGJvdW5kYXJ5LFxuICAgICAgcm9vdEJvdW5kYXJ5OiByb290Qm91bmRhcnksXG4gICAgICBhbHRCb3VuZGFyeTogYWx0Qm91bmRhcnksXG4gICAgICBwYWRkaW5nOiBwYWRkaW5nXG4gICAgfSk7XG4gICAgdmFyIG1haW5WYXJpYXRpb25TaWRlID0gaXNWZXJ0aWNhbCA/IGlzU3RhcnRWYXJpYXRpb24gPyByaWdodCA6IGxlZnQgOiBpc1N0YXJ0VmFyaWF0aW9uID8gYm90dG9tIDogdG9wO1xuXG4gICAgaWYgKHJlZmVyZW5jZVJlY3RbbGVuXSA+IHBvcHBlclJlY3RbbGVuXSkge1xuICAgICAgbWFpblZhcmlhdGlvblNpZGUgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluVmFyaWF0aW9uU2lkZSk7XG4gICAgfVxuXG4gICAgdmFyIGFsdFZhcmlhdGlvblNpZGUgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluVmFyaWF0aW9uU2lkZSk7XG4gICAgdmFyIGNoZWNrcyA9IFtdO1xuXG4gICAgaWYgKGNoZWNrTWFpbkF4aXMpIHtcbiAgICAgIGNoZWNrcy5wdXNoKG92ZXJmbG93W19iYXNlUGxhY2VtZW50XSA8PSAwKTtcbiAgICB9XG5cbiAgICBpZiAoY2hlY2tBbHRBeGlzKSB7XG4gICAgICBjaGVja3MucHVzaChvdmVyZmxvd1ttYWluVmFyaWF0aW9uU2lkZV0gPD0gMCwgb3ZlcmZsb3dbYWx0VmFyaWF0aW9uU2lkZV0gPD0gMCk7XG4gICAgfVxuXG4gICAgaWYgKGNoZWNrcy5ldmVyeShmdW5jdGlvbiAoY2hlY2spIHtcbiAgICAgIHJldHVybiBjaGVjaztcbiAgICB9KSkge1xuICAgICAgZmlyc3RGaXR0aW5nUGxhY2VtZW50ID0gcGxhY2VtZW50O1xuICAgICAgbWFrZUZhbGxiYWNrQ2hlY2tzID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBjaGVja3NNYXAuc2V0KHBsYWNlbWVudCwgY2hlY2tzKTtcbiAgfVxuXG4gIGlmIChtYWtlRmFsbGJhY2tDaGVja3MpIHtcbiAgICAvLyBgMmAgbWF5IGJlIGRlc2lyZWQgaW4gc29tZSBjYXNlcyDigJMgcmVzZWFyY2ggbGF0ZXJcbiAgICB2YXIgbnVtYmVyT2ZDaGVja3MgPSBmbGlwVmFyaWF0aW9ucyA/IDMgOiAxO1xuXG4gICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoX2kpIHtcbiAgICAgIHZhciBmaXR0aW5nUGxhY2VtZW50ID0gcGxhY2VtZW50cy5maW5kKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICAgICAgdmFyIGNoZWNrcyA9IGNoZWNrc01hcC5nZXQocGxhY2VtZW50KTtcblxuICAgICAgICBpZiAoY2hlY2tzKSB7XG4gICAgICAgICAgcmV0dXJuIGNoZWNrcy5zbGljZSgwLCBfaSkuZXZlcnkoZnVuY3Rpb24gKGNoZWNrKSB7XG4gICAgICAgICAgICByZXR1cm4gY2hlY2s7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAoZml0dGluZ1BsYWNlbWVudCkge1xuICAgICAgICBmaXJzdEZpdHRpbmdQbGFjZW1lbnQgPSBmaXR0aW5nUGxhY2VtZW50O1xuICAgICAgICByZXR1cm4gXCJicmVha1wiO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBmb3IgKHZhciBfaSA9IG51bWJlck9mQ2hlY2tzOyBfaSA+IDA7IF9pLS0pIHtcbiAgICAgIHZhciBfcmV0ID0gX2xvb3AoX2kpO1xuXG4gICAgICBpZiAoX3JldCA9PT0gXCJicmVha1wiKSBicmVhaztcbiAgICB9XG4gIH1cblxuICBpZiAoc3RhdGUucGxhY2VtZW50ICE9PSBmaXJzdEZpdHRpbmdQbGFjZW1lbnQpIHtcbiAgICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdLl9za2lwID0gdHJ1ZTtcbiAgICBzdGF0ZS5wbGFjZW1lbnQgPSBmaXJzdEZpdHRpbmdQbGFjZW1lbnQ7XG4gICAgc3RhdGUucmVzZXQgPSB0cnVlO1xuICB9XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdmbGlwJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgZm46IGZsaXAsXG4gIHJlcXVpcmVzSWZFeGlzdHM6IFsnb2Zmc2V0J10sXG4gIGRhdGE6IHtcbiAgICBfc2tpcDogZmFsc2VcbiAgfVxufTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRBbHRBeGlzKGF4aXMpIHtcbiAgcmV0dXJuIGF4aXMgPT09ICd4JyA/ICd5JyA6ICd4Jztcbn0iLCJpbXBvcnQgeyBtYXggYXMgbWF0aE1heCwgbWluIGFzIG1hdGhNaW4gfSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gd2l0aGluKG1pbiwgdmFsdWUsIG1heCkge1xuICByZXR1cm4gbWF0aE1heChtaW4sIG1hdGhNaW4odmFsdWUsIG1heCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhpbk1heENsYW1wKG1pbiwgdmFsdWUsIG1heCkge1xuICB2YXIgdiA9IHdpdGhpbihtaW4sIHZhbHVlLCBtYXgpO1xuICByZXR1cm4gdiA+IG1heCA/IG1heCA6IHY7XG59IiwiaW1wb3J0IHsgdG9wLCBsZWZ0LCByaWdodCwgYm90dG9tLCBzdGFydCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldE1haW5BeGlzRnJvbVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGdldEFsdEF4aXMgZnJvbSBcIi4uL3V0aWxzL2dldEFsdEF4aXMuanNcIjtcbmltcG9ydCB7IHdpdGhpbiwgd2l0aGluTWF4Q2xhbXAgfSBmcm9tIFwiLi4vdXRpbHMvd2l0aGluLmpzXCI7XG5pbXBvcnQgZ2V0TGF5b3V0UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBkZXRlY3RPdmVyZmxvdyBmcm9tIFwiLi4vdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4uL3V0aWxzL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IGdldEZyZXNoU2lkZU9iamVjdCBmcm9tIFwiLi4vdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzXCI7XG5pbXBvcnQgeyBtaW4gYXMgbWF0aE1pbiwgbWF4IGFzIG1hdGhNYXggfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBwcmV2ZW50T3ZlcmZsb3coX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIHZhciBfb3B0aW9ucyRtYWluQXhpcyA9IG9wdGlvbnMubWFpbkF4aXMsXG4gICAgICBjaGVja01haW5BeGlzID0gX29wdGlvbnMkbWFpbkF4aXMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRtYWluQXhpcyxcbiAgICAgIF9vcHRpb25zJGFsdEF4aXMgPSBvcHRpb25zLmFsdEF4aXMsXG4gICAgICBjaGVja0FsdEF4aXMgPSBfb3B0aW9ucyRhbHRBeGlzID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGFsdEF4aXMsXG4gICAgICBib3VuZGFyeSA9IG9wdGlvbnMuYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBvcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmcgPSBvcHRpb25zLnBhZGRpbmcsXG4gICAgICBfb3B0aW9ucyR0ZXRoZXIgPSBvcHRpb25zLnRldGhlcixcbiAgICAgIHRldGhlciA9IF9vcHRpb25zJHRldGhlciA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJHRldGhlcixcbiAgICAgIF9vcHRpb25zJHRldGhlck9mZnNldCA9IG9wdGlvbnMudGV0aGVyT2Zmc2V0LFxuICAgICAgdGV0aGVyT2Zmc2V0ID0gX29wdGlvbnMkdGV0aGVyT2Zmc2V0ID09PSB2b2lkIDAgPyAwIDogX29wdGlvbnMkdGV0aGVyT2Zmc2V0O1xuICB2YXIgb3ZlcmZsb3cgPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgIGJvdW5kYXJ5OiBib3VuZGFyeSxcbiAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSxcbiAgICBwYWRkaW5nOiBwYWRkaW5nLFxuICAgIGFsdEJvdW5kYXJ5OiBhbHRCb3VuZGFyeVxuICB9KTtcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHN0YXRlLnBsYWNlbWVudCk7XG4gIHZhciB2YXJpYXRpb24gPSBnZXRWYXJpYXRpb24oc3RhdGUucGxhY2VtZW50KTtcbiAgdmFyIGlzQmFzZVBsYWNlbWVudCA9ICF2YXJpYXRpb247XG4gIHZhciBtYWluQXhpcyA9IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChiYXNlUGxhY2VtZW50KTtcbiAgdmFyIGFsdEF4aXMgPSBnZXRBbHRBeGlzKG1haW5BeGlzKTtcbiAgdmFyIHBvcHBlck9mZnNldHMgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHM7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIHRldGhlck9mZnNldFZhbHVlID0gdHlwZW9mIHRldGhlck9mZnNldCA9PT0gJ2Z1bmN0aW9uJyA/IHRldGhlck9mZnNldChPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5yZWN0cywge1xuICAgIHBsYWNlbWVudDogc3RhdGUucGxhY2VtZW50XG4gIH0pKSA6IHRldGhlck9mZnNldDtcbiAgdmFyIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZSA9IHR5cGVvZiB0ZXRoZXJPZmZzZXRWYWx1ZSA9PT0gJ251bWJlcicgPyB7XG4gICAgbWFpbkF4aXM6IHRldGhlck9mZnNldFZhbHVlLFxuICAgIGFsdEF4aXM6IHRldGhlck9mZnNldFZhbHVlXG4gIH0gOiBPYmplY3QuYXNzaWduKHtcbiAgICBtYWluQXhpczogMCxcbiAgICBhbHRBeGlzOiAwXG4gIH0sIHRldGhlck9mZnNldFZhbHVlKTtcbiAgdmFyIG9mZnNldE1vZGlmaWVyU3RhdGUgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLm9mZnNldCA/IHN0YXRlLm1vZGlmaWVyc0RhdGEub2Zmc2V0W3N0YXRlLnBsYWNlbWVudF0gOiBudWxsO1xuICB2YXIgZGF0YSA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDBcbiAgfTtcblxuICBpZiAoIXBvcHBlck9mZnNldHMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoY2hlY2tNYWluQXhpcykge1xuICAgIHZhciBfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQ7XG5cbiAgICB2YXIgbWFpblNpZGUgPSBtYWluQXhpcyA9PT0gJ3knID8gdG9wIDogbGVmdDtcbiAgICB2YXIgYWx0U2lkZSA9IG1haW5BeGlzID09PSAneScgPyBib3R0b20gOiByaWdodDtcbiAgICB2YXIgbGVuID0gbWFpbkF4aXMgPT09ICd5JyA/ICdoZWlnaHQnIDogJ3dpZHRoJztcbiAgICB2YXIgb2Zmc2V0ID0gcG9wcGVyT2Zmc2V0c1ttYWluQXhpc107XG4gICAgdmFyIG1pbiA9IG9mZnNldCArIG92ZXJmbG93W21haW5TaWRlXTtcbiAgICB2YXIgbWF4ID0gb2Zmc2V0IC0gb3ZlcmZsb3dbYWx0U2lkZV07XG4gICAgdmFyIGFkZGl0aXZlID0gdGV0aGVyID8gLXBvcHBlclJlY3RbbGVuXSAvIDIgOiAwO1xuICAgIHZhciBtaW5MZW4gPSB2YXJpYXRpb24gPT09IHN0YXJ0ID8gcmVmZXJlbmNlUmVjdFtsZW5dIDogcG9wcGVyUmVjdFtsZW5dO1xuICAgIHZhciBtYXhMZW4gPSB2YXJpYXRpb24gPT09IHN0YXJ0ID8gLXBvcHBlclJlY3RbbGVuXSA6IC1yZWZlcmVuY2VSZWN0W2xlbl07IC8vIFdlIG5lZWQgdG8gaW5jbHVkZSB0aGUgYXJyb3cgaW4gdGhlIGNhbGN1bGF0aW9uIHNvIHRoZSBhcnJvdyBkb2Vzbid0IGdvXG4gICAgLy8gb3V0c2lkZSB0aGUgcmVmZXJlbmNlIGJvdW5kc1xuXG4gICAgdmFyIGFycm93RWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzLmFycm93O1xuICAgIHZhciBhcnJvd1JlY3QgPSB0ZXRoZXIgJiYgYXJyb3dFbGVtZW50ID8gZ2V0TGF5b3V0UmVjdChhcnJvd0VsZW1lbnQpIDoge1xuICAgICAgd2lkdGg6IDAsXG4gICAgICBoZWlnaHQ6IDBcbiAgICB9O1xuICAgIHZhciBhcnJvd1BhZGRpbmdPYmplY3QgPSBzdGF0ZS5tb2RpZmllcnNEYXRhWydhcnJvdyNwZXJzaXN0ZW50J10gPyBzdGF0ZS5tb2RpZmllcnNEYXRhWydhcnJvdyNwZXJzaXN0ZW50J10ucGFkZGluZyA6IGdldEZyZXNoU2lkZU9iamVjdCgpO1xuICAgIHZhciBhcnJvd1BhZGRpbmdNaW4gPSBhcnJvd1BhZGRpbmdPYmplY3RbbWFpblNpZGVdO1xuICAgIHZhciBhcnJvd1BhZGRpbmdNYXggPSBhcnJvd1BhZGRpbmdPYmplY3RbYWx0U2lkZV07IC8vIElmIHRoZSByZWZlcmVuY2UgbGVuZ3RoIGlzIHNtYWxsZXIgdGhhbiB0aGUgYXJyb3cgbGVuZ3RoLCB3ZSBkb24ndCB3YW50XG4gICAgLy8gdG8gaW5jbHVkZSBpdHMgZnVsbCBzaXplIGluIHRoZSBjYWxjdWxhdGlvbi4gSWYgdGhlIHJlZmVyZW5jZSBpcyBzbWFsbFxuICAgIC8vIGFuZCBuZWFyIHRoZSBlZGdlIG9mIGEgYm91bmRhcnksIHRoZSBwb3BwZXIgY2FuIG92ZXJmbG93IGV2ZW4gaWYgdGhlXG4gICAgLy8gcmVmZXJlbmNlIGlzIG5vdCBvdmVyZmxvd2luZyBhcyB3ZWxsIChlLmcuIHZpcnR1YWwgZWxlbWVudHMgd2l0aCBub1xuICAgIC8vIHdpZHRoIG9yIGhlaWdodClcblxuICAgIHZhciBhcnJvd0xlbiA9IHdpdGhpbigwLCByZWZlcmVuY2VSZWN0W2xlbl0sIGFycm93UmVjdFtsZW5dKTtcbiAgICB2YXIgbWluT2Zmc2V0ID0gaXNCYXNlUGxhY2VtZW50ID8gcmVmZXJlbmNlUmVjdFtsZW5dIC8gMiAtIGFkZGl0aXZlIC0gYXJyb3dMZW4gLSBhcnJvd1BhZGRpbmdNaW4gLSBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUubWFpbkF4aXMgOiBtaW5MZW4gLSBhcnJvd0xlbiAtIGFycm93UGFkZGluZ01pbiAtIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5tYWluQXhpcztcbiAgICB2YXIgbWF4T2Zmc2V0ID0gaXNCYXNlUGxhY2VtZW50ID8gLXJlZmVyZW5jZVJlY3RbbGVuXSAvIDIgKyBhZGRpdGl2ZSArIGFycm93TGVuICsgYXJyb3dQYWRkaW5nTWF4ICsgbm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlLm1haW5BeGlzIDogbWF4TGVuICsgYXJyb3dMZW4gKyBhcnJvd1BhZGRpbmdNYXggKyBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUubWFpbkF4aXM7XG4gICAgdmFyIGFycm93T2Zmc2V0UGFyZW50ID0gc3RhdGUuZWxlbWVudHMuYXJyb3cgJiYgZ2V0T2Zmc2V0UGFyZW50KHN0YXRlLmVsZW1lbnRzLmFycm93KTtcbiAgICB2YXIgY2xpZW50T2Zmc2V0ID0gYXJyb3dPZmZzZXRQYXJlbnQgPyBtYWluQXhpcyA9PT0gJ3knID8gYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50VG9wIHx8IDAgOiBhcnJvd09mZnNldFBhcmVudC5jbGllbnRMZWZ0IHx8IDAgOiAwO1xuICAgIHZhciBvZmZzZXRNb2RpZmllclZhbHVlID0gKF9vZmZzZXRNb2RpZmllclN0YXRlJCA9IG9mZnNldE1vZGlmaWVyU3RhdGUgPT0gbnVsbCA/IHZvaWQgMCA6IG9mZnNldE1vZGlmaWVyU3RhdGVbbWFpbkF4aXNdKSAhPSBudWxsID8gX29mZnNldE1vZGlmaWVyU3RhdGUkIDogMDtcbiAgICB2YXIgdGV0aGVyTWluID0gb2Zmc2V0ICsgbWluT2Zmc2V0IC0gb2Zmc2V0TW9kaWZpZXJWYWx1ZSAtIGNsaWVudE9mZnNldDtcbiAgICB2YXIgdGV0aGVyTWF4ID0gb2Zmc2V0ICsgbWF4T2Zmc2V0IC0gb2Zmc2V0TW9kaWZpZXJWYWx1ZTtcbiAgICB2YXIgcHJldmVudGVkT2Zmc2V0ID0gd2l0aGluKHRldGhlciA/IG1hdGhNaW4obWluLCB0ZXRoZXJNaW4pIDogbWluLCBvZmZzZXQsIHRldGhlciA/IG1hdGhNYXgobWF4LCB0ZXRoZXJNYXgpIDogbWF4KTtcbiAgICBwb3BwZXJPZmZzZXRzW21haW5BeGlzXSA9IHByZXZlbnRlZE9mZnNldDtcbiAgICBkYXRhW21haW5BeGlzXSA9IHByZXZlbnRlZE9mZnNldCAtIG9mZnNldDtcbiAgfVxuXG4gIGlmIChjaGVja0FsdEF4aXMpIHtcbiAgICB2YXIgX29mZnNldE1vZGlmaWVyU3RhdGUkMjtcblxuICAgIHZhciBfbWFpblNpZGUgPSBtYWluQXhpcyA9PT0gJ3gnID8gdG9wIDogbGVmdDtcblxuICAgIHZhciBfYWx0U2lkZSA9IG1haW5BeGlzID09PSAneCcgPyBib3R0b20gOiByaWdodDtcblxuICAgIHZhciBfb2Zmc2V0ID0gcG9wcGVyT2Zmc2V0c1thbHRBeGlzXTtcblxuICAgIHZhciBfbGVuID0gYWx0QXhpcyA9PT0gJ3knID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuXG4gICAgdmFyIF9taW4gPSBfb2Zmc2V0ICsgb3ZlcmZsb3dbX21haW5TaWRlXTtcblxuICAgIHZhciBfbWF4ID0gX29mZnNldCAtIG92ZXJmbG93W19hbHRTaWRlXTtcblxuICAgIHZhciBpc09yaWdpblNpZGUgPSBbdG9wLCBsZWZ0XS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpICE9PSAtMTtcblxuICAgIHZhciBfb2Zmc2V0TW9kaWZpZXJWYWx1ZSA9IChfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQyID0gb2Zmc2V0TW9kaWZpZXJTdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogb2Zmc2V0TW9kaWZpZXJTdGF0ZVthbHRBeGlzXSkgIT0gbnVsbCA/IF9vZmZzZXRNb2RpZmllclN0YXRlJDIgOiAwO1xuXG4gICAgdmFyIF90ZXRoZXJNaW4gPSBpc09yaWdpblNpZGUgPyBfbWluIDogX29mZnNldCAtIHJlZmVyZW5jZVJlY3RbX2xlbl0gLSBwb3BwZXJSZWN0W19sZW5dIC0gX29mZnNldE1vZGlmaWVyVmFsdWUgKyBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUuYWx0QXhpcztcblxuICAgIHZhciBfdGV0aGVyTWF4ID0gaXNPcmlnaW5TaWRlID8gX29mZnNldCArIHJlZmVyZW5jZVJlY3RbX2xlbl0gKyBwb3BwZXJSZWN0W19sZW5dIC0gX29mZnNldE1vZGlmaWVyVmFsdWUgLSBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUuYWx0QXhpcyA6IF9tYXg7XG5cbiAgICB2YXIgX3ByZXZlbnRlZE9mZnNldCA9IHRldGhlciAmJiBpc09yaWdpblNpZGUgPyB3aXRoaW5NYXhDbGFtcChfdGV0aGVyTWluLCBfb2Zmc2V0LCBfdGV0aGVyTWF4KSA6IHdpdGhpbih0ZXRoZXIgPyBfdGV0aGVyTWluIDogX21pbiwgX29mZnNldCwgdGV0aGVyID8gX3RldGhlck1heCA6IF9tYXgpO1xuXG4gICAgcG9wcGVyT2Zmc2V0c1thbHRBeGlzXSA9IF9wcmV2ZW50ZWRPZmZzZXQ7XG4gICAgZGF0YVthbHRBeGlzXSA9IF9wcmV2ZW50ZWRPZmZzZXQgLSBfb2Zmc2V0O1xuICB9XG5cbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IGRhdGE7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdwcmV2ZW50T3ZlcmZsb3cnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ21haW4nLFxuICBmbjogcHJldmVudE92ZXJmbG93LFxuICByZXF1aXJlc0lmRXhpc3RzOiBbJ29mZnNldCddXG59OyIsImltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0TGF5b3V0UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanNcIjtcbmltcG9ydCBjb250YWlucyBmcm9tIFwiLi4vZG9tLXV0aWxzL2NvbnRhaW5zLmpzXCI7XG5pbXBvcnQgZ2V0T2Zmc2V0UGFyZW50IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQuanNcIjtcbmltcG9ydCB7IHdpdGhpbiB9IGZyb20gXCIuLi91dGlscy93aXRoaW4uanNcIjtcbmltcG9ydCBtZXJnZVBhZGRpbmdPYmplY3QgZnJvbSBcIi4uL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qc1wiO1xuaW1wb3J0IGV4cGFuZFRvSGFzaE1hcCBmcm9tIFwiLi4vdXRpbHMvZXhwYW5kVG9IYXNoTWFwLmpzXCI7XG5pbXBvcnQgeyBsZWZ0LCByaWdodCwgYmFzZVBsYWNlbWVudHMsIHRvcCwgYm90dG9tIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4uL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxudmFyIHRvUGFkZGluZ09iamVjdCA9IGZ1bmN0aW9uIHRvUGFkZGluZ09iamVjdChwYWRkaW5nLCBzdGF0ZSkge1xuICBwYWRkaW5nID0gdHlwZW9mIHBhZGRpbmcgPT09ICdmdW5jdGlvbicgPyBwYWRkaW5nKE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnJlY3RzLCB7XG4gICAgcGxhY2VtZW50OiBzdGF0ZS5wbGFjZW1lbnRcbiAgfSkpIDogcGFkZGluZztcbiAgcmV0dXJuIG1lcmdlUGFkZGluZ09iamVjdCh0eXBlb2YgcGFkZGluZyAhPT0gJ251bWJlcicgPyBwYWRkaW5nIDogZXhwYW5kVG9IYXNoTWFwKHBhZGRpbmcsIGJhc2VQbGFjZW1lbnRzKSk7XG59O1xuXG5mdW5jdGlvbiBhcnJvdyhfcmVmKSB7XG4gIHZhciBfc3RhdGUkbW9kaWZpZXJzRGF0YSQ7XG5cbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWUsXG4gICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zO1xuICB2YXIgYXJyb3dFbGVtZW50ID0gc3RhdGUuZWxlbWVudHMuYXJyb3c7XG4gIHZhciBwb3BwZXJPZmZzZXRzID0gc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzO1xuICB2YXIgYmFzZVBsYWNlbWVudCA9IGdldEJhc2VQbGFjZW1lbnQoc3RhdGUucGxhY2VtZW50KTtcbiAgdmFyIGF4aXMgPSBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQoYmFzZVBsYWNlbWVudCk7XG4gIHZhciBpc1ZlcnRpY2FsID0gW2xlZnQsIHJpZ2h0XS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpID49IDA7XG4gIHZhciBsZW4gPSBpc1ZlcnRpY2FsID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuXG4gIGlmICghYXJyb3dFbGVtZW50IHx8ICFwb3BwZXJPZmZzZXRzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHBhZGRpbmdPYmplY3QgPSB0b1BhZGRpbmdPYmplY3Qob3B0aW9ucy5wYWRkaW5nLCBzdGF0ZSk7XG4gIHZhciBhcnJvd1JlY3QgPSBnZXRMYXlvdXRSZWN0KGFycm93RWxlbWVudCk7XG4gIHZhciBtaW5Qcm9wID0gYXhpcyA9PT0gJ3knID8gdG9wIDogbGVmdDtcbiAgdmFyIG1heFByb3AgPSBheGlzID09PSAneScgPyBib3R0b20gOiByaWdodDtcbiAgdmFyIGVuZERpZmYgPSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2VbbGVuXSArIHN0YXRlLnJlY3RzLnJlZmVyZW5jZVtheGlzXSAtIHBvcHBlck9mZnNldHNbYXhpc10gLSBzdGF0ZS5yZWN0cy5wb3BwZXJbbGVuXTtcbiAgdmFyIHN0YXJ0RGlmZiA9IHBvcHBlck9mZnNldHNbYXhpc10gLSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2VbYXhpc107XG4gIHZhciBhcnJvd09mZnNldFBhcmVudCA9IGdldE9mZnNldFBhcmVudChhcnJvd0VsZW1lbnQpO1xuICB2YXIgY2xpZW50U2l6ZSA9IGFycm93T2Zmc2V0UGFyZW50ID8gYXhpcyA9PT0gJ3knID8gYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50SGVpZ2h0IHx8IDAgOiBhcnJvd09mZnNldFBhcmVudC5jbGllbnRXaWR0aCB8fCAwIDogMDtcbiAgdmFyIGNlbnRlclRvUmVmZXJlbmNlID0gZW5kRGlmZiAvIDIgLSBzdGFydERpZmYgLyAyOyAvLyBNYWtlIHN1cmUgdGhlIGFycm93IGRvZXNuJ3Qgb3ZlcmZsb3cgdGhlIHBvcHBlciBpZiB0aGUgY2VudGVyIHBvaW50IGlzXG4gIC8vIG91dHNpZGUgb2YgdGhlIHBvcHBlciBib3VuZHNcblxuICB2YXIgbWluID0gcGFkZGluZ09iamVjdFttaW5Qcm9wXTtcbiAgdmFyIG1heCA9IGNsaWVudFNpemUgLSBhcnJvd1JlY3RbbGVuXSAtIHBhZGRpbmdPYmplY3RbbWF4UHJvcF07XG4gIHZhciBjZW50ZXIgPSBjbGllbnRTaXplIC8gMiAtIGFycm93UmVjdFtsZW5dIC8gMiArIGNlbnRlclRvUmVmZXJlbmNlO1xuICB2YXIgb2Zmc2V0ID0gd2l0aGluKG1pbiwgY2VudGVyLCBtYXgpOyAvLyBQcmV2ZW50cyBicmVha2luZyBzeW50YXggaGlnaGxpZ2h0aW5nLi4uXG5cbiAgdmFyIGF4aXNQcm9wID0gYXhpcztcbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IChfc3RhdGUkbW9kaWZpZXJzRGF0YSQgPSB7fSwgX3N0YXRlJG1vZGlmaWVyc0RhdGEkW2F4aXNQcm9wXSA9IG9mZnNldCwgX3N0YXRlJG1vZGlmaWVyc0RhdGEkLmNlbnRlck9mZnNldCA9IG9mZnNldCAtIGNlbnRlciwgX3N0YXRlJG1vZGlmaWVyc0RhdGEkKTtcbn1cblxuZnVuY3Rpb24gZWZmZWN0KF9yZWYyKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYyLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYyLm9wdGlvbnM7XG4gIHZhciBfb3B0aW9ucyRlbGVtZW50ID0gb3B0aW9ucy5lbGVtZW50LFxuICAgICAgYXJyb3dFbGVtZW50ID0gX29wdGlvbnMkZWxlbWVudCA9PT0gdm9pZCAwID8gJ1tkYXRhLXBvcHBlci1hcnJvd10nIDogX29wdGlvbnMkZWxlbWVudDtcblxuICBpZiAoYXJyb3dFbGVtZW50ID09IG51bGwpIHtcbiAgICByZXR1cm47XG4gIH0gLy8gQ1NTIHNlbGVjdG9yXG5cblxuICBpZiAodHlwZW9mIGFycm93RWxlbWVudCA9PT0gJ3N0cmluZycpIHtcbiAgICBhcnJvd0VsZW1lbnQgPSBzdGF0ZS5lbGVtZW50cy5wb3BwZXIucXVlcnlTZWxlY3RvcihhcnJvd0VsZW1lbnQpO1xuXG4gICAgaWYgKCFhcnJvd0VsZW1lbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgaWYgKCFpc0hUTUxFbGVtZW50KGFycm93RWxlbWVudCkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoWydQb3BwZXI6IFwiYXJyb3dcIiBlbGVtZW50IG11c3QgYmUgYW4gSFRNTEVsZW1lbnQgKG5vdCBhbiBTVkdFbGVtZW50KS4nLCAnVG8gdXNlIGFuIFNWRyBhcnJvdywgd3JhcCBpdCBpbiBhbiBIVE1MRWxlbWVudCB0aGF0IHdpbGwgYmUgdXNlZCBhcycsICd0aGUgYXJyb3cuJ10uam9pbignICcpKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbnRhaW5zKHN0YXRlLmVsZW1lbnRzLnBvcHBlciwgYXJyb3dFbGVtZW50KSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoWydQb3BwZXI6IFwiYXJyb3dcIiBtb2RpZmllclxcJ3MgYGVsZW1lbnRgIG11c3QgYmUgYSBjaGlsZCBvZiB0aGUgcG9wcGVyJywgJ2VsZW1lbnQuJ10uam9pbignICcpKTtcbiAgICB9XG5cbiAgICByZXR1cm47XG4gIH1cblxuICBzdGF0ZS5lbGVtZW50cy5hcnJvdyA9IGFycm93RWxlbWVudDtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2Fycm93JyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgZm46IGFycm93LFxuICBlZmZlY3Q6IGVmZmVjdCxcbiAgcmVxdWlyZXM6IFsncG9wcGVyT2Zmc2V0cyddLFxuICByZXF1aXJlc0lmRXhpc3RzOiBbJ3ByZXZlbnRPdmVyZmxvdyddXG59OyIsImltcG9ydCB7IHRvcCwgYm90dG9tLCBsZWZ0LCByaWdodCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGRldGVjdE92ZXJmbG93IGZyb20gXCIuLi91dGlscy9kZXRlY3RPdmVyZmxvdy5qc1wiO1xuXG5mdW5jdGlvbiBnZXRTaWRlT2Zmc2V0cyhvdmVyZmxvdywgcmVjdCwgcHJldmVudGVkT2Zmc2V0cykge1xuICBpZiAocHJldmVudGVkT2Zmc2V0cyA9PT0gdm9pZCAwKSB7XG4gICAgcHJldmVudGVkT2Zmc2V0cyA9IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdG9wOiBvdmVyZmxvdy50b3AgLSByZWN0LmhlaWdodCAtIHByZXZlbnRlZE9mZnNldHMueSxcbiAgICByaWdodDogb3ZlcmZsb3cucmlnaHQgLSByZWN0LndpZHRoICsgcHJldmVudGVkT2Zmc2V0cy54LFxuICAgIGJvdHRvbTogb3ZlcmZsb3cuYm90dG9tIC0gcmVjdC5oZWlnaHQgKyBwcmV2ZW50ZWRPZmZzZXRzLnksXG4gICAgbGVmdDogb3ZlcmZsb3cubGVmdCAtIHJlY3Qud2lkdGggLSBwcmV2ZW50ZWRPZmZzZXRzLnhcbiAgfTtcbn1cblxuZnVuY3Rpb24gaXNBbnlTaWRlRnVsbHlDbGlwcGVkKG92ZXJmbG93KSB7XG4gIHJldHVybiBbdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0XS5zb21lKGZ1bmN0aW9uIChzaWRlKSB7XG4gICAgcmV0dXJuIG92ZXJmbG93W3NpZGVdID49IDA7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoaWRlKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIHByZXZlbnRlZE9mZnNldHMgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLnByZXZlbnRPdmVyZmxvdztcbiAgdmFyIHJlZmVyZW5jZU92ZXJmbG93ID0gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICBlbGVtZW50Q29udGV4dDogJ3JlZmVyZW5jZSdcbiAgfSk7XG4gIHZhciBwb3BwZXJBbHRPdmVyZmxvdyA9IGRldGVjdE92ZXJmbG93KHN0YXRlLCB7XG4gICAgYWx0Qm91bmRhcnk6IHRydWVcbiAgfSk7XG4gIHZhciByZWZlcmVuY2VDbGlwcGluZ09mZnNldHMgPSBnZXRTaWRlT2Zmc2V0cyhyZWZlcmVuY2VPdmVyZmxvdywgcmVmZXJlbmNlUmVjdCk7XG4gIHZhciBwb3BwZXJFc2NhcGVPZmZzZXRzID0gZ2V0U2lkZU9mZnNldHMocG9wcGVyQWx0T3ZlcmZsb3csIHBvcHBlclJlY3QsIHByZXZlbnRlZE9mZnNldHMpO1xuICB2YXIgaXNSZWZlcmVuY2VIaWRkZW4gPSBpc0FueVNpZGVGdWxseUNsaXBwZWQocmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzKTtcbiAgdmFyIGhhc1BvcHBlckVzY2FwZWQgPSBpc0FueVNpZGVGdWxseUNsaXBwZWQocG9wcGVyRXNjYXBlT2Zmc2V0cyk7XG4gIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0gPSB7XG4gICAgcmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzOiByZWZlcmVuY2VDbGlwcGluZ09mZnNldHMsXG4gICAgcG9wcGVyRXNjYXBlT2Zmc2V0czogcG9wcGVyRXNjYXBlT2Zmc2V0cyxcbiAgICBpc1JlZmVyZW5jZUhpZGRlbjogaXNSZWZlcmVuY2VIaWRkZW4sXG4gICAgaGFzUG9wcGVyRXNjYXBlZDogaGFzUG9wcGVyRXNjYXBlZFxuICB9O1xuICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyLCB7XG4gICAgJ2RhdGEtcG9wcGVyLXJlZmVyZW5jZS1oaWRkZW4nOiBpc1JlZmVyZW5jZUhpZGRlbixcbiAgICAnZGF0YS1wb3BwZXItZXNjYXBlZCc6IGhhc1BvcHBlckVzY2FwZWRcbiAgfSk7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdoaWRlJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgcmVxdWlyZXNJZkV4aXN0czogWydwcmV2ZW50T3ZlcmZsb3cnXSxcbiAgZm46IGhpZGVcbn07IiwiaW1wb3J0IHsgcG9wcGVyR2VuZXJhdG9yLCBkZXRlY3RPdmVyZmxvdyB9IGZyb20gXCIuL2NyZWF0ZVBvcHBlci5qc1wiO1xuaW1wb3J0IGV2ZW50TGlzdGVuZXJzIGZyb20gXCIuL21vZGlmaWVycy9ldmVudExpc3RlbmVycy5qc1wiO1xuaW1wb3J0IHBvcHBlck9mZnNldHMgZnJvbSBcIi4vbW9kaWZpZXJzL3BvcHBlck9mZnNldHMuanNcIjtcbmltcG9ydCBjb21wdXRlU3R5bGVzIGZyb20gXCIuL21vZGlmaWVycy9jb21wdXRlU3R5bGVzLmpzXCI7XG5pbXBvcnQgYXBwbHlTdHlsZXMgZnJvbSBcIi4vbW9kaWZpZXJzL2FwcGx5U3R5bGVzLmpzXCI7XG5pbXBvcnQgb2Zmc2V0IGZyb20gXCIuL21vZGlmaWVycy9vZmZzZXQuanNcIjtcbmltcG9ydCBmbGlwIGZyb20gXCIuL21vZGlmaWVycy9mbGlwLmpzXCI7XG5pbXBvcnQgcHJldmVudE92ZXJmbG93IGZyb20gXCIuL21vZGlmaWVycy9wcmV2ZW50T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBhcnJvdyBmcm9tIFwiLi9tb2RpZmllcnMvYXJyb3cuanNcIjtcbmltcG9ydCBoaWRlIGZyb20gXCIuL21vZGlmaWVycy9oaWRlLmpzXCI7XG52YXIgZGVmYXVsdE1vZGlmaWVycyA9IFtldmVudExpc3RlbmVycywgcG9wcGVyT2Zmc2V0cywgY29tcHV0ZVN0eWxlcywgYXBwbHlTdHlsZXMsIG9mZnNldCwgZmxpcCwgcHJldmVudE92ZXJmbG93LCBhcnJvdywgaGlkZV07XG52YXIgY3JlYXRlUG9wcGVyID0gLyojX19QVVJFX18qL3BvcHBlckdlbmVyYXRvcih7XG4gIGRlZmF1bHRNb2RpZmllcnM6IGRlZmF1bHRNb2RpZmllcnNcbn0pOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCB7IGNyZWF0ZVBvcHBlciwgcG9wcGVyR2VuZXJhdG9yLCBkZWZhdWx0TW9kaWZpZXJzLCBkZXRlY3RPdmVyZmxvdyB9OyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCB7IGNyZWF0ZVBvcHBlciBhcyBjcmVhdGVQb3BwZXJMaXRlIH0gZnJvbSBcIi4vcG9wcGVyLWxpdGUuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgKiBmcm9tIFwiLi9tb2RpZmllcnMvaW5kZXguanNcIjsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiYW5jaG9yRWxcIiwgXCJjaGlsZHJlblwiLCBcImRpcmVjdGlvblwiLCBcImRpc2FibGVQb3J0YWxcIiwgXCJtb2RpZmllcnNcIiwgXCJvcGVuXCIsIFwib3duZXJTdGF0ZVwiLCBcInBsYWNlbWVudFwiLCBcInBvcHBlck9wdGlvbnNcIiwgXCJwb3BwZXJSZWZcIiwgXCJUcmFuc2l0aW9uUHJvcHNcIl0sXG4gICAgICBfZXhjbHVkZWQyID0gW1wiYW5jaG9yRWxcIiwgXCJjaGlsZHJlblwiLCBcImNvbnRhaW5lclwiLCBcImRpcmVjdGlvblwiLCBcImRpc2FibGVQb3J0YWxcIiwgXCJrZWVwTW91bnRlZFwiLCBcIm1vZGlmaWVyc1wiLCBcIm9wZW5cIiwgXCJwbGFjZW1lbnRcIiwgXCJwb3BwZXJPcHRpb25zXCIsIFwicG9wcGVyUmVmXCIsIFwic3R5bGVcIiwgXCJ0cmFuc2l0aW9uXCJdO1xuaW1wb3J0IHsgY2hhaW5Qcm9wVHlwZXMsIEhUTUxFbGVtZW50VHlwZSwgcmVmVHlwZSwgdW5zdGFibGVfb3duZXJEb2N1bWVudCBhcyBvd25lckRvY3VtZW50LCB1bnN0YWJsZV91c2VFbmhhbmNlZEVmZmVjdCBhcyB1c2VFbmhhbmNlZEVmZmVjdCwgdW5zdGFibGVfdXNlRm9ya1JlZiBhcyB1c2VGb3JrUmVmIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgeyBjcmVhdGVQb3BwZXIgfSBmcm9tICdAcG9wcGVyanMvY29yZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFBvcnRhbCBmcm9tICcuLi9Qb3J0YWwnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuZnVuY3Rpb24gZmxpcFBsYWNlbWVudChwbGFjZW1lbnQsIGRpcmVjdGlvbikge1xuICBpZiAoZGlyZWN0aW9uID09PSAnbHRyJykge1xuICAgIHJldHVybiBwbGFjZW1lbnQ7XG4gIH1cblxuICBzd2l0Y2ggKHBsYWNlbWVudCkge1xuICAgIGNhc2UgJ2JvdHRvbS1lbmQnOlxuICAgICAgcmV0dXJuICdib3R0b20tc3RhcnQnO1xuXG4gICAgY2FzZSAnYm90dG9tLXN0YXJ0JzpcbiAgICAgIHJldHVybiAnYm90dG9tLWVuZCc7XG5cbiAgICBjYXNlICd0b3AtZW5kJzpcbiAgICAgIHJldHVybiAndG9wLXN0YXJ0JztcblxuICAgIGNhc2UgJ3RvcC1zdGFydCc6XG4gICAgICByZXR1cm4gJ3RvcC1lbmQnO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBwbGFjZW1lbnQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzb2x2ZUFuY2hvckVsKGFuY2hvckVsKSB7XG4gIHJldHVybiB0eXBlb2YgYW5jaG9yRWwgPT09ICdmdW5jdGlvbicgPyBhbmNob3JFbCgpIDogYW5jaG9yRWw7XG59XG5cbmNvbnN0IGRlZmF1bHRQb3BwZXJPcHRpb25zID0ge307XG4vKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9wcm9wLXR5cGVzICovXG5cbmNvbnN0IFBvcHBlclRvb2x0aXAgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBQb3BwZXJUb29sdGlwKHByb3BzLCByZWYpIHtcbiAgY29uc3Qge1xuICAgIGFuY2hvckVsLFxuICAgIGNoaWxkcmVuLFxuICAgIGRpcmVjdGlvbixcbiAgICBkaXNhYmxlUG9ydGFsLFxuICAgIG1vZGlmaWVycyxcbiAgICBvcGVuLFxuICAgIHBsYWNlbWVudDogaW5pdGlhbFBsYWNlbWVudCxcbiAgICBwb3BwZXJPcHRpb25zLFxuICAgIHBvcHBlclJlZjogcG9wcGVyUmVmUHJvcCxcbiAgICBUcmFuc2l0aW9uUHJvcHNcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IHRvb2x0aXBSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gIGNvbnN0IG93blJlZiA9IHVzZUZvcmtSZWYodG9vbHRpcFJlZiwgcmVmKTtcbiAgY29uc3QgcG9wcGVyUmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCBoYW5kbGVQb3BwZXJSZWYgPSB1c2VGb3JrUmVmKHBvcHBlclJlZiwgcG9wcGVyUmVmUHJvcCk7XG4gIGNvbnN0IGhhbmRsZVBvcHBlclJlZlJlZiA9IFJlYWN0LnVzZVJlZihoYW5kbGVQb3BwZXJSZWYpO1xuICB1c2VFbmhhbmNlZEVmZmVjdCgoKSA9PiB7XG4gICAgaGFuZGxlUG9wcGVyUmVmUmVmLmN1cnJlbnQgPSBoYW5kbGVQb3BwZXJSZWY7XG4gIH0sIFtoYW5kbGVQb3BwZXJSZWZdKTtcbiAgUmVhY3QudXNlSW1wZXJhdGl2ZUhhbmRsZShwb3BwZXJSZWZQcm9wLCAoKSA9PiBwb3BwZXJSZWYuY3VycmVudCwgW10pO1xuICBjb25zdCBydGxQbGFjZW1lbnQgPSBmbGlwUGxhY2VtZW50KGluaXRpYWxQbGFjZW1lbnQsIGRpcmVjdGlvbik7XG4gIC8qKlxuICAgKiBwbGFjZW1lbnQgaW5pdGlhbGl6ZWQgZnJvbSBwcm9wIGJ1dCBjYW4gY2hhbmdlIGR1cmluZyBsaWZldGltZSBpZiBtb2RpZmllcnMuZmxpcC5cbiAgICogbW9kaWZpZXJzLmZsaXAgaXMgZXNzZW50aWFsbHkgYSBmbGlwIGZvciBjb250cm9sbGVkL3VuY29udHJvbGxlZCBiZWhhdmlvclxuICAgKi9cblxuICBjb25zdCBbcGxhY2VtZW50LCBzZXRQbGFjZW1lbnRdID0gUmVhY3QudXNlU3RhdGUocnRsUGxhY2VtZW50KTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocG9wcGVyUmVmLmN1cnJlbnQpIHtcbiAgICAgIHBvcHBlclJlZi5jdXJyZW50LmZvcmNlVXBkYXRlKCk7XG4gICAgfVxuICB9KTtcbiAgdXNlRW5oYW5jZWRFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghYW5jaG9yRWwgfHwgIW9wZW4pIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlUG9wcGVyVXBkYXRlID0gZGF0YSA9PiB7XG4gICAgICBzZXRQbGFjZW1lbnQoZGF0YS5wbGFjZW1lbnQpO1xuICAgIH07XG5cbiAgICBjb25zdCByZXNvbHZlZEFuY2hvckVsID0gcmVzb2x2ZUFuY2hvckVsKGFuY2hvckVsKTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAocmVzb2x2ZWRBbmNob3JFbCAmJiByZXNvbHZlZEFuY2hvckVsLm5vZGVUeXBlID09PSAxKSB7XG4gICAgICAgIGNvbnN0IGJveCA9IHJlc29sdmVkQW5jaG9yRWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAndGVzdCcgJiYgYm94LnRvcCA9PT0gMCAmJiBib3gubGVmdCA9PT0gMCAmJiBib3gucmlnaHQgPT09IDAgJiYgYm94LmJvdHRvbSA9PT0gMCkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihbJ01VSTogVGhlIGBhbmNob3JFbGAgcHJvcCBwcm92aWRlZCB0byB0aGUgY29tcG9uZW50IGlzIGludmFsaWQuJywgJ1RoZSBhbmNob3IgZWxlbWVudCBzaG91bGQgYmUgcGFydCBvZiB0aGUgZG9jdW1lbnQgbGF5b3V0LicsIFwiTWFrZSBzdXJlIHRoZSBlbGVtZW50IGlzIHByZXNlbnQgaW4gdGhlIGRvY3VtZW50IG9yIHRoYXQgaXQncyBub3QgZGlzcGxheSBub25lLlwiXS5qb2luKCdcXG4nKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgcG9wcGVyTW9kaWZpZXJzID0gW3tcbiAgICAgIG5hbWU6ICdwcmV2ZW50T3ZlcmZsb3cnLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBhbHRCb3VuZGFyeTogZGlzYWJsZVBvcnRhbFxuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIG5hbWU6ICdmbGlwJyxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgYWx0Qm91bmRhcnk6IGRpc2FibGVQb3J0YWxcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBuYW1lOiAnb25VcGRhdGUnLFxuICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgIHBoYXNlOiAnYWZ0ZXJXcml0ZScsXG4gICAgICBmbjogKHtcbiAgICAgICAgc3RhdGVcbiAgICAgIH0pID0+IHtcbiAgICAgICAgaGFuZGxlUG9wcGVyVXBkYXRlKHN0YXRlKTtcbiAgICAgIH1cbiAgICB9XTtcblxuICAgIGlmIChtb2RpZmllcnMgIT0gbnVsbCkge1xuICAgICAgcG9wcGVyTW9kaWZpZXJzID0gcG9wcGVyTW9kaWZpZXJzLmNvbmNhdChtb2RpZmllcnMpO1xuICAgIH1cblxuICAgIGlmIChwb3BwZXJPcHRpb25zICYmIHBvcHBlck9wdGlvbnMubW9kaWZpZXJzICE9IG51bGwpIHtcbiAgICAgIHBvcHBlck1vZGlmaWVycyA9IHBvcHBlck1vZGlmaWVycy5jb25jYXQocG9wcGVyT3B0aW9ucy5tb2RpZmllcnMpO1xuICAgIH1cblxuICAgIGNvbnN0IHBvcHBlciA9IGNyZWF0ZVBvcHBlcihyZXNvbHZlQW5jaG9yRWwoYW5jaG9yRWwpLCB0b29sdGlwUmVmLmN1cnJlbnQsIF9leHRlbmRzKHtcbiAgICAgIHBsYWNlbWVudDogcnRsUGxhY2VtZW50XG4gICAgfSwgcG9wcGVyT3B0aW9ucywge1xuICAgICAgbW9kaWZpZXJzOiBwb3BwZXJNb2RpZmllcnNcbiAgICB9KSk7XG4gICAgaGFuZGxlUG9wcGVyUmVmUmVmLmN1cnJlbnQocG9wcGVyKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgcG9wcGVyLmRlc3Ryb3koKTtcbiAgICAgIGhhbmRsZVBvcHBlclJlZlJlZi5jdXJyZW50KG51bGwpO1xuICAgIH07XG4gIH0sIFthbmNob3JFbCwgZGlzYWJsZVBvcnRhbCwgbW9kaWZpZXJzLCBvcGVuLCBwb3BwZXJPcHRpb25zLCBydGxQbGFjZW1lbnRdKTtcbiAgY29uc3QgY2hpbGRQcm9wcyA9IHtcbiAgICBwbGFjZW1lbnRcbiAgfTtcblxuICBpZiAoVHJhbnNpdGlvblByb3BzICE9PSBudWxsKSB7XG4gICAgY2hpbGRQcm9wcy5UcmFuc2l0aW9uUHJvcHMgPSBUcmFuc2l0aW9uUHJvcHM7XG4gIH1cblxuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goXCJkaXZcIiwgX2V4dGVuZHMoe1xuICAgIHJlZjogb3duUmVmLFxuICAgIHJvbGU6IFwidG9vbHRpcFwiXG4gIH0sIG90aGVyLCB7XG4gICAgY2hpbGRyZW46IHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKGNoaWxkUHJvcHMpIDogY2hpbGRyZW5cbiAgfSkpO1xufSk7XG4vKiBlc2xpbnQtZW5hYmxlIHJlYWN0L3Byb3AtdHlwZXMgKi9cblxuLyoqXG4gKiBQb3BwZXJzIHJlbHkgb24gdGhlIDNyZCBwYXJ0eSBsaWJyYXJ5IFtQb3BwZXIuanNdKGh0dHBzOi8vcG9wcGVyLmpzLm9yZy9kb2NzL3YyLykgZm9yIHBvc2l0aW9uaW5nLlxuICovXG5cbmNvbnN0IFBvcHBlclVuc3R5bGVkID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gUG9wcGVyVW5zdHlsZWQocHJvcHMsIHJlZikge1xuICBjb25zdCB7XG4gICAgYW5jaG9yRWwsXG4gICAgY2hpbGRyZW4sXG4gICAgY29udGFpbmVyOiBjb250YWluZXJQcm9wLFxuICAgIGRpcmVjdGlvbiA9ICdsdHInLFxuICAgIGRpc2FibGVQb3J0YWwgPSBmYWxzZSxcbiAgICBrZWVwTW91bnRlZCA9IGZhbHNlLFxuICAgIG1vZGlmaWVycyxcbiAgICBvcGVuLFxuICAgIHBsYWNlbWVudCA9ICdib3R0b20nLFxuICAgIHBvcHBlck9wdGlvbnMgPSBkZWZhdWx0UG9wcGVyT3B0aW9ucyxcbiAgICBwb3BwZXJSZWYsXG4gICAgc3R5bGUsXG4gICAgdHJhbnNpdGlvbiA9IGZhbHNlXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkMik7XG5cbiAgY29uc3QgW2V4aXRlZCwgc2V0RXhpdGVkXSA9IFJlYWN0LnVzZVN0YXRlKHRydWUpO1xuXG4gIGNvbnN0IGhhbmRsZUVudGVyID0gKCkgPT4ge1xuICAgIHNldEV4aXRlZChmYWxzZSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlRXhpdGVkID0gKCkgPT4ge1xuICAgIHNldEV4aXRlZCh0cnVlKTtcbiAgfTtcblxuICBpZiAoIWtlZXBNb3VudGVkICYmICFvcGVuICYmICghdHJhbnNpdGlvbiB8fCBleGl0ZWQpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gLy8gSWYgdGhlIGNvbnRhaW5lciBwcm9wIGlzIHByb3ZpZGVkLCB1c2UgdGhhdFxuICAvLyBJZiB0aGUgYW5jaG9yRWwgcHJvcCBpcyBwcm92aWRlZCwgdXNlIGl0cyBwYXJlbnQgYm9keSBlbGVtZW50IGFzIHRoZSBjb250YWluZXJcbiAgLy8gSWYgbmVpdGhlciBhcmUgcHJvdmlkZWQgbGV0IHRoZSBNb2RhbCB0YWtlIGNhcmUgb2YgY2hvb3NpbmcgdGhlIGNvbnRhaW5lclxuXG5cbiAgY29uc3QgY29udGFpbmVyID0gY29udGFpbmVyUHJvcCB8fCAoYW5jaG9yRWwgPyBvd25lckRvY3VtZW50KHJlc29sdmVBbmNob3JFbChhbmNob3JFbCkpLmJvZHkgOiB1bmRlZmluZWQpO1xuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goUG9ydGFsLCB7XG4gICAgZGlzYWJsZVBvcnRhbDogZGlzYWJsZVBvcnRhbCxcbiAgICBjb250YWluZXI6IGNvbnRhaW5lcixcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goUG9wcGVyVG9vbHRpcCwgX2V4dGVuZHMoe1xuICAgICAgYW5jaG9yRWw6IGFuY2hvckVsLFxuICAgICAgZGlyZWN0aW9uOiBkaXJlY3Rpb24sXG4gICAgICBkaXNhYmxlUG9ydGFsOiBkaXNhYmxlUG9ydGFsLFxuICAgICAgbW9kaWZpZXJzOiBtb2RpZmllcnMsXG4gICAgICByZWY6IHJlZixcbiAgICAgIG9wZW46IHRyYW5zaXRpb24gPyAhZXhpdGVkIDogb3BlbixcbiAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgcG9wcGVyT3B0aW9uczogcG9wcGVyT3B0aW9ucyxcbiAgICAgIHBvcHBlclJlZjogcG9wcGVyUmVmXG4gICAgfSwgb3RoZXIsIHtcbiAgICAgIHN0eWxlOiBfZXh0ZW5kcyh7XG4gICAgICAgIC8vIFByZXZlbnRzIHNjcm9sbCBpc3N1ZSwgd2FpdGluZyBmb3IgUG9wcGVyLmpzIHRvIGFkZCB0aGlzIHN0eWxlIG9uY2UgaW5pdGlhdGVkLlxuICAgICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgICAgLy8gRml4IFBvcHBlci5qcyBkaXNwbGF5IGlzc3VlXG4gICAgICAgIHRvcDogMCxcbiAgICAgICAgbGVmdDogMCxcbiAgICAgICAgZGlzcGxheTogIW9wZW4gJiYga2VlcE1vdW50ZWQgJiYgKCF0cmFuc2l0aW9uIHx8IGV4aXRlZCkgPyAnbm9uZScgOiBudWxsXG4gICAgICB9LCBzdHlsZSksXG4gICAgICBUcmFuc2l0aW9uUHJvcHM6IHRyYW5zaXRpb24gPyB7XG4gICAgICAgIGluOiBvcGVuLFxuICAgICAgICBvbkVudGVyOiBoYW5kbGVFbnRlcixcbiAgICAgICAgb25FeGl0ZWQ6IGhhbmRsZUV4aXRlZFxuICAgICAgfSA6IG51bGwsXG4gICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICB9KSlcbiAgfSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFBvcHBlclVuc3R5bGVkLnByb3BUeXBlc1xuLyogcmVtb3ZlLXByb3B0eXBlcyAqL1xuPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBBbiBIVE1MIGVsZW1lbnQsIFt2aXJ0dWFsRWxlbWVudF0oaHR0cHM6Ly9wb3BwZXIuanMub3JnL2RvY3MvdjIvdmlydHVhbC1lbGVtZW50cy8pLFxuICAgKiBvciBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBlaXRoZXIuXG4gICAqIEl0J3MgdXNlZCB0byBzZXQgdGhlIHBvc2l0aW9uIG9mIHRoZSBwb3BwZXIuXG4gICAqIFRoZSByZXR1cm4gdmFsdWUgd2lsbCBwYXNzZWQgYXMgdGhlIHJlZmVyZW5jZSBvYmplY3Qgb2YgdGhlIFBvcHBlciBpbnN0YW5jZS5cbiAgICovXG4gIGFuY2hvckVsOiBjaGFpblByb3BUeXBlcyhQcm9wVHlwZXMub25lT2ZUeXBlKFtIVE1MRWxlbWVudFR5cGUsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSksIHByb3BzID0+IHtcbiAgICBpZiAocHJvcHMub3Blbikge1xuICAgICAgY29uc3QgcmVzb2x2ZWRBbmNob3JFbCA9IHJlc29sdmVBbmNob3JFbChwcm9wcy5hbmNob3JFbCk7XG5cbiAgICAgIGlmIChyZXNvbHZlZEFuY2hvckVsICYmIHJlc29sdmVkQW5jaG9yRWwubm9kZVR5cGUgPT09IDEpIHtcbiAgICAgICAgY29uc3QgYm94ID0gcmVzb2x2ZWRBbmNob3JFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICd0ZXN0JyAmJiBib3gudG9wID09PSAwICYmIGJveC5sZWZ0ID09PSAwICYmIGJveC5yaWdodCA9PT0gMCAmJiBib3guYm90dG9tID09PSAwKSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihbJ01VSTogVGhlIGBhbmNob3JFbGAgcHJvcCBwcm92aWRlZCB0byB0aGUgY29tcG9uZW50IGlzIGludmFsaWQuJywgJ1RoZSBhbmNob3IgZWxlbWVudCBzaG91bGQgYmUgcGFydCBvZiB0aGUgZG9jdW1lbnQgbGF5b3V0LicsIFwiTWFrZSBzdXJlIHRoZSBlbGVtZW50IGlzIHByZXNlbnQgaW4gdGhlIGRvY3VtZW50IG9yIHRoYXQgaXQncyBub3QgZGlzcGxheSBub25lLlwiXS5qb2luKCdcXG4nKSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoIXJlc29sdmVkQW5jaG9yRWwgfHwgdHlwZW9mIHJlc29sdmVkQW5jaG9yRWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0ICE9PSAnZnVuY3Rpb24nIHx8IHJlc29sdmVkQW5jaG9yRWwuY29udGV4dEVsZW1lbnQgIT0gbnVsbCAmJiByZXNvbHZlZEFuY2hvckVsLmNvbnRleHRFbGVtZW50Lm5vZGVUeXBlICE9PSAxKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoWydNVUk6IFRoZSBgYW5jaG9yRWxgIHByb3AgcHJvdmlkZWQgdG8gdGhlIGNvbXBvbmVudCBpcyBpbnZhbGlkLicsICdJdCBzaG91bGQgYmUgYW4gSFRNTCBlbGVtZW50IGluc3RhbmNlIG9yIGEgdmlydHVhbEVsZW1lbnQgJywgJyhodHRwczovL3BvcHBlci5qcy5vcmcvZG9jcy92Mi92aXJ0dWFsLWVsZW1lbnRzLykuJ10uam9pbignXFxuJykpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9KSxcblxuICAvKipcbiAgICogUG9wcGVyIHJlbmRlciBmdW5jdGlvbiBvciBub2RlLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5vbmVPZlR5cGUoW1Byb3BUeXBlcy5ub2RlLCBQcm9wVHlwZXMuZnVuY10pLFxuXG4gIC8qKlxuICAgKiBBbiBIVE1MIGVsZW1lbnQgb3IgZnVuY3Rpb24gdGhhdCByZXR1cm5zIG9uZS5cbiAgICogVGhlIGBjb250YWluZXJgIHdpbGwgaGF2ZSB0aGUgcG9ydGFsIGNoaWxkcmVuIGFwcGVuZGVkIHRvIGl0LlxuICAgKlxuICAgKiBCeSBkZWZhdWx0LCBpdCB1c2VzIHRoZSBib2R5IG9mIHRoZSB0b3AtbGV2ZWwgZG9jdW1lbnQgb2JqZWN0LFxuICAgKiBzbyBpdCdzIHNpbXBseSBgZG9jdW1lbnQuYm9keWAgbW9zdCBvZiB0aGUgdGltZS5cbiAgICovXG4gIGNvbnRhaW5lcjogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbSFRNTEVsZW1lbnRUeXBlLCBQcm9wVHlwZXMuZnVuY10pLFxuXG4gIC8qKlxuICAgKiBEaXJlY3Rpb24gb2YgdGhlIHRleHQuXG4gICAqIEBkZWZhdWx0ICdsdHInXG4gICAqL1xuICBkaXJlY3Rpb246IFByb3BUeXBlcy5vbmVPZihbJ2x0cicsICdydGwnXSksXG5cbiAgLyoqXG4gICAqIFRoZSBgY2hpbGRyZW5gIHdpbGwgYmUgdW5kZXIgdGhlIERPTSBoaWVyYXJjaHkgb2YgdGhlIHBhcmVudCBjb21wb25lbnQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlUG9ydGFsOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQWx3YXlzIGtlZXAgdGhlIGNoaWxkcmVuIGluIHRoZSBET00uXG4gICAqIFRoaXMgcHJvcCBjYW4gYmUgdXNlZnVsIGluIFNFTyBzaXR1YXRpb24gb3JcbiAgICogd2hlbiB5b3Ugd2FudCB0byBtYXhpbWl6ZSB0aGUgcmVzcG9uc2l2ZW5lc3Mgb2YgdGhlIFBvcHBlci5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGtlZXBNb3VudGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogUG9wcGVyLmpzIGlzIGJhc2VkIG9uIGEgXCJwbHVnaW4tbGlrZVwiIGFyY2hpdGVjdHVyZSxcbiAgICogbW9zdCBvZiBpdHMgZmVhdHVyZXMgYXJlIGZ1bGx5IGVuY2Fwc3VsYXRlZCBcIm1vZGlmaWVyc1wiLlxuICAgKlxuICAgKiBBIG1vZGlmaWVyIGlzIGEgZnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgZWFjaCB0aW1lIFBvcHBlci5qcyBuZWVkcyB0b1xuICAgKiBjb21wdXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgcG9wcGVyLlxuICAgKiBGb3IgdGhpcyByZWFzb24sIG1vZGlmaWVycyBzaG91bGQgYmUgdmVyeSBwZXJmb3JtYW50IHRvIGF2b2lkIGJvdHRsZW5lY2tzLlxuICAgKiBUbyBsZWFybiBob3cgdG8gY3JlYXRlIGEgbW9kaWZpZXIsIFtyZWFkIHRoZSBtb2RpZmllcnMgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9wb3BwZXIuanMub3JnL2RvY3MvdjIvbW9kaWZpZXJzLykuXG4gICAqL1xuICBtb2RpZmllcnM6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zaGFwZSh7XG4gICAgZGF0YTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBlZmZlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICAgIGVuYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIGZuOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBuYW1lOiBQcm9wVHlwZXMuYW55LFxuICAgIG9wdGlvbnM6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcGhhc2U6IFByb3BUeXBlcy5vbmVPZihbJ2FmdGVyTWFpbicsICdhZnRlclJlYWQnLCAnYWZ0ZXJXcml0ZScsICdiZWZvcmVNYWluJywgJ2JlZm9yZVJlYWQnLCAnYmVmb3JlV3JpdGUnLCAnbWFpbicsICdyZWFkJywgJ3dyaXRlJ10pLFxuICAgIHJlcXVpcmVzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKSxcbiAgICByZXF1aXJlc0lmRXhpc3RzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKVxuICB9KSksXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCBpcyBzaG93bi5cbiAgICovXG4gIG9wZW46IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIFBvcHBlciBwbGFjZW1lbnQuXG4gICAqIEBkZWZhdWx0ICdib3R0b20nXG4gICAqL1xuICBwbGFjZW1lbnQ6IFByb3BUeXBlcy5vbmVPZihbJ2F1dG8tZW5kJywgJ2F1dG8tc3RhcnQnLCAnYXV0bycsICdib3R0b20tZW5kJywgJ2JvdHRvbS1zdGFydCcsICdib3R0b20nLCAnbGVmdC1lbmQnLCAnbGVmdC1zdGFydCcsICdsZWZ0JywgJ3JpZ2h0LWVuZCcsICdyaWdodC1zdGFydCcsICdyaWdodCcsICd0b3AtZW5kJywgJ3RvcC1zdGFydCcsICd0b3AnXSksXG5cbiAgLyoqXG4gICAqIE9wdGlvbnMgcHJvdmlkZWQgdG8gdGhlIFtgUG9wcGVyLmpzYF0oaHR0cHM6Ly9wb3BwZXIuanMub3JnL2RvY3MvdjIvY29uc3RydWN0b3JzLyNvcHRpb25zKSBpbnN0YW5jZS5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIHBvcHBlck9wdGlvbnM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgbW9kaWZpZXJzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgb25GaXJzdFVwZGF0ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcGxhY2VtZW50OiBQcm9wVHlwZXMub25lT2YoWydhdXRvLWVuZCcsICdhdXRvLXN0YXJ0JywgJ2F1dG8nLCAnYm90dG9tLWVuZCcsICdib3R0b20tc3RhcnQnLCAnYm90dG9tJywgJ2xlZnQtZW5kJywgJ2xlZnQtc3RhcnQnLCAnbGVmdCcsICdyaWdodC1lbmQnLCAncmlnaHQtc3RhcnQnLCAncmlnaHQnLCAndG9wLWVuZCcsICd0b3Atc3RhcnQnLCAndG9wJ10pLFxuICAgIHN0cmF0ZWd5OiBQcm9wVHlwZXMub25lT2YoWydhYnNvbHV0ZScsICdmaXhlZCddKVxuICB9KSxcblxuICAvKipcbiAgICogQSByZWYgdGhhdCBwb2ludHMgdG8gdGhlIHVzZWQgcG9wcGVyIGluc3RhbmNlLlxuICAgKi9cbiAgcG9wcGVyUmVmOiByZWZUeXBlLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogSGVscCBzdXBwb3J0aW5nIGEgcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9UcmFuc2l0aW9uIGNvbXBvbmVudC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIHRyYW5zaXRpb246IFByb3BUeXBlcy5ib29sXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgUG9wcGVyVW5zdHlsZWQ7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgUG9wcGVyVW5zdHlsZWQgZnJvbSAnQG11aS9iYXNlL1BvcHBlclVuc3R5bGVkJztcbmltcG9ydCB7IHVzZVRoZW1lV2l0aG91dERlZmF1bHQgYXMgdXNlVGhlbWUgfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgeyBIVE1MRWxlbWVudFR5cGUsIHJlZlR5cGUgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBzdHlsZWQsIHVzZVRoZW1lUHJvcHMgfSBmcm9tICcuLi9zdHlsZXMnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmNvbnN0IFBvcHBlclJvb3QgPSBzdHlsZWQoUG9wcGVyVW5zdHlsZWQsIHtcbiAgbmFtZTogJ011aVBvcHBlcicsXG4gIHNsb3Q6ICdSb290JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiBzdHlsZXMucm9vdFxufSkoe30pO1xuLyoqXG4gKlxuICogRGVtb3M6XG4gKlxuICogLSBbQXV0b2NvbXBsZXRlXShodHRwczovL211aS5jb20vbWF0ZXJpYWwtdWkvcmVhY3QtYXV0b2NvbXBsZXRlLylcbiAqIC0gW01lbnVzXShodHRwczovL211aS5jb20vbWF0ZXJpYWwtdWkvcmVhY3QtbWVudS8pXG4gKiAtIFtQb3BwZXJdKGh0dHBzOi8vbXVpLmNvbS9tYXRlcmlhbC11aS9yZWFjdC1wb3BwZXIvKVxuICpcbiAqIEFQSTpcbiAqXG4gKiAtIFtQb3BwZXIgQVBJXShodHRwczovL211aS5jb20vbWF0ZXJpYWwtdWkvYXBpL3BvcHBlci8pXG4gKi9cblxuY29uc3QgUG9wcGVyID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gUG9wcGVyKGluUHJvcHMsIHJlZikge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aVBvcHBlcidcbiAgfSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChQb3BwZXJSb290LCBfZXh0ZW5kcyh7XG4gICAgZGlyZWN0aW9uOiB0aGVtZSA9PSBudWxsID8gdm9pZCAwIDogdGhlbWUuZGlyZWN0aW9uXG4gIH0sIHByb3BzLCB7XG4gICAgcmVmOiByZWZcbiAgfSkpO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBQb3BwZXIucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgVHlwZVNjcmlwdCB0eXBlcyBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIEFuIEhUTUwgZWxlbWVudCwgW3ZpcnR1YWxFbGVtZW50XShodHRwczovL3BvcHBlci5qcy5vcmcvZG9jcy92Mi92aXJ0dWFsLWVsZW1lbnRzLyksXG4gICAqIG9yIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGVpdGhlci5cbiAgICogSXQncyB1c2VkIHRvIHNldCB0aGUgcG9zaXRpb24gb2YgdGhlIHBvcHBlci5cbiAgICogVGhlIHJldHVybiB2YWx1ZSB3aWxsIHBhc3NlZCBhcyB0aGUgcmVmZXJlbmNlIG9iamVjdCBvZiB0aGUgUG9wcGVyIGluc3RhbmNlLlxuICAgKi9cbiAgYW5jaG9yRWw6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5vbmVPZlR5cGUoW0hUTUxFbGVtZW50VHlwZSwgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmZ1bmNdKSxcblxuICAvKipcbiAgICogUG9wcGVyIHJlbmRlciBmdW5jdGlvbiBvciBub2RlLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5vbmVPZlR5cGUoW1Byb3BUeXBlcy5ub2RlLCBQcm9wVHlwZXMuZnVuY10pLFxuXG4gIC8qKlxuICAgKiBBbiBIVE1MIGVsZW1lbnQgb3IgZnVuY3Rpb24gdGhhdCByZXR1cm5zIG9uZS5cbiAgICogVGhlIGBjb250YWluZXJgIHdpbGwgaGF2ZSB0aGUgcG9ydGFsIGNoaWxkcmVuIGFwcGVuZGVkIHRvIGl0LlxuICAgKlxuICAgKiBCeSBkZWZhdWx0LCBpdCB1c2VzIHRoZSBib2R5IG9mIHRoZSB0b3AtbGV2ZWwgZG9jdW1lbnQgb2JqZWN0LFxuICAgKiBzbyBpdCdzIHNpbXBseSBgZG9jdW1lbnQuYm9keWAgbW9zdCBvZiB0aGUgdGltZS5cbiAgICovXG4gIGNvbnRhaW5lcjogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm9uZU9mVHlwZShbSFRNTEVsZW1lbnRUeXBlLCBQcm9wVHlwZXMuZnVuY10pLFxuXG4gIC8qKlxuICAgKiBUaGUgYGNoaWxkcmVuYCB3aWxsIGJlIHVuZGVyIHRoZSBET00gaGllcmFyY2h5IG9mIHRoZSBwYXJlbnQgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZVBvcnRhbDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEFsd2F5cyBrZWVwIHRoZSBjaGlsZHJlbiBpbiB0aGUgRE9NLlxuICAgKiBUaGlzIHByb3AgY2FuIGJlIHVzZWZ1bCBpbiBTRU8gc2l0dWF0aW9uIG9yXG4gICAqIHdoZW4geW91IHdhbnQgdG8gbWF4aW1pemUgdGhlIHJlc3BvbnNpdmVuZXNzIG9mIHRoZSBQb3BwZXIuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBrZWVwTW91bnRlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFBvcHBlci5qcyBpcyBiYXNlZCBvbiBhIFwicGx1Z2luLWxpa2VcIiBhcmNoaXRlY3R1cmUsXG4gICAqIG1vc3Qgb2YgaXRzIGZlYXR1cmVzIGFyZSBmdWxseSBlbmNhcHN1bGF0ZWQgXCJtb2RpZmllcnNcIi5cbiAgICpcbiAgICogQSBtb2RpZmllciBpcyBhIGZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIGVhY2ggdGltZSBQb3BwZXIuanMgbmVlZHMgdG9cbiAgICogY29tcHV0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIHBvcHBlci5cbiAgICogRm9yIHRoaXMgcmVhc29uLCBtb2RpZmllcnMgc2hvdWxkIGJlIHZlcnkgcGVyZm9ybWFudCB0byBhdm9pZCBib3R0bGVuZWNrcy5cbiAgICogVG8gbGVhcm4gaG93IHRvIGNyZWF0ZSBhIG1vZGlmaWVyLCBbcmVhZCB0aGUgbW9kaWZpZXJzIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vcG9wcGVyLmpzLm9yZy9kb2NzL3YyL21vZGlmaWVycy8pLlxuICAgKi9cbiAgbW9kaWZpZXJzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGRhdGE6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgZWZmZWN0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBlbmFibGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgbmFtZTogUHJvcFR5cGVzLmFueSxcbiAgICBvcHRpb25zOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBoYXNlOiBQcm9wVHlwZXMub25lT2YoWydhZnRlck1haW4nLCAnYWZ0ZXJSZWFkJywgJ2FmdGVyV3JpdGUnLCAnYmVmb3JlTWFpbicsICdiZWZvcmVSZWFkJywgJ2JlZm9yZVdyaXRlJywgJ21haW4nLCAncmVhZCcsICd3cml0ZSddKSxcbiAgICByZXF1aXJlczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyksXG4gICAgcmVxdWlyZXNJZkV4aXN0czogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZylcbiAgfSkpLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaXMgc2hvd24uXG4gICAqL1xuICBvcGVuOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBQb3BwZXIgcGxhY2VtZW50LlxuICAgKiBAZGVmYXVsdCAnYm90dG9tJ1xuICAgKi9cbiAgcGxhY2VtZW50OiBQcm9wVHlwZXMub25lT2YoWydhdXRvLWVuZCcsICdhdXRvLXN0YXJ0JywgJ2F1dG8nLCAnYm90dG9tLWVuZCcsICdib3R0b20tc3RhcnQnLCAnYm90dG9tJywgJ2xlZnQtZW5kJywgJ2xlZnQtc3RhcnQnLCAnbGVmdCcsICdyaWdodC1lbmQnLCAncmlnaHQtc3RhcnQnLCAncmlnaHQnLCAndG9wLWVuZCcsICd0b3Atc3RhcnQnLCAndG9wJ10pLFxuXG4gIC8qKlxuICAgKiBPcHRpb25zIHByb3ZpZGVkIHRvIHRoZSBbYFBvcHBlci5qc2BdKGh0dHBzOi8vcG9wcGVyLmpzLm9yZy9kb2NzL3YyL2NvbnN0cnVjdG9ycy8jb3B0aW9ucykgaW5zdGFuY2UuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBwb3BwZXJPcHRpb25zOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIG1vZGlmaWVyczogUHJvcFR5cGVzLmFycmF5LFxuICAgIG9uRmlyc3RVcGRhdGU6IFByb3BUeXBlcy5mdW5jLFxuICAgIHBsYWNlbWVudDogUHJvcFR5cGVzLm9uZU9mKFsnYXV0by1lbmQnLCAnYXV0by1zdGFydCcsICdhdXRvJywgJ2JvdHRvbS1lbmQnLCAnYm90dG9tLXN0YXJ0JywgJ2JvdHRvbScsICdsZWZ0LWVuZCcsICdsZWZ0LXN0YXJ0JywgJ2xlZnQnLCAncmlnaHQtZW5kJywgJ3JpZ2h0LXN0YXJ0JywgJ3JpZ2h0JywgJ3RvcC1lbmQnLCAndG9wLXN0YXJ0JywgJ3RvcCddKSxcbiAgICBzdHJhdGVneTogUHJvcFR5cGVzLm9uZU9mKFsnYWJzb2x1dGUnLCAnZml4ZWQnXSlcbiAgfSksXG5cbiAgLyoqXG4gICAqIEEgcmVmIHRoYXQgcG9pbnRzIHRvIHRoZSB1c2VkIHBvcHBlciBpbnN0YW5jZS5cbiAgICovXG4gIHBvcHBlclJlZjogcmVmVHlwZSxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pLFxuXG4gIC8qKlxuICAgKiBIZWxwIHN1cHBvcnRpbmcgYSByZWFjdC10cmFuc2l0aW9uLWdyb3VwL1RyYW5zaXRpb24gY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgdHJhbnNpdGlvbjogUHJvcFR5cGVzLmJvb2xcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBQb3BwZXI7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xubGV0IGdsb2JhbElkID0gMDtcblxuZnVuY3Rpb24gdXNlR2xvYmFsSWQoaWRPdmVycmlkZSkge1xuICBjb25zdCBbZGVmYXVsdElkLCBzZXREZWZhdWx0SWRdID0gUmVhY3QudXNlU3RhdGUoaWRPdmVycmlkZSk7XG4gIGNvbnN0IGlkID0gaWRPdmVycmlkZSB8fCBkZWZhdWx0SWQ7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGRlZmF1bHRJZCA9PSBudWxsKSB7XG4gICAgICAvLyBGYWxsYmFjayB0byB0aGlzIGRlZmF1bHQgaWQgd2hlbiBwb3NzaWJsZS5cbiAgICAgIC8vIFVzZSB0aGUgaW5jcmVtZW50aW5nIHZhbHVlIGZvciBjbGllbnQtc2lkZSByZW5kZXJpbmcgb25seS5cbiAgICAgIC8vIFdlIGNhbid0IHVzZSBpdCBzZXJ2ZXItc2lkZS5cbiAgICAgIC8vIElmIHlvdSB3YW50IHRvIHVzZSByYW5kb20gdmFsdWVzIHBsZWFzZSBjb25zaWRlciB0aGUgQmlydGhkYXkgUHJvYmxlbTogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmlydGhkYXlfcHJvYmxlbVxuICAgICAgZ2xvYmFsSWQgKz0gMTtcbiAgICAgIHNldERlZmF1bHRJZChgbXVpLSR7Z2xvYmFsSWR9YCk7XG4gICAgfVxuICB9LCBbZGVmYXVsdElkXSk7XG4gIHJldHVybiBpZDtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZWxlc3MtY29uY2F0IC0tIFdvcmthcm91bmQgZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrL3dlYnBhY2svaXNzdWVzLzE0ODE0XG5cblxuY29uc3QgbWF5YmVSZWFjdFVzZUlkID0gUmVhY3RbJ3VzZUlkJyArICcnXTtcbi8qKlxuICpcbiAqIEBleGFtcGxlIDxkaXYgaWQ9e3VzZUlkKCl9IC8+XG4gKiBAcGFyYW0gaWRPdmVycmlkZVxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VJZChpZE92ZXJyaWRlKSB7XG4gIGlmIChtYXliZVJlYWN0VXNlSWQgIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IHJlYWN0SWQgPSBtYXliZVJlYWN0VXNlSWQoKTtcbiAgICByZXR1cm4gaWRPdmVycmlkZSAhPSBudWxsID8gaWRPdmVycmlkZSA6IHJlYWN0SWQ7XG4gIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzIC0tIGBSZWFjdC51c2VJZGAgaXMgaW52YXJpYW50IGF0IHJ1bnRpbWUuXG5cblxuICByZXR1cm4gdXNlR2xvYmFsSWQoaWRPdmVycmlkZSk7XG59IiwiaW1wb3J0IHsgdW5zdGFibGVfdXNlSWQgYXMgdXNlSWQgfSBmcm9tICdAbXVpL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IHVzZUlkOyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRUb29sdGlwVXRpbGl0eUNsYXNzKHNsb3QpIHtcbiAgcmV0dXJuIGdlbmVyYXRlVXRpbGl0eUNsYXNzKCdNdWlUb29sdGlwJywgc2xvdCk7XG59XG5jb25zdCB0b29sdGlwQ2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aVRvb2x0aXAnLCBbJ3BvcHBlcicsICdwb3BwZXJJbnRlcmFjdGl2ZScsICdwb3BwZXJBcnJvdycsICdwb3BwZXJDbG9zZScsICd0b29sdGlwJywgJ3Rvb2x0aXBBcnJvdycsICd0b3VjaCcsICd0b29sdGlwUGxhY2VtZW50TGVmdCcsICd0b29sdGlwUGxhY2VtZW50UmlnaHQnLCAndG9vbHRpcFBsYWNlbWVudFRvcCcsICd0b29sdGlwUGxhY2VtZW50Qm90dG9tJywgJ2Fycm93J10pO1xuZXhwb3J0IGRlZmF1bHQgdG9vbHRpcENsYXNzZXM7IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImFycm93XCIsIFwiY2hpbGRyZW5cIiwgXCJjbGFzc2VzXCIsIFwiY29tcG9uZW50c1wiLCBcImNvbXBvbmVudHNQcm9wc1wiLCBcImRlc2NyaWJlQ2hpbGRcIiwgXCJkaXNhYmxlRm9jdXNMaXN0ZW5lclwiLCBcImRpc2FibGVIb3Zlckxpc3RlbmVyXCIsIFwiZGlzYWJsZUludGVyYWN0aXZlXCIsIFwiZGlzYWJsZVRvdWNoTGlzdGVuZXJcIiwgXCJlbnRlckRlbGF5XCIsIFwiZW50ZXJOZXh0RGVsYXlcIiwgXCJlbnRlclRvdWNoRGVsYXlcIiwgXCJmb2xsb3dDdXJzb3JcIiwgXCJpZFwiLCBcImxlYXZlRGVsYXlcIiwgXCJsZWF2ZVRvdWNoRGVsYXlcIiwgXCJvbkNsb3NlXCIsIFwib25PcGVuXCIsIFwib3BlblwiLCBcInBsYWNlbWVudFwiLCBcIlBvcHBlckNvbXBvbmVudFwiLCBcIlBvcHBlclByb3BzXCIsIFwidGl0bGVcIiwgXCJUcmFuc2l0aW9uQ29tcG9uZW50XCIsIFwiVHJhbnNpdGlvblByb3BzXCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgZWxlbWVudEFjY2VwdGluZ1JlZiB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IHsgdW5zdGFibGVfY29tcG9zZUNsYXNzZXMgYXMgY29tcG9zZUNsYXNzZXMsIGFwcGVuZE93bmVyU3RhdGUgfSBmcm9tICdAbXVpL2Jhc2UnO1xuaW1wb3J0IHsgYWxwaGEgfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHVzZVRoZW1lIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZSc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wcyBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWVQcm9wcyc7XG5pbXBvcnQgY2FwaXRhbGl6ZSBmcm9tICcuLi91dGlscy9jYXBpdGFsaXplJztcbmltcG9ydCBHcm93IGZyb20gJy4uL0dyb3cnO1xuaW1wb3J0IFBvcHBlciBmcm9tICcuLi9Qb3BwZXInO1xuaW1wb3J0IHVzZUV2ZW50Q2FsbGJhY2sgZnJvbSAnLi4vdXRpbHMvdXNlRXZlbnRDYWxsYmFjayc7XG5pbXBvcnQgdXNlRm9ya1JlZiBmcm9tICcuLi91dGlscy91c2VGb3JrUmVmJztcbmltcG9ydCB1c2VJZCBmcm9tICcuLi91dGlscy91c2VJZCc7XG5pbXBvcnQgdXNlSXNGb2N1c1Zpc2libGUgZnJvbSAnLi4vdXRpbHMvdXNlSXNGb2N1c1Zpc2libGUnO1xuaW1wb3J0IHVzZUNvbnRyb2xsZWQgZnJvbSAnLi4vdXRpbHMvdXNlQ29udHJvbGxlZCc7XG5pbXBvcnQgdG9vbHRpcENsYXNzZXMsIHsgZ2V0VG9vbHRpcFV0aWxpdHlDbGFzcyB9IGZyb20gJy4vdG9vbHRpcENsYXNzZXMnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuZnVuY3Rpb24gcm91bmQodmFsdWUpIHtcbiAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiAxZTUpIC8gMWU1O1xufVxuXG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3NlcyxcbiAgICBkaXNhYmxlSW50ZXJhY3RpdmUsXG4gICAgYXJyb3csXG4gICAgdG91Y2gsXG4gICAgcGxhY2VtZW50XG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICBwb3BwZXI6IFsncG9wcGVyJywgIWRpc2FibGVJbnRlcmFjdGl2ZSAmJiAncG9wcGVySW50ZXJhY3RpdmUnLCBhcnJvdyAmJiAncG9wcGVyQXJyb3cnXSxcbiAgICB0b29sdGlwOiBbJ3Rvb2x0aXAnLCBhcnJvdyAmJiAndG9vbHRpcEFycm93JywgdG91Y2ggJiYgJ3RvdWNoJywgYHRvb2x0aXBQbGFjZW1lbnQke2NhcGl0YWxpemUocGxhY2VtZW50LnNwbGl0KCctJylbMF0pfWBdLFxuICAgIGFycm93OiBbJ2Fycm93J11cbiAgfTtcbiAgcmV0dXJuIGNvbXBvc2VDbGFzc2VzKHNsb3RzLCBnZXRUb29sdGlwVXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbn07XG5cbmNvbnN0IFRvb2x0aXBQb3BwZXIgPSBzdHlsZWQoUG9wcGVyLCB7XG4gIG5hbWU6ICdNdWlUb29sdGlwJyxcbiAgc2xvdDogJ1BvcHBlcicsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFtzdHlsZXMucG9wcGVyLCAhb3duZXJTdGF0ZS5kaXNhYmxlSW50ZXJhY3RpdmUgJiYgc3R5bGVzLnBvcHBlckludGVyYWN0aXZlLCBvd25lclN0YXRlLmFycm93ICYmIHN0eWxlcy5wb3BwZXJBcnJvdywgIW93bmVyU3RhdGUub3BlbiAmJiBzdHlsZXMucG9wcGVyQ2xvc2VdO1xuICB9XG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZSxcbiAgb3BlblxufSkgPT4gX2V4dGVuZHMoe1xuICB6SW5kZXg6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS56SW5kZXgudG9vbHRpcCxcbiAgcG9pbnRlckV2ZW50czogJ25vbmUnXG59LCAhb3duZXJTdGF0ZS5kaXNhYmxlSW50ZXJhY3RpdmUgJiYge1xuICBwb2ludGVyRXZlbnRzOiAnYXV0bydcbn0sICFvcGVuICYmIHtcbiAgcG9pbnRlckV2ZW50czogJ25vbmUnXG59LCBvd25lclN0YXRlLmFycm93ICYmIHtcbiAgW2AmW2RhdGEtcG9wcGVyLXBsYWNlbWVudCo9XCJib3R0b21cIl0gLiR7dG9vbHRpcENsYXNzZXMuYXJyb3d9YF06IHtcbiAgICB0b3A6IDAsXG4gICAgbWFyZ2luVG9wOiAnLTAuNzFlbScsXG4gICAgJyY6OmJlZm9yZSc6IHtcbiAgICAgIHRyYW5zZm9ybU9yaWdpbjogJzAgMTAwJSdcbiAgICB9XG4gIH0sXG4gIFtgJltkYXRhLXBvcHBlci1wbGFjZW1lbnQqPVwidG9wXCJdIC4ke3Rvb2x0aXBDbGFzc2VzLmFycm93fWBdOiB7XG4gICAgYm90dG9tOiAwLFxuICAgIG1hcmdpbkJvdHRvbTogJy0wLjcxZW0nLFxuICAgICcmOjpiZWZvcmUnOiB7XG4gICAgICB0cmFuc2Zvcm1PcmlnaW46ICcxMDAlIDAnXG4gICAgfVxuICB9LFxuICBbYCZbZGF0YS1wb3BwZXItcGxhY2VtZW50Kj1cInJpZ2h0XCJdIC4ke3Rvb2x0aXBDbGFzc2VzLmFycm93fWBdOiBfZXh0ZW5kcyh7fSwgIW93bmVyU3RhdGUuaXNSdGwgPyB7XG4gICAgbGVmdDogMCxcbiAgICBtYXJnaW5MZWZ0OiAnLTAuNzFlbSdcbiAgfSA6IHtcbiAgICByaWdodDogMCxcbiAgICBtYXJnaW5SaWdodDogJy0wLjcxZW0nXG4gIH0sIHtcbiAgICBoZWlnaHQ6ICcxZW0nLFxuICAgIHdpZHRoOiAnMC43MWVtJyxcbiAgICAnJjo6YmVmb3JlJzoge1xuICAgICAgdHJhbnNmb3JtT3JpZ2luOiAnMTAwJSAxMDAlJ1xuICAgIH1cbiAgfSksXG4gIFtgJltkYXRhLXBvcHBlci1wbGFjZW1lbnQqPVwibGVmdFwiXSAuJHt0b29sdGlwQ2xhc3Nlcy5hcnJvd31gXTogX2V4dGVuZHMoe30sICFvd25lclN0YXRlLmlzUnRsID8ge1xuICAgIHJpZ2h0OiAwLFxuICAgIG1hcmdpblJpZ2h0OiAnLTAuNzFlbSdcbiAgfSA6IHtcbiAgICBsZWZ0OiAwLFxuICAgIG1hcmdpbkxlZnQ6ICctMC43MWVtJ1xuICB9LCB7XG4gICAgaGVpZ2h0OiAnMWVtJyxcbiAgICB3aWR0aDogJzAuNzFlbScsXG4gICAgJyY6OmJlZm9yZSc6IHtcbiAgICAgIHRyYW5zZm9ybU9yaWdpbjogJzAgMCdcbiAgICB9XG4gIH0pXG59KSk7XG5jb25zdCBUb29sdGlwVG9vbHRpcCA9IHN0eWxlZCgnZGl2Jywge1xuICBuYW1lOiAnTXVpVG9vbHRpcCcsXG4gIHNsb3Q6ICdUb29sdGlwJyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgb3duZXJTdGF0ZVxuICAgIH0gPSBwcm9wcztcbiAgICByZXR1cm4gW3N0eWxlcy50b29sdGlwLCBvd25lclN0YXRlLnRvdWNoICYmIHN0eWxlcy50b3VjaCwgb3duZXJTdGF0ZS5hcnJvdyAmJiBzdHlsZXMudG9vbHRpcEFycm93LCBzdHlsZXNbYHRvb2x0aXBQbGFjZW1lbnQke2NhcGl0YWxpemUob3duZXJTdGF0ZS5wbGFjZW1lbnQuc3BsaXQoJy0nKVswXSl9YF1dO1xuICB9XG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4gX2V4dGVuZHMoe1xuICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnZhcnMgPyB0aGVtZS52YXJzLnBhbGV0dGUuVG9vbHRpcC5iZyA6IGFscGhhKHRoZW1lLnBhbGV0dGUuZ3JleVs3MDBdLCAwLjkyKSxcbiAgYm9yZGVyUmFkaXVzOiAodGhlbWUudmFycyB8fCB0aGVtZSkuc2hhcGUuYm9yZGVyUmFkaXVzLFxuICBjb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuY29tbW9uLndoaXRlLFxuICBmb250RmFtaWx5OiB0aGVtZS50eXBvZ3JhcGh5LmZvbnRGYW1pbHksXG4gIHBhZGRpbmc6ICc0cHggOHB4JyxcbiAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkucHhUb1JlbSgxMSksXG4gIG1heFdpZHRoOiAzMDAsXG4gIG1hcmdpbjogMixcbiAgd29yZFdyYXA6ICdicmVhay13b3JkJyxcbiAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5mb250V2VpZ2h0TWVkaXVtXG59LCBvd25lclN0YXRlLmFycm93ICYmIHtcbiAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gIG1hcmdpbjogMFxufSwgb3duZXJTdGF0ZS50b3VjaCAmJiB7XG4gIHBhZGRpbmc6ICc4cHggMTZweCcsXG4gIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LnB4VG9SZW0oMTQpLFxuICBsaW5lSGVpZ2h0OiBgJHtyb3VuZCgxNiAvIDE0KX1lbWAsXG4gIGZvbnRXZWlnaHQ6IHRoZW1lLnR5cG9ncmFwaHkuZm9udFdlaWdodFJlZ3VsYXJcbn0sIHtcbiAgW2AuJHt0b29sdGlwQ2xhc3Nlcy5wb3BwZXJ9W2RhdGEtcG9wcGVyLXBsYWNlbWVudCo9XCJsZWZ0XCJdICZgXTogX2V4dGVuZHMoe1xuICAgIHRyYW5zZm9ybU9yaWdpbjogJ3JpZ2h0IGNlbnRlcidcbiAgfSwgIW93bmVyU3RhdGUuaXNSdGwgPyBfZXh0ZW5kcyh7XG4gICAgbWFyZ2luUmlnaHQ6ICcxNHB4J1xuICB9LCBvd25lclN0YXRlLnRvdWNoICYmIHtcbiAgICBtYXJnaW5SaWdodDogJzI0cHgnXG4gIH0pIDogX2V4dGVuZHMoe1xuICAgIG1hcmdpbkxlZnQ6ICcxNHB4J1xuICB9LCBvd25lclN0YXRlLnRvdWNoICYmIHtcbiAgICBtYXJnaW5MZWZ0OiAnMjRweCdcbiAgfSkpLFxuICBbYC4ke3Rvb2x0aXBDbGFzc2VzLnBvcHBlcn1bZGF0YS1wb3BwZXItcGxhY2VtZW50Kj1cInJpZ2h0XCJdICZgXTogX2V4dGVuZHMoe1xuICAgIHRyYW5zZm9ybU9yaWdpbjogJ2xlZnQgY2VudGVyJ1xuICB9LCAhb3duZXJTdGF0ZS5pc1J0bCA/IF9leHRlbmRzKHtcbiAgICBtYXJnaW5MZWZ0OiAnMTRweCdcbiAgfSwgb3duZXJTdGF0ZS50b3VjaCAmJiB7XG4gICAgbWFyZ2luTGVmdDogJzI0cHgnXG4gIH0pIDogX2V4dGVuZHMoe1xuICAgIG1hcmdpblJpZ2h0OiAnMTRweCdcbiAgfSwgb3duZXJTdGF0ZS50b3VjaCAmJiB7XG4gICAgbWFyZ2luUmlnaHQ6ICcyNHB4J1xuICB9KSksXG4gIFtgLiR7dG9vbHRpcENsYXNzZXMucG9wcGVyfVtkYXRhLXBvcHBlci1wbGFjZW1lbnQqPVwidG9wXCJdICZgXTogX2V4dGVuZHMoe1xuICAgIHRyYW5zZm9ybU9yaWdpbjogJ2NlbnRlciBib3R0b20nLFxuICAgIG1hcmdpbkJvdHRvbTogJzE0cHgnXG4gIH0sIG93bmVyU3RhdGUudG91Y2ggJiYge1xuICAgIG1hcmdpbkJvdHRvbTogJzI0cHgnXG4gIH0pLFxuICBbYC4ke3Rvb2x0aXBDbGFzc2VzLnBvcHBlcn1bZGF0YS1wb3BwZXItcGxhY2VtZW50Kj1cImJvdHRvbVwiXSAmYF06IF9leHRlbmRzKHtcbiAgICB0cmFuc2Zvcm1PcmlnaW46ICdjZW50ZXIgdG9wJyxcbiAgICBtYXJnaW5Ub3A6ICcxNHB4J1xuICB9LCBvd25lclN0YXRlLnRvdWNoICYmIHtcbiAgICBtYXJnaW5Ub3A6ICcyNHB4J1xuICB9KVxufSkpO1xuY29uc3QgVG9vbHRpcEFycm93ID0gc3R5bGVkKCdzcGFuJywge1xuICBuYW1lOiAnTXVpVG9vbHRpcCcsXG4gIHNsb3Q6ICdBcnJvdycsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4gc3R5bGVzLmFycm93XG59KSgoe1xuICB0aGVtZVxufSkgPT4gKHtcbiAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgd2lkdGg6ICcxZW0nLFxuICBoZWlnaHQ6ICcwLjcxZW0nXG4gIC8qID0gd2lkdGggLyBzcXJ0KDIpID0gKGxlbmd0aCBvZiB0aGUgaHlwb3RlbnVzZSkgKi9cbiAgLFxuICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgY29sb3I6IHRoZW1lLnZhcnMgPyBgcmdiYSgke3RoZW1lLnZhcnMucGFsZXR0ZS5ncmV5LmRhcmtDaGFubmVsfSAvIDAuOSlgIDogYWxwaGEodGhlbWUucGFsZXR0ZS5ncmV5WzcwMF0sIDAuOSksXG4gICcmOjpiZWZvcmUnOiB7XG4gICAgY29udGVudDogJ1wiXCInLFxuICAgIG1hcmdpbjogJ2F1dG8nLFxuICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICdjdXJyZW50Q29sb3InLFxuICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSg0NWRlZyknXG4gIH1cbn0pKTtcbmxldCBoeXN0ZXJzaXNPcGVuID0gZmFsc2U7XG5sZXQgaHlzdGVyc2lzVGltZXIgPSBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHRlc3RSZXNldCgpIHtcbiAgaHlzdGVyc2lzT3BlbiA9IGZhbHNlO1xuICBjbGVhclRpbWVvdXQoaHlzdGVyc2lzVGltZXIpO1xufVxuXG5mdW5jdGlvbiBjb21wb3NlRXZlbnRIYW5kbGVyKGhhbmRsZXIsIGV2ZW50SGFuZGxlcikge1xuICByZXR1cm4gZXZlbnQgPT4ge1xuICAgIGlmIChldmVudEhhbmRsZXIpIHtcbiAgICAgIGV2ZW50SGFuZGxlcihldmVudCk7XG4gICAgfVxuXG4gICAgaGFuZGxlcihldmVudCk7XG4gIH07XG59IC8vIFRPRE8gdjY6IFJlbW92ZSBQb3BwZXJDb21wb25lbnQsIFBvcHBlclByb3BzLCBUcmFuc2l0aW9uQ29tcG9uZW50IGFuZCBUcmFuc2l0aW9uUHJvcHMuXG5cblxuY29uc3QgVG9vbHRpcCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRvb2x0aXAoaW5Qcm9wcywgcmVmKSB7XG4gIHZhciBfY29tcG9uZW50cyRQb3BwZXIsIF9yZWYsIF9jb21wb25lbnRzJFRyYW5zaXRpbywgX2NvbXBvbmVudHMkVG9vbHRpcCwgX2NvbXBvbmVudHMkQXJyb3csIF9jb21wb25lbnRzUHJvcHMkcG9wcDtcblxuICBjb25zdCBwcm9wcyA9IHVzZVRoZW1lUHJvcHMoe1xuICAgIHByb3BzOiBpblByb3BzLFxuICAgIG5hbWU6ICdNdWlUb29sdGlwJ1xuICB9KTtcblxuICBjb25zdCB7XG4gICAgYXJyb3cgPSBmYWxzZSxcbiAgICBjaGlsZHJlbixcbiAgICBjb21wb25lbnRzID0ge30sXG4gICAgY29tcG9uZW50c1Byb3BzID0ge30sXG4gICAgZGVzY3JpYmVDaGlsZCA9IGZhbHNlLFxuICAgIGRpc2FibGVGb2N1c0xpc3RlbmVyID0gZmFsc2UsXG4gICAgZGlzYWJsZUhvdmVyTGlzdGVuZXIgPSBmYWxzZSxcbiAgICBkaXNhYmxlSW50ZXJhY3RpdmU6IGRpc2FibGVJbnRlcmFjdGl2ZVByb3AgPSBmYWxzZSxcbiAgICBkaXNhYmxlVG91Y2hMaXN0ZW5lciA9IGZhbHNlLFxuICAgIGVudGVyRGVsYXkgPSAxMDAsXG4gICAgZW50ZXJOZXh0RGVsYXkgPSAwLFxuICAgIGVudGVyVG91Y2hEZWxheSA9IDcwMCxcbiAgICBmb2xsb3dDdXJzb3IgPSBmYWxzZSxcbiAgICBpZDogaWRQcm9wLFxuICAgIGxlYXZlRGVsYXkgPSAwLFxuICAgIGxlYXZlVG91Y2hEZWxheSA9IDE1MDAsXG4gICAgb25DbG9zZSxcbiAgICBvbk9wZW4sXG4gICAgb3Blbjogb3BlblByb3AsXG4gICAgcGxhY2VtZW50ID0gJ2JvdHRvbScsXG4gICAgUG9wcGVyQ29tcG9uZW50OiBQb3BwZXJDb21wb25lbnRQcm9wLFxuICAgIFBvcHBlclByb3BzID0ge30sXG4gICAgdGl0bGUsXG4gICAgVHJhbnNpdGlvbkNvbXBvbmVudDogVHJhbnNpdGlvbkNvbXBvbmVudFByb3AgPSBHcm93LFxuICAgIFRyYW5zaXRpb25Qcm9wc1xuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBpc1J0bCA9IHRoZW1lLmRpcmVjdGlvbiA9PT0gJ3J0bCc7XG4gIGNvbnN0IFtjaGlsZE5vZGUsIHNldENoaWxkTm9kZV0gPSBSZWFjdC51c2VTdGF0ZSgpO1xuICBjb25zdCBbYXJyb3dSZWYsIHNldEFycm93UmVmXSA9IFJlYWN0LnVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBpZ25vcmVOb25Ub3VjaEV2ZW50cyA9IFJlYWN0LnVzZVJlZihmYWxzZSk7XG4gIGNvbnN0IGRpc2FibGVJbnRlcmFjdGl2ZSA9IGRpc2FibGVJbnRlcmFjdGl2ZVByb3AgfHwgZm9sbG93Q3Vyc29yO1xuICBjb25zdCBjbG9zZVRpbWVyID0gUmVhY3QudXNlUmVmKCk7XG4gIGNvbnN0IGVudGVyVGltZXIgPSBSZWFjdC51c2VSZWYoKTtcbiAgY29uc3QgbGVhdmVUaW1lciA9IFJlYWN0LnVzZVJlZigpO1xuICBjb25zdCB0b3VjaFRpbWVyID0gUmVhY3QudXNlUmVmKCk7XG4gIGNvbnN0IFtvcGVuU3RhdGUsIHNldE9wZW5TdGF0ZV0gPSB1c2VDb250cm9sbGVkKHtcbiAgICBjb250cm9sbGVkOiBvcGVuUHJvcCxcbiAgICBkZWZhdWx0OiBmYWxzZSxcbiAgICBuYW1lOiAnVG9vbHRpcCcsXG4gICAgc3RhdGU6ICdvcGVuJ1xuICB9KTtcbiAgbGV0IG9wZW4gPSBvcGVuU3RhdGU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgICBjb25zdCB7XG4gICAgICBjdXJyZW50OiBpc0NvbnRyb2xsZWRcbiAgICB9ID0gUmVhY3QudXNlUmVmKG9wZW5Qcm9wICE9PSB1bmRlZmluZWQpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcblxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBpZiAoY2hpbGROb2RlICYmIGNoaWxkTm9kZS5kaXNhYmxlZCAmJiAhaXNDb250cm9sbGVkICYmIHRpdGxlICE9PSAnJyAmJiBjaGlsZE5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnYnV0dG9uJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKFsnTVVJOiBZb3UgYXJlIHByb3ZpZGluZyBhIGRpc2FibGVkIGBidXR0b25gIGNoaWxkIHRvIHRoZSBUb29sdGlwIGNvbXBvbmVudC4nLCAnQSBkaXNhYmxlZCBlbGVtZW50IGRvZXMgbm90IGZpcmUgZXZlbnRzLicsIFwiVG9vbHRpcCBuZWVkcyB0byBsaXN0ZW4gdG8gdGhlIGNoaWxkIGVsZW1lbnQncyBldmVudHMgdG8gZGlzcGxheSB0aGUgdGl0bGUuXCIsICcnLCAnQWRkIGEgc2ltcGxlIHdyYXBwZXIgZWxlbWVudCwgc3VjaCBhcyBhIGBzcGFuYC4nXS5qb2luKCdcXG4nKSk7XG4gICAgICB9XG4gICAgfSwgW3RpdGxlLCBjaGlsZE5vZGUsIGlzQ29udHJvbGxlZF0pO1xuICB9XG5cbiAgY29uc3QgaWQgPSB1c2VJZChpZFByb3ApO1xuICBjb25zdCBwcmV2VXNlclNlbGVjdCA9IFJlYWN0LnVzZVJlZigpO1xuICBjb25zdCBzdG9wVG91Y2hJbnRlcmFjdGlvbiA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAocHJldlVzZXJTZWxlY3QuY3VycmVudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLldlYmtpdFVzZXJTZWxlY3QgPSBwcmV2VXNlclNlbGVjdC5jdXJyZW50O1xuICAgICAgcHJldlVzZXJTZWxlY3QuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICBjbGVhclRpbWVvdXQodG91Y2hUaW1lci5jdXJyZW50KTtcbiAgfSwgW10pO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjbGVhclRpbWVvdXQoY2xvc2VUaW1lci5jdXJyZW50KTtcbiAgICAgIGNsZWFyVGltZW91dChlbnRlclRpbWVyLmN1cnJlbnQpO1xuICAgICAgY2xlYXJUaW1lb3V0KGxlYXZlVGltZXIuY3VycmVudCk7XG4gICAgICBzdG9wVG91Y2hJbnRlcmFjdGlvbigpO1xuICAgIH07XG4gIH0sIFtzdG9wVG91Y2hJbnRlcmFjdGlvbl0pO1xuXG4gIGNvbnN0IGhhbmRsZU9wZW4gPSBldmVudCA9PiB7XG4gICAgY2xlYXJUaW1lb3V0KGh5c3RlcnNpc1RpbWVyKTtcbiAgICBoeXN0ZXJzaXNPcGVuID0gdHJ1ZTsgLy8gVGhlIG1vdXNlb3ZlciBldmVudCB3aWxsIHRyaWdnZXIgZm9yIGV2ZXJ5IG5lc3RlZCBlbGVtZW50IGluIHRoZSB0b29sdGlwLlxuICAgIC8vIFdlIGNhbiBza2lwIHJlcmVuZGVyaW5nIHdoZW4gdGhlIHRvb2x0aXAgaXMgYWxyZWFkeSBvcGVuLlxuICAgIC8vIFdlIGFyZSB1c2luZyB0aGUgbW91c2VvdmVyIGV2ZW50IGluc3RlYWQgb2YgdGhlIG1vdXNlZW50ZXIgZXZlbnQgdG8gZml4IGEgaGlkZS9zaG93IGlzc3VlLlxuXG4gICAgc2V0T3BlblN0YXRlKHRydWUpO1xuXG4gICAgaWYgKG9uT3BlbiAmJiAhb3Blbikge1xuICAgICAgb25PcGVuKGV2ZW50KTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2xvc2UgPSB1c2VFdmVudENhbGxiYWNrKFxuICAvKipcbiAgICogQHBhcmFtIHtSZWFjdC5TeW50aGV0aWNFdmVudCB8IEV2ZW50fSBldmVudFxuICAgKi9cbiAgZXZlbnQgPT4ge1xuICAgIGNsZWFyVGltZW91dChoeXN0ZXJzaXNUaW1lcik7XG4gICAgaHlzdGVyc2lzVGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGh5c3RlcnNpc09wZW4gPSBmYWxzZTtcbiAgICB9LCA4MDAgKyBsZWF2ZURlbGF5KTtcbiAgICBzZXRPcGVuU3RhdGUoZmFsc2UpO1xuXG4gICAgaWYgKG9uQ2xvc2UgJiYgb3Blbikge1xuICAgICAgb25DbG9zZShldmVudCk7XG4gICAgfVxuXG4gICAgY2xlYXJUaW1lb3V0KGNsb3NlVGltZXIuY3VycmVudCk7XG4gICAgY2xvc2VUaW1lci5jdXJyZW50ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZ25vcmVOb25Ub3VjaEV2ZW50cy5jdXJyZW50ID0gZmFsc2U7XG4gICAgfSwgdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uc2hvcnRlc3QpO1xuICB9KTtcblxuICBjb25zdCBoYW5kbGVFbnRlciA9IGV2ZW50ID0+IHtcbiAgICBpZiAoaWdub3JlTm9uVG91Y2hFdmVudHMuY3VycmVudCAmJiBldmVudC50eXBlICE9PSAndG91Y2hzdGFydCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIFJlbW92ZSB0aGUgdGl0bGUgYWhlYWQgb2YgdGltZS5cbiAgICAvLyBXZSBkb24ndCB3YW50IHRvIHdhaXQgZm9yIHRoZSBuZXh0IHJlbmRlciBjb21taXQuXG4gICAgLy8gV2Ugd291bGQgcmlzayBkaXNwbGF5aW5nIHR3byB0b29sdGlwcyBhdCB0aGUgc2FtZSB0aW1lIChuYXRpdmUgKyB0aGlzIG9uZSkuXG5cblxuICAgIGlmIChjaGlsZE5vZGUpIHtcbiAgICAgIGNoaWxkTm9kZS5yZW1vdmVBdHRyaWJ1dGUoJ3RpdGxlJyk7XG4gICAgfVxuXG4gICAgY2xlYXJUaW1lb3V0KGVudGVyVGltZXIuY3VycmVudCk7XG4gICAgY2xlYXJUaW1lb3V0KGxlYXZlVGltZXIuY3VycmVudCk7XG5cbiAgICBpZiAoZW50ZXJEZWxheSB8fCBoeXN0ZXJzaXNPcGVuICYmIGVudGVyTmV4dERlbGF5KSB7XG4gICAgICBlbnRlclRpbWVyLmN1cnJlbnQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaGFuZGxlT3BlbihldmVudCk7XG4gICAgICB9LCBoeXN0ZXJzaXNPcGVuID8gZW50ZXJOZXh0RGVsYXkgOiBlbnRlckRlbGF5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaGFuZGxlT3BlbihldmVudCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUxlYXZlID0gZXZlbnQgPT4ge1xuICAgIGNsZWFyVGltZW91dChlbnRlclRpbWVyLmN1cnJlbnQpO1xuICAgIGNsZWFyVGltZW91dChsZWF2ZVRpbWVyLmN1cnJlbnQpO1xuICAgIGxlYXZlVGltZXIuY3VycmVudCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaGFuZGxlQ2xvc2UoZXZlbnQpO1xuICAgIH0sIGxlYXZlRGVsYXkpO1xuICB9O1xuXG4gIGNvbnN0IHtcbiAgICBpc0ZvY3VzVmlzaWJsZVJlZixcbiAgICBvbkJsdXI6IGhhbmRsZUJsdXJWaXNpYmxlLFxuICAgIG9uRm9jdXM6IGhhbmRsZUZvY3VzVmlzaWJsZSxcbiAgICByZWY6IGZvY3VzVmlzaWJsZVJlZlxuICB9ID0gdXNlSXNGb2N1c1Zpc2libGUoKTsgLy8gV2UgZG9uJ3QgbmVjZXNzYXJpbHkgY2FyZSBhYm91dCB0aGUgZm9jdXNWaXNpYmxlIHN0YXRlICh3aGljaCBpcyBzYWZlIHRvIGFjY2VzcyB2aWEgcmVmIGFueXdheSkuXG4gIC8vIFdlIGp1c3QgbmVlZCB0byByZS1yZW5kZXIgdGhlIFRvb2x0aXAgaWYgdGhlIGZvY3VzLXZpc2libGUgc3RhdGUgY2hhbmdlcy5cblxuICBjb25zdCBbLCBzZXRDaGlsZElzRm9jdXNWaXNpYmxlXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCBoYW5kbGVCbHVyID0gZXZlbnQgPT4ge1xuICAgIGhhbmRsZUJsdXJWaXNpYmxlKGV2ZW50KTtcblxuICAgIGlmIChpc0ZvY3VzVmlzaWJsZVJlZi5jdXJyZW50ID09PSBmYWxzZSkge1xuICAgICAgc2V0Q2hpbGRJc0ZvY3VzVmlzaWJsZShmYWxzZSk7XG4gICAgICBoYW5kbGVMZWF2ZShldmVudCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUZvY3VzID0gZXZlbnQgPT4ge1xuICAgIC8vIFdvcmthcm91bmQgZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9pc3N1ZXMvNzc2OVxuICAgIC8vIFRoZSBhdXRvRm9jdXMgb2YgUmVhY3QgbWlnaHQgdHJpZ2dlciB0aGUgZXZlbnQgYmVmb3JlIHRoZSBjb21wb25lbnREaWRNb3VudC5cbiAgICAvLyBXZSBuZWVkIHRvIGFjY291bnQgZm9yIHRoaXMgZXZlbnR1YWxpdHkuXG4gICAgaWYgKCFjaGlsZE5vZGUpIHtcbiAgICAgIHNldENoaWxkTm9kZShldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICB9XG5cbiAgICBoYW5kbGVGb2N1c1Zpc2libGUoZXZlbnQpO1xuXG4gICAgaWYgKGlzRm9jdXNWaXNpYmxlUmVmLmN1cnJlbnQgPT09IHRydWUpIHtcbiAgICAgIHNldENoaWxkSXNGb2N1c1Zpc2libGUodHJ1ZSk7XG4gICAgICBoYW5kbGVFbnRlcihldmVudCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGRldGVjdFRvdWNoU3RhcnQgPSBldmVudCA9PiB7XG4gICAgaWdub3JlTm9uVG91Y2hFdmVudHMuY3VycmVudCA9IHRydWU7XG4gICAgY29uc3QgY2hpbGRyZW5Qcm9wcyA9IGNoaWxkcmVuLnByb3BzO1xuXG4gICAgaWYgKGNoaWxkcmVuUHJvcHMub25Ub3VjaFN0YXJ0KSB7XG4gICAgICBjaGlsZHJlblByb3BzLm9uVG91Y2hTdGFydChldmVudCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU1vdXNlT3ZlciA9IGhhbmRsZUVudGVyO1xuICBjb25zdCBoYW5kbGVNb3VzZUxlYXZlID0gaGFuZGxlTGVhdmU7XG5cbiAgY29uc3QgaGFuZGxlVG91Y2hTdGFydCA9IGV2ZW50ID0+IHtcbiAgICBkZXRlY3RUb3VjaFN0YXJ0KGV2ZW50KTtcbiAgICBjbGVhclRpbWVvdXQobGVhdmVUaW1lci5jdXJyZW50KTtcbiAgICBjbGVhclRpbWVvdXQoY2xvc2VUaW1lci5jdXJyZW50KTtcbiAgICBzdG9wVG91Y2hJbnRlcmFjdGlvbigpO1xuICAgIHByZXZVc2VyU2VsZWN0LmN1cnJlbnQgPSBkb2N1bWVudC5ib2R5LnN0eWxlLldlYmtpdFVzZXJTZWxlY3Q7IC8vIFByZXZlbnQgaU9TIHRleHQgc2VsZWN0aW9uIG9uIGxvbmctdGFwLlxuXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5XZWJraXRVc2VyU2VsZWN0ID0gJ25vbmUnO1xuICAgIHRvdWNoVGltZXIuY3VycmVudCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5XZWJraXRVc2VyU2VsZWN0ID0gcHJldlVzZXJTZWxlY3QuY3VycmVudDtcbiAgICAgIGhhbmRsZUVudGVyKGV2ZW50KTtcbiAgICB9LCBlbnRlclRvdWNoRGVsYXkpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVRvdWNoRW5kID0gZXZlbnQgPT4ge1xuICAgIGlmIChjaGlsZHJlbi5wcm9wcy5vblRvdWNoRW5kKSB7XG4gICAgICBjaGlsZHJlbi5wcm9wcy5vblRvdWNoRW5kKGV2ZW50KTtcbiAgICB9XG5cbiAgICBzdG9wVG91Y2hJbnRlcmFjdGlvbigpO1xuICAgIGNsZWFyVGltZW91dChsZWF2ZVRpbWVyLmN1cnJlbnQpO1xuICAgIGxlYXZlVGltZXIuY3VycmVudCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaGFuZGxlQ2xvc2UoZXZlbnQpO1xuICAgIH0sIGxlYXZlVG91Y2hEZWxheSk7XG4gIH07XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIW9wZW4pIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gbmF0aXZlRXZlbnRcbiAgICAgKi9cblxuXG4gICAgZnVuY3Rpb24gaGFuZGxlS2V5RG93bihuYXRpdmVFdmVudCkge1xuICAgICAgLy8gSUUxMSwgRWRnZSAocHJpb3IgdG8gdXNpbmcgQmluaz8pIHVzZSAnRXNjJ1xuICAgICAgaWYgKG5hdGl2ZUV2ZW50LmtleSA9PT0gJ0VzY2FwZScgfHwgbmF0aXZlRXZlbnQua2V5ID09PSAnRXNjJykge1xuICAgICAgICBoYW5kbGVDbG9zZShuYXRpdmVFdmVudCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZUtleURvd24pO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5RG93bik7XG4gICAgfTtcbiAgfSwgW2hhbmRsZUNsb3NlLCBvcGVuXSk7XG4gIGNvbnN0IGhhbmRsZVVzZVJlZiA9IHVzZUZvcmtSZWYoc2V0Q2hpbGROb2RlLCByZWYpO1xuICBjb25zdCBoYW5kbGVGb2N1c1JlZiA9IHVzZUZvcmtSZWYoZm9jdXNWaXNpYmxlUmVmLCBoYW5kbGVVc2VSZWYpO1xuICBjb25zdCBoYW5kbGVSZWYgPSB1c2VGb3JrUmVmKGNoaWxkcmVuLnJlZiwgaGFuZGxlRm9jdXNSZWYpOyAvLyBUaGVyZSBpcyBubyBwb2ludCBpbiBkaXNwbGF5aW5nIGFuIGVtcHR5IHRvb2x0aXAuXG5cbiAgaWYgKHRpdGxlID09PSAnJykge1xuICAgIG9wZW4gPSBmYWxzZTtcbiAgfVxuXG4gIGNvbnN0IHBvc2l0aW9uUmVmID0gUmVhY3QudXNlUmVmKHtcbiAgICB4OiAwLFxuICAgIHk6IDBcbiAgfSk7XG4gIGNvbnN0IHBvcHBlclJlZiA9IFJlYWN0LnVzZVJlZigpO1xuXG4gIGNvbnN0IGhhbmRsZU1vdXNlTW92ZSA9IGV2ZW50ID0+IHtcbiAgICBjb25zdCBjaGlsZHJlblByb3BzID0gY2hpbGRyZW4ucHJvcHM7XG5cbiAgICBpZiAoY2hpbGRyZW5Qcm9wcy5vbk1vdXNlTW92ZSkge1xuICAgICAgY2hpbGRyZW5Qcm9wcy5vbk1vdXNlTW92ZShldmVudCk7XG4gICAgfVxuXG4gICAgcG9zaXRpb25SZWYuY3VycmVudCA9IHtcbiAgICAgIHg6IGV2ZW50LmNsaWVudFgsXG4gICAgICB5OiBldmVudC5jbGllbnRZXG4gICAgfTtcblxuICAgIGlmIChwb3BwZXJSZWYuY3VycmVudCkge1xuICAgICAgcG9wcGVyUmVmLmN1cnJlbnQudXBkYXRlKCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IG5hbWVPckRlc2NQcm9wcyA9IHt9O1xuICBjb25zdCB0aXRsZUlzU3RyaW5nID0gdHlwZW9mIHRpdGxlID09PSAnc3RyaW5nJztcblxuICBpZiAoZGVzY3JpYmVDaGlsZCkge1xuICAgIG5hbWVPckRlc2NQcm9wcy50aXRsZSA9ICFvcGVuICYmIHRpdGxlSXNTdHJpbmcgJiYgIWRpc2FibGVIb3Zlckxpc3RlbmVyID8gdGl0bGUgOiBudWxsO1xuICAgIG5hbWVPckRlc2NQcm9wc1snYXJpYS1kZXNjcmliZWRieSddID0gb3BlbiA/IGlkIDogbnVsbDtcbiAgfSBlbHNlIHtcbiAgICBuYW1lT3JEZXNjUHJvcHNbJ2FyaWEtbGFiZWwnXSA9IHRpdGxlSXNTdHJpbmcgPyB0aXRsZSA6IG51bGw7XG4gICAgbmFtZU9yRGVzY1Byb3BzWydhcmlhLWxhYmVsbGVkYnknXSA9IG9wZW4gJiYgIXRpdGxlSXNTdHJpbmcgPyBpZCA6IG51bGw7XG4gIH1cblxuICBjb25zdCBjaGlsZHJlblByb3BzID0gX2V4dGVuZHMoe30sIG5hbWVPckRlc2NQcm9wcywgb3RoZXIsIGNoaWxkcmVuLnByb3BzLCB7XG4gICAgY2xhc3NOYW1lOiBjbHN4KG90aGVyLmNsYXNzTmFtZSwgY2hpbGRyZW4ucHJvcHMuY2xhc3NOYW1lKSxcbiAgICBvblRvdWNoU3RhcnQ6IGRldGVjdFRvdWNoU3RhcnQsXG4gICAgcmVmOiBoYW5kbGVSZWZcbiAgfSwgZm9sbG93Q3Vyc29yID8ge1xuICAgIG9uTW91c2VNb3ZlOiBoYW5kbGVNb3VzZU1vdmVcbiAgfSA6IHt9KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGNoaWxkcmVuUHJvcHNbJ2RhdGEtbXVpLWludGVybmFsLWNsb25lLWVsZW1lbnQnXSA9IHRydWU7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9ydWxlcy1vZi1ob29rc1xuXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGlmIChjaGlsZE5vZGUgJiYgIWNoaWxkTm9kZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbXVpLWludGVybmFsLWNsb25lLWVsZW1lbnQnKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFsnTVVJOiBUaGUgYGNoaWxkcmVuYCBjb21wb25lbnQgb2YgdGhlIFRvb2x0aXAgaXMgbm90IGZvcndhcmRpbmcgaXRzIHByb3BzIGNvcnJlY3RseS4nLCAnUGxlYXNlIG1ha2Ugc3VyZSB0aGF0IHByb3BzIGFyZSBzcHJlYWQgb24gdGhlIHNhbWUgZWxlbWVudCB0aGF0IHRoZSByZWYgaXMgYXBwbGllZCB0by4nXS5qb2luKCdcXG4nKSk7XG4gICAgICB9XG4gICAgfSwgW2NoaWxkTm9kZV0pO1xuICB9XG5cbiAgY29uc3QgaW50ZXJhY3RpdmVXcmFwcGVyTGlzdGVuZXJzID0ge307XG5cbiAgaWYgKCFkaXNhYmxlVG91Y2hMaXN0ZW5lcikge1xuICAgIGNoaWxkcmVuUHJvcHMub25Ub3VjaFN0YXJ0ID0gaGFuZGxlVG91Y2hTdGFydDtcbiAgICBjaGlsZHJlblByb3BzLm9uVG91Y2hFbmQgPSBoYW5kbGVUb3VjaEVuZDtcbiAgfVxuXG4gIGlmICghZGlzYWJsZUhvdmVyTGlzdGVuZXIpIHtcbiAgICBjaGlsZHJlblByb3BzLm9uTW91c2VPdmVyID0gY29tcG9zZUV2ZW50SGFuZGxlcihoYW5kbGVNb3VzZU92ZXIsIGNoaWxkcmVuUHJvcHMub25Nb3VzZU92ZXIpO1xuICAgIGNoaWxkcmVuUHJvcHMub25Nb3VzZUxlYXZlID0gY29tcG9zZUV2ZW50SGFuZGxlcihoYW5kbGVNb3VzZUxlYXZlLCBjaGlsZHJlblByb3BzLm9uTW91c2VMZWF2ZSk7XG5cbiAgICBpZiAoIWRpc2FibGVJbnRlcmFjdGl2ZSkge1xuICAgICAgaW50ZXJhY3RpdmVXcmFwcGVyTGlzdGVuZXJzLm9uTW91c2VPdmVyID0gaGFuZGxlTW91c2VPdmVyO1xuICAgICAgaW50ZXJhY3RpdmVXcmFwcGVyTGlzdGVuZXJzLm9uTW91c2VMZWF2ZSA9IGhhbmRsZU1vdXNlTGVhdmU7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFkaXNhYmxlRm9jdXNMaXN0ZW5lcikge1xuICAgIGNoaWxkcmVuUHJvcHMub25Gb2N1cyA9IGNvbXBvc2VFdmVudEhhbmRsZXIoaGFuZGxlRm9jdXMsIGNoaWxkcmVuUHJvcHMub25Gb2N1cyk7XG4gICAgY2hpbGRyZW5Qcm9wcy5vbkJsdXIgPSBjb21wb3NlRXZlbnRIYW5kbGVyKGhhbmRsZUJsdXIsIGNoaWxkcmVuUHJvcHMub25CbHVyKTtcblxuICAgIGlmICghZGlzYWJsZUludGVyYWN0aXZlKSB7XG4gICAgICBpbnRlcmFjdGl2ZVdyYXBwZXJMaXN0ZW5lcnMub25Gb2N1cyA9IGhhbmRsZUZvY3VzO1xuICAgICAgaW50ZXJhY3RpdmVXcmFwcGVyTGlzdGVuZXJzLm9uQmx1ciA9IGhhbmRsZUJsdXI7XG4gICAgfVxuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoY2hpbGRyZW4ucHJvcHMudGl0bGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoWydNVUk6IFlvdSBoYXZlIHByb3ZpZGVkIGEgYHRpdGxlYCBwcm9wIHRvIHRoZSBjaGlsZCBvZiA8VG9vbHRpcCAvPi4nLCBgUmVtb3ZlIHRoaXMgdGl0bGUgcHJvcCBcXGAke2NoaWxkcmVuLnByb3BzLnRpdGxlfVxcYCBvciB0aGUgVG9vbHRpcCBjb21wb25lbnQuYF0uam9pbignXFxuJykpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHBvcHBlck9wdGlvbnMgPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICB2YXIgX1BvcHBlclByb3BzJHBvcHBlck9wO1xuXG4gICAgbGV0IHRvb2x0aXBNb2RpZmllcnMgPSBbe1xuICAgICAgbmFtZTogJ2Fycm93JyxcbiAgICAgIGVuYWJsZWQ6IEJvb2xlYW4oYXJyb3dSZWYpLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBlbGVtZW50OiBhcnJvd1JlZixcbiAgICAgICAgcGFkZGluZzogNFxuICAgICAgfVxuICAgIH1dO1xuXG4gICAgaWYgKChfUG9wcGVyUHJvcHMkcG9wcGVyT3AgPSBQb3BwZXJQcm9wcy5wb3BwZXJPcHRpb25zKSAhPSBudWxsICYmIF9Qb3BwZXJQcm9wcyRwb3BwZXJPcC5tb2RpZmllcnMpIHtcbiAgICAgIHRvb2x0aXBNb2RpZmllcnMgPSB0b29sdGlwTW9kaWZpZXJzLmNvbmNhdChQb3BwZXJQcm9wcy5wb3BwZXJPcHRpb25zLm1vZGlmaWVycyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF9leHRlbmRzKHt9LCBQb3BwZXJQcm9wcy5wb3BwZXJPcHRpb25zLCB7XG4gICAgICBtb2RpZmllcnM6IHRvb2x0aXBNb2RpZmllcnNcbiAgICB9KTtcbiAgfSwgW2Fycm93UmVmLCBQb3BwZXJQcm9wc10pO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBpc1J0bCxcbiAgICBhcnJvdyxcbiAgICBkaXNhYmxlSW50ZXJhY3RpdmUsXG4gICAgcGxhY2VtZW50LFxuICAgIFBvcHBlckNvbXBvbmVudFByb3AsXG4gICAgdG91Y2g6IGlnbm9yZU5vblRvdWNoRXZlbnRzLmN1cnJlbnRcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuICBjb25zdCBQb3BwZXJDb21wb25lbnQgPSAoX2NvbXBvbmVudHMkUG9wcGVyID0gY29tcG9uZW50cy5Qb3BwZXIpICE9IG51bGwgPyBfY29tcG9uZW50cyRQb3BwZXIgOiBUb29sdGlwUG9wcGVyO1xuICBjb25zdCBUcmFuc2l0aW9uQ29tcG9uZW50ID0gKF9yZWYgPSAoX2NvbXBvbmVudHMkVHJhbnNpdGlvID0gY29tcG9uZW50cy5UcmFuc2l0aW9uKSAhPSBudWxsID8gX2NvbXBvbmVudHMkVHJhbnNpdGlvIDogVHJhbnNpdGlvbkNvbXBvbmVudFByb3ApICE9IG51bGwgPyBfcmVmIDogR3JvdztcbiAgY29uc3QgVG9vbHRpcENvbXBvbmVudCA9IChfY29tcG9uZW50cyRUb29sdGlwID0gY29tcG9uZW50cy5Ub29sdGlwKSAhPSBudWxsID8gX2NvbXBvbmVudHMkVG9vbHRpcCA6IFRvb2x0aXBUb29sdGlwO1xuICBjb25zdCBBcnJvd0NvbXBvbmVudCA9IChfY29tcG9uZW50cyRBcnJvdyA9IGNvbXBvbmVudHMuQXJyb3cpICE9IG51bGwgPyBfY29tcG9uZW50cyRBcnJvdyA6IFRvb2x0aXBBcnJvdztcbiAgY29uc3QgcG9wcGVyUHJvcHMgPSBhcHBlbmRPd25lclN0YXRlKFBvcHBlckNvbXBvbmVudCwgX2V4dGVuZHMoe30sIFBvcHBlclByb3BzLCBjb21wb25lbnRzUHJvcHMucG9wcGVyKSwgb3duZXJTdGF0ZSk7XG4gIGNvbnN0IHRyYW5zaXRpb25Qcm9wcyA9IGFwcGVuZE93bmVyU3RhdGUoVHJhbnNpdGlvbkNvbXBvbmVudCwgX2V4dGVuZHMoe30sIFRyYW5zaXRpb25Qcm9wcywgY29tcG9uZW50c1Byb3BzLnRyYW5zaXRpb24pLCBvd25lclN0YXRlKTtcbiAgY29uc3QgdG9vbHRpcFByb3BzID0gYXBwZW5kT3duZXJTdGF0ZShUb29sdGlwQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgY29tcG9uZW50c1Byb3BzLnRvb2x0aXApLCBvd25lclN0YXRlKTtcbiAgY29uc3QgdG9vbHRpcEFycm93UHJvcHMgPSBhcHBlbmRPd25lclN0YXRlKEFycm93Q29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgY29tcG9uZW50c1Byb3BzLmFycm93KSwgb3duZXJTdGF0ZSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeHMoUmVhY3QuRnJhZ21lbnQsIHtcbiAgICBjaGlsZHJlbjogWy8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGRyZW4sIGNoaWxkcmVuUHJvcHMpLCAvKiNfX1BVUkVfXyovX2pzeChQb3BwZXJDb21wb25lbnQsIF9leHRlbmRzKHtcbiAgICAgIGFzOiBQb3BwZXJDb21wb25lbnRQcm9wICE9IG51bGwgPyBQb3BwZXJDb21wb25lbnRQcm9wIDogUG9wcGVyLFxuICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQsXG4gICAgICBhbmNob3JFbDogZm9sbG93Q3Vyc29yID8ge1xuICAgICAgICBnZXRCb3VuZGluZ0NsaWVudFJlY3Q6ICgpID0+ICh7XG4gICAgICAgICAgdG9wOiBwb3NpdGlvblJlZi5jdXJyZW50LnksXG4gICAgICAgICAgbGVmdDogcG9zaXRpb25SZWYuY3VycmVudC54LFxuICAgICAgICAgIHJpZ2h0OiBwb3NpdGlvblJlZi5jdXJyZW50LngsXG4gICAgICAgICAgYm90dG9tOiBwb3NpdGlvblJlZi5jdXJyZW50LnksXG4gICAgICAgICAgd2lkdGg6IDAsXG4gICAgICAgICAgaGVpZ2h0OiAwXG4gICAgICAgIH0pXG4gICAgICB9IDogY2hpbGROb2RlLFxuICAgICAgcG9wcGVyUmVmOiBwb3BwZXJSZWYsXG4gICAgICBvcGVuOiBjaGlsZE5vZGUgPyBvcGVuIDogZmFsc2UsXG4gICAgICBpZDogaWQsXG4gICAgICB0cmFuc2l0aW9uOiB0cnVlXG4gICAgfSwgaW50ZXJhY3RpdmVXcmFwcGVyTGlzdGVuZXJzLCBwb3BwZXJQcm9wcywge1xuICAgICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucG9wcGVyLCBQb3BwZXJQcm9wcyA9PSBudWxsID8gdm9pZCAwIDogUG9wcGVyUHJvcHMuY2xhc3NOYW1lLCAoX2NvbXBvbmVudHNQcm9wcyRwb3BwID0gY29tcG9uZW50c1Byb3BzLnBvcHBlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9jb21wb25lbnRzUHJvcHMkcG9wcC5jbGFzc05hbWUpLFxuICAgICAgcG9wcGVyT3B0aW9uczogcG9wcGVyT3B0aW9ucyxcbiAgICAgIGNoaWxkcmVuOiAoe1xuICAgICAgICBUcmFuc2l0aW9uUHJvcHM6IFRyYW5zaXRpb25Qcm9wc0lubmVyXG4gICAgICB9KSA9PiB7XG4gICAgICAgIHZhciBfY29tcG9uZW50c1Byb3BzJHRvb2wsIF9jb21wb25lbnRzUHJvcHMkYXJybztcblxuICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL19qc3goVHJhbnNpdGlvbkNvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgICAgICAgIHRpbWVvdXQ6IHRoZW1lLnRyYW5zaXRpb25zLmR1cmF0aW9uLnNob3J0ZXJcbiAgICAgICAgfSwgVHJhbnNpdGlvblByb3BzSW5uZXIsIHRyYW5zaXRpb25Qcm9wcywge1xuICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovX2pzeHMoVG9vbHRpcENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHRvb2x0aXBQcm9wcywge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMudG9vbHRpcCwgKF9jb21wb25lbnRzUHJvcHMkdG9vbCA9IGNvbXBvbmVudHNQcm9wcy50b29sdGlwKSA9PSBudWxsID8gdm9pZCAwIDogX2NvbXBvbmVudHNQcm9wcyR0b29sLmNsYXNzTmFtZSksXG4gICAgICAgICAgICBjaGlsZHJlbjogW3RpdGxlLCBhcnJvdyA/IC8qI19fUFVSRV9fKi9fanN4KEFycm93Q29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgdG9vbHRpcEFycm93UHJvcHMsIHtcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMuYXJyb3csIChfY29tcG9uZW50c1Byb3BzJGFycm8gPSBjb21wb25lbnRzUHJvcHMuYXJyb3cpID09IG51bGwgPyB2b2lkIDAgOiBfY29tcG9uZW50c1Byb3BzJGFycm8uY2xhc3NOYW1lKSxcbiAgICAgICAgICAgICAgcmVmOiBzZXRBcnJvd1JlZlxuICAgICAgICAgICAgfSkpIDogbnVsbF1cbiAgICAgICAgICB9KSlcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH0pKV1cbiAgfSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFRvb2x0aXAucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgYWRkcyBhbiBhcnJvdyB0byB0aGUgdG9vbHRpcC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGFycm93OiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVG9vbHRpcCByZWZlcmVuY2UgZWxlbWVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBlbGVtZW50QWNjZXB0aW5nUmVmLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudHMgdXNlZCBmb3IgZWFjaCBzbG90IGluc2lkZSB0aGUgVG9vbHRpcC5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgQXJyb3c6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICBQb3BwZXI6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICBUb29sdGlwOiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgVHJhbnNpdGlvbjogUHJvcFR5cGVzLmVsZW1lbnRUeXBlXG4gIH0pLFxuXG4gIC8qKlxuICAgKiBUaGUgcHJvcHMgdXNlZCBmb3IgZWFjaCBzbG90IGluc2lkZSB0aGUgVG9vbHRpcC5cbiAgICogTm90ZSB0aGF0IGBjb21wb25lbnRzUHJvcHMucG9wcGVyYCBwcm9wIHZhbHVlcyB3aW4gb3ZlciBgUG9wcGVyUHJvcHNgXG4gICAqIGFuZCBgY29tcG9uZW50c1Byb3BzLnRyYW5zaXRpb25gIHByb3AgdmFsdWVzIHdpbiBvdmVyIGBUcmFuc2l0aW9uUHJvcHNgIGlmIGJvdGggYXJlIGFwcGxpZWQuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBjb21wb25lbnRzUHJvcHM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgYXJyb3c6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcG9wcGVyOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHRvb2x0aXA6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgdHJhbnNpdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9KSxcblxuICAvKipcbiAgICogU2V0IHRvIGB0cnVlYCBpZiB0aGUgYHRpdGxlYCBhY3RzIGFzIGFuIGFjY2Vzc2libGUgZGVzY3JpcHRpb24uXG4gICAqIEJ5IGRlZmF1bHQgdGhlIGB0aXRsZWAgYWN0cyBhcyBhbiBhY2Nlc3NpYmxlIGxhYmVsIGZvciB0aGUgY2hpbGQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkZXNjcmliZUNoaWxkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogRG8gbm90IHJlc3BvbmQgdG8gZm9jdXMtdmlzaWJsZSBldmVudHMuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBkaXNhYmxlRm9jdXNMaXN0ZW5lcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIERvIG5vdCByZXNwb25kIHRvIGhvdmVyIGV2ZW50cy5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRpc2FibGVIb3Zlckxpc3RlbmVyOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogTWFrZXMgYSB0b29sdGlwIG5vdCBpbnRlcmFjdGl2ZSwgaS5lLiBpdCB3aWxsIGNsb3NlIHdoZW4gdGhlIHVzZXJcbiAgICogaG92ZXJzIG92ZXIgdGhlIHRvb2x0aXAgYmVmb3JlIHRoZSBgbGVhdmVEZWxheWAgaXMgZXhwaXJlZC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRpc2FibGVJbnRlcmFjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIERvIG5vdCByZXNwb25kIHRvIGxvbmcgcHJlc3MgdG91Y2ggZXZlbnRzLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZVRvdWNoTGlzdGVuZXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB3YWl0IGJlZm9yZSBzaG93aW5nIHRoZSB0b29sdGlwLlxuICAgKiBUaGlzIHByb3Agd29uJ3QgaW1wYWN0IHRoZSBlbnRlciB0b3VjaCBkZWxheSAoYGVudGVyVG91Y2hEZWxheWApLlxuICAgKiBAZGVmYXVsdCAxMDBcbiAgICovXG4gIGVudGVyRGVsYXk6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgLyoqXG4gICAqIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIHdhaXQgYmVmb3JlIHNob3dpbmcgdGhlIHRvb2x0aXAgd2hlbiBvbmUgd2FzIGFscmVhZHkgcmVjZW50bHkgb3BlbmVkLlxuICAgKiBAZGVmYXVsdCAwXG4gICAqL1xuICBlbnRlck5leHREZWxheTogUHJvcFR5cGVzLm51bWJlcixcblxuICAvKipcbiAgICogVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgYSB1c2VyIG11c3QgdG91Y2ggdGhlIGVsZW1lbnQgYmVmb3JlIHNob3dpbmcgdGhlIHRvb2x0aXAuXG4gICAqIEBkZWZhdWx0IDcwMFxuICAgKi9cbiAgZW50ZXJUb3VjaERlbGF5OiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSB0b29sdGlwIGZvbGxvdyB0aGUgY3Vyc29yIG92ZXIgdGhlIHdyYXBwZWQgZWxlbWVudC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGZvbGxvd0N1cnNvcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoaXMgcHJvcCBpcyB1c2VkIHRvIGhlbHAgaW1wbGVtZW50IHRoZSBhY2Nlc3NpYmlsaXR5IGxvZ2ljLlxuICAgKiBJZiB5b3UgZG9uJ3QgcHJvdmlkZSB0aGlzIHByb3AuIEl0IGZhbGxzIGJhY2sgdG8gYSByYW5kb21seSBnZW5lcmF0ZWQgaWQuXG4gICAqL1xuICBpZDogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gd2FpdCBiZWZvcmUgaGlkaW5nIHRoZSB0b29sdGlwLlxuICAgKiBUaGlzIHByb3Agd29uJ3QgaW1wYWN0IHRoZSBsZWF2ZSB0b3VjaCBkZWxheSAoYGxlYXZlVG91Y2hEZWxheWApLlxuICAgKiBAZGVmYXVsdCAwXG4gICAqL1xuICBsZWF2ZURlbGF5OiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIC8qKlxuICAgKiBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBhZnRlciB0aGUgdXNlciBzdG9wcyB0b3VjaGluZyBhbiBlbGVtZW50IGJlZm9yZSBoaWRpbmcgdGhlIHRvb2x0aXAuXG4gICAqIEBkZWZhdWx0IDE1MDBcbiAgICovXG4gIGxlYXZlVG91Y2hEZWxheTogUHJvcFR5cGVzLm51bWJlcixcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgY29tcG9uZW50IHJlcXVlc3RzIHRvIGJlIGNsb3NlZC5cbiAgICpcbiAgICogQHBhcmFtIHtSZWFjdC5TeW50aGV0aWNFdmVudH0gZXZlbnQgVGhlIGV2ZW50IHNvdXJjZSBvZiB0aGUgY2FsbGJhY2suXG4gICAqL1xuICBvbkNsb3NlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgY29tcG9uZW50IHJlcXVlc3RzIHRvIGJlIG9wZW4uXG4gICAqXG4gICAqIEBwYXJhbSB7UmVhY3QuU3ludGhldGljRXZlbnR9IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKi9cbiAgb25PcGVuOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IGlzIHNob3duLlxuICAgKi9cbiAgb3BlbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRvb2x0aXAgcGxhY2VtZW50LlxuICAgKiBAZGVmYXVsdCAnYm90dG9tJ1xuICAgKi9cbiAgcGxhY2VtZW50OiBQcm9wVHlwZXMub25lT2YoWydib3R0b20tZW5kJywgJ2JvdHRvbS1zdGFydCcsICdib3R0b20nLCAnbGVmdC1lbmQnLCAnbGVmdC1zdGFydCcsICdsZWZ0JywgJ3JpZ2h0LWVuZCcsICdyaWdodC1zdGFydCcsICdyaWdodCcsICd0b3AtZW5kJywgJ3RvcC1zdGFydCcsICd0b3AnXSksXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHBvcHBlci5cbiAgICogQGRlZmF1bHQgUG9wcGVyXG4gICAqL1xuICBQb3BwZXJDb21wb25lbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcblxuICAvKipcbiAgICogUHJvcHMgYXBwbGllZCB0byB0aGUgW2BQb3BwZXJgXSgvbWF0ZXJpYWwtdWkvYXBpL3BvcHBlci8pIGVsZW1lbnQuXG4gICAqIEBkZWZhdWx0IHt9XG4gICAqL1xuICBQb3BwZXJQcm9wczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pLFxuXG4gIC8qKlxuICAgKiBUb29sdGlwIHRpdGxlLiBaZXJvLWxlbmd0aCB0aXRsZXMgc3RyaW5nIGFyZSBuZXZlciBkaXNwbGF5ZWQuXG4gICAqL1xuICB0aXRsZTogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLm5vZGUuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgdHJhbnNpdGlvbi5cbiAgICogW0ZvbGxvdyB0aGlzIGd1aWRlXSgvbWF0ZXJpYWwtdWkvdHJhbnNpdGlvbnMvI3RyYW5zaXRpb25jb21wb25lbnQtcHJvcCkgdG8gbGVhcm4gbW9yZSBhYm91dCB0aGUgcmVxdWlyZW1lbnRzIGZvciB0aGlzIGNvbXBvbmVudC5cbiAgICogQGRlZmF1bHQgR3Jvd1xuICAgKi9cbiAgVHJhbnNpdGlvbkNvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBQcm9wcyBhcHBsaWVkIHRvIHRoZSB0cmFuc2l0aW9uIGVsZW1lbnQuXG4gICAqIEJ5IGRlZmF1bHQsIHRoZSBlbGVtZW50IGlzIGJhc2VkIG9uIHRoaXMgW2BUcmFuc2l0aW9uYF0oaHR0cDovL3JlYWN0Y29tbXVuaXR5Lm9yZy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL3RyYW5zaXRpb24vKSBjb21wb25lbnQuXG4gICAqL1xuICBUcmFuc2l0aW9uUHJvcHM6IFByb3BUeXBlcy5vYmplY3Rcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBUb29sdGlwOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG5jb25zdCBUYWJsZUNvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dCgpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBUYWJsZUNvbnRleHQuZGlzcGxheU5hbWUgPSAnVGFibGVDb250ZXh0Jztcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFibGVDb250ZXh0OyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRUYWJsZVV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpVGFibGUnLCBzbG90KTtcbn1cbmNvbnN0IHRhYmxlQ2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aVRhYmxlJywgWydyb290JywgJ3N0aWNreUhlYWRlciddKTtcbmV4cG9ydCBkZWZhdWx0IHRhYmxlQ2xhc3NlczsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2xhc3NOYW1lXCIsIFwiY29tcG9uZW50XCIsIFwicGFkZGluZ1wiLCBcInNpemVcIiwgXCJzdGlja3lIZWFkZXJcIl07XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyB1bnN0YWJsZV9jb21wb3NlQ2xhc3NlcyBhcyBjb21wb3NlQ2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5pbXBvcnQgVGFibGVDb250ZXh0IGZyb20gJy4vVGFibGVDb250ZXh0JztcbmltcG9ydCB1c2VUaGVtZVByb3BzIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZVByb3BzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgeyBnZXRUYWJsZVV0aWxpdHlDbGFzcyB9IGZyb20gJy4vdGFibGVDbGFzc2VzJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc2VzLFxuICAgIHN0aWNreUhlYWRlclxuICB9ID0gb3duZXJTdGF0ZTtcbiAgY29uc3Qgc2xvdHMgPSB7XG4gICAgcm9vdDogWydyb290Jywgc3RpY2t5SGVhZGVyICYmICdzdGlja3lIZWFkZXInXVxuICB9O1xuICByZXR1cm4gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldFRhYmxlVXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbn07XG5cbmNvbnN0IFRhYmxlUm9vdCA9IHN0eWxlZCgndGFibGUnLCB7XG4gIG5hbWU6ICdNdWlUYWJsZScsXG4gIHNsb3Q6ICdSb290JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgb3duZXJTdGF0ZVxuICAgIH0gPSBwcm9wcztcbiAgICByZXR1cm4gW3N0eWxlcy5yb290LCBvd25lclN0YXRlLnN0aWNreUhlYWRlciAmJiBzdHlsZXMuc3RpY2t5SGVhZGVyXTtcbiAgfVxufSkoKHtcbiAgdGhlbWUsXG4gIG93bmVyU3RhdGVcbn0pID0+IF9leHRlbmRzKHtcbiAgZGlzcGxheTogJ3RhYmxlJyxcbiAgd2lkdGg6ICcxMDAlJyxcbiAgYm9yZGVyQ29sbGFwc2U6ICdjb2xsYXBzZScsXG4gIGJvcmRlclNwYWNpbmc6IDAsXG4gICcmIGNhcHRpb24nOiBfZXh0ZW5kcyh7fSwgdGhlbWUudHlwb2dyYXBoeS5ib2R5Miwge1xuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMiksXG4gICAgY29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLnRleHQuc2Vjb25kYXJ5LFxuICAgIHRleHRBbGlnbjogJ2xlZnQnLFxuICAgIGNhcHRpb25TaWRlOiAnYm90dG9tJ1xuICB9KVxufSwgb3duZXJTdGF0ZS5zdGlja3lIZWFkZXIgJiYge1xuICBib3JkZXJDb2xsYXBzZTogJ3NlcGFyYXRlJ1xufSkpO1xuY29uc3QgZGVmYXVsdENvbXBvbmVudCA9ICd0YWJsZSc7XG5jb25zdCBUYWJsZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRhYmxlKGluUHJvcHMsIHJlZikge1xuICBjb25zdCBwcm9wcyA9IHVzZVRoZW1lUHJvcHMoe1xuICAgIHByb3BzOiBpblByb3BzLFxuICAgIG5hbWU6ICdNdWlUYWJsZSdcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGNsYXNzTmFtZSxcbiAgICBjb21wb25lbnQgPSBkZWZhdWx0Q29tcG9uZW50LFxuICAgIHBhZGRpbmcgPSAnbm9ybWFsJyxcbiAgICBzaXplID0gJ21lZGl1bScsXG4gICAgc3RpY2t5SGVhZGVyID0gZmFsc2VcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBjb21wb25lbnQsXG4gICAgcGFkZGluZyxcbiAgICBzaXplLFxuICAgIHN0aWNreUhlYWRlclxuICB9KTtcblxuICBjb25zdCBjbGFzc2VzID0gdXNlVXRpbGl0eUNsYXNzZXMob3duZXJTdGF0ZSk7XG4gIGNvbnN0IHRhYmxlID0gUmVhY3QudXNlTWVtbygoKSA9PiAoe1xuICAgIHBhZGRpbmcsXG4gICAgc2l6ZSxcbiAgICBzdGlja3lIZWFkZXJcbiAgfSksIFtwYWRkaW5nLCBzaXplLCBzdGlja3lIZWFkZXJdKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KFRhYmxlQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB0YWJsZSxcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goVGFibGVSb290LCBfZXh0ZW5kcyh7XG4gICAgICBhczogY29tcG9uZW50LFxuICAgICAgcm9sZTogY29tcG9uZW50ID09PSBkZWZhdWx0Q29tcG9uZW50ID8gbnVsbCA6ICd0YWJsZScsXG4gICAgICByZWY6IHJlZixcbiAgICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSksXG4gICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlXG4gICAgfSwgb3RoZXIpKVxuICB9KTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gVGFibGUucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSB0YWJsZSwgbm9ybWFsbHkgYFRhYmxlSGVhZGAgYW5kIGBUYWJsZUJvZHlgLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBBbGxvd3MgVGFibGVDZWxscyB0byBpbmhlcml0IHBhZGRpbmcgb2YgdGhlIFRhYmxlLlxuICAgKiBAZGVmYXVsdCAnbm9ybWFsJ1xuICAgKi9cbiAgcGFkZGluZzogUHJvcFR5cGVzLm9uZU9mKFsnY2hlY2tib3gnLCAnbm9uZScsICdub3JtYWwnXSksXG5cbiAgLyoqXG4gICAqIEFsbG93cyBUYWJsZUNlbGxzIHRvIGluaGVyaXQgc2l6ZSBvZiB0aGUgVGFibGUuXG4gICAqIEBkZWZhdWx0ICdtZWRpdW0nXG4gICAqL1xuICBzaXplOiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWydtZWRpdW0nLCAnc21hbGwnXSksIFByb3BUeXBlcy5zdHJpbmddKSxcblxuICAvKipcbiAgICogU2V0IHRoZSBoZWFkZXIgc3RpY2t5LlxuICAgKlxuICAgKiDimqDvuI8gSXQgZG9lc24ndCB3b3JrIHdpdGggSUUxMS5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIHN0aWNreUhlYWRlcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBzeXN0ZW0gcHJvcCB0aGF0IGFsbG93cyBkZWZpbmluZyBzeXN0ZW0gb3ZlcnJpZGVzIGFzIHdlbGwgYXMgYWRkaXRpb25hbCBDU1Mgc3R5bGVzLlxuICAgKi9cbiAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IFRhYmxlOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG5jb25zdCBUYWJsZWx2bDJDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQoKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgVGFibGVsdmwyQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdUYWJsZWx2bDJDb250ZXh0Jztcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFibGVsdmwyQ29udGV4dDsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0VGFibGVCb2R5VXRpbGl0eUNsYXNzKHNsb3QpIHtcbiAgcmV0dXJuIGdlbmVyYXRlVXRpbGl0eUNsYXNzKCdNdWlUYWJsZUJvZHknLCBzbG90KTtcbn1cbmNvbnN0IHRhYmxlQm9keUNsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlUYWJsZUJvZHknLCBbJ3Jvb3QnXSk7XG5leHBvcnQgZGVmYXVsdCB0YWJsZUJvZHlDbGFzc2VzOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJjbGFzc05hbWVcIiwgXCJjb21wb25lbnRcIl07XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyB1bnN0YWJsZV9jb21wb3NlQ2xhc3NlcyBhcyBjb21wb3NlQ2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5pbXBvcnQgVGFibGVsdmwyQ29udGV4dCBmcm9tICcuLi9UYWJsZS9UYWJsZWx2bDJDb250ZXh0JztcbmltcG9ydCB1c2VUaGVtZVByb3BzIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZVByb3BzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgeyBnZXRUYWJsZUJvZHlVdGlsaXR5Q2xhc3MgfSBmcm9tICcuL3RhYmxlQm9keUNsYXNzZXMnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcblxuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIGNsYXNzZXNcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCddXG4gIH07XG4gIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0VGFibGVCb2R5VXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbn07XG5cbmNvbnN0IFRhYmxlQm9keVJvb3QgPSBzdHlsZWQoJ3Rib2R5Jywge1xuICBuYW1lOiAnTXVpVGFibGVCb2R5JyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHN0eWxlcy5yb290XG59KSh7XG4gIGRpc3BsYXk6ICd0YWJsZS1yb3ctZ3JvdXAnXG59KTtcbmNvbnN0IHRhYmxlbHZsMiA9IHtcbiAgdmFyaWFudDogJ2JvZHknXG59O1xuY29uc3QgZGVmYXVsdENvbXBvbmVudCA9ICd0Ym9keSc7XG5jb25zdCBUYWJsZUJvZHkgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBUYWJsZUJvZHkoaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aVRhYmxlQm9keSdcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGNsYXNzTmFtZSxcbiAgICBjb21wb25lbnQgPSBkZWZhdWx0Q29tcG9uZW50XG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgY29tcG9uZW50XG4gIH0pO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KFRhYmxlbHZsMkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogdGFibGVsdmwyLFxuICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovX2pzeChUYWJsZUJvZHlSb290LCBfZXh0ZW5kcyh7XG4gICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpLFxuICAgICAgYXM6IGNvbXBvbmVudCxcbiAgICAgIHJlZjogcmVmLFxuICAgICAgcm9sZTogY29tcG9uZW50ID09PSBkZWZhdWx0Q29tcG9uZW50ID8gbnVsbCA6ICdyb3dncm91cCcsXG4gICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlXG4gICAgfSwgb3RoZXIpKVxuICB9KTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gVGFibGVCb2R5LnByb3BUeXBlc1xuLyogcmVtb3ZlLXByb3B0eXBlcyAqL1xuPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBUaGUgY29udGVudCBvZiB0aGUgY29tcG9uZW50LCBub3JtYWxseSBgVGFibGVSb3dgLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBUYWJsZUJvZHk7IiwiaW1wb3J0IHsgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MsIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFRhYmxlQ2VsbFV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpVGFibGVDZWxsJywgc2xvdCk7XG59XG5jb25zdCB0YWJsZUNlbGxDbGFzc2VzID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcygnTXVpVGFibGVDZWxsJywgWydyb290JywgJ2hlYWQnLCAnYm9keScsICdmb290ZXInLCAnc2l6ZVNtYWxsJywgJ3NpemVNZWRpdW0nLCAncGFkZGluZ0NoZWNrYm94JywgJ3BhZGRpbmdOb25lJywgJ2FsaWduTGVmdCcsICdhbGlnbkNlbnRlcicsICdhbGlnblJpZ2h0JywgJ2FsaWduSnVzdGlmeScsICdzdGlja3lIZWFkZXInXSk7XG5leHBvcnQgZGVmYXVsdCB0YWJsZUNlbGxDbGFzc2VzOyIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJhbGlnblwiLCBcImNsYXNzTmFtZVwiLCBcImNvbXBvbmVudFwiLCBcInBhZGRpbmdcIiwgXCJzY29wZVwiLCBcInNpemVcIiwgXCJzb3J0RGlyZWN0aW9uXCIsIFwidmFyaWFudFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCB7IGRhcmtlbiwgYWxwaGEsIGxpZ2h0ZW4gfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgY2FwaXRhbGl6ZSBmcm9tICcuLi91dGlscy9jYXBpdGFsaXplJztcbmltcG9ydCBUYWJsZUNvbnRleHQgZnJvbSAnLi4vVGFibGUvVGFibGVDb250ZXh0JztcbmltcG9ydCBUYWJsZWx2bDJDb250ZXh0IGZyb20gJy4uL1RhYmxlL1RhYmxlbHZsMkNvbnRleHQnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCB0YWJsZUNlbGxDbGFzc2VzLCB7IGdldFRhYmxlQ2VsbFV0aWxpdHlDbGFzcyB9IGZyb20gJy4vdGFibGVDZWxsQ2xhc3Nlcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuXG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3NlcyxcbiAgICB2YXJpYW50LFxuICAgIGFsaWduLFxuICAgIHBhZGRpbmcsXG4gICAgc2l6ZSxcbiAgICBzdGlja3lIZWFkZXJcbiAgfSA9IG93bmVyU3RhdGU7XG4gIGNvbnN0IHNsb3RzID0ge1xuICAgIHJvb3Q6IFsncm9vdCcsIHZhcmlhbnQsIHN0aWNreUhlYWRlciAmJiAnc3RpY2t5SGVhZGVyJywgYWxpZ24gIT09ICdpbmhlcml0JyAmJiBgYWxpZ24ke2NhcGl0YWxpemUoYWxpZ24pfWAsIHBhZGRpbmcgIT09ICdub3JtYWwnICYmIGBwYWRkaW5nJHtjYXBpdGFsaXplKHBhZGRpbmcpfWAsIGBzaXplJHtjYXBpdGFsaXplKHNpemUpfWBdXG4gIH07XG4gIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0VGFibGVDZWxsVXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbn07XG5cbmNvbnN0IFRhYmxlQ2VsbFJvb3QgPSBzdHlsZWQoJ3RkJywge1xuICBuYW1lOiAnTXVpVGFibGVDZWxsJyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBvd25lclN0YXRlXG4gICAgfSA9IHByb3BzO1xuICAgIHJldHVybiBbc3R5bGVzLnJvb3QsIHN0eWxlc1tvd25lclN0YXRlLnZhcmlhbnRdLCBzdHlsZXNbYHNpemUke2NhcGl0YWxpemUob3duZXJTdGF0ZS5zaXplKX1gXSwgb3duZXJTdGF0ZS5wYWRkaW5nICE9PSAnbm9ybWFsJyAmJiBzdHlsZXNbYHBhZGRpbmcke2NhcGl0YWxpemUob3duZXJTdGF0ZS5wYWRkaW5nKX1gXSwgb3duZXJTdGF0ZS5hbGlnbiAhPT0gJ2luaGVyaXQnICYmIHN0eWxlc1tgYWxpZ24ke2NhcGl0YWxpemUob3duZXJTdGF0ZS5hbGlnbil9YF0sIG93bmVyU3RhdGUuc3RpY2t5SGVhZGVyICYmIHN0eWxlcy5zdGlja3lIZWFkZXJdO1xuICB9XG59KSgoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4gX2V4dGVuZHMoe30sIHRoZW1lLnR5cG9ncmFwaHkuYm9keTIsIHtcbiAgZGlzcGxheTogJ3RhYmxlLWNlbGwnLFxuICB2ZXJ0aWNhbEFsaWduOiAnaW5oZXJpdCcsXG4gIC8vIFdvcmthcm91bmQgZm9yIGEgcmVuZGVyaW5nIGJ1ZyB3aXRoIHNwYW5uZWQgY29sdW1ucyBpbiBDaHJvbWUgNjIuMC5cbiAgLy8gUmVtb3ZlcyB0aGUgYWxwaGEgKHNldHMgaXQgdG8gMSksIGFuZCBsaWdodGVucyBvciBkYXJrZW5zIHRoZSB0aGVtZSBjb2xvci5cbiAgYm9yZGVyQm90dG9tOiB0aGVtZS52YXJzID8gYDFweCBzb2xpZCAke3RoZW1lLnZhcnMucGFsZXR0ZS5UYWJsZUNlbGwuYm9yZGVyfWAgOiBgMXB4IHNvbGlkXG4gICAgJHt0aGVtZS5wYWxldHRlLm1vZGUgPT09ICdsaWdodCcgPyBsaWdodGVuKGFscGhhKHRoZW1lLnBhbGV0dGUuZGl2aWRlciwgMSksIDAuODgpIDogZGFya2VuKGFscGhhKHRoZW1lLnBhbGV0dGUuZGl2aWRlciwgMSksIDAuNjgpfWAsXG4gIHRleHRBbGlnbjogJ2xlZnQnLFxuICBwYWRkaW5nOiAxNlxufSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnaGVhZCcgJiYge1xuICBjb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUudGV4dC5wcmltYXJ5LFxuICBsaW5lSGVpZ2h0OiB0aGVtZS50eXBvZ3JhcGh5LnB4VG9SZW0oMjQpLFxuICBmb250V2VpZ2h0OiB0aGVtZS50eXBvZ3JhcGh5LmZvbnRXZWlnaHRNZWRpdW1cbn0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ2JvZHknICYmIHtcbiAgY29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLnRleHQucHJpbWFyeVxufSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnZm9vdGVyJyAmJiB7XG4gIGNvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS50ZXh0LnNlY29uZGFyeSxcbiAgbGluZUhlaWdodDogdGhlbWUudHlwb2dyYXBoeS5weFRvUmVtKDIxKSxcbiAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkucHhUb1JlbSgxMilcbn0sIG93bmVyU3RhdGUuc2l6ZSA9PT0gJ3NtYWxsJyAmJiB7XG4gIHBhZGRpbmc6ICc2cHggMTZweCcsXG4gIFtgJi4ke3RhYmxlQ2VsbENsYXNzZXMucGFkZGluZ0NoZWNrYm94fWBdOiB7XG4gICAgd2lkdGg6IDI0LFxuICAgIC8vIHByZXZlbnQgdGhlIGNoZWNrYm94IGNvbHVtbiBmcm9tIGdyb3dpbmdcbiAgICBwYWRkaW5nOiAnMCAxMnB4IDAgMTZweCcsXG4gICAgJyYgPiAqJzoge1xuICAgICAgcGFkZGluZzogMFxuICAgIH1cbiAgfVxufSwgb3duZXJTdGF0ZS5wYWRkaW5nID09PSAnY2hlY2tib3gnICYmIHtcbiAgd2lkdGg6IDQ4LFxuICAvLyBwcmV2ZW50IHRoZSBjaGVja2JveCBjb2x1bW4gZnJvbSBncm93aW5nXG4gIHBhZGRpbmc6ICcwIDAgMCA0cHgnXG59LCBvd25lclN0YXRlLnBhZGRpbmcgPT09ICdub25lJyAmJiB7XG4gIHBhZGRpbmc6IDBcbn0sIG93bmVyU3RhdGUuYWxpZ24gPT09ICdsZWZ0JyAmJiB7XG4gIHRleHRBbGlnbjogJ2xlZnQnXG59LCBvd25lclN0YXRlLmFsaWduID09PSAnY2VudGVyJyAmJiB7XG4gIHRleHRBbGlnbjogJ2NlbnRlcidcbn0sIG93bmVyU3RhdGUuYWxpZ24gPT09ICdyaWdodCcgJiYge1xuICB0ZXh0QWxpZ246ICdyaWdodCcsXG4gIGZsZXhEaXJlY3Rpb246ICdyb3ctcmV2ZXJzZSdcbn0sIG93bmVyU3RhdGUuYWxpZ24gPT09ICdqdXN0aWZ5JyAmJiB7XG4gIHRleHRBbGlnbjogJ2p1c3RpZnknXG59LCBvd25lclN0YXRlLnN0aWNreUhlYWRlciAmJiB7XG4gIHBvc2l0aW9uOiAnc3RpY2t5JyxcbiAgdG9wOiAwLFxuICB6SW5kZXg6IDIsXG4gIGJhY2tncm91bmRDb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuYmFja2dyb3VuZC5kZWZhdWx0XG59KSk7XG4vKipcbiAqIFRoZSBjb21wb25lbnQgcmVuZGVycyBhIGA8dGg+YCBlbGVtZW50IHdoZW4gdGhlIHBhcmVudCBjb250ZXh0IGlzIGEgaGVhZGVyXG4gKiBvciBvdGhlcndpc2UgYSBgPHRkPmAgZWxlbWVudC5cbiAqL1xuXG5jb25zdCBUYWJsZUNlbGwgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBUYWJsZUNlbGwoaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aVRhYmxlQ2VsbCdcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGFsaWduID0gJ2luaGVyaXQnLFxuICAgIGNsYXNzTmFtZSxcbiAgICBjb21wb25lbnQ6IGNvbXBvbmVudFByb3AsXG4gICAgcGFkZGluZzogcGFkZGluZ1Byb3AsXG4gICAgc2NvcGU6IHNjb3BlUHJvcCxcbiAgICBzaXplOiBzaXplUHJvcCxcbiAgICBzb3J0RGlyZWN0aW9uLFxuICAgIHZhcmlhbnQ6IHZhcmlhbnRQcm9wXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCB0YWJsZSA9IFJlYWN0LnVzZUNvbnRleHQoVGFibGVDb250ZXh0KTtcbiAgY29uc3QgdGFibGVsdmwyID0gUmVhY3QudXNlQ29udGV4dChUYWJsZWx2bDJDb250ZXh0KTtcbiAgY29uc3QgaXNIZWFkQ2VsbCA9IHRhYmxlbHZsMiAmJiB0YWJsZWx2bDIudmFyaWFudCA9PT0gJ2hlYWQnO1xuICBsZXQgY29tcG9uZW50O1xuXG4gIGlmIChjb21wb25lbnRQcm9wKSB7XG4gICAgY29tcG9uZW50ID0gY29tcG9uZW50UHJvcDtcbiAgfSBlbHNlIHtcbiAgICBjb21wb25lbnQgPSBpc0hlYWRDZWxsID8gJ3RoJyA6ICd0ZCc7XG4gIH1cblxuICBsZXQgc2NvcGUgPSBzY29wZVByb3A7XG5cbiAgaWYgKCFzY29wZSAmJiBpc0hlYWRDZWxsKSB7XG4gICAgc2NvcGUgPSAnY29sJztcbiAgfVxuXG4gIGNvbnN0IHZhcmlhbnQgPSB2YXJpYW50UHJvcCB8fCB0YWJsZWx2bDIgJiYgdGFibGVsdmwyLnZhcmlhbnQ7XG5cbiAgY29uc3Qgb3duZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGFsaWduLFxuICAgIGNvbXBvbmVudCxcbiAgICBwYWRkaW5nOiBwYWRkaW5nUHJvcCB8fCAodGFibGUgJiYgdGFibGUucGFkZGluZyA/IHRhYmxlLnBhZGRpbmcgOiAnbm9ybWFsJyksXG4gICAgc2l6ZTogc2l6ZVByb3AgfHwgKHRhYmxlICYmIHRhYmxlLnNpemUgPyB0YWJsZS5zaXplIDogJ21lZGl1bScpLFxuICAgIHNvcnREaXJlY3Rpb24sXG4gICAgc3RpY2t5SGVhZGVyOiB2YXJpYW50ID09PSAnaGVhZCcgJiYgdGFibGUgJiYgdGFibGUuc3RpY2t5SGVhZGVyLFxuICAgIHZhcmlhbnRcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuICBsZXQgYXJpYVNvcnQgPSBudWxsO1xuXG4gIGlmIChzb3J0RGlyZWN0aW9uKSB7XG4gICAgYXJpYVNvcnQgPSBzb3J0RGlyZWN0aW9uID09PSAnYXNjJyA/ICdhc2NlbmRpbmcnIDogJ2Rlc2NlbmRpbmcnO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KFRhYmxlQ2VsbFJvb3QsIF9leHRlbmRzKHtcbiAgICBhczogY29tcG9uZW50LFxuICAgIHJlZjogcmVmLFxuICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSksXG4gICAgXCJhcmlhLXNvcnRcIjogYXJpYVNvcnQsXG4gICAgc2NvcGU6IHNjb3BlLFxuICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGVcbiAgfSwgb3RoZXIpKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gVGFibGVDZWxsLnByb3BUeXBlc1xuLyogcmVtb3ZlLXByb3B0eXBlcyAqL1xuPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHRleHQtYWxpZ24gb24gdGhlIHRhYmxlIGNlbGwgY29udGVudC5cbiAgICpcbiAgICogTW9uZXRhcnkgb3IgZ2VuZXJhbGx5IG51bWJlciBmaWVsZHMgKipzaG91bGQgYmUgcmlnaHQgYWxpZ25lZCoqIGFzIHRoYXQgYWxsb3dzXG4gICAqIHlvdSB0byBhZGQgdGhlbSB1cCBxdWlja2x5IGluIHlvdXIgaGVhZCB3aXRob3V0IGhhdmluZyB0byB3b3JyeSBhYm91dCBkZWNpbWFscy5cbiAgICogQGRlZmF1bHQgJ2luaGVyaXQnXG4gICAqL1xuICBhbGlnbjogUHJvcFR5cGVzLm9uZU9mKFsnY2VudGVyJywgJ2luaGVyaXQnLCAnanVzdGlmeScsICdsZWZ0JywgJ3JpZ2h0J10pLFxuXG4gIC8qKlxuICAgKiBUaGUgY29udGVudCBvZiB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBwYWRkaW5nIGFwcGxpZWQgdG8gdGhlIGNlbGwuXG4gICAqIFRoZSBwcm9wIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSAoYCdkZWZhdWx0J2ApIGluaGVyaXRlZCBmcm9tIHRoZSBwYXJlbnQgVGFibGUgY29tcG9uZW50LlxuICAgKi9cbiAgcGFkZGluZzogUHJvcFR5cGVzLm9uZU9mKFsnY2hlY2tib3gnLCAnbm9uZScsICdub3JtYWwnXSksXG5cbiAgLyoqXG4gICAqIFNldCBzY29wZSBhdHRyaWJ1dGUuXG4gICAqL1xuICBzY29wZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogU3BlY2lmeSB0aGUgc2l6ZSBvZiB0aGUgY2VsbC5cbiAgICogVGhlIHByb3AgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIChgJ21lZGl1bSdgKSBpbmhlcml0ZWQgZnJvbSB0aGUgcGFyZW50IFRhYmxlIGNvbXBvbmVudC5cbiAgICovXG4gIHNpemU6IFByb3BUeXBlcy5vbmVPZihbJ3NtYWxsJywgJ21lZGl1bSddKSxcblxuICAvKipcbiAgICogU2V0IGFyaWEtc29ydCBkaXJlY3Rpb24uXG4gICAqL1xuICBzb3J0RGlyZWN0aW9uOiBQcm9wVHlwZXMub25lT2YoWydhc2MnLCAnZGVzYycsIGZhbHNlXSksXG5cbiAgLyoqXG4gICAqIFRoZSBzeXN0ZW0gcHJvcCB0aGF0IGFsbG93cyBkZWZpbmluZyBzeXN0ZW0gb3ZlcnJpZGVzIGFzIHdlbGwgYXMgYWRkaXRpb25hbCBDU1Mgc3R5bGVzLlxuICAgKi9cbiAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKSxcblxuICAvKipcbiAgICogU3BlY2lmeSB0aGUgY2VsbCB0eXBlLlxuICAgKiBUaGUgcHJvcCBkZWZhdWx0cyB0byB0aGUgdmFsdWUgaW5oZXJpdGVkIGZyb20gdGhlIHBhcmVudCBUYWJsZUhlYWQsIFRhYmxlQm9keSwgb3IgVGFibGVGb290ZXIgY29tcG9uZW50cy5cbiAgICovXG4gIHZhcmlhbnQ6IFByb3BUeXBlcy5vbmVPZihbJ2JvZHknLCAnZm9vdGVyJywgJ2hlYWQnXSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBUYWJsZUNlbGw7IiwiaW1wb3J0IHsgZ2VuZXJhdGVVdGlsaXR5Q2xhc3MsIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgfSBmcm9tICdAbXVpL2Jhc2UnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFRhYmxlQ29udGFpbmVyVXRpbGl0eUNsYXNzKHNsb3QpIHtcbiAgcmV0dXJuIGdlbmVyYXRlVXRpbGl0eUNsYXNzKCdNdWlUYWJsZUNvbnRhaW5lcicsIHNsb3QpO1xufVxuY29uc3QgdGFibGVDb250YWluZXJDbGFzc2VzID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcygnTXVpVGFibGVDb250YWluZXInLCBbJ3Jvb3QnXSk7XG5leHBvcnQgZGVmYXVsdCB0YWJsZUNvbnRhaW5lckNsYXNzZXM7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImNsYXNzTmFtZVwiLCBcImNvbXBvbmVudFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCB1c2VUaGVtZVByb3BzIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZVByb3BzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgeyBnZXRUYWJsZUNvbnRhaW5lclV0aWxpdHlDbGFzcyB9IGZyb20gJy4vdGFibGVDb250YWluZXJDbGFzc2VzJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc2VzXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnXVxuICB9O1xuICByZXR1cm4gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldFRhYmxlQ29udGFpbmVyVXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbn07XG5cbmNvbnN0IFRhYmxlQ29udGFpbmVyUm9vdCA9IHN0eWxlZCgnZGl2Jywge1xuICBuYW1lOiAnTXVpVGFibGVDb250YWluZXInLFxuICBzbG90OiAnUm9vdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4gc3R5bGVzLnJvb3Rcbn0pKHtcbiAgd2lkdGg6ICcxMDAlJyxcbiAgb3ZlcmZsb3dYOiAnYXV0bydcbn0pO1xuY29uc3QgVGFibGVDb250YWluZXIgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBUYWJsZUNvbnRhaW5lcihpblByb3BzLCByZWYpIHtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBwcm9wczogaW5Qcm9wcyxcbiAgICBuYW1lOiAnTXVpVGFibGVDb250YWluZXInXG4gIH0pO1xuXG4gIGNvbnN0IHtcbiAgICBjbGFzc05hbWUsXG4gICAgY29tcG9uZW50ID0gJ2RpdidcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBjb21wb25lbnRcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goVGFibGVDb250YWluZXJSb290LCBfZXh0ZW5kcyh7XG4gICAgcmVmOiByZWYsXG4gICAgYXM6IGNvbXBvbmVudCxcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpLFxuICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGVcbiAgfSwgb3RoZXIpKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gVGFibGVDb250YWluZXIucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQsIG5vcm1hbGx5IGBUYWJsZWAuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgcm9vdCBub2RlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKi9cbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIFRoZSBzeXN0ZW0gcHJvcCB0aGF0IGFsbG93cyBkZWZpbmluZyBzeXN0ZW0gb3ZlcnJpZGVzIGFzIHdlbGwgYXMgYWRkaXRpb25hbCBDU1Mgc3R5bGVzLlxuICAgKi9cbiAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IFRhYmxlQ29udGFpbmVyOyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRUYWJsZUhlYWRVdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aVRhYmxlSGVhZCcsIHNsb3QpO1xufVxuY29uc3QgdGFibGVIZWFkQ2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aVRhYmxlSGVhZCcsIFsncm9vdCddKTtcbmV4cG9ydCBkZWZhdWx0IHRhYmxlSGVhZENsYXNzZXM7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImNsYXNzTmFtZVwiLCBcImNvbXBvbmVudFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCBUYWJsZWx2bDJDb250ZXh0IGZyb20gJy4uL1RhYmxlL1RhYmxlbHZsMkNvbnRleHQnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCB7IGdldFRhYmxlSGVhZFV0aWxpdHlDbGFzcyB9IGZyb20gJy4vdGFibGVIZWFkQ2xhc3Nlcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuXG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3Nlc1xuICB9ID0gb3duZXJTdGF0ZTtcbiAgY29uc3Qgc2xvdHMgPSB7XG4gICAgcm9vdDogWydyb290J11cbiAgfTtcbiAgcmV0dXJuIGNvbXBvc2VDbGFzc2VzKHNsb3RzLCBnZXRUYWJsZUhlYWRVdGlsaXR5Q2xhc3MsIGNsYXNzZXMpO1xufTtcblxuY29uc3QgVGFibGVIZWFkUm9vdCA9IHN0eWxlZCgndGhlYWQnLCB7XG4gIG5hbWU6ICdNdWlUYWJsZUhlYWQnLFxuICBzbG90OiAnUm9vdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4gc3R5bGVzLnJvb3Rcbn0pKHtcbiAgZGlzcGxheTogJ3RhYmxlLWhlYWRlci1ncm91cCdcbn0pO1xuY29uc3QgdGFibGVsdmwyID0ge1xuICB2YXJpYW50OiAnaGVhZCdcbn07XG5jb25zdCBkZWZhdWx0Q29tcG9uZW50ID0gJ3RoZWFkJztcbmNvbnN0IFRhYmxlSGVhZCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRhYmxlSGVhZChpblByb3BzLCByZWYpIHtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBwcm9wczogaW5Qcm9wcyxcbiAgICBuYW1lOiAnTXVpVGFibGVIZWFkJ1xuICB9KTtcblxuICBjb25zdCB7XG4gICAgY2xhc3NOYW1lLFxuICAgIGNvbXBvbmVudCA9IGRlZmF1bHRDb21wb25lbnRcbiAgfSA9IHByb3BzLFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBjb21wb25lbnRcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goVGFibGVsdmwyQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB0YWJsZWx2bDIsXG4gICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KFRhYmxlSGVhZFJvb3QsIF9leHRlbmRzKHtcbiAgICAgIGFzOiBjb21wb25lbnQsXG4gICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpLFxuICAgICAgcmVmOiByZWYsXG4gICAgICByb2xlOiBjb21wb25lbnQgPT09IGRlZmF1bHRDb21wb25lbnQgPyBudWxsIDogJ3Jvd2dyb3VwJyxcbiAgICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGVcbiAgICB9LCBvdGhlcikpXG4gIH0pO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBUYWJsZUhlYWQucHJvcFR5cGVzXG4vKiByZW1vdmUtcHJvcHR5cGVzICovXG49IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQsIG5vcm1hbGx5IGBUYWJsZVJvd2AuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgcm9vdCBub2RlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKi9cbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIFRoZSBzeXN0ZW0gcHJvcCB0aGF0IGFsbG93cyBkZWZpbmluZyBzeXN0ZW0gb3ZlcnJpZGVzIGFzIHdlbGwgYXMgYWRkaXRpb25hbCBDU1Mgc3R5bGVzLlxuICAgKi9cbiAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IFRhYmxlSGVhZDsiLCJpbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcywgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0VGFibGVSb3dVdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aVRhYmxlUm93Jywgc2xvdCk7XG59XG5jb25zdCB0YWJsZVJvd0NsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlUYWJsZVJvdycsIFsncm9vdCcsICdzZWxlY3RlZCcsICdob3ZlcicsICdoZWFkJywgJ2Zvb3RlciddKTtcbmV4cG9ydCBkZWZhdWx0IHRhYmxlUm93Q2xhc3NlczsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2xhc3NOYW1lXCIsIFwiY29tcG9uZW50XCIsIFwiaG92ZXJcIiwgXCJzZWxlY3RlZFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCB7IGFscGhhIH0gZnJvbSAnQG11aS9zeXN0ZW0nO1xuaW1wb3J0IFRhYmxlbHZsMkNvbnRleHQgZnJvbSAnLi4vVGFibGUvVGFibGVsdmwyQ29udGV4dCc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wcyBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWVQcm9wcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uL3N0eWxlcy9zdHlsZWQnO1xuaW1wb3J0IHRhYmxlUm93Q2xhc3NlcywgeyBnZXRUYWJsZVJvd1V0aWxpdHlDbGFzcyB9IGZyb20gJy4vdGFibGVSb3dDbGFzc2VzJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gb3duZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc2VzLFxuICAgIHNlbGVjdGVkLFxuICAgIGhvdmVyLFxuICAgIGhlYWQsXG4gICAgZm9vdGVyXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnLCBzZWxlY3RlZCAmJiAnc2VsZWN0ZWQnLCBob3ZlciAmJiAnaG92ZXInLCBoZWFkICYmICdoZWFkJywgZm9vdGVyICYmICdmb290ZXInXVxuICB9O1xuICByZXR1cm4gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldFRhYmxlUm93VXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbn07XG5cbmNvbnN0IFRhYmxlUm93Um9vdCA9IHN0eWxlZCgndHInLCB7XG4gIG5hbWU6ICdNdWlUYWJsZVJvdycsXG4gIHNsb3Q6ICdSb290JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgb3duZXJTdGF0ZVxuICAgIH0gPSBwcm9wcztcbiAgICByZXR1cm4gW3N0eWxlcy5yb290LCBvd25lclN0YXRlLmhlYWQgJiYgc3R5bGVzLmhlYWQsIG93bmVyU3RhdGUuZm9vdGVyICYmIHN0eWxlcy5mb290ZXJdO1xuICB9XG59KSgoe1xuICB0aGVtZVxufSkgPT4gKHtcbiAgY29sb3I6ICdpbmhlcml0JyxcbiAgZGlzcGxheTogJ3RhYmxlLXJvdycsXG4gIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxuICAvLyBXZSBkaXNhYmxlIHRoZSBmb2N1cyByaW5nIGZvciBtb3VzZSwgdG91Y2ggYW5kIGtleWJvYXJkIHVzZXJzLlxuICBvdXRsaW5lOiAwLFxuICBbYCYuJHt0YWJsZVJvd0NsYXNzZXMuaG92ZXJ9OmhvdmVyYF06IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLmFjdGlvbi5ob3ZlclxuICB9LFxuICBbYCYuJHt0YWJsZVJvd0NsYXNzZXMuc2VsZWN0ZWR9YF06IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnZhcnMgPyBgcmdiYSgke3RoZW1lLnZhcnMucGFsZXR0ZS5wcmltYXJ5Lm1haW5DaGFubmVsfSAvICR7dGhlbWUudmFycy5wYWxldHRlLmFjdGlvbi5zZWxlY3RlZE9wYWNpdHl9KWAgOiBhbHBoYSh0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbiwgdGhlbWUucGFsZXR0ZS5hY3Rpb24uc2VsZWN0ZWRPcGFjaXR5KSxcbiAgICAnJjpob3Zlcic6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUudmFycyA/IGByZ2JhKCR7dGhlbWUudmFycy5wYWxldHRlLnByaW1hcnkubWFpbkNoYW5uZWx9IC8gY2FsYygke3RoZW1lLnZhcnMucGFsZXR0ZS5hY3Rpb24uc2VsZWN0ZWRPcGFjaXR5fSArICR7dGhlbWUudmFycy5wYWxldHRlLmFjdGlvbi5ob3Zlck9wYWNpdHl9KSlgIDogYWxwaGEodGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sIHRoZW1lLnBhbGV0dGUuYWN0aW9uLnNlbGVjdGVkT3BhY2l0eSArIHRoZW1lLnBhbGV0dGUuYWN0aW9uLmhvdmVyT3BhY2l0eSlcbiAgICB9XG4gIH1cbn0pKTtcbmNvbnN0IGRlZmF1bHRDb21wb25lbnQgPSAndHInO1xuLyoqXG4gKiBXaWxsIGF1dG9tYXRpY2FsbHkgc2V0IGR5bmFtaWMgcm93IGhlaWdodFxuICogYmFzZWQgb24gdGhlIG1hdGVyaWFsIHRhYmxlIGVsZW1lbnQgcGFyZW50IChoZWFkLCBib2R5LCBldGMpLlxuICovXG5cbmNvbnN0IFRhYmxlUm93ID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gVGFibGVSb3coaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aVRhYmxlUm93J1xuICB9KTtcblxuICBjb25zdCB7XG4gICAgY2xhc3NOYW1lLFxuICAgIGNvbXBvbmVudCA9IGRlZmF1bHRDb21wb25lbnQsXG4gICAgaG92ZXIgPSBmYWxzZSxcbiAgICBzZWxlY3RlZCA9IGZhbHNlXG4gIH0gPSBwcm9wcyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCB0YWJsZWx2bDIgPSBSZWFjdC51c2VDb250ZXh0KFRhYmxlbHZsMkNvbnRleHQpO1xuXG4gIGNvbnN0IG93bmVyU3RhdGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBjb21wb25lbnQsXG4gICAgaG92ZXIsXG4gICAgc2VsZWN0ZWQsXG4gICAgaGVhZDogdGFibGVsdmwyICYmIHRhYmxlbHZsMi52YXJpYW50ID09PSAnaGVhZCcsXG4gICAgZm9vdGVyOiB0YWJsZWx2bDIgJiYgdGFibGVsdmwyLnZhcmlhbnQgPT09ICdmb290ZXInXG4gIH0pO1xuXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KFRhYmxlUm93Um9vdCwgX2V4dGVuZHMoe1xuICAgIGFzOiBjb21wb25lbnQsXG4gICAgcmVmOiByZWYsXG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKSxcbiAgICByb2xlOiBjb21wb25lbnQgPT09IGRlZmF1bHRDb21wb25lbnQgPyBudWxsIDogJ3JvdycsXG4gICAgb3duZXJTdGF0ZTogb3duZXJTdGF0ZVxuICB9LCBvdGhlcikpO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBUYWJsZVJvdy5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogU2hvdWxkIGJlIHZhbGlkIDx0cj4gY2hpbGRyZW4gc3VjaCBhcyBgVGFibGVDZWxsYC5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgdGFibGUgcm93IHdpbGwgc2hhZGUgb24gaG92ZXIuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBob3ZlcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHRhYmxlIHJvdyB3aWxsIGhhdmUgdGhlIHNlbGVjdGVkIHNoYWRpbmcuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBzZWxlY3RlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBzeXN0ZW0gcHJvcCB0aGF0IGFsbG93cyBkZWZpbmluZyBzeXN0ZW0gb3ZlcnJpZGVzIGFzIHdlbGwgYXMgYWRkaXRpb25hbCBDU1Mgc3R5bGVzLlxuICAgKi9cbiAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IFRhYmxlUm93OyIsImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCI7XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFycm93IGZyb20gJ3N2Zy9hcnJvdy5zdmcnO1xuaW1wb3J0IEZvcm1Db250cm9sIGZyb20gJ0BtdWkvbWF0ZXJpYWwvRm9ybUNvbnRyb2wnO1xuaW1wb3J0IElucHV0TGFiZWwgZnJvbSAnQG11aS9tYXRlcmlhbC9JbnB1dExhYmVsJztcbmltcG9ydCBNZW51SXRlbSBmcm9tICdAbXVpL21hdGVyaWFsL01lbnVJdGVtJztcbmltcG9ydCBTZWxlY3QgZnJvbSAnQG11aS9tYXRlcmlhbC9TZWxlY3QnO1xuaW1wb3J0IFRvb2x0aXAgZnJvbSAnQG11aS9tYXRlcmlhbC9Ub29sdGlwJztcbmltcG9ydCBUYWJsZSBmcm9tICdAbXVpL21hdGVyaWFsL1RhYmxlJztcbmltcG9ydCBUYWJsZUJvZHkgZnJvbSAnQG11aS9tYXRlcmlhbC9UYWJsZUJvZHknO1xuaW1wb3J0IFRhYmxlQ2VsbCBmcm9tICdAbXVpL21hdGVyaWFsL1RhYmxlQ2VsbCc7XG5pbXBvcnQgVGFibGVDb250YWluZXIgZnJvbSAnQG11aS9tYXRlcmlhbC9UYWJsZUNvbnRhaW5lcic7XG5pbXBvcnQgVGFibGVIZWFkIGZyb20gJ0BtdWkvbWF0ZXJpYWwvVGFibGVIZWFkJztcbmltcG9ydCBUYWJsZVJvdyBmcm9tICdAbXVpL21hdGVyaWFsL1RhYmxlUm93JztcbmltcG9ydCBQYXBlciBmcm9tICdAbXVpL21hdGVyaWFsL1BhcGVyJztcbmV4cG9ydCBmdW5jdGlvbiBUYWJsZUxpc3QocHJvcHMpIHtcbiAgdmFyIGxpc3QgPSBwcm9wcy5saXN0LFxuICAgICAgc3Vib3JkaW5hdGVkID0gcHJvcHMuc3Vib3JkaW5hdGVkLFxuICAgICAgcmlnaHRzID0gcHJvcHMucmlnaHRzO1xuXG4gIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZSh7fSksXG4gICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSxcbiAgICAgIGZpbHRlciA9IF91c2VTdGF0ZTJbMF0sXG4gICAgICBzZXRGaWx0ZXIgPSBfdXNlU3RhdGUyWzFdO1xuXG4gIHZhciBfdXNlU3RhdGUzID0gdXNlU3RhdGUobGlzdCA/IGxpc3QgOiBbXSksXG4gICAgICBfdXNlU3RhdGU0ID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlMywgMiksXG4gICAgICBmaWx0ZXJMaXN0ID0gX3VzZVN0YXRlNFswXSxcbiAgICAgIHNldEZpbHRlckxpc3QgPSBfdXNlU3RhdGU0WzFdO1xuXG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGludGVyaW1GaWx0ZXIgPSBsaXN0O1xuXG4gICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3Aoa2V5KSB7XG4gICAgICBpZiAoZmlsdGVyW2tleV0gIT09ICdhbGwnKSB7XG4gICAgICAgIGlmIChrZXkgPT09ICd0eXBlJykge1xuICAgICAgICAgIGludGVyaW1GaWx0ZXIgPSBpbnRlcmltRmlsdGVyLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW0udHlwZSA9PT0gZmlsdGVyW2tleV07XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoa2V5ID09PSAnY29udHJhY3QnKSB7XG4gICAgICAgICAgaW50ZXJpbUZpbHRlciA9IGludGVyaW1GaWx0ZXIuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS5jb250cmFjdC50eXBlID09PSBmaWx0ZXJba2V5XTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChrZXkgPT09ICdhZHZTdGF0dXMnKSB7XG4gICAgICAgICAgaW50ZXJpbUZpbHRlciA9IGludGVyaW1GaWx0ZXIuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS5hZHZTdGF0dXMgPT09IGZpbHRlcltrZXldO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGtleSA9PT0gJ2Fzc2lnbmVkJykge1xuICAgICAgICAgIGludGVyaW1GaWx0ZXIgPSBpbnRlcmltRmlsdGVyLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW0uYXNzaWduZWRfYnkuZnVsbE5hbWUgPT09IGZpbHRlcltrZXldO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZvciAodmFyIGtleSBpbiBmaWx0ZXIpIHtcbiAgICAgIF9sb29wKGtleSk7XG4gICAgfVxuXG4gICAgc2V0RmlsdGVyTGlzdChpbnRlcmltRmlsdGVyKTtcbiAgfSwgW2ZpbHRlcl0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGVDb250YWluZXIsIHtcbiAgICBjb21wb25lbnQ6IFBhcGVyLFxuICAgIHN4OiB7XG4gICAgICBtYXhIZWlnaHQ6ICdjYWxjKDEwMHZoIC0gODRweCAtIDJyZW0pJ1xuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGUsIHtcbiAgICBzeDoge1xuICAgICAgbWluV2lkdGg6IDY1MFxuICAgIH0sXG4gICAgc2l6ZTogXCJzbWFsbFwiLFxuICAgIHN0aWNreUhlYWRlcjogdHJ1ZVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZUhlYWQsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlUm93LCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZUNlbGwsIHtcbiAgICBzeDoge1xuICAgICAgZm9udFdlaWdodDogNzAwLFxuICAgICAgZm9udFNpemU6IDEyXG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChGb3JtQ29udHJvbCwge1xuICAgIHNpemU6IFwic21hbGxcIixcbiAgICBmdWxsV2lkdGg6IHRydWVcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRMYWJlbCwge1xuICAgIGlkOiBcImRlbW8tc2ltcGxlLXNlbGVjdC1sYWJlbFwiXG4gIH0sIFwiXFx1MDQyMFxcdTA0MzhcXHUwNDREXFx1MDQ0MlxcdTA0M0VcXHUwNDQwXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3QsIHtcbiAgICBsYWJlbElkOiBcImRlbW8tc2ltcGxlLXNlbGVjdC1sYWJlbFwiLFxuICAgIGlkOiBcImRlbW8tc2ltcGxlLXNlbGVjdFwiLFxuICAgIHZhbHVlOiBmaWx0ZXIgIT09IG51bGwgJiYgZmlsdGVyICE9PSB2b2lkIDAgJiYgZmlsdGVyLmFzc2lnbmVkID8gZmlsdGVyID09PSBudWxsIHx8IGZpbHRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogZmlsdGVyLmFzc2lnbmVkIDogJ2FsbCcsXG4gICAgbGFiZWw6IFwiXFx1MDQyMFxcdTA0MzhcXHUwNDREXFx1MDQ0MlxcdTA0M0VcXHUwNDQwXCIsXG4gICAgbmFtZTogJ2Fzc2lnbmVkJyxcbiAgICBzaXplOiBcInNtYWxsXCIsXG4gICAgc3g6IHtcbiAgICAgIGZvbnRTaXplOiAxMlxuICAgIH0sXG4gICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGV2ZW50KSB7XG4gICAgICBzZXRGaWx0ZXIoZnVuY3Rpb24gKHByZXZTdGF0ZSkge1xuICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBwcmV2U3RhdGUpLCB7fSwgX2RlZmluZVByb3BlcnR5KHt9LCBldmVudC50YXJnZXQubmFtZSwgZXZlbnQudGFyZ2V0LnZhbHVlKSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE1lbnVJdGVtLCB7XG4gICAgc3g6IHtcbiAgICAgIGZvbnRTaXplOiAxMlxuICAgIH0sXG4gICAgdmFsdWU6IFwiYWxsXCJcbiAgfSwgXCJcXHUwNDEyXFx1MDQ0MVxcdTA0MzVcIiksIHN1Ym9yZGluYXRlZC5sZW5ndGggPiAwICYmIHN1Ym9yZGluYXRlZC5tYXAoZnVuY3Rpb24gKHJlYWx0b3IpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudUl0ZW0sIHtcbiAgICAgIGtleTogcmVhbHRvci5pZCxcbiAgICAgIHN4OiB7XG4gICAgICAgIGZvbnRTaXplOiAxMlxuICAgICAgfSxcbiAgICAgIHZhbHVlOiByZWFsdG9yLm5hbWVcbiAgICB9LCByZWFsdG9yLm5hbWUpO1xuICB9KSkpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGVDZWxsLCB7XG4gICAgc3g6IHtcbiAgICAgIGZvbnRXZWlnaHQ6IDcwMCxcbiAgICAgIGZvbnRTaXplOiAxMlxuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRm9ybUNvbnRyb2wsIHtcbiAgICBzaXplOiBcInNtYWxsXCIsXG4gICAgZnVsbFdpZHRoOiB0cnVlXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KElucHV0TGFiZWwsIHtcbiAgICBpZDogXCJkZW1vLXNpbXBsZS1zZWxlY3QtbGFiZWxcIlxuICB9LCBcIlxcdTA0MUVcXHUwNDMxXFx1MDQ0QVxcdTA0MzVcXHUwNDNBXFx1MDQ0MlwiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU2VsZWN0LCB7XG4gICAgbGFiZWxJZDogXCJkZW1vLXNpbXBsZS1zZWxlY3QtbGFiZWxcIixcbiAgICBpZDogXCJkZW1vLXNpbXBsZS1zZWxlY3RcIixcbiAgICB2YWx1ZTogZmlsdGVyICE9PSBudWxsICYmIGZpbHRlciAhPT0gdm9pZCAwICYmIGZpbHRlci50eXBlID8gZmlsdGVyID09PSBudWxsIHx8IGZpbHRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogZmlsdGVyLnR5cGUgOiAnYWxsJyxcbiAgICBsYWJlbDogXCJcXHUwNDFFXFx1MDQzMVxcdTA0NEFcXHUwNDM1XFx1MDQzQVxcdTA0NDJcIixcbiAgICBuYW1lOiAndHlwZScsXG4gICAgc2l6ZTogXCJzbWFsbFwiLFxuICAgIHN4OiB7XG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9LFxuICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShldmVudCkge1xuICAgICAgc2V0RmlsdGVyKGZ1bmN0aW9uIChwcmV2U3RhdGUpIHtcbiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcHJldlN0YXRlKSwge30sIF9kZWZpbmVQcm9wZXJ0eSh7fSwgZXZlbnQudGFyZ2V0Lm5hbWUsIGV2ZW50LnRhcmdldC52YWx1ZSkpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwge1xuICAgIHN4OiB7XG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9LFxuICAgIHZhbHVlOiBcImFsbFwiXG4gIH0sIFwiXFx1MDQxMlxcdTA0NDFcXHUwNDM1XCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwge1xuICAgIHN4OiB7XG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9LFxuICAgIHZhbHVlOiBcIlxcdTA0MUFcXHUwNDMyXFx1MDQzMFxcdTA0NDBcXHUwNDQyXFx1MDQzOFxcdTA0NDBcXHUwNDMwXCJcbiAgfSwgXCJcXHUwNDFBXFx1MDQzMlxcdTA0MzBcXHUwNDQwXFx1MDQ0MlxcdTA0MzhcXHUwNDQwXFx1MDQzMFwiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudUl0ZW0sIHtcbiAgICBzeDoge1xuICAgICAgZm9udFNpemU6IDEyXG4gICAgfSxcbiAgICB2YWx1ZTogXCJcXHUwNDFGXFx1MDQzNVxcdTA0NDBcXHUwNDM1XFx1MDQ0M1xcdTA0NDFcXHUwNDQyXFx1MDQ0M1xcdTA0M0ZcXHUwNDNBXFx1MDQzMCBcXHUwNDE0XFx1MDQxNFxcdTA0MjNcIlxuICB9LCBcIlxcdTA0MUZcXHUwNDM1XFx1MDQ0MFxcdTA0MzVcXHUwNDQzXFx1MDQ0MVxcdTA0NDJcXHUwNDQzXFx1MDQzRlxcdTA0M0FcXHUwNDMwIFxcdTA0MTRcXHUwNDE0XFx1MDQyM1wiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudUl0ZW0sIHtcbiAgICBzeDoge1xuICAgICAgZm9udFNpemU6IDEyXG4gICAgfSxcbiAgICB2YWx1ZTogXCJcXHUwNDFBXFx1MDQzRVxcdTA0M0NcXHUwNDNEXFx1MDQzMFxcdTA0NDJcXHUwNDMwXCJcbiAgfSwgXCJcXHUwNDFBXFx1MDQzRVxcdTA0M0NcXHUwNDNEXFx1MDQzMFxcdTA0NDJcXHUwNDMwXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwge1xuICAgIHN4OiB7XG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9LFxuICAgIHZhbHVlOiBcIlxcdTA0MTRcXHUwNDNFXFx1MDQzQ1wiXG4gIH0sIFwiXFx1MDQxNFxcdTA0M0VcXHUwNDNDXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwge1xuICAgIHN4OiB7XG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9LFxuICAgIHZhbHVlOiBcIlxcdTA0MTdcXHUwNDM1XFx1MDQzQ1xcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0RcXHUwNDRCXFx1MDQzOSBcXHUwNDQzXFx1MDQ0N1xcdTA0MzBcXHUwNDQxXFx1MDQ0MlxcdTA0M0VcXHUwNDNBXCJcbiAgfSwgXCJcXHUwNDE3XFx1MDQzNVxcdTA0M0NcXHUwNDM1XFx1MDQzQlxcdTA0NENcXHUwNDNEXFx1MDQ0QlxcdTA0MzkgXFx1MDQ0M1xcdTA0NDdcXHUwNDMwXFx1MDQ0MVxcdTA0NDJcXHUwNDNFXFx1MDQzQVwiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudUl0ZW0sIHtcbiAgICBzeDoge1xuICAgICAgZm9udFNpemU6IDEyXG4gICAgfSxcbiAgICB2YWx1ZTogXCJcXHUwNDEzXFx1MDQzMFxcdTA0NDBcXHUwNDMwXFx1MDQzNlwiXG4gIH0sIFwiXFx1MDQxM1xcdTA0MzBcXHUwNDQwXFx1MDQzMFxcdTA0MzZcIikpKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlQ2VsbCwge1xuICAgIHN4OiB7XG4gICAgICBmb250V2VpZ2h0OiA3MDAsXG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEZvcm1Db250cm9sLCB7XG4gICAgc2l6ZTogXCJzbWFsbFwiLFxuICAgIGZ1bGxXaWR0aDogdHJ1ZVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dExhYmVsLCB7XG4gICAgaWQ6IFwiZGVtby1zaW1wbGUtc2VsZWN0LWxhYmVsXCJcbiAgfSwgXCJcXHUwNDIyXFx1MDQzOFxcdTA0M0YgXFx1MDQzNFxcdTA0M0VcXHUwNDMzXFx1MDQzRVxcdTA0NDBcXHUwNDMwXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3QsIHtcbiAgICBsYWJlbElkOiBcImRlbW8tc2ltcGxlLXNlbGVjdC1sYWJlbFwiLFxuICAgIGlkOiBcImRlbW8tc2ltcGxlLXNlbGVjdFwiLFxuICAgIHZhbHVlOiBmaWx0ZXIgIT09IG51bGwgJiYgZmlsdGVyICE9PSB2b2lkIDAgJiYgZmlsdGVyLmNvbnRyYWN0ID8gZmlsdGVyID09PSBudWxsIHx8IGZpbHRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogZmlsdGVyLmNvbnRyYWN0IDogJ2FsbCcsXG4gICAgbGFiZWw6IFwiXFx1MDQyMlxcdTA0MzhcXHUwNDNGIFxcdTA0MzRcXHUwNDNFXFx1MDQzM1xcdTA0M0VcXHUwNDQwXFx1MDQzMFwiLFxuICAgIG5hbWU6ICdjb250cmFjdCcsXG4gICAgc2l6ZTogXCJzbWFsbFwiLFxuICAgIHN4OiB7XG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9LFxuICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShldmVudCkge1xuICAgICAgc2V0RmlsdGVyKGZ1bmN0aW9uIChwcmV2U3RhdGUpIHtcbiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcHJldlN0YXRlKSwge30sIF9kZWZpbmVQcm9wZXJ0eSh7fSwgZXZlbnQudGFyZ2V0Lm5hbWUsIGV2ZW50LnRhcmdldC52YWx1ZSkpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwge1xuICAgIHN4OiB7XG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9LFxuICAgIHZhbHVlOiBcImFsbFwiXG4gIH0sIFwiXFx1MDQxMlxcdTA0NDFcXHUwNDM1XCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwge1xuICAgIHN4OiB7XG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9LFxuICAgIHZhbHVlOiBcIlxcdTA0MkRcXHUwNDNBXFx1MDQ0MVxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0MzdcXHUwNDM4XFx1MDQzMlwiXG4gIH0sIFwiXFx1MDQyRFxcdTA0M0FcXHUwNDQxXFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQzN1xcdTA0MzhcXHUwNDMyXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwge1xuICAgIHN4OiB7XG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9LFxuICAgIHZhbHVlOiBcIlxcdTA0MjBcXHUwNDM1XFx1MDQzQlxcdTA0MzBcXHUwNDNDXFx1MDQzRFxcdTA0NEJcXHUwNDM5XCJcbiAgfSwgXCJcXHUwNDIwXFx1MDQzNVxcdTA0M0JcXHUwNDMwXFx1MDQzQ1xcdTA0M0RcXHUwNDRCXFx1MDQzOVwiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudUl0ZW0sIHtcbiAgICBzeDoge1xuICAgICAgZm9udFNpemU6IDEyXG4gICAgfSxcbiAgICB2YWx1ZTogbnVsbFxuICB9LCBcIlxcdTA0MTFcXHUwNDM1XFx1MDQzNyBcXHUwNDM0XFx1MDQzRVxcdTA0MzNcXHUwNDNFXFx1MDQzMlxcdTA0M0VcXHUwNDQwXFx1MDQzMFwiKSkpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGVDZWxsLCB7XG4gICAgc3g6IHtcbiAgICAgIGZvbnRXZWlnaHQ6IDcwMCxcbiAgICAgIGZvbnRTaXplOiAxMlxuICAgIH1cbiAgfSwgXCJcXHUwNDFGXFx1MDQzQlxcdTA0M0VcXHUwNDQ5XFx1MDQzMFxcdTA0MzRcXHUwNDM4XCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZUNlbGwsIHtcbiAgICBzeDoge1xuICAgICAgZm9udFdlaWdodDogNzAwLFxuICAgICAgZm9udFNpemU6IDEyXG4gICAgfVxuICB9LCBcIlxcdTA0MjZcXHUwNDM1XFx1MDQzRFxcdTA0MzAgXFx1MDQ0MVxcdTA0MzVcXHUwNDM5XFx1MDQ0N1xcdTA0MzBcXHUwNDQxXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZUNlbGwsIHtcbiAgICBzeDoge1xuICAgICAgZm9udFdlaWdodDogNzAwLFxuICAgICAgZm9udFNpemU6IDEyXG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChGb3JtQ29udHJvbCwge1xuICAgIHNpemU6IFwic21hbGxcIixcbiAgICBmdWxsV2lkdGg6IHRydWVcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXRMYWJlbCwge1xuICAgIGlkOiBcImRlbW8tc2ltcGxlLXNlbGVjdC1sYWJlbFwiXG4gIH0sIFwiXFx1MDQyMVxcdTA0NDJcXHUwNDMwXFx1MDQ0MlxcdTA0NDNcXHUwNDQxXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3QsIHtcbiAgICBsYWJlbElkOiBcImRlbW8tc2ltcGxlLXNlbGVjdC1sYWJlbFwiLFxuICAgIGlkOiBcImRlbW8tc2ltcGxlLXNlbGVjdFwiLFxuICAgIHZhbHVlOiBmaWx0ZXIgIT09IG51bGwgJiYgZmlsdGVyICE9PSB2b2lkIDAgJiYgZmlsdGVyLmFkdlN0YXR1cyA/IGZpbHRlciA9PT0gbnVsbCB8fCBmaWx0ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGZpbHRlci5hZHZTdGF0dXMgOiAnYWxsJyxcbiAgICBsYWJlbDogXCJcXHUwNDIxXFx1MDQ0MlxcdTA0MzBcXHUwNDQyXFx1MDQ0M1xcdTA0NDFcIixcbiAgICBuYW1lOiAnYWR2U3RhdHVzJyxcbiAgICBzaXplOiBcInNtYWxsXCIsXG4gICAgc3g6IHtcbiAgICAgIGZvbnRTaXplOiAxMlxuICAgIH0sXG4gICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGV2ZW50KSB7XG4gICAgICBzZXRGaWx0ZXIoZnVuY3Rpb24gKHByZXZTdGF0ZSkge1xuICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBwcmV2U3RhdGUpLCB7fSwgX2RlZmluZVByb3BlcnR5KHt9LCBldmVudC50YXJnZXQubmFtZSwgZXZlbnQudGFyZ2V0LnZhbHVlKSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE1lbnVJdGVtLCB7XG4gICAgc3g6IHtcbiAgICAgIGZvbnRTaXplOiAxMlxuICAgIH0sXG4gICAgdmFsdWU6IFwiYWxsXCJcbiAgfSwgXCJcXHUwNDEyXFx1MDQ0MVxcdTA0MzVcIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE1lbnVJdGVtLCB7XG4gICAgc3g6IHtcbiAgICAgIGZvbnRTaXplOiAxMlxuICAgIH0sXG4gICAgdmFsdWU6IFwiXFx1MDQxQSBcXHUwNDQwXFx1MDQzMFxcdTA0MzdcXHUwNDNDXFx1MDQzNVxcdTA0NDlcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDRFXCJcbiAgfSwgXCJcXHUwNDFBIFxcdTA0NDBcXHUwNDMwXFx1MDQzN1xcdTA0M0NcXHUwNDM1XFx1MDQ0OVxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NEVcIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE1lbnVJdGVtLCB7XG4gICAgc3g6IHtcbiAgICAgIGZvbnRTaXplOiAxMlxuICAgIH0sXG4gICAgdmFsdWU6IFwiXFx1MDQxRFxcdTA0MzUgXFx1MDQzMiBcXHUwNDQwXFx1MDQzNVxcdTA0M0FcXHUwNDNCXFx1MDQzMFxcdTA0M0NcXHUwNDM1XCJcbiAgfSwgXCJcXHUwNDFEXFx1MDQzNSBcXHUwNDMyIFxcdTA0NDBcXHUwNDM1XFx1MDQzQVxcdTA0M0JcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcIikpKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlQ2VsbCwge1xuICAgIHN4OiB7XG4gICAgICBmb250V2VpZ2h0OiA3MDAsXG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9XG4gIH0sIFwiXFx1MDQxRlxcdTA0M0JcXHUwNDNFXFx1MDQ0OVxcdTA0MzBcXHUwNDM0XFx1MDQzQVxcdTA0MzBcIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlQ2VsbCwge1xuICAgIHN4OiB7XG4gICAgICBmb250V2VpZ2h0OiA3MDAsXG4gICAgICBmb250U2l6ZTogMTJcbiAgICB9XG4gIH0sIFwiXFx1MDQxM1xcdTA0NDBcXHUwNDMwXFx1MDQ0NFxcdTA0MzhcXHUwNDNBXCIpKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlQm9keSwgbnVsbCwgZmlsdGVyTGlzdC5sZW5ndGggPiAwICYmIGZpbHRlckxpc3QubWFwKGZ1bmN0aW9uIChyb3csIGlkeCkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZVJvdywge1xuICAgICAga2V5OiBpZHhcbiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZUNlbGwsIHtcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGZvbnRTaXplOiAxMFxuICAgICAgfVxuICAgIH0sIHJvdy5hc3NpZ25lZF9ieS5mdWxsTmFtZSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlQ2VsbCwge1xuICAgICAgc3R5bGU6IHtcbiAgICAgICAgZm9udFNpemU6IDEwXG4gICAgICB9XG4gICAgfSwgcm93LnR5cGVOYW1lLCBcIiwgXCIsIHJvdy52aWV3ZWRBZGRyZXNzKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGVDZWxsLCB7XG4gICAgICBzdHlsZToge1xuICAgICAgICBmb250U2l6ZTogMTBcbiAgICAgIH1cbiAgICB9LCByb3cuY29udHJhY3QudHlwZSA/IHJvdy5jb250cmFjdC50eXBlIDogJ9Cd0LXRgicpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZUNlbGwsIHtcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGZvbnRTaXplOiAxMFxuICAgICAgfVxuICAgIH0sIHJvdy52aWV3ZWRBcmVhKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGVDZWxsLCB7XG4gICAgICBzdHlsZToge1xuICAgICAgICBmb250U2l6ZTogMTBcbiAgICAgIH1cbiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUb29sdGlwLCB7XG4gICAgICB0aXRsZTogXCJcXHUwNDI2XFx1MDQzNVxcdTA0M0RcXHUwNDMwIFxcdTA0M0RcXHUwNDMwIFxcdTA0NDFcXHUwNDQyXFx1MDQzMFxcdTA0NDBcXHUwNDQyXFx1MDQzNSBcIi5jb25jYXQocm93LnByaWNlU3RhcnQsIFwiIFxcdTA0NDJcXHUwNDRCXFx1MDQ0MS4gXFx1MDQ0MFxcdTA0NDNcXHUwNDMxLlwiKSxcbiAgICAgIHBsYWNlbWVudDogXCJ0b3BcIixcbiAgICAgIGFycm93OiB0cnVlXG4gICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgIGdhcDogJzAuNXJlbScsXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInXG4gICAgICB9XG4gICAgfSwgcm93LnByaWNlQ3VycmVudCwgXCIgXFx1MDQ0MlxcdTA0NEJcXHUwNDQxLlxcdTIwQkRcIiwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQXJyb3csIHtcbiAgICAgIGhlaWdodDogMTYsXG4gICAgICBzdHlsZTogcm93LnByaWNlVHJlbmQgIT09IDIgPyB7XG4gICAgICAgIHRyYW5zZm9ybTogXCJcIi5jb25jYXQocm93LnByaWNlVHJlbmQgPT09IDAgPyAncm90YXRlKC05MGRlZyknIDogJ3JvdGF0ZSgxODBkZWcpJylcbiAgICAgIH0gOiB7fVxuICAgIH0pKSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZUNlbGwsIHtcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGZvbnRTaXplOiAxMFxuICAgICAgfVxuICAgIH0sIHJvdy5hZHZTdGF0dXMpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZUNlbGwsIHtcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGZvbnRTaXplOiAxMFxuICAgICAgfVxuICAgIH0sIChyb3cgPT09IG51bGwgfHwgcm93ID09PSB2b2lkIDAgPyB2b2lkIDAgOiByb3cucGxhdGZvcm1TdGF0cy5sZW5ndGgpID4gMCAmJiByb3cucGxhdGZvcm1TdGF0cy5tYXAoZnVuY3Rpb24gKHBsYXRmb3JtLCBpZHgpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgICAgICBrZXk6IGlkeCxcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnYmxvY2snXG4gICAgICAgIH1cbiAgICAgIH0sIHBsYXRmb3JtLm5hbWUpO1xuICAgIH0pKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGVDZWxsLCB7XG4gICAgICBzdHlsZToge1xuICAgICAgICBmb250U2l6ZTogMTBcbiAgICAgIH1cbiAgICB9LCBcIlxcdTA0MTNcXHUwNDQwXFx1MDQzMFxcdTA0NDRcXHUwNDM4XFx1MDQzQVwiKSk7XG4gIH0pKSkpO1xufSIsImV4cG9ydCAqIGZyb20gJy4vVGFibGVMaXN0JzsiLCJpbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbVwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCI7aW1wb3J0IFJlYWN0LHt1c2VFZmZlY3QsdXNlU3RhdGV9ZnJvbVwicmVhY3RcIjtpbXBvcnQnLi9BcHAuc2Nzcyc7aW1wb3J0e0hlYWRlcn1mcm9tJ2NvbXBvbmVudHMvSGVhZGVyJztpbXBvcnR7VGFibGVMaXN0fWZyb20nY29tcG9uZW50cy9UYWJsZUxpc3QnO2V4cG9ydCBmdW5jdGlvbiBBcHAoKXt2YXIgX3VzZVN0YXRlPXVzZVN0YXRlKG51bGwpLF91c2VTdGF0ZTI9X3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLDIpLGRhdGE9X3VzZVN0YXRlMlswXSxzZXREYXRhPV91c2VTdGF0ZTJbMV07dmFyIF91c2VTdGF0ZTM9dXNlU3RhdGUodHJ1ZSksX3VzZVN0YXRlND1fc2xpY2VkVG9BcnJheShfdXNlU3RhdGUzLDIpLGxvYWRpbmc9X3VzZVN0YXRlNFswXSxzZXRMb2FkaW5nPV91c2VTdGF0ZTRbMV07dXNlRWZmZWN0KGZ1bmN0aW9uKCl7c2V0RGF0YSh7XCJvYmplY3RzRGF0YVwiOlt7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiOTg0MDAwMjM0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQn9GA0L7QutGD0LTRgdC60L7QtSDQk9Cw0LPQsNGA0LjQvdCwIDg2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0NS8zNi85XCIsXCJwcmljZVN0YXJ0XCI6XCIxNTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU4MyxcImZ1bGxOYW1lXCI6XCLQkNC70YzRh9C40LrQvtCy0LAg0J7QutGB0LDQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjUxMTQ4MDAwMjcwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCe0LvQuNC80L/QuNC50YHQutCw0Y8gNjfQsFwiLFwidmlld2VkQXJlYVwiOlwiMjYvMTgvNVwiLFwicHJpY2VTdGFydFwiOlwiMzA1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMDUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1MTE0ODAwMDI3MVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLRgdC60LjQuSDRgdC10LvRjNGB0L7QstC10YIg0JzQtdGC0LXQvtGAIDIzMlwiLFwidmlld2VkQXJlYVwiOlwiMzAvMjAvOVwiLFwicHJpY2VTdGFydFwiOlwiNzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjcwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTExNDgwMDAyNzNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHQv9C+0YDRgtC40LLQvdCw0Y8gN1wiLFwidmlld2VkQXJlYVwiOlwiMzAvMTQvOVwiLFwicHJpY2VTdGFydFwiOlwiMzAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1MTE0ODAwMDI3NVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0KfQuNC6INGA0L8g0KLQtdGA0LXRiNC60L7QstC+0LkgMTIzXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0MC8zMC83XCIsXCJwcmljZVN0YXJ0XCI6XCIxMDUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjEwNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODgxMVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE1IDEzOjE5OjU2LjIyNzY2M1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNy0yNiAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjIgMTU6MDE6NDAuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQvtC80L3QsNGC0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQvtC8LilcIixcInJlcU51bWJlclwiOlwiNTExNDgwMDAyNzdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KjQuNGI0LrQuNC90LAgMTE0XCIsXCJ2aWV3ZWRBcmVhXCI6XCIyOC8yMC81XCIsXCJwcmljZVN0YXJ0XCI6XCIxMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjEzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczMTA3MDk0MjA3NzkyMzFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzA2ODY5NDdcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjU2MjQ5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDItMTggMTI6MDM6MTkuMDQyNDMzXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA1LTE4IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yMCAwODo0Mzo0MS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtC+0LzQvdCw0YLQsFwiLFwidHlwZU5hbWVcIjpcIijQmtC+0LwuKVwiLFwicmVxTnVtYmVyXCI6XCI1MTE0ODAwMDMwN1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQpdCw0LvRgtGD0YDQuNC90LAgMzFcIixcInZpZXdlZEFyZWFcIjpcIjc1LzE0LzhcIixcInByaWNlU3RhcnRcIjpcIjcxMFwiLFwicHJpY2VDdXJyZW50XCI6NzEwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjU5MTQyXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMTAgMTA6Mzg6NDYuMDQ5OTEwXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTEwIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yNiAxNToyMDo0My4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MTE0ODAwMDMwOFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQndC10LLQtdC70YzRgdC60L7Qs9C+IDY5XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0NS8zMy82XCIsXCJwcmljZVN0YXJ0XCI6XCIzOTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM5MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczMTA3MDk0MjA3Nzk5NzZcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzExOTQwMjFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjYxMDAzXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMjIgMTM6NTI6MDQuMjUzMzE3XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTIyIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMSAxNjoxMTowMy4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MTE0ODAwMDMwOVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQl9Cw0LHQsNC70YPQtdCy0LAgNDNcIixcInZpZXdlZEFyZWFcIjpcIjQzLzI3LzhcIixcInByaWNlU3RhcnRcIjpcIjMyMDBcIixcInByaWNlQ3VycmVudFwiOlwiMzIwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzMxMDcwOTQyMDc3OTk3N1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyMzUzNFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjk1NjRcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU4MyxcImZ1bGxOYW1lXCI6XCLQkNC70YzRh9C40LrQvtCy0LAg0J7QutGB0LDQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0yMyAxMzo0NDoyNi4wNjIzMzFcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTEtMjMgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTIzIDE0OjI4OjQ3LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUxMTQ4MDAwMzExXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCb0LXQvdC40L3QsCA1OVwiLFwidmlld2VkQXJlYVwiOlwiMjUvMTQvN1wiLFwicHJpY2VTdGFydFwiOlwiMjkwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIyOTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzEwNzA5NDIwNzgwMDAwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTI2MDI0XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3MDQ1N1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTMwIDE0OjIwOjMzLjMwMTMwN1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNi0zMCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMzAgMTU6NDg6MTQuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTExNDgwMDAzMTJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KjQuNGA0L7QutCw0Y8gMTM3LzFcIixcInZpZXdlZEFyZWFcIjpcIjYyLzQyLzdcIixcInByaWNlU3RhcnRcIjpcIjUwMDBcIixcInByaWNlQ3VycmVudFwiOlwiNTAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzMxMDcwOTQyMDc4MDAwMVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNjMwM1wiLFwic3RhdHVzXCI6XCLQntGI0LjQsdC60LBcIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNzE1NjhcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU4MyxcImZ1bGxOYW1lXCI6XCLQkNC70YzRh9C40LrQvtCy0LAg0J7QutGB0LDQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNi0wNiAxMjoxMDo1Ni43ODk5OTBcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTItMDYgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTA2IDE0OjM1OjQ5LjAwMDAwMFwifSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjUxMTQ4MDAwMzEzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQntCx0Ywg0KHRgtCw0L3RhtC40L7QvdC90LDRjyA0NlwiLFwidmlld2VkQXJlYVwiOlwiNTYvMzQvOVwiLFwicHJpY2VTdGFydFwiOlwiMjgwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIyODAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzEwNzA5NDIwNzgwMDAyXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NDM4MDMwNlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNzMxMDNcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU4MyxcImZ1bGxOYW1lXCI6XCLQkNC70YzRh9C40LrQvtCy0LAg0J7QutGB0LDQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNi0xNiAxMjowNjoxMi4zMjcyMjJcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDktMTYgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTE2IDEzOjU4OjM2LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUxMTQ4MDAwMzE0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCT0Y3RgdGB0YLRgNC+0LXQstGB0LrQsNGPIDIvMVwiLFwidmlld2VkQXJlYVwiOlwiNDkvMjIvMTNcIixcInByaWNlU3RhcnRcIjpcIjU0MDBcIixcInByaWNlQ3VycmVudFwiOlwiNTQwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzMxMDcwOTQyMDc4MDAwM1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDkyMzc0MFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzk4MjAwMDQ5NFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQn9C+0YDRgi3QkNGA0YLRg9GA0YHQutC40LkgMi3QuSAyN1wiLFwidmlld2VkQXJlYVwiOlwiMzQvMjcvOFwiLFwicHJpY2VTdGFydFwiOlwiMzk1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIzOTUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzOTgyMDAwNjU1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstC60LAg0J/Rg9GI0LrQuNC90LAgMlwiLFwidmlld2VkQXJlYVwiOlwiNy45MFwiLFwicHJpY2VTdGFydFwiOlwiMTAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzOTgyMDAwNzAwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQnNCw0YDRg9GB0LjQvdC+INCB0LvQvtGH0LrQsCAzOVwiLFwidmlld2VkQXJlYVwiOlwiNjAvNTAvN1wiLFwicHJpY2VTdGFydFwiOlwiMTIwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzk4MjAwMDcwMlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JHRg9Cz0L7RgtCw0Log0KHQvtCy0LXRgtGB0LrQsNGPIDY2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3NC80My8xM1wiLFwicHJpY2VTdGFydFwiOlwiMjE1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMTUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzOTgyMDAwNzA2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstGB0LrQuNC5INGB0LXQu9GM0YHQvtCy0LXRgiDQgdC70L7Rh9C60LAg0YPRhy4gMTI0XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3LjIwXCIsXCJwcmljZVN0YXJ0XCI6XCIyMDBcIixcInByaWNlQ3VycmVudFwiOlwiMjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzk4MjAwMDcyNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQpNCw0YHQsNC00L3QsNGPIDI2LzFcIixcInZpZXdlZEFyZWFcIjpcIjQwLzI5LzRcIixcInByaWNlU3RhcnRcIjpcIjI2MDBcIixcInByaWNlQ3VycmVudFwiOlwiMjYwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTM5ODIwMDA3MzVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0K/Qs9C+0LTQuNC90YHQutCw0Y8gMzlcIixcInZpZXdlZEFyZWFcIjpcIjc5LzQ4LzE2XCIsXCJwcmljZVN0YXJ0XCI6XCIxNzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE3NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU4MyxcImZ1bGxOYW1lXCI6XCLQkNC70YzRh9C40LrQvtCy0LAg0J7QutGB0LDQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTM5ODIwMDA3MzlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JfQvtC70L7RgtCw0Y8g0L7RgdC10L3RjCAyNlwiLFwidmlld2VkQXJlYVwiOlwiOS42NlwiLFwicHJpY2VTdGFydFwiOlwiNzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjc1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JfQtdC80LXQu9GM0L3Ri9C5INGD0YfQsNGB0YLQvtC6XCIsXCJ0eXBlTmFtZVwiOlwiKNCj0YcuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzk4MjAwMDc0MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLRgdC60LjQuSDRgdC10LvRjNGB0L7QstC10YIg0JXQu9C+0YfQutCwLTIgMjdcIixcInZpZXdlZEFyZWFcIjpcIjEyLzAvMFwiLFwicHJpY2VTdGFydFwiOlwiNTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjUwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTM5ODIwMDA3NDZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCc0LDRgNGD0YHQuNC90L4g0KHQndCiINCV0LvQvtGH0LrQsCAzOVwiLFwidmlld2VkQXJlYVwiOlwiMzYvMjUvNlwiLFwicHJpY2VTdGFydFwiOlwiMTEwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzk4MjAwMDc2MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQn9C+0YDRgiDQkNGA0YLRg9GA0YHQutC40LkgMiDQv9C10YAgNzhcIixcInZpZXdlZEFyZWFcIjpcIjgwLzU2LzE4XCIsXCJwcmljZVN0YXJ0XCI6XCI0NTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQ1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU4MyxcImZ1bGxOYW1lXCI6XCLQkNC70YzRh9C40LrQvtCy0LAg0J7QutGB0LDQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzOTgyMDAwNzY2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCd0LXQstC10LvRjNGB0LrQvtCz0L4gNjdcIixcInZpZXdlZEFyZWFcIjpcIjQ1LzMxLzdcIixcInByaWNlU3RhcnRcIjpcIjI2MDBcIixcInByaWNlQ3VycmVudFwiOlwiMjYwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTM5ODIwMDA3OTNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0L7Rh9C10L3QtdCy0L4g0J3QodCiINCS0LXRgtC10YDQsNC9LTEgMzY4XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMjYvNjAvMjBcIixcInByaWNlU3RhcnRcIjpcIjMwMDBcIixcInByaWNlQ3VycmVudFwiOlwiMzAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM5ODIwMDA4MjhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JfQsNCx0LDQu9GD0LXQstCwIDkwXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0MC8yMS81XCIsXCJwcmljZVN0YXJ0XCI6XCIzMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU4MyxcImZ1bGxOYW1lXCI6XCLQkNC70YzRh9C40LrQvtCy0LAg0J7QutGB0LDQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MjU5MDAxNTg1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQnNCw0YDRg9GB0LjQvdC+INCa0L7QvNGB0L7QvNC+0LvRjNGB0LrQsNGPIDE2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Mi8yNy84XCIsXCJwcmljZVN0YXJ0XCI6XCIxNjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE2MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU4MyxcImZ1bGxOYW1lXCI6XCLQkNC70YzRh9C40LrQvtCy0LAg0J7QutGB0LDQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTQyNzkwMDI2MjNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JrQsNGA0LvQsCDQnNCw0YDQutGB0LAg0L/Qu9C+0YnQsNC00YwgMVwiLFwidmlld2VkQXJlYVwiOlwiMy4wMFwiLFwicHJpY2VTdGFydFwiOlwiMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTQ3MDQwMDAzMTZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCi0L7Qu9C80LDRh9C10LLRgdC60LjQuSDRgdC10LvRjNGB0L7QstC10YIg0KTRgNGD0LrRgtC+0LLQsNGPIDE0M1wiLFwidmlld2VkQXJlYVwiOlwiNzAvNDAvNVwiLFwicHJpY2VTdGFydFwiOlwiMTkwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxOTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDcwNDAwMDMxN1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQn9C40YHQsNGA0LXQstCwIDRcIixcInZpZXdlZEFyZWFcIjpcIjMxLzE4LzZcIixcInByaWNlU3RhcnRcIjpcIjM2NTBcIixcInByaWNlQ3VycmVudFwiOlwiMzY1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQ3MTcwMDAxODdcIixcInZpZXdlZEFkZHJlc3NcIjpcIjgg0JzQsNGA0YLQsCDQnNC40YDQsCAyXCIsXCJ2aWV3ZWRBcmVhXCI6XCI3MC8xLzFcIixcInByaWNlU3RhcnRcIjpcIjM4MDBcIixcInByaWNlQ3VycmVudFwiOlwiMzgwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQ3MTcwMDMxODZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCU0L7RgNC+0LPQuNC90L4g0KHQstC10YLQu9Cw0Y8gMjhcIixcInZpZXdlZEFyZWFcIjpcIjQyLzI3LzVcIixcInByaWNlU3RhcnRcIjpcIjcwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI3MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODc4OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE1IDEyOjExOjM2LjI2MzUzMlwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDczNzAwMDE0MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQr9Cz0L7QtNC40L3RgdC60LDRjyAx0JFcIixcInZpZXdlZEFyZWFcIjpcIjQ4LzE3LzEzXCIsXCJwcmljZVN0YXJ0XCI6XCIzNzgwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM3ODBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODM1OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDEzOjU5OjU0LjQ0MTg1NlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNi0wMyAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMDkgMDg6MDY6NDYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQ3MzcwMDAxNTRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JLQuNGC0LDQu9C40Y8g0J/QvtGC0YvQu9C40YbRi9C90LAgNy81XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3Mi8zNi8xMlwiLFwicHJpY2VTdGFydFwiOlwiNjgwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI2ODAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjU1NDc5MDAwNDc1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCS0L7RgdC60YDQtdGB0L3QsNGPIDVcIixcInZpZXdlZEFyZWFcIjpcIjMuMDBcIixcInByaWNlU3RhcnRcIjpcIjc3MDBcIixcInByaWNlQ3VycmVudFwiOlwiNzcwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTU1ODEwMDA0MzRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCY0YHQutC40YLQuNC8INCY0L3QtNGD0YHRgtGA0LjQsNC70YzQvdGL0LkgMjRcIixcInZpZXdlZEFyZWFcIjpcIjU1LzEvNlwiLFwicHJpY2VTdGFydFwiOlwiMTc1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIxNzUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1ODMsXCJmdWxsTmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1NTU5OTAwMDE2MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JvQtdGB0L3QsNGPINCf0L7Qu9GP0L3QsCDQodGC0LDQvdGG0LjQvtC90L3QsNGPIDIwXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1MC8wLzBcIixcInByaWNlU3RhcnRcIjpcIjM1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU4MyxcImZ1bGxOYW1lXCI6XCLQkNC70YzRh9C40LrQvtCy0LAg0J7QutGB0LDQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0L7QvNC90LDRgtCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0L7QvC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU1NTk5MDAxMDY1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCX0LDQsdCw0LvRg9C10LLQsCA3MFwiLFwidmlld2VkQXJlYVwiOlwiNjAvMTMvNlwiLFwicHJpY2VTdGFydFwiOlwiNzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjc1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTgzLFwiZnVsbE5hbWVcIjpcItCQ0LvRjNGH0LjQutC+0LLQsCDQntC60YHQsNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTc0NTAwMDAzMDFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JLQuNC60YLQvtGA0LAg0KjQtdCy0LXQu9GR0LLQsCAzNFwiLFwidmlld2VkQXJlYVwiOlwiNDEvMTYvMTJcIixcInByaWNlU3RhcnRcIjpcIjIyNTBcIixcInByaWNlQ3VycmVudFwiOlwiMjI1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjU3NDE2XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjM2MTcsXCJmdWxsTmFtZVwiOlwi0JDQvdGC0L7QvdC+0LLQsCDQndCw0YLQsNC70YzRjyDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTI1IDE3OjE0OjAyLjkyNDE1NVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0yNSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjYgMTQ6MDk6MTMuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzNDJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQuNGC0L7QstCwIDE5OFwiLFwidmlld2VkQXJlYVwiOlwiNjAvMzcvOVwiLFwicHJpY2VTdGFydFwiOlwiNTMwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI1MzAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzY5NjM1MjI3NjgwMDg5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcwNjg1MTUxXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1NjkxOVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozNjE3LFwiZnVsbE5hbWVcIjpcItCQ0L3RgtC+0L3QvtCy0LAg0J3QsNGC0LDQu9GM0Y8g0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMi0yNCAxMTozODoyMC41MDg3MjRcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMjUgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA0LTI2IDEzOjQzOjA4LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU3OTI2MDAwMDc2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQk9C+0YDQsdGD0L3QvtCy0L4g0JzQvtC70L7QtNC10LbQvdCw0Y8gM1wiLFwidmlld2VkQXJlYVwiOlwiNDMvMzAvNlwiLFwicHJpY2VTdGFydFwiOlwiNDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ3NjExMzQ4MTgwNTI3OFwiLFwic3RhdHVzXCI6XCLQntGI0LjQsdC60LBcIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3MDY4OTMwOFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjE2MjNcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MzYxNyxcImZ1bGxOYW1lXCI6XCLQkNC90YLQvtC90L7QstCwINCd0LDRgtCw0LvRjNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQoNC10LrQu9Cw0LzQvdGL0LlcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMjUgMTQ6MjI6MjYuNzE0NTEyXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA2LTI0IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yNSAxMjo1MDo0Mi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODYwODAwMDAxMFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodCy0Y/Qt9C40YHRgtC+0LIgMTM5XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Mi8yOC83XCIsXCJwcmljZVN0YXJ0XCI6XCI0NzAwXCIsXCJwcmljZUN1cnJlbnRcIjo0NzAwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNjIxNVwiLFwic3RhdHVzXCI6XCLQntGI0LjQsdC60LBcIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjIzODFcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MzYxNyxcImZ1bGxOYW1lXCI6XCLQkNC90YLQvtC90L7QstCwINCd0LDRgtCw0LvRjNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMjkgMTc6Mzc6MjguNjU0Mzg1XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTMxIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMSAxNzozODoxMC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODYwODAwMDAxMVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiA5INCT0LLQsNGA0LTQtdC50YHQutC+0Lkg0JTQuNCy0LjQt9C40LggMTFcIixcInZpZXdlZEFyZWFcIjpcIjU5LzQyLzdcIixcInByaWNlU3RhcnRcIjpcIjQ4MDBcIixcInByaWNlQ3VycmVudFwiOlwiNDgwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ5OTk0MTE4MDYzMjU3NVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyMzczOFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjc2MDVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MzYxNyxcImZ1bGxOYW1lXCI6XCLQkNC90YLQvtC90L7QstCwINCd0LDRgtCw0LvRjNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDUtMDYgMTA6Mzc6MTUuNDg1NTA3XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEwLTExIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0xMiAxMToxNToxMi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODYwODAwMDAxM1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRg9C50LHRi9GI0LXQsiDQntC80YHQutCw0Y8gNzdcIixcInZpZXdlZEFyZWFcIjpcIjQxLzMwLzEwXCIsXCJwcmljZVN0YXJ0XCI6XCIyMDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTk5NDExODA2MzI1NzdcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjc0MTI1NDE4XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCIzNDAzNFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTA2LFwiZnVsbE5hbWVcIjpcItCR0LXQt9GD0LPQu9C+0LIg0JDQu9C10LrRgdCw0L3QtNGAINCS0LjQutGC0L7RgNC+0LLQuNGHXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTcgMTA6MjI6MDguNzQ1NzA1XCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0ODQyMDAwMDQ3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCc0L7Qu9C00LDQstGB0LrQsNGPIDExXCIsXCJ2aWV3ZWRBcmVhXCI6XCIyNDAvMTAwLzEyXCIsXCJwcmljZVN0YXJ0XCI6XCI4NDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjg0MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTUwNixcImZ1bGxOYW1lXCI6XCLQkdC10LfRg9Cz0LvQvtCyINCQ0LvQtdC60YHQsNC90LTRgCDQktC40LrRgtC+0YDQvtCy0LjRh1wifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQ4NDIwMDAwNTBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JTQuNC90LDQvNC+0LLRhtC10LIgMTZcIixcInZpZXdlZEFyZWFcIjpcIjYyLzQ3LzZcIixcInByaWNlU3RhcnRcIjpcIjI3OTBcIixcInByaWNlQ3VycmVudFwiOlwiMjc5MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjUwMTEzXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDYsXCJmdWxsTmFtZVwiOlwi0JHQtdC30YPQs9C70L7QsiDQkNC70LXQutGB0LDQvdC00YAg0JLQuNC60YLQvtGA0L7QstC40YdcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xOSAxMTowNjo1OC4yMDE3MjZcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JfQtdC80LXQu9GM0L3Ri9C5INGD0YfQsNGB0YLQvtC6XCIsXCJ0eXBlTmFtZVwiOlwiKNCj0YcuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDg0MjAwMDA1MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0KHRgtCw0L3RhtC40L7QvdC90YvQuSDRgdC10LvRjNGB0LrQuNC5INGB0L7QstC10YIg0KDQsNGC0L3QuNC6IDEwXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMi4wMFwiLFwicHJpY2VTdGFydFwiOlwiMTEwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDgyMTlcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTUwNixcImZ1bGxOYW1lXCI6XCLQkdC10LfRg9Cz0LvQvtCyINCQ0LvQtdC60YHQsNC90LTRgCDQktC40LrRgtC+0YDQvtCy0LjRh1wifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDExOjM3OjM0LjA1NTk3M1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNy0wNSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjUgMDk6Mzg6NTUuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQ4NDIwMDAwNzhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JLQtdGA0YLQutC+0LLRgdC60LDRjyAxMi8zXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Ni8zMy82XCIsXCJwcmljZVN0YXJ0XCI6XCIzNzAwXCIsXCJwcmljZUN1cnJlbnRcIjozODAwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvMjA3MTgzNTA1MjA4ODk2MjkzM1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDI4NDUwN1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjM3NjNcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTUwNixcImZ1bGxOYW1lXCI6XCLQkdC10LfRg9Cz0LvQvtCyINCQ0LvQtdC60YHQsNC90LTRgCDQktC40LrRgtC+0YDQvtCy0LjRh1wifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA0LTA3IDE1OjQ4OjAxLjEwMjk5NVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMC0wNyAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjIgMTA6MTU6MjAuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JPQsNGA0LDQtlwiLFwidHlwZU5hbWVcIjpcIijQky4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0ODQyMDAwMDg0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCf0L7RgtCw0L3QuNC90YHQutCw0Y8gNtCwXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNy8wLzBcIixcInByaWNlU3RhcnRcIjpcIjY1MFwiLFwicHJpY2VDdXJyZW50XCI6XCI2NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczOTU5OTMxOTk0OTkzNTFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvY29tbWVyY2lhbC8yNzQxMjM5ODdcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY4MzU5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDYsXCJmdWxsTmFtZVwiOlwi0JHQtdC30YPQs9C70L7QsiDQkNC70LXQutGB0LDQvdC00YAg0JLQuNC60YLQvtGA0L7QstC40YdcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xMyAxMjoyMTo1Ni41NDYzODJcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTEtMTYgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTE2IDEzOjA5OjM0LjAwMDAwMFwifSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0ODQyMDAwMDg1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6IDIt0Lkg0KHRgtC10L/QvdC+0Lkg0L/QtdGA0LXRg9C70L7QuiAyNlwiLFwidmlld2VkQXJlYVwiOlwiMjAzLzk3LzEyXCIsXCJwcmljZVN0YXJ0XCI6XCI3OTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjc5MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczOTU5OTMxOTk0OTkzNTJcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjc0MTI1NzA5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODQ1OVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk5LFwiZnVsbE5hbWVcIjpcItCR0YDQuNC70Ywg0J3QsNGC0LDQu9GM0Y8g0JHQvtGA0LjRgdC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTU6MjA6MDQuMTY4NzUxXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTA2IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMSAxNToxNDo0Ni4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDA4M1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QuNC20L3QtdC60LDQvNC10L3QutCwINCb0LXQvdC40L3QsCA0OFwiLFwidmlld2VkQXJlYVwiOlwiMzgvMjcvOVwiLFwicHJpY2VTdGFydFwiOlwiNjQwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjY0MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzM2OTYzNTIyNzY3NzMzMVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzQxMjMzMzhcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjM0MDM5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNTozNzowMC40MjU5NTRcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAwOTFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHQuNCx0LjRgNGP0LrQvtCyLdCT0LLQsNGA0LTQtdC50YbQtdCyIDQ0LzFcIixcInZpZXdlZEFyZWFcIjpcIjI2LzI0LzFcIixcInByaWNlU3RhcnRcIjpcIjExMDBcIixcInByaWNlQ3VycmVudFwiOlwiMTEwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk5LFwiZnVsbE5hbWVcIjpcItCR0YDQuNC70Ywg0J3QsNGC0LDQu9GM0Y8g0JHQvtGA0LjRgdC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDEwOVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7Qv9C40YfRg9Cz0L7QstC+INCR0LjRgNGO0LfQvtCy0LDRjy3Qn9C70Y/QttC90LDRjyAxMi0zNFwiLFwidmlld2VkQXJlYVwiOlwiMzYwLzE4OS8yMlwiLFwicHJpY2VTdGFydFwiOlwiMTIwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzODcxMDAwMTY5XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtC+0LvRi9Cy0LDQvdGMINCe0LLRh9C40L3QvdC40LrQvtCy0LAgNjhcIixcInZpZXdlZEFyZWFcIjpcIjU0LzM2LzhcIixcInByaWNlU3RhcnRcIjpcIjI1MDBcIixcInByaWNlQ3VycmVudFwiOlwiMjUwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4Mzg0XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNDoxODo1NC44NTQ5NDFcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yOCAxMDozOTo0OS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDIyMFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JzQsNGA0YPRgdC40L3QviDQk9C+0YDRjNC60L7Qs9C+IDI00LBcIixcInZpZXdlZEFyZWFcIjpcIjI2OS8yNjAvMFwiLFwicHJpY2VTdGFydFwiOlwiNzAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI3MDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDgzNzNcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE0OjEyOjMwLjM4NDUwNlwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDIyNFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQndC10LLQtdC70YzRgdC60L7Qs9C+IDU1XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3NC81OC84XCIsXCJwcmljZVN0YXJ0XCI6XCI0NzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQ3MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODM2N1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk5LFwiZnVsbE5hbWVcIjpcItCR0YDQuNC70Ywg0J3QsNGC0LDQu9GM0Y8g0JHQvtGA0LjRgdC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTQ6MDg6MDYuODE3MDI1XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA2LTI5IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMSAxNjo0MToyNi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDIyOVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMzkvMVwiLFwidmlld2VkQXJlYVwiOlwiNDMvMjcvNlwiLFwicHJpY2VTdGFydFwiOlwiMzg1MFwiLFwicHJpY2VDdXJyZW50XCI6Mzg1MCxcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQzMDMxNDlcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjM0MDM1XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNTozNjowNC4wMjIyMzlcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAyOTlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JfQsNCx0LDQu9GD0LXQstCwIDgwXCIsXCJ2aWV3ZWRBcmVhXCI6XCI2MC80OC84XCIsXCJwcmljZVN0YXJ0XCI6XCIzNzIwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM3MjBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzMDRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JLQuNC60YLQvtGA0LAg0KPRgdCwIDE1LzFcIixcInZpZXdlZEFyZWFcIjpcIjYzLzM5LzEwXCIsXCJwcmljZVN0YXJ0XCI6XCI0MzIwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQzMjBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JfQtdC80LXQu9GM0L3Ri9C5INGD0YfQsNGB0YLQvtC6XCIsXCJ0eXBlTmFtZVwiOlwiKNCj0YcuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDMwNlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JHQtdGA0LXQs9C+0LLQvtC1INCh0YLQtdC/0L3QsNGPIDI3MlwiLFwidmlld2VkQXJlYVwiOlwiMTUwMC4wMFwiLFwicHJpY2VTdGFydFwiOlwiNDEwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQxMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk5LFwiZnVsbE5hbWVcIjpcItCR0YDQuNC70Ywg0J3QsNGC0LDQu9GM0Y8g0JHQvtGA0LjRgdC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzODcxMDAwMzE3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGD0LHQvtCy0LjQvdGB0LrQuNC5INGB0LXQu9GM0YHQvtCy0LXRgiDRg9GH0LDRgdGC0L7QuiDihJY0MyA1M1wiLFwidmlld2VkQXJlYVwiOlwiNy4wMFwiLFwicHJpY2VTdGFydFwiOlwiNjkwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjY5MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk5LFwiZnVsbE5hbWVcIjpcItCR0YDQuNC70Ywg0J3QsNGC0LDQu9GM0Y8g0JHQvtGA0LjRgdC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDMxOFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLQutCwINCX0LXQu9C10L3QsNGPIDE2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI2Ni8zNC8xMFwiLFwicHJpY2VTdGFydFwiOlwiMjM1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMzUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg1MTVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE1OjU2OjM3LjE2NTUzMlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNC0yNiAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjAgMDg6MzM6MDcuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzMjNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JrRg9Cx0L7QstCw0Y8gMTA3LzJcIixcInZpZXdlZEFyZWFcIjpcIjU4LzM2LzlcIixcInByaWNlU3RhcnRcIjpcIjQ1MDBcIixcInByaWNlQ3VycmVudFwiOlwiNDUwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NTI2XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNjowMjoyNi41MzQxOTdcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDQtMjYgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQntGC0LrQu9C+0L3QtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTIwIDA4OjMzOjEyLjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzODcxMDAwMzI0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCa0YPQsdC+0LLQsNGPIDExNVwiLFwidmlld2VkQXJlYVwiOlwiNzMvNDUvMTVcIixcInByaWNlU3RhcnRcIjpcIjU5MDBcIixcInByaWNlQ3VycmVudFwiOlwiNTkwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk5LFwiZnVsbE5hbWVcIjpcItCR0YDQuNC70Ywg0J3QsNGC0LDQu9GM0Y8g0JHQvtGA0LjRgdC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDMyNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQntC70YzQs9C4INCW0LjQu9C40L3QvtC5IDky0LBcIixcInZpZXdlZEFyZWFcIjpcIjQ1LzMwLzZcIixcInByaWNlU3RhcnRcIjpcIjQwNDBcIixcInByaWNlQ3VycmVudFwiOlwiNDA0MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NTQ1XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNjoxNDozNC43Mzk5NjhcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzMjdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JzQuNGH0YPRgNC40L3QsCAyM1wiLFwidmlld2VkQXJlYVwiOlwiNDYvMzEvNlwiLFwicHJpY2VTdGFydFwiOlwiNDcyMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0NzIwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg1NTBcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE2OjE2OjA2LjIzNDIzNlwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDMyOFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQltC10LvQtdC30L3QvtC00L7RgNC+0LbQvdCw0Y8gMjJcIixcInZpZXdlZEFyZWFcIjpcIjYyLzQ3LzlcIixcInByaWNlU3RhcnRcIjpcIjY3NTBcIixcInByaWNlQ3VycmVudFwiOlwiNjc1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NTU3XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNjoxODo1OC43NjEzMTJcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzMjlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLRg9C70YzRgdC60LDRjyAyNDFcIixcInZpZXdlZEFyZWFcIjpcIjc1LzUxLzhcIixcInByaWNlU3RhcnRcIjpcIjMwMDBcIixcInByaWNlQ3VycmVudFwiOlwiMzAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjUxNjIzXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0yNSAxMzoxMTowNS4wNDMxMThcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzMzhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLRjtC70LXQvdC40L3QsCAyNi8yXCIsXCJ2aWV3ZWRBcmVhXCI6XCIyNC8xNi8zXCIsXCJwcmljZVN0YXJ0XCI6XCIyMDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1NjE1N1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk5LFwiZnVsbE5hbWVcIjpcItCR0YDQuNC70Ywg0J3QsNGC0LDQu9GM0Y8g0JHQvtGA0LjRgdC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDItMTcgMTU6MjM6MzEuNjU0NDUzXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA1LTE3IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yMCAwODo0MzoxOC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDM0MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodGC0LDQvdGG0LjQvtC90L3QsNGPIDQ0XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3NS80OS8xMVwiLFwicHJpY2VTdGFydFwiOlwiNDk5MFwiLFwicHJpY2VDdXJyZW50XCI6XCI0OTkwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTcxMDVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTI0IDE2OjMxOjE1LjY2MDYwNVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNS0yNSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMzAgMDc6NTM6NDIuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzNDFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0LDQvNC10L3RgdC60LjQuSDRgdC10LvRjNGB0L7QstC10YIgMTEt0Y8g0KPQp9CQ0KHQotCe0Jog4oSWMlwiLFwidmlld2VkQXJlYVwiOlwiMTQ1LzExMi8yMFwiLFwicHJpY2VTdGFydFwiOlwiNTgwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI1ODAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTc1OTVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTI4IDEyOjQzOjIxLjk4NTc4MFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNS0yOCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMzAgMDc6NTQ6MTYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzNDNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHRgtC10L/QvdCw0Y8gNjRcIixcInZpZXdlZEFyZWFcIjpcIjQ0LzMxLzVcIixcInByaWNlU3RhcnRcIjpcIjQ3MDBcIixcInByaWNlQ3VycmVudFwiOlwiNDcwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjYwODE3XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMy0yMSAxMjoyNTowNy43MTg0NjRcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDYtMjEgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQntGC0LrQu9C+0L3QtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTI3IDA4OjA0OjIzLjAwMDAwMFwifSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzODcxMDAwMzQ1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGD0LHQvtCy0LjQvdGB0LrQuNC5INGB0LXQu9GM0YHQvtCy0LXRgiDQm9GD0LPQvtCy0LDRjyA1M1wiLFwidmlld2VkQXJlYVwiOlwiNDMvMzQvM1wiLFwicHJpY2VTdGFydFwiOlwiNzAwXCIsXCJwcmljZUN1cnJlbnRcIjo3MDAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjQ4ODJcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA0LTE1IDE1OjUzOjI3LjQwNjY5OVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNy0xNSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMTUgMTc6MTg6NTAuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0J/QtdGA0LXRg9GB0YLRg9C/0LrQsCDQlNCU0KNcIixcInR5cGVOYW1lXCI6XCIo0J3QvtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzNDhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0LHRgNC+0L3QvdCw0Y8gMi82XCIsXCJ2aWV3ZWRBcmVhXCI6XCI2MC80MC83XCIsXCJwcmljZVN0YXJ0XCI6XCIzNjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM2MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2NTI5NlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk5LFwiZnVsbE5hbWVcIjpcItCR0YDQuNC70Ywg0J3QsNGC0LDQu9GM0Y8g0JHQvtGA0LjRgdC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMTkgMTM6MDU6MjEuMTk3OTU1XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTE5IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0xOSAxNzowMjo1OC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mzg3MTAwMDM0OVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQp9C40LPQvtGA0LjQvdCwIDE0LzFcIixcInZpZXdlZEFyZWFcIjpcIjQzLzE2LzE1XCIsXCJwcmljZVN0YXJ0XCI6XCI0MjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQyMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczNjk2MzUyMjc2ODAwOTZcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQxMjQzMjNcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY4MTQ0XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xMiAxMToyMjowMS4zMDk2NjhcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMTIgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTEyIDEyOjUxOjE4LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzODcxMDAwMzUwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCa0L7QvNC80YPQvdGB0YLRgNC+0LXQstGB0LrQsNGPIDUwXCIsXCJ2aWV3ZWRBcmVhXCI6XCI2MS80OC83XCIsXCJwcmljZVN0YXJ0XCI6XCI1MjUwXCIsXCJwcmljZUN1cnJlbnRcIjo1MzUwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvMjA3MTAxNzk1NDk2MjU2NzU0N1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDc0NDg4MlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjgzNjZcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTEzIDEyOjU2OjU5LjQyMjE0OFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0xMyAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMTMgMTU6MjE6NTguMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzNTFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQsNC90LrQuNGB0YLQvtCyIDQ3XCIsXCJ2aWV3ZWRBcmVhXCI6XCI5MS83MS8xNVwiLFwicHJpY2VTdGFydFwiOlwiMzUwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzNTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NDEyNTY4OFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjk2MTJcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTIzIDE1OjA2OjQ2LjYzMDUzOVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0yMyAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjQgMTM6NTM6MTcuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM4NzEwMDAzNTJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J/QtdGC0YPRhdC+0LLQsCA5NS8xXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1Ny80My85XCIsXCJwcmljZVN0YXJ0XCI6XCI1MTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjUxMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczNjk2MzUyMjc2ODAxMjBcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQxMjYwODJcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjcwOTcyXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNi0wMiAxMToxMzowMi44MDMzMTBcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTEtMDIgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTAyIDE0OjE2OjE0LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0L7QvNC90LDRgtCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0L7QvC4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzODcxMDAwMzUzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCf0L7Qu9GC0LDQstGB0LrQsNGPIDM3XCIsXCJ2aWV3ZWRBcmVhXCI6XCI1OC80Ny83XCIsXCJwcmljZVN0YXJ0XCI6XCI5MDBcIixcInByaWNlQ3VycmVudFwiOlwiOTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzY5NjM1MjI3NjgwMTIxXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MjM3MTk2XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTY1MzkwMDE1NDNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQuNGC0L7QstCwIDI1My83XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzOC8xOS85XCIsXCJwcmljZVN0YXJ0XCI6XCIxODkwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE4OTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTc4MzYwMDA4NDNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J3QuNC60L7Qu9Cw0Y8g0KHQvtGC0L3QuNC60L7QstCwIDE2XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMy8yMC81XCIsXCJwcmljZVN0YXJ0XCI6XCIyMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTgzNTIwMDAwNDVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JHQtdGA0LXQt9C+0LLQsNGPIDE5XCIsXCJ2aWV3ZWRBcmVhXCI6XCIyOC8xNi80XCIsXCJwcmljZVN0YXJ0XCI6XCIyNDUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI0NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg0ODAwMDAwMDFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCt0LvQuNGC0L3Ri9C5INCk0LvQsNC80LjQvdCz0L4gMTlcIixcInZpZXdlZEFyZWFcIjpcIjM3LzI2LzFcIixcInByaWNlU3RhcnRcIjpcIjMyMDBcIixcInByaWNlQ3VycmVudFwiOjMyMDAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NDgwMDAwMDAyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstC60LAg0JfQtdC70LXQvdCw0Y8gMTZcIixcInZpZXdlZEFyZWFcIjpcIjYwLzQyLzEwXCIsXCJwcmljZVN0YXJ0XCI6XCIyMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5OSxcImZ1bGxOYW1lXCI6XCLQkdGA0LjQu9GMINCd0LDRgtCw0LvRjNGPINCR0L7RgNC40YHQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg0ODAwMDAwMTBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JfQsNCx0LDQu9GD0LXQstCwIDk4XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzOC8yMC8xNFwiLFwicHJpY2VTdGFydFwiOlwiMzEwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTksXCJmdWxsTmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NDgwMDAwMDEzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCX0LDQsdCw0LvRg9C10LLQsCA5OFwiLFwidmlld2VkQXJlYVwiOlwiMzgvMTkvMTNcIixcInByaWNlU3RhcnRcIjpcIjI3ODBcIixcInByaWNlQ3VycmVudFwiOlwiMjc4MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI5NTY0NjFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J/RgNC+0LvQtdGC0LDRgNGB0LrQsNGPIDI3MS8yXCIsXCJ2aWV3ZWRBcmVhXCI6XCI2NS8zNS8xMlwiLFwicHJpY2VTdGFydFwiOlwiNDIwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0MjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTMsXCJmdWxsTmFtZVwiOlwi0KfQsNC/0YHQutCw0Y8g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjc3OTAwMDM0N1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQrdC60L7QvdC+0LzQuNGH0LXRgdC60LDRjyAxXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzNS8yMy83XCIsXCJwcmljZVN0YXJ0XCI6XCIxNTkwXCIsXCJwcmljZUN1cnJlbnRcIjoxNTkwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NTYwXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTMsXCJmdWxsTmFtZVwiOlwi0KfQsNC/0YHQutCw0Y8g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNjoyMToyNy45ODE0NDhcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMjYgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTI2IDE1OjQ4OjIwLjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAyNDRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JXRgdC10L3QuNC90LAgNDNcIixcInZpZXdlZEFyZWFcIjpcIjYyLzQ3LzZcIixcInByaWNlU3RhcnRcIjpcIjQwMDBcIixcInByaWNlQ3VycmVudFwiOlwiNDAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyMzIzNlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg1MTZcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE1OjU2OjQ4LjU4NTM0MVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNi0yMyAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMjcgMDg6MDc6MjEuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiMTIzMDAwMDI3MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RiNC40LvQvtCy0L4g0KDRj9Cx0LjQvdC+0LLQsNGPIDE0XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3Ni80Ni8xMlwiLFwicHJpY2VTdGFydFwiOlwiMjY1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyNjUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTMsXCJmdWxsTmFtZVwiOlwi0KfQsNC/0YHQutCw0Y8g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAzMDZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHQstC10YLQu9Cw0L3QvtCy0YHQutCw0Y8gMzZcIixcInZpZXdlZEFyZWFcIjpcIjYwLzMwLzEwXCIsXCJwcmljZVN0YXJ0XCI6XCI1NjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjU2MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODU1MlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTY6MTc6MzQuMjk0MDUwXCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAzMjdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JrQu9GO0Yct0JrQsNC80YvRiNC10L3RgdC60L7QtSDQv9C70LDRgtC+IDEwLzJcIixcInZpZXdlZEFyZWFcIjpcIjM1LzIwLzRcIixcInByaWNlU3RhcnRcIjpcIjMwNTBcIixcInByaWNlQ3VycmVudFwiOlwiMzA1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NTM0XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTMsXCJmdWxsTmFtZVwiOlwi0KfQsNC/0YHQutCw0Y8g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNjowNzoxNS4wMTU1NTBcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDctMTggMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTMxIDE3OjQwOjE3LjAwMDAwMFwifSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAzMzNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JHQvtC70YzRiNCw0Y8gMzM3XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMjQvODQvMjNcIixcInByaWNlU3RhcnRcIjpcIjYwNTBcIixcInByaWNlQ3VycmVudFwiOlwiNjA1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzA2ODY3NTBcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzM2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCd0LjQutC+0LvQsNGPINCh0L7RgtC90LjQutC+0LLQsCAyXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzNC8xNy85XCIsXCJwcmljZVN0YXJ0XCI6XCIzNDUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM0NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1MDMyOVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTkgMTY6NDE6MjAuOTA4OTU5XCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAzNDlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JLQuNGC0LDQu9C40Y8g0J/QvtGC0YvQu9C40YbRi9C90LAgMVwiLFwidmlld2VkQXJlYVwiOlwiNjUvNDAvMTBcIixcInByaWNlU3RhcnRcIjpcIjU5MDBcIixcInByaWNlQ3VycmVudFwiOlwiNTkwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjUwMzIxXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTMsXCJmdWxsTmFtZVwiOlwi0KfQsNC/0YHQutCw0Y8g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xOSAxNjoyNzo1NC41MTQyODdcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiMTIzMDAwMDM2NVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC10L3QuNGB0YLQsNGPIDI3XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzNS8xOS85XCIsXCJwcmljZVN0YXJ0XCI6XCIyOTUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI5NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3MDY4NzU5OFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTMsXCJmdWxsTmFtZVwiOlwi0KfQsNC/0YHQutCw0Y8g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAzNjZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KDQtdGB0L/Rg9Cx0LvQuNC60LDQvdGB0LrQsNGPIDHQsFwiLFwidmlld2VkQXJlYVwiOlwiNDMvMjgvNlwiLFwicHJpY2VTdGFydFwiOlwiMzEwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTMsXCJmdWxsTmFtZVwiOlwi0KfQsNC/0YHQutCw0Y8g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAzNjdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCc0LDRgNGD0YHQuNC90L4g0JLQsNGB0L3QtdGG0L7QstCwIDEwXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMjkvNDUvMjVcIixcInByaWNlU3RhcnRcIjpcIjkzMDBcIixcInByaWNlQ3VycmVudFwiOlwiOTMwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjUyNTgwXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTMsXCJmdWxsTmFtZVwiOlwi0KfQsNC/0YHQutCw0Y8g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0yNyAxNzowNDowNS45NTkyNjRcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMzAgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTMxIDE3OjU0OjE1LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAzNzVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQsNGC0YzRj9C90Ysg0KHQvdC10LbQuNC90L7QuSA0NS8xXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1OC8zNC8xMlwiLFwicHJpY2VTdGFydFwiOlwiNDQ1MFwiLFwicHJpY2VDdXJyZW50XCI6XCI0NDUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcwNjg4NTE2XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1MzM0NlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMzEgMTE6Mjk6MTkuNjgyMDQ3XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTI4IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0yNCAxNjoyNzoyMS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzc2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCe0YXQvtGC0YHQutCw0Y8gODhcIixcInZpZXdlZEFyZWFcIjpcIjM5LzE4LzExXCIsXCJwcmljZVN0YXJ0XCI6XCI0MDgwXCIsXCJwcmljZUN1cnJlbnRcIjo0MTAwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNTgyMVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTU4MjBcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTE1IDE0OjA3OjMxLjc1OTIwNVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0yNCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjQgMTY6NTk6NDUuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiMTIzMDAwMDM3OFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodC+0LLQtdGC0YHQutC+0Lkg0KHQuNCx0LjRgNC4IDM1XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3NS80MC8xMFwiLFwicHJpY2VTdGFydFwiOlwiNTE1MFwiLFwicHJpY2VDdXJyZW50XCI6XCI1MTUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3MDY4OTA2NlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTYxNjhcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTE3IDE2OjIzOjIzLjMzNDQwOFwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzc5XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCT0L7RgNGB0LrQuNC5IDYzLzFcIixcInZpZXdlZEFyZWFcIjpcIjUxLzI1LzE4XCIsXCJwcmljZVN0YXJ0XCI6XCI1NDUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjU0NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1ODMzMVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMDMgMTU6MDE6MzYuNjM4NDUwXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA1LTE3IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yMCAwODo0MzoyNC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzc5XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCT0L7RgNGB0LrQuNC5IDYzLzFcIixcInZpZXdlZEFyZWFcIjpcIjUxLzI1LzE4XCIsXCJwcmljZVN0YXJ0XCI6XCI1NDUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjU0NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1NzY3OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDItMjggMTU6MDQ6MzAuODczMzM4XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTI0IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yNCAxNjo1ODoxNC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzgxXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCd0LjQutC+0LvQsNGPINCe0YHRgtGA0L7QstGB0LrQvtCz0L4gMTIwXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzNC8xNi8xMVwiLFwicHJpY2VTdGFydFwiOlwiNTMwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI1MzAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcwNjg1MzA1XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2MDg3NVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMjEgMTU6Mjg6NDYuNTYyOTkzXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTI4IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0yOCAxNzoxMDoxNS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzgyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0Y7Qu9C10L3QuNC90LAgMTYvMVwiLFwidmlld2VkQXJlYVwiOlwiMzcvMTgvMTBcIixcInByaWNlU3RhcnRcIjpcIjQzMDBcIixcInByaWNlQ3VycmVudFwiOlwiNDMwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjE0NDU2NDU0NzE0OTEwMzc2N1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyMzUwNFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjA5MTBcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTIxIDE3OjI5OjIxLjY2MDI1MVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0yMSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMDMgMTM6MjE6NDIuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiMTIzMDAwMDM4M1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodCd0KIg0KHQtdCy0LXRgC0xIDIyMVwiLFwidmlld2VkQXJlYVwiOlwiMzcvMTgvMTBcIixcInByaWNlU3RhcnRcIjpcIjQ5OVwiLFwicHJpY2VDdXJyZW50XCI6XCI0OTlcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjc0MTIzNTEzXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2NTEzOFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMTggMTU6NTg6MDkuOTg5OTY1XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTE4IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0xOCAxODowMDo0Ni4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzg1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQodCw0LTQvtCy0YvQuSDQl9Cw0YLQvtC90YHQutC+0LPQviAxMDYvM1wiLFwidmlld2VkQXJlYVwiOlwiMzcvMTgvMTBcIixcInByaWNlU3RhcnRcIjpcIjM2NTBcIixcInByaWNlQ3VycmVudFwiOlwiMzY1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNDI2OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjUzMjVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA0LTE5IDEzOjQ5OjEzLjU5MTM1M1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNy0xOSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMTkgMTU6NDk6MzYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiMTIzMDAwMDM4NlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0KfQsNC90Ysg0KbQtdC90YLRgNCw0LvRjNC90LDRjyAzMVwiLFwidmlld2VkQXJlYVwiOlwiMzAvMTYvNlwiLFwicHJpY2VTdGFydFwiOlwiMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNDMyMFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjU1NDVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA0LTIwIDE2OjA3OjU3Ljg5MDMxNVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNy0yMCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjAgMTc6NTg6MDUuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiMTIzMDAwMDM4N1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0KHQsNC00L7QstGL0Lkg0JfQsNGC0L7QvdGB0LrQvtCz0L4gMTA2XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzNy8xNi8xMFwiLFwicHJpY2VTdGFydFwiOlwiMzUwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzNTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTI0MzYxXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2ODA0OVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDUtMTEgMTU6NDY6NDAuODAxMjkxXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTExIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0xMSAxNjoyNDoyOS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzg4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCR0L7RgNC40YHQsCDQkdC+0LPQsNGC0LrQvtCy0LAgMTk0LzZcIixcInZpZXdlZEFyZWFcIjpcIjYwLzQyLzdcIixcInByaWNlU3RhcnRcIjpcIjQ5ODBcIixcInByaWNlQ3VycmVudFwiOlwiNDk4MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNTI5OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjgwNThcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0KDQtdC60LvQsNC80L3Ri9C5XCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTExIDE2OjAwOjAwLjA0OTE5MlwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6XCLQntGC0LrQu9C+0L3QtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTExIDE2OjAxOjA0LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAzODhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JHQvtGA0LjRgdCwINCR0L7Qs9Cw0YLQutC+0LLQsCAxOTQvNlwiLFwidmlld2VkQXJlYVwiOlwiNjAvNDIvN1wiLFwicHJpY2VTdGFydFwiOlwiNDk4MFwiLFwicHJpY2VDdXJyZW50XCI6XCI0OTgwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQxMjUyOTlcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY5MjEzXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTMsXCJmdWxsTmFtZVwiOlwi0KfQsNC/0YHQutCw0Y8g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xOSAxNToxNjowNC4xMzQ0NzNcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMTkgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTE5IDE1OjU0OjM5LjAwMDAwMFwifSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjEyMzAwMDAzODlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0LogMS3RjyDQmNGB0LrQuNGC0LjQvNGB0LrQsNGPIDc2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI1NC80NS84XCIsXCJwcmljZVN0YXJ0XCI6XCI2MTUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjYxNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjc0MTI1ODU2XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2OTc5MVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDUtMjQgMTU6NDg6NTguNjkzMTA4XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTI0IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yNCAxNjo0MDozOS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzkwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCY0L3QtNGD0YHRgtGA0LjQsNC70YzQvdCw0Y8gM1wiLFwidmlld2VkQXJlYVwiOlwiNDQvMzAvNlwiLFwicHJpY2VTdGFydFwiOlwiNDMwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0MzAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTI2MDgxXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3MDY2OVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDUtMzEgMTU6MzA6NDEuMDE2MDU5XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTMwIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0zMSAxNjozMDoxMS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzkxXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCh0LjQsdC40YDRgdC60LDRjyAxN1wiLFwidmlld2VkQXJlYVwiOlwiNjAvNDAvMTBcIixcInByaWNlU3RhcnRcIjpcIjgwNTBcIixcInByaWNlQ3VycmVudFwiOlwiODA1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDE0NTEyMlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNzA2OTVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTMxIDE2OjM5OjI1LjUxOTEwM1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0zMCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMDIgMTY6Mzc6MDIuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiMTIzMDAwMDM5MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotGA0L7Qu9C70LXQudC90LDRjyAzNVwiLFwidmlld2VkQXJlYVwiOlwiNzYvNDIvMTNcIixcInByaWNlU3RhcnRcIjpcIjc0MDBcIixcInByaWNlQ3VycmVudFwiOlwiNzQwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDI1MTQ3MFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNzIzNzJcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTA5IDE3OjIyOjE2Ljc1NzUxOFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0wOSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMTAgMDg6MDM6NTMuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiMTIzMDAwMDM5M1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotCw0YLRjNGP0L3RiyDQodC90LXQttC40L3QvtC5IDIxLzJcIixcInZpZXdlZEFyZWFcIjpcIjM4LzI1LzRcIixcInByaWNlU3RhcnRcIjpcIjM0OTBcIixcInByaWNlQ3VycmVudFwiOlwiMzQ5MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDU2NDYyNFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNzI4MDRcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5MyxcImZ1bGxOYW1lXCI6XCLQp9Cw0L/RgdC60LDRjyDQldC70LXQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTE0IDE2OjQ0OjI5LjUxMjEyM1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0xNCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMTQgMTc6NTE6MTMuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiMTIzMDAwMDM5NFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQldGB0LXQvdC40L3QsCA0NVwiLFwidmlld2VkQXJlYVwiOlwiMzEvMTkvNlwiLFwicHJpY2VTdGFydFwiOlwiMzI1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMjUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0NzMzNjEyXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3MzY5NVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTkzLFwiZnVsbE5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDYtMjAgMTU6Mzg6NDAuMTE4MTA2XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTIwIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0yMCAxNjozMjozMy4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIxMjMwMDAwMzk1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCc0LjRgNC90LDRjyAxMFwiLFwidmlld2VkQXJlYVwiOlwiNDEvMzEvNlwiLFwicHJpY2VTdGFydFwiOlwiMzcwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzNzAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0OTg2MDc4XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCIzNDEwMFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNzoxNzo1MS4zNTk3MjZcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQvtC80L3QsNGC0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQvtC8LilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAwNzhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JHQvtGC0LDQvdC40YfQtdGB0LrQsNGPIDM1XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3OS8xNy82XCIsXCJwcmljZVN0YXJ0XCI6XCI2MDBcIixcInByaWNlQ3VycmVudFwiOlwiNjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg2NTFcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTUwMyxcImZ1bGxOYW1lXCI6XCLQptGL0L3QutC10YAg0JvRjtCx0L7QstGMINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTc6MjQ6MzEuOTM4NjEzXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTIyIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMSAxNToxNToyMS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzMzU3MDAwMDk4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQm9C+0LrRgtC4INCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QuiAwNC4wMi41NDE4XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMjIzLjAwXCIsXCJwcmljZVN0YXJ0XCI6XCIxODAwXCIsXCJwcmljZUN1cnJlbnRcIjoxODAwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzQxMjM2MjJcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjM0MTAzXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDMsXCJmdWxsTmFtZVwiOlwi0KbRi9C90LrQtdGAINCb0Y7QsdC+0LLRjCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE2OjU3OjUyLjUzNTU5NlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMC0xNSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMTMgMTQ6NTc6MTQuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAxODBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0YDQsNGB0L3QvtC+0LHRgdC6INCa0YDQsNGB0L3QvtC+0LHRgdC6IDM2XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMi8xOC82XCIsXCJwcmljZVN0YXJ0XCI6XCIzNTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczNjUzMjEwNzIyODQ5NDhcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQxMjMyODhcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzMzU3MDAwMjUzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCa0LjRgNC+0LLQsCAyNDJcIixcInZpZXdlZEFyZWFcIjpcIjQ1LzIxLzhcIixcInByaWNlU3RhcnRcIjpcIjQ3NTBcIixcInByaWNlQ3VycmVudFwiOlwiNDc1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzMzU3MDAwMjU0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCa0LjRgNC+0LLQsCAyNDJcIixcInZpZXdlZEFyZWFcIjpcIjQ2LzIyLzhcIixcInByaWNlU3RhcnRcIjpcIjQ3NTBcIixcInByaWNlQ3VycmVudFwiOlwiNDc1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzMzU3MDAwMjU4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCR0L7RgNC40YHQsCDQkdC+0LPQsNGC0LrQvtCy0LAgMTky0LBcIixcInZpZXdlZEFyZWFcIjpcIjQ0LzE5LzEyXCIsXCJwcmljZVN0YXJ0XCI6XCI1MDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjUwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTUwMyxcImZ1bGxOYW1lXCI6XCLQptGL0L3QutC10YAg0JvRjtCx0L7QstGMINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzM1NzAwMDI1OVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQkdC+0YDQuNGB0LAg0JHQvtCz0LDRgtC60L7QstCwIDE5MtCwXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Ni8zMS80XCIsXCJwcmljZVN0YXJ0XCI6XCI1NTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjU1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCIzNDEwNVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNjoyODo0MC4xODM1NDRcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0xMyAxNDo1NjowOS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzM1NzAwMDI4MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrQvtGH0LXQvdC10LLQviDQm9C+0LPQvtCy0YHQutCw0Y8gOFwiLFwidmlld2VkQXJlYVwiOlwiNDIvMjgvOFwiLFwicHJpY2VTdGFydFwiOlwiMTUwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxNTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDMsXCJmdWxsTmFtZVwiOlwi0KbRi9C90LrQtdGAINCb0Y7QsdC+0LLRjCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0J/QtdGA0LXRg9GB0YLRg9C/0LrQsCDQlNCU0KNcIixcInR5cGVOYW1lXCI6XCIo0J3QvtCyLilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAyODRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KTRgNGD0L3Qt9C1IDI1MtGB0YLRgFwiLFwidmlld2VkQXJlYVwiOlwiNjMvMzcvMTZcIixcInByaWNlU3RhcnRcIjpcIjEyMDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjEyMDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDMsXCJmdWxsTmFtZVwiOlwi0KbRi9C90LrQtdGAINCb0Y7QsdC+0LLRjCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAyODVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J/Qu9Cw0L3QtdGC0L3QsNGPIDE3XCIsXCJ2aWV3ZWRBcmVhXCI6XCI2NS8yNy83XCIsXCJwcmljZVN0YXJ0XCI6XCIxNjIwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE2MjBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTUwMyxcImZ1bGxOYW1lXCI6XCLQptGL0L3QutC10YAg0JvRjtCx0L7QstGMINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzM1NzAwMDI4OFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQm9C40L3QtdC50L3QsNGPIDMzLzJcIixcInZpZXdlZEFyZWFcIjpcIjc2LzUyLzdcIixcInByaWNlU3RhcnRcIjpcIjY0ODBcIixcInByaWNlQ3VycmVudFwiOlwiNjQ4MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ5MzEzXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDMsXCJmdWxsTmFtZVwiOlwi0KbRi9C90LrQtdGAINCb0Y7QsdC+0LLRjCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE3IDE0OjA0OjI5LjMwMzM4MlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0yMiAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjIgMTU6NDg6MjguMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JfQtdC80LXQu9GM0L3Ri9C5INGD0YfQsNGB0YLQvtC6XCIsXCJ0eXBlTmFtZVwiOlwiKNCj0YcuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzM1NzAwMDI5MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRg9C00YDRj9GI0L7QstGB0LrQuNC5INGB0LXQu9GM0YHQvtCy0LXRgiDQoNGD0YHRgdC60LDRjyDRgdC60LDQt9C60LAgMTdcIixcInZpZXdlZEFyZWFcIjpcIjEyLjAwXCIsXCJwcmljZVN0YXJ0XCI6XCIyNTBcIixcInByaWNlQ3VycmVudFwiOlwiMjUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzY1MzIxMDcyMjg1OTQyXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NDEyMzMyMFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDMsXCJmdWxsTmFtZVwiOlwi0KbRi9C90LrQtdGAINCb0Y7QsdC+0LLRjCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAyOTNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JLQtdGA0YLQutC+0LLRgdC60LDRjyAxMjFcIixcInZpZXdlZEFyZWFcIjpcIjI4LzE5LzJcIixcInByaWNlU3RhcnRcIjpcIjMyMDBcIixcInByaWNlQ3VycmVudFwiOlwiMzIwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzMzU3MDAwMjk1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCX0L7RgNCz0LUgMjc1XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Mi8yNC8xMVwiLFwicHJpY2VTdGFydFwiOlwiMzM3MFwiLFwicHJpY2VDdXJyZW50XCI6NDAwMCxcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0NzcwM1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xMCAxNToxMzo1NS40NjIyNzJcIixcImV4cGlyYXRpb25cIjpcIjIwMjMtMDEtMTggMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTI1IDExOjA5OjUwLjAwMDAwMFwifSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzMzU3MDAwMzA0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCn0LXRhdC+0LLQsCAzMjlcIixcInZpZXdlZEFyZWFcIjpcIjU1LzM0LzEwXCIsXCJwcmljZVN0YXJ0XCI6XCIzMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczNjUzMjEwNzIyODY2MjZcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjcwNjg3Njk1XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODY5M1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxODowMDoxOS44NDY4MDBcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTEtMjEgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTIxIDE2OjQwOjE2LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzMzU3MDAwMzA2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCS0YvRgdC+0YbQutC+0LPQviA1MC8yXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzOC8xNi85XCIsXCJwcmljZVN0YXJ0XCI6XCIzNjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM2MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczNjUzMjEwNzIyODY2MjhcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzA2ODc5NjNcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjYyMzEyXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDMsXCJmdWxsTmFtZVwiOlwi0KbRi9C90LrQtdGAINCb0Y7QsdC+0LLRjCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTI5IDE1OjMxOjE5LjUyNjY3NFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0xOSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMTQgMTI6NTc6MzguMDAwMDAwXCJ9LFwidHlwZVwiOlwi0J/QtdGA0LXRg9GB0YLRg9C/0LrQsCDQlNCU0KNcIixcInR5cGVOYW1lXCI6XCIo0J3QvtCyLilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAzMDlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JjQstCw0L3QsCDQodC10LLQsNGB0YLRjNGP0L3QvtCy0LAgN1wiLFwidmlld2VkQXJlYVwiOlwiNDEvMTkvMTFcIixcInByaWNlU3RhcnRcIjpcIjQ1MDBcIixcInByaWNlQ3VycmVudFwiOjQ1MDAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTIzNjY5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2MTQ4M1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMy0yNCAxODoxMzo1OC43MTUwNjNcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDktMjQgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA0LTIxIDE2OjU5OjMwLjAwMDAwMFwifSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAzMTBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCb0L7QutGC0Lgg0KHQvtCy0LXRgtGB0LrQsNGPIDE4OTFcIixcInZpZXdlZEFyZWFcIjpcIjk5Mzk3LjAwXCIsXCJwcmljZVN0YXJ0XCI6XCIxOTUwXCIsXCJwcmljZUN1cnJlbnRcIjoyMDAwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvMjA3MDg4NDIxNjE0NTM3MDEzMlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzQxOTYzNDRcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjYyMzY5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDMsXCJmdWxsTmFtZVwiOlwi0KbRi9C90LrQtdGAINCb0Y7QsdC+0LLRjCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTI5IDE2OjU0OjQxLjA4NTE1OFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMC0wNCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjIgMDk6MjU6NTUuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAzMTFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCR0LDQu9GC0LAg0KjQutC+0LvRjNC90LDRjyA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCI1Ny8zNS8xMFwiLFwicHJpY2VTdGFydFwiOlwiNzkwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjc5MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzM2NTMyMTA3MjI4NjY1NFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzQxMjM4NzNcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY4Njc0XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDMsXCJmdWxsTmFtZVwiOlwi0KbRi9C90LrQtdGAINCb0Y7QsdC+0LLRjCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTE2IDE0OjMzOjI2LjQ1Mjg2NFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMS0xNiAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMTkgMTc6MzM6MjcuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAzMTNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JfQvtGA0LPQtSAxMTcvMVwiLFwidmlld2VkQXJlYVwiOlwiMzIvMjAvNlwiLFwicHJpY2VTdGFydFwiOlwiMzIwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzY1MzIxMDcyMjg2NjU2XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTI1ODUwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3MDQ3MlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTAzLFwiZnVsbE5hbWVcIjpcItCm0YvQvdC60LXRgCDQm9GO0LHQvtCy0Ywg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0zMCAxNToxNDozMi4zNzM5ODJcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTEtMzAgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTMwIDE2OjQzOjUyLjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzMzU3MDAwMzE0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCk0LjQu9Cw0YLQvtCy0LAgMTJcIixcInZpZXdlZEFyZWFcIjpcIjQ1LzI4LzZcIixcInByaWNlU3RhcnRcIjpcIjM0MjBcIixcInByaWNlQ3VycmVudFwiOlwiMzQyMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzM2NTMyMTA3MjI4NjY1N1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDE0NTA5OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNzMwMDJcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTUwMyxcImZ1bGxOYW1lXCI6XCLQptGL0L3QutC10YAg0JvRjtCx0L7QstGMINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDYtMTUgMTY6NTk6MDcuMTk3ODc0XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEyLTE1IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0xNSAxODoxODoxMS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzM1NzAwMDMxNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMjU1LzJcIixcInZpZXdlZEFyZWFcIjpcIjM4LzE5LzExXCIsXCJwcmljZVN0YXJ0XCI6XCI0NTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQ1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczNjUzMjEwNzIyODY2NThcIixcInN0YXR1c1wiOlwi0J7RiNC40LHQutCwXCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQ3NzM5ODJcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjczMTc2XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1MDMsXCJmdWxsTmFtZVwiOlwi0KbRi9C90LrQtdGAINCb0Y7QsdC+0LLRjCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTE2IDE1OjA2OjM1LjgwMzU3OVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0xNiAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMjIgMTY6NDI6NDEuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAzMTZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KTRgNGD0L3Qt9C1IDI1Mi8yXCIsXCJ2aWV3ZWRBcmVhXCI6XCI2My8zNy84XCIsXCJwcmljZVN0YXJ0XCI6XCIxMDAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMDAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzM2NTMyMTA3MjI4NjY1OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NTAyNzEyMVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjA0MzBcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTUwMyxcImZ1bGxOYW1lXCI6XCLQptGL0L3QutC10YAg0JvRjtCx0L7QstGMINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMTcgMTQ6NDE6MTEuMzM5NTE5XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTE3IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMSAxNTozNjo0NS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODQ5NDAwMDAxMVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0KDQtdGI0LXRgtGLINCd0LDQsdC10YDQtdC20L3QsNGPIDlcIixcInZpZXdlZEFyZWFcIjpcIjQ1LzEyLzNcIixcInByaWNlU3RhcnRcIjpcIjY1MFwiLFwicHJpY2VDdXJyZW50XCI6XCI2NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTg0Nzk0NjIwNjk5NjhcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjcxMzEyMDE0XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODE4OVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDItMTMgMDk6NTI6MTUuOTE3OTY3XCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUwNjY3MDAwMjE1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCf0LXRgtGD0YXQvtCy0LAgMTYyXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1NC8zMC8xMlwiLFwicHJpY2VTdGFydFwiOlwiMzYxMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzNjEwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1NTEsXCJmdWxsTmFtZVwiOlwi0JTQtdCz0YLRj9GA0ZHQstCwINCV0LvQtdC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU1MzQxMDAwMTU3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstC60LAg0JfQtdC70LXQvdCw0Y8gMTZcIixcInZpZXdlZEFyZWFcIjpcIjYxLzI3LzExXCIsXCJwcmljZVN0YXJ0XCI6XCIyMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1MDQ3N1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMjAgMTI6NTQ6MzIuOTMxMzY1XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA2LTEzIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0xNiAwOTo1NTo1MS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NjE3ODAwMDAwNlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLQutCwINCX0LXQu9C10L3QsNGPIDI2XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzOS8yMC8xMlwiLFwicHJpY2VTdGFydFwiOlwiMjkwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIyOTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1NTEsXCJmdWxsTmFtZVwiOlwi0JTQtdCz0YLRj9GA0ZHQstCwINCV0LvQtdC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU3OTI2MDAwMDA2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCe0LrQuNC90YHQutCw0Y8gOFwiLFwidmlld2VkQXJlYVwiOlwiMzUvMC8wXCIsXCJwcmljZVN0YXJ0XCI6XCIxNTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1ODEyNlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDMtMDIgMTU6MzI6MDQuOTU4ODAwXCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU3OTI2MDAwMDMxXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCT0YDQuNC30L7QtNGD0LHQvtCy0L7QuSA4XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzOC8yOS84XCIsXCJwcmljZVN0YXJ0XCI6XCIzMjgwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMyODBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODIzN1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTI6MTU6MjMuMTIzMzQyXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEwLTAzIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0xNSAwOTozNjoxMi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQn9C10YDQtdGD0YHRgtGD0L/QutCwINCU0JTQo1wiLFwidHlwZU5hbWVcIjpcIijQndC+0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA0MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMjUzLzdcIixcInZpZXdlZEFyZWFcIjpcIjM4LzE0LzEwXCIsXCJwcmljZVN0YXJ0XCI6XCIyMzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0NzYxMTM0ODE4MDUxNzlcIixcInN0YXR1c1wiOlwi0J7RiNC40LHQutCwXCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1NTEsXCJmdWxsTmFtZVwiOlwi0JTQtdCz0YLRj9GA0ZHQstCwINCV0LvQtdC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU3OTI2MDAwMDQ0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LjRgtC+0LLQsCAyNTMvN1wiLFwidmlld2VkQXJlYVwiOlwiMjAvMTYvMVwiLFwicHJpY2VTdGFydFwiOlwiMTM5MFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMzkwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1NTEsXCJmdWxsTmFtZVwiOlwi0JTQtdCz0YLRj9GA0ZHQstCwINCV0LvQtdC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU3OTI2MDAwMDQ4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCa0YDQsNGB0L3Ri9GFINCf0LDRgNGC0LjQt9Cw0L0gMi3RjyA2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0NC8zNi8zXCIsXCJwcmljZVN0YXJ0XCI6XCIzNTQwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM1NDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU1MSxcImZ1bGxOYW1lXCI6XCLQlNC10LPRgtGP0YDRkdCy0LAg0JXQu9C10L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTc5MjYwMDAwNDlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0YDQuNCy0L7QtNCw0L3QvtCy0LrQsCDQl9C10LvQtdC90LDRjyAxNlwiLFwidmlld2VkQXJlYVwiOlwiNDAvMTkvOVwiLFwicHJpY2VTdGFydFwiOlwiMTY2MFwiLFwicHJpY2VDdXJyZW50XCI6XCIxNjYwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDgyMDFcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU1MSxcImZ1bGxOYW1lXCI6XCLQlNC10LPRgtGP0YDRkdCy0LAg0JXQu9C10L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDEwOjM5OjQ4LjQ3Nzg4MVwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA1NFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQn9C10YLRg9GF0L7QstCwIDQwXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMy8xOC83XCIsXCJwcmljZVN0YXJ0XCI6XCIyNDcwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI0NzBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU1MSxcImZ1bGxOYW1lXCI6XCLQlNC10LPRgtGP0YDRkdCy0LAg0JXQu9C10L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTc5MjYwMDAwNTdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J3QtdCy0LXQu9GM0YHQutC+0LPQviA3OVwiLFwidmlld2VkQXJlYVwiOlwiMjkvMTUvNVwiLFwicHJpY2VTdGFydFwiOlwiMjAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1NTEsXCJmdWxsTmFtZVwiOlwi0JTQtdCz0YLRj9GA0ZHQstCwINCV0LvQtdC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU3OTI2MDAwMDYxXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LjRgtC+0LLQsCAyNzZcIixcInZpZXdlZEFyZWFcIjpcIjE5LzE2LzFcIixcInByaWNlU3RhcnRcIjpcIjIxMDBcIixcInByaWNlQ3VycmVudFwiOlwiMjEwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA2NlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JPRg9GB0LjQvdGL0Lkg0JHRgNC+0LQg0KHQuNCx0LjRgNGB0LrQsNGPIDI2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI1OS8zNC85XCIsXCJwcmljZVN0YXJ0XCI6XCIxODQwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE4NDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODIzNFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTI6MDk6NTAuMjAzOTM3XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA1LTE2IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yMCAwODozNDo1NC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA2N1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQpdC40LvQvtC60YHQutCw0Y8gMdCzXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMy8xNy85XCIsXCJwcmljZVN0YXJ0XCI6XCIyNDUwXCIsXCJwcmljZUN1cnJlbnRcIjoyNDUwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtC+0LzQvdCw0YLQsFwiLFwidHlwZU5hbWVcIjpcIijQmtC+0LwuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA3MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQpdCw0LvRgtGD0YDQuNC90LAgMzNcIixcInZpZXdlZEFyZWFcIjpcIjY0LzM2LzdcIixcInByaWNlU3RhcnRcIjpcIjUyMFwiLFwicHJpY2VDdXJyZW50XCI6XCI1MjBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1NzI2OVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDItMjUgMTI6NDg6NDUuNTI0ODY4XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTI1IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yNiAxNDowMzoyMS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA3N1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQm9C10L3QuNC90LPRgNCw0LTRgdC60LDRjyAzNDfQsFwiLFwidmlld2VkQXJlYVwiOlwiMjEvMTkvMVwiLFwicHJpY2VTdGFydFwiOlwiMjIwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDc2MTEzNDgxODA1Mjc5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcxMTAyNTUyXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1OTM2MlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQoNC10LrQu9Cw0LzQvdGL0LlcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMTEgMTI6NDA6MzkuOTc1NDUwXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA2LTA5IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yNSAxMTowOTo0NC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA4MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQr9GB0L3Ri9C5INCx0LXRgNC10LMgMjVcIixcInZpZXdlZEFyZWFcIjpcIjM1LzE4LzdcIixcInByaWNlU3RhcnRcIjpcIjUwMDBcIixcInByaWNlQ3VycmVudFwiOjUwMDAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0NTMyNjg3XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1OTUxN1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMTIgMTI6MTk6MTQuMDk0MDkwXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTExLTEwIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0xMCAxNzoxNTo1Ni4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA4MVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JLQtdGA0YUt0KLRg9C70LAg0J3QvtCy0LDRjyA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Mi8yMi84XCIsXCJwcmljZVN0YXJ0XCI6XCIzNjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM2MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0NzYxMTM0ODE4MDUzMDRcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjcxMTYwOTU5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2MTM5OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMjQgMTQ6MTg6MjguODg3Mzc4XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTE2IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0xNiAxNzoxNDo1MS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA4MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMjU1LzJcIixcInZpZXdlZEFyZWFcIjpcIjMwLzE4LzNcIixcInByaWNlU3RhcnRcIjpcIjMzMDBcIixcInByaWNlQ3VycmVudFwiOlwiMzMwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ3NjExMzQ4MTgwNTMwNVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyMzYyN1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjE1NDBcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU1MSxcImZ1bGxOYW1lXCI6XCLQlNC10LPRgtGP0YDRkdCy0LAg0JXQu9C10L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTI1IDEwOjQ5OjMzLjk1NDc5M1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNi0yNSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMjcgMDg6MDU6MTYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTc5MjYwMDAwODNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KTQsNGB0LDQtNC90LDRjyAyNS8xXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0NS8yNi82XCIsXCJwcmljZVN0YXJ0XCI6XCI0MTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQxMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2MjcwNVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMzEgMTQ6Mjc6MzQuMjE1ODg2XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA2LTI5IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMiAwOTowNTowNy4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA4NFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMjUzLzRcIixcInZpZXdlZEFyZWFcIjpcIjMwLzI2LzNcIixcInByaWNlU3RhcnRcIjpcIjMxODBcIixcInByaWNlQ3VycmVudFwiOjMxODAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MjM5MDE5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2NDQwM1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMTIgMTU6MTE6MzUuNDI2ODcwXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTEyIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0xMiAxNjo1OToxNC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA4NVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQsdGA0L7QvdC90LDRjyAzOFwiLFwidmlld2VkQXJlYVwiOlwiMzQvMTgvOVwiLFwicHJpY2VTdGFydFwiOlwiMzMwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMzAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDc2MTEzNDgxODA1MzA4XCIsXCJzdGF0dXNcIjpcItCe0YjQuNCx0LrQsFwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc1MTEyNjU5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2NjI1NlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTUxLFwiZnVsbE5hbWVcIjpcItCU0LXQs9GC0Y/RgNGR0LLQsCDQldC70LXQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQoNC10LrQu9Cw0LzQvdGL0LlcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMjYgMTA6MjI6MTEuMzg1OTU3XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTI0IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0xMiAwOTo0MDo1MC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA4N1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMTZcIixcInZpZXdlZEFyZWFcIjpcIjQ0LzI4LzZcIixcInByaWNlU3RhcnRcIjpcIjQwMDBcIixcInByaWNlQ3VycmVudFwiOlwiNDAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY4MTM4XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1NTEsXCJmdWxsTmFtZVwiOlwi0JTQtdCz0YLRj9GA0ZHQstCwINCV0LvQtdC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xMiAxMTowNzowNy40Njc3OTJcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTAtMTIgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTEyIDEyOjI3OjA2LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU3OTI2MDAwMDkwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtC10LzQtdGA0L7QstC+INCY0L3QuNGG0LjQsNGC0LjQstC90LDRjyA5OVwiLFwidmlld2VkQXJlYVwiOlwiNzkvNjAvNlwiLFwicHJpY2VTdGFydFwiOlwiMzk5OVwiLFwicHJpY2VDdXJyZW50XCI6Mzk5OSxcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjgzNjRcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU1MSxcImZ1bGxOYW1lXCI6XCLQlNC10LPRgtGP0YDRkdCy0LAg0JXQu9C10L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTEzIDEyOjQ3OjA2LjU5MTI0NlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0xMyAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMTMgMTM6MzM6NTguMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTc5MjYwMDAwOTFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KDQsNC50L7QvdC90LDRjyAzOFwiLFwidmlld2VkQXJlYVwiOlwiOTAvMzAvMjBcIixcInByaWNlU3RhcnRcIjpcIjE2NTBcIixcInByaWNlQ3VycmVudFwiOjE2NTAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NDIzOTAyM1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjkyMTRcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU1MSxcImZ1bGxOYW1lXCI6XCLQlNC10LPRgtGP0YDRkdCy0LAg0JXQu9C10L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTE5IDE1OjE2OjA5LjE3MTUzOFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMS0xOSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMTkgMTY6MDE6MDkuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTc5MjYwMDAwOTJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQuNGC0L7QstCwIDk3XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzOS8yNi82XCIsXCJwcmljZVN0YXJ0XCI6XCIzMjUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMyNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNzIzNTRcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU1MSxcImZ1bGxOYW1lXCI6XCLQlNC10LPRgtGP0YDRkdCy0LAg0JXQu9C10L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTA5IDE2OjE5OjIyLjY2MzM4MFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0wOSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMDkgMTc6Mjc6MjMuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTc5MjYwMDAwOTZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHQv9C+0YDRgtC40LLQvdCw0Y8gNVwiLFwidmlld2VkQXJlYVwiOlwiMzgvMTgvOVwiLFwicHJpY2VTdGFydFwiOlwiMzUwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzNTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDc2MTEzNDgxODA1MzQwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0NTM2NzAwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODE2MFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk0LFwiZnVsbE5hbWVcIjpcItCU0LXRgNCz0YPQvdC+0LLQsCDQndCw0YLQsNC70YzRjyDQktCw0LvQtdGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTEzIDE3OjEzOjEwLjI2NTI4NlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0yNCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjQgMTM6MDQ6NDguMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiMjM3OTAwMDE4OFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQktC+0YHQutGA0LXRgdC90LDRjyAzN1wiLFwidmlld2VkQXJlYVwiOlwiNDAvMjAvMTJcIixcInByaWNlU3RhcnRcIjpcIjM3MDBcIixcInByaWNlQ3VycmVudFwiOlwiMzcwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3MDY4NjYwNFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTQsXCJmdWxsTmFtZVwiOlwi0JTQtdGA0LPRg9C90L7QstCwINCd0LDRgtCw0LvRjNGPINCS0LDQu9C10YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCIyMzc5MDAwMTkwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQnNCw0YDRg9GB0LjQvdC+INCo0LjRiNC60LjQvdCwIDEyXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNzkvMTAwLzE1XCIsXCJwcmljZVN0YXJ0XCI6XCI2OTkwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjY5OTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NCxcImZ1bGxOYW1lXCI6XCLQlNC10YDQs9GD0L3QvtCy0LAg0J3QsNGC0LDQu9GM0Y8g0JLQsNC70LXRgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjIzNzkwMDAyMDBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0YDQuNCy0L7QtNCw0L3QvtCy0YHQutC40Lkg0YHQtdC70YzRgdC+0LLQtdGCIOKEljUgMTI4MVwiLFwidmlld2VkQXJlYVwiOlwiNTAvMzAvMTBcIixcInByaWNlU3RhcnRcIjpcIjQzMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0MzBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODE1OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk0LFwiZnVsbE5hbWVcIjpcItCU0LXRgNCz0YPQvdC+0LLQsCDQndCw0YLQsNC70YzRjyDQktCw0LvQtdGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTEzIDE3OjA1OjQ5LjAzNjAxOFwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQn9C10YDQtdGD0YHRgtGD0L/QutCwINCU0JTQo1wiLFwidHlwZU5hbWVcIjpcIijQndC+0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIyMzc5MDAwMjA5XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCk0YDRg9C90LfQtSAyNTJcIixcInZpZXdlZEFyZWFcIjpcIjQzLzI3LzVcIixcInByaWNlU3RhcnRcIjpcIjcwMDBcIixcInByaWNlQ3VycmVudFwiOlwiNzAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc1MDgxOTQ5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODYyMlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk0LFwiZnVsbE5hbWVcIjpcItCU0LXRgNCz0YPQvdC+0LLQsCDQndCw0YLQsNC70YzRjyDQktCw0LvQtdGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE3OjA0OjEwLjk0NTI0MlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0zMCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjQgMTI6MzE6MTUuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiMjM3OTAwMDIxNFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodGC0LDQvdC40YHQu9Cw0LLRgdC60L7Qs9C+IDM2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3MS80Ny83XCIsXCJwcmljZVN0YXJ0XCI6XCI1ODAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjU4MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzA2ODgxMThcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ5NTUwXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTQsXCJmdWxsTmFtZVwiOlwi0JTQtdGA0LPRg9C90L7QstCwINCd0LDRgtCw0LvRjNGPINCS0LDQu9C10YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTcgMTc6MDY6MTIuMDIzMjg4XCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjIzNzkwMDAyMTZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHQstC10YLQu9Cw0L3QvtCy0YHQutCw0Y8gNTJcIixcInZpZXdlZEFyZWFcIjpcIjQxLzE2LzE1XCIsXCJwcmljZVN0YXJ0XCI6XCI0MTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQxMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1MzU1NlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk0LFwiZnVsbE5hbWVcIjpcItCU0LXRgNCz0YPQvdC+0LLQsCDQndCw0YLQsNC70YzRjyDQktCw0LvQtdGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0KDQtdC60LvQsNC80L3Ri9C5XCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTMxIDE3OjQzOjU1Ljk4NjgzNFwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCIyMzc5MDAwMjE3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQltC10YDQtdCx0YbQvtCy0L4g0JHQtdGA0LXQs9C+0LLQsNGPIDMzXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1MC8yNS8xMFwiLFwicHJpY2VTdGFydFwiOlwiMTEwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjgwNjJcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NCxcImZ1bGxOYW1lXCI6XCLQlNC10YDQs9GD0L3QvtCy0LAg0J3QsNGC0LDQu9GM0Y8g0JLQsNC70LXRgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xMSAxNjowNzoyNC4wNzkzNDZcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMTIgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTEyIDE2OjA5OjEwLjAwMDAwMFwifSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjIzNzkwMDAyMThcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JLRi9GB0L7RhtC60L7Qs9C+IDEzOS8xXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMy8xOS80XCIsXCJwcmljZVN0YXJ0XCI6XCIyODUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI4NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQxMjU1MTBcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjcyMjQ0XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTQsXCJmdWxsTmFtZVwiOlwi0JTQtdGA0LPRg9C90L7QstCwINCd0LDRgtCw0LvRjNGPINCS0LDQu9C10YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDYtMDkgMTE6MzM6MDcuMzY0NjIzXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTA5IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0wOSAxNzowMDoxOS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIyMzc5MDAwMjE5XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCa0L7RgtC+0LLRgdC60L7Qs9C+IDI0XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0NC8zMi82XCIsXCJwcmljZVN0YXJ0XCI6XCI0MTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQxMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQ1MzY2OThcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjcyMzY5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTQsXCJmdWxsTmFtZVwiOlwi0JTQtdGA0LPRg9C90L7QstCwINCd0LDRgtCw0LvRjNGPINCS0LDQu9C10YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDYtMDkgMTc6MTY6MDAuNDQ4OTI5XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTA5IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0xMCAxMTozMzoyMS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIyMzc5MDAwMjIwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LDRgtGM0Y/QvdGLINCh0L3QtdC20LjQvdC+0LkgNDFcIixcInZpZXdlZEFyZWFcIjpcIjQyLzIyLzdcIixcInByaWNlU3RhcnRcIjpcIjQxMDBcIixcInByaWNlQ3VycmVudFwiOlwiNDEwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDU3NjM0NFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg2MDZcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NCxcImZ1bGxOYW1lXCI6XCLQlNC10YDQs9GD0L3QvtCy0LAg0J3QsNGC0LDQu9GM0Y8g0JLQsNC70LXRgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNjo1NDozNC41NzAzODJcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMjAgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTI0IDE0OjA5OjQzLjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NDk0MDAwMDA2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCv0YHQvdGL0Lkg0LHQtdGA0LXQsyAyNVwiLFwidmlld2VkQXJlYVwiOlwiMzUvMTgvOFwiLFwicHJpY2VTdGFydFwiOlwiNDgwMFwiLFwicHJpY2VDdXJyZW50XCI6NDM1MCxcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzIwNzUwMTIxMjYyMjg2NTIwOTFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQxMjU4MjBcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ2MTMwXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTQsXCJmdWxsTmFtZVwiOlwi0JTQtdGA0LPRg9C90L7QstCwINCd0LDRgtCw0LvRjNGPINCS0LDQu9C10YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjEtMTItMjQgMDk6Mzk6MzguMTIyMDkwXCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NDk0MDAwMDA4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCX0LDQsdCw0LvRg9C10LLQsCA1MVwiLFwidmlld2VkQXJlYVwiOlwiNTQvMzQvN1wiLFwicHJpY2VTdGFydFwiOlwiM1wiLFwicHJpY2VDdXJyZW50XCI6XCIzXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg1NjRcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NCxcImZ1bGxOYW1lXCI6XCLQlNC10YDQs9GD0L3QvtCy0LAg0J3QsNGC0LDQu9GM0Y8g0JLQsNC70LXRgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNjoyNToyMi42MDUwMzBcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDYtMjcgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQntGC0LrQu9C+0L3QtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTI4IDA4OjMyOjUwLjAwMDAwMFwifSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NDk0MDAwMDA5XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCY0LLQsNC90LAg0KHQtdCy0LDRgdGC0YzRj9C90L7QstCwIDgyXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1MS8zMS81XCIsXCJwcmljZVN0YXJ0XCI6XCI1MjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjUyMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1MDUxNFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk0LFwiZnVsbE5hbWVcIjpcItCU0LXRgNCz0YPQvdC+0LLQsCDQndCw0YLQsNC70YzRjyDQktCw0LvQtdGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTIwIDE0OjUyOjIxLjY5MTE5NVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNy0yMCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjUgMTY6NDI6MjUuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg0OTQwMDAwMTBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JfQsNCx0LDQu9GD0LXQstCwIDkwXCIsXCJ2aWV3ZWRBcmVhXCI6XCIyMy8xMi8zXCIsXCJwcmljZVN0YXJ0XCI6XCIyMzUwXCIsXCJwcmljZUN1cnJlbnRcIjoyMzUwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNTYxMlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjA1NzlcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NCxcImZ1bGxOYW1lXCI6XCLQlNC10YDQs9GD0L3QvtCy0LAg0J3QsNGC0LDQu9GM0Y8g0JLQsNC70LXRgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMy0xOCAxNTo1Mzo1MS44NzI4NzJcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDktMjEgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA0LTIxIDE1OjQ1OjEzLjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NDk0MDAwMDEyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6IDE5MDUg0LPQvtC00LAgODVcIixcInZpZXdlZEFyZWFcIjpcIjQ1LzI4LzdcIixcInByaWNlU3RhcnRcIjpcIjY1MDBcIixcInByaWNlQ3VycmVudFwiOlwiNjUwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ5ODQ3OTQ2MjA2OTk2OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyMzUxMlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjM4NDksXCJmdWxsTmFtZVwiOlwi0JrRgNCw0LvRjNC60L4g0KHQstC10YLQu9Cw0L3QsCDQk9GA0LjQs9C+0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI5MDUzMTY1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCn0LXRhdC+0LLQsCAxMTFcIixcInZpZXdlZEFyZWFcIjpcIjQwLzIwLzEwXCIsXCJwcmljZVN0YXJ0XCI6XCIzNDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM0MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2ODE2OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozODQ5LFwiZnVsbE5hbWVcIjpcItCa0YDQsNC70YzQutC+INCh0LLQtdGC0LvQsNC90LAg0JPRgNC40LPQvtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTEyIDEyOjA0OjA2Ljk1NzQ3NVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0zMSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMTYgMTM6MDc6MjAuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTg3MzcwMDAwMDBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCf0YDQvtC60YPQtNGB0LrQvtC1INCh0YLRgNC+0LjRgtC10LvRjNC90LDRjyAzNlwiLFwidmlld2VkQXJlYVwiOlwiOTEvNjMvMTNcIixcInByaWNlU3RhcnRcIjpcIjM3MDBcIixcInByaWNlQ3VycmVudFwiOlwiMzcwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzUwMDg3NTcyMjAwODYzNlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzQxMjU3MDhcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY4MjQwXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjM4NDksXCJmdWxsTmFtZVwiOlwi0JrRgNCw0LvRjNC60L4g0KHQstC10YLQu9Cw0L3QsCDQk9GA0LjQs9C+0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDUtMTIgMTU6MTg6MjkuOTM2NDk0XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEyLTMxIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0xNiAxMzowNTowNS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODczNzAwMDAwMVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQn9C+0YfRgtC+0LLQsNGPIDQxXCIsXCJ2aWV3ZWRBcmVhXCI6XCI4My80OS8yNlwiLFwicHJpY2VTdGFydFwiOlwiMzk1MFwiLFwicHJpY2VDdXJyZW50XCI6Mzk1MCxcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjc0MTI1OTcyXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2ODcwMVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozODQ5LFwiZnVsbE5hbWVcIjpcItCa0YDQsNC70YzQutC+INCh0LLQtdGC0LvQsNC90LAg0JPRgNC40LPQvtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTE2IDE1OjUwOjE3LjgwOTY1OVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0zMSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMTcgMDk6NTk6NTYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTg3MzcwMDAwMDJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JrQvtC80LjQvdGC0LXRgNC90LAgNjZcIixcInZpZXdlZEFyZWFcIjpcIjU1LzI5LzI2XCIsXCJwcmljZVN0YXJ0XCI6XCIzMzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMzMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc1MDA4NzU3MjIwMDg2MzhcIixcInN0YXR1c1wiOlwi0J7RiNC40LHQutCwXCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjc0MTI1NzQ2XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3MDk4NlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozODQ5LFwiZnVsbE5hbWVcIjpcItCa0YDQsNC70YzQutC+INCh0LLQtdGC0LvQsNC90LAg0JPRgNC40LPQvtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTAyIDExOjQxOjIxLjY5NzI0OVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0zMSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMDIgMTc6MzY6NDUuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg3MzcwMDAwMDNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0K/RgdC90YvQuSDQkdC10YDQtdCzIDI1XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzNS8xOC85XCIsXCJwcmljZVN0YXJ0XCI6XCI0NTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQ1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzUwMzM1ODdcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjczMTQzXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjM4NDksXCJmdWxsTmFtZVwiOlwi0JrRgNCw0LvRjNC60L4g0KHQstC10YLQu9Cw0L3QsCDQk9GA0LjQs9C+0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDYtMTYgMTM6NDU6MDMuMDc2NTIxXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEyLTAxIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0yMSAxNzoyMzowOS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODczNzAwMDAwNFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQk9GA0L7QvNC+0LLQsCAxNlwiLFwidmlld2VkQXJlYVwiOlwiNDUvMzEvNlwiLFwicHJpY2VTdGFydFwiOlwiNDAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0MDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc1MDMzNTg5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3NDM0MVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozODQ5LFwiZnVsbE5hbWVcIjpcItCa0YDQsNC70YzQutC+INCh0LLQtdGC0LvQsNC90LAg0JPRgNC40LPQvtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0KDQtdC60LvQsNC80L3Ri9C5XCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTIzIDE4OjIzOjQ5LjY3MDE4MVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0yMyAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMjggMTc6NDQ6NTYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTg3MzcwMDAwMDZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCc0L7RgNGB0LrQvtC5INGB0LXQu9GM0YHQvtCy0LXRgiDQn9GA0LjQvNC+0YDRgdC60LjQuSAxNDlcIixcInZpZXdlZEFyZWFcIjpcIjMwLzIwLzhcIixcInByaWNlU3RhcnRcIjpcIjE2NTBcIixcInByaWNlQ3VycmVudFwiOjE2NTAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjg2NTZcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6Mzg0OSxcImZ1bGxOYW1lXCI6XCLQmtGA0LDQu9GM0LrQviDQodCy0LXRgtC70LDQvdCwINCT0YDQuNCz0L7RgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xNiAxMzo1NzozMS4yODc0NTBcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0xNiAxNToyMzo1My4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODc0MDAwMDAwMFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQmtGD0LfRjNC80Ysg0JzQuNC90LjQvdCwIDlcIixcInZpZXdlZEFyZWFcIjpcIjE4LzgvNlwiLFwicHJpY2VTdGFydFwiOlwiNjAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI2MDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjg5MjhcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6Mzg0OSxcImZ1bGxOYW1lXCI6XCLQmtGA0LDQu9GM0LrQviDQodCy0LXRgtC70LDQvdCwINCT0YDQuNCz0L7RgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCg0LXQutC70LDQvNC90YvQuVwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xOCAwOTo0MDo1OS40NTA1NzlcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMTggMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQntGC0LrQu9C+0L3QtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTE4IDEyOjI4OjIzLjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NzQwMDAwMDAyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCU0LzQuNGC0YDQuNGPINCo0LzQvtC90LjQvdCwIDEwLzJcIixcInZpZXdlZEFyZWFcIjpcIjM1LzE5LzhcIixcInByaWNlU3RhcnRcIjpcIjM1MDBcIixcInByaWNlQ3VycmVudFwiOlwiMzUwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY4OTgyXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjM4NDksXCJmdWxsTmFtZVwiOlwi0JrRgNCw0LvRjNC60L4g0KHQstC10YLQu9Cw0L3QsCDQk9GA0LjQs9C+0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQoNC10LrQu9Cw0LzQvdGL0LlcIixcImNyZWF0ZWRcIjpcIjIwMjItMDUtMTggMTI6MDg6NDIuNDQ5OTY4XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTE4IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0xOCAxMzozODoyNi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQn9C10YDQtdGD0YHRgtGD0L/QutCwINCU0JTQo1wiLFwidHlwZU5hbWVcIjpcIijQndC+0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODc0MDAwMDAwM1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQsdGA0L7QvdC90LDRjyAzNy8y0YFcIixcInZpZXdlZEFyZWFcIjpcIjM5LzI1LzhcIixcInByaWNlU3RhcnRcIjpcIjMzMDBcIixcInByaWNlQ3VycmVudFwiOlwiMzMwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzUwMDg5NzAyMjA5Njk4M1wiLFwic3RhdHVzXCI6XCLQntGI0LjQsdC60LBcIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODIzMVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTI6MDQ6MjEuMTA5MTg1XCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMDYgMTg6MTg6MjAuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTMzNTcwMDAyNjlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JPQvtGA0YHQutC40LkgM1wiLFwidmlld2VkQXJlYVwiOlwiNTQvMzIvOVwiLFwicHJpY2VTdGFydFwiOlwiNDkwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0OTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE4NSxcImZ1bGxOYW1lXCI6XCLQmtGA0LjQttCw0L3QvtCy0YHQutCw0Y8g0KLQsNGC0YzRj9C90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzNDQ2MDEwOTQ0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCh0YLQsNC90YbQuNC+0L3QvdCw0Y8gNDhcIixcInZpZXdlZEFyZWFcIjpcIjYxLzEvMVwiLFwicHJpY2VTdGFydFwiOlwiMjYwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIyNjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE4NSxcImZ1bGxOYW1lXCI6XCLQmtGA0LjQttCw0L3QvtCy0YHQutCw0Y8g0KLQsNGC0YzRj9C90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0L7QvNC90LDRgtCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0L7QvC4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzNTU0MDAwMDgyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCl0LDQu9GC0YPRgNC40L3QsCA0M1wiLFwidmlld2VkQXJlYVwiOlwiMTkvMTkvOVwiLFwicHJpY2VTdGFydFwiOlwiNzgwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjc4MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtC+0LzQvdCw0YLQsFwiLFwidHlwZU5hbWVcIjpcIijQmtC+0LwuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzU1NDAwMDIwMVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodGC0LDQvdGG0LjQvtC90L3QsNGPIDUwXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxOC8xMy80XCIsXCJwcmljZVN0YXJ0XCI6XCI2MDBcIixcInByaWNlQ3VycmVudFwiOlwiNjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE4NSxcImZ1bGxOYW1lXCI6XCLQmtGA0LjQttCw0L3QvtCy0YHQutCw0Y8g0KLQsNGC0YzRj9C90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzNTU0MDAwMjA3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCd0LXQstC10LvRjNGB0LrQvtCz0L4gNjFcIixcInZpZXdlZEFyZWFcIjpcIjYwLzQzLzdcIixcInByaWNlU3RhcnRcIjpcIjI3OTBcIixcInByaWNlQ3VycmVudFwiOlwiMjc5MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzU1NDAwMDIxNFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotGA0L7Qu9C70LXQudC90LDRjyAxMlwiLFwidmlld2VkQXJlYVwiOlwiMzEvMTYvNFwiLFwicHJpY2VTdGFydFwiOlwiMjM1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMzUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiMzQwNzFcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTI4IDEwOjIxOjMwLjQ1NzQyN1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0xMSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMDkgMTM6MjU6MTkuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM1NTQwMDAyODVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0LzQuNC60YDQvtGA0LDQudC+0L0g0JPQvtGA0YHQutC40LkgNjdcIixcInZpZXdlZEFyZWFcIjpcIjQyLzIyLzExXCIsXCJwcmljZVN0YXJ0XCI6XCI0ODAwXCIsXCJwcmljZUN1cnJlbnRcIjo0ODAwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvMjA3MDkzNzAxMjg1MTgyNjIzMlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NTAxMTYzMlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE4NSxcImZ1bGxOYW1lXCI6XCLQmtGA0LjQttCw0L3QvtCy0YHQutCw0Y8g0KLQsNGC0YzRj9C90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzNTU0MDAwMjkwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCX0LDQsdCw0LvRg9C10LLQsCA5MlwiLFwidmlld2VkQXJlYVwiOlwiMjQvMTYvNFwiLFwicHJpY2VTdGFydFwiOlwiMjIyMFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMjIwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDgyODNcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDEzOjEyOjU1LjY5NDc0MFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0yMCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjAgMTU6MDU6MDQuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTM1NTQwMDAzMDVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCi0L7Qu9C80LDRh9C10LLQviDQktCw0YLRg9GC0LjQvdCwIDlcIixcInZpZXdlZEFyZWFcIjpcIjY3LzM3LzlcIixcInByaWNlU3RhcnRcIjpcIjYxMDBcIixcInByaWNlQ3VycmVudFwiOjYxNTAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci8yMDcwOTM3MDEyODUxODQ4MzM1XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NDY5ODg1NlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg0NzVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE1OjMwOjE1LjQ3NzUyNFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0yOCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjUgMTQ6MjE6MDQuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0J/QtdGA0LXRg9GB0YLRg9C/0LrQsCDQlNCU0KNcIixcInR5cGVOYW1lXCI6XCIo0J3QvtCyLilcIixcInJlcU51bWJlclwiOlwiNTM1NTQwMDAzMTVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J3QtdC80LjRgNC+0LLQuNGH0LAt0JTQsNC90YfQtdC90LrQviAxNDVcIixcInZpZXdlZEFyZWFcIjpcIjQyLzE2LzE2XCIsXCJwcmljZVN0YXJ0XCI6XCI1NTAwXCIsXCJwcmljZUN1cnJlbnRcIjo1NTAwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvMjA3MDkzNzAxMjg1MTg0OTI5NlwiLFwic3RhdHVzXCI6XCLQntGI0LjQsdC60LBcIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNTM3OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg0NjZcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE1OjIyOjQxLjE2NTE0MlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0xMyAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjUgMTU6MTE6NDkuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTM1NTQwMDAzMTZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0LDQvNC10L3QutCwINCR0LvQuNC30LrQuNC5INC80LjQutGA0L7RgNCw0LnQvtC9IDc4M1wiLFwidmlld2VkQXJlYVwiOlwiMTE1Lzc0LzI4XCIsXCJwcmljZVN0YXJ0XCI6XCI4NDYwXCIsXCJwcmljZUN1cnJlbnRcIjo4NTAwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvMjA3MDkzNzAxMjg1MTg0OTMyOFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzQxMjQ4MThcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjUzNTI3XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE4NSxcImZ1bGxOYW1lXCI6XCLQmtGA0LjQttCw0L3QvtCy0YHQutCw0Y8g0KLQsNGC0YzRj9C90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0zMSAxNjo0NzoyMC41NTY5MzFcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMjAgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTIzIDE0OjQ0OjUwLjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzNTU0MDAwMzE3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCS0LjQutGC0L7RgNCwINCj0YHQsCA3XCIsXCJ2aWV3ZWRBcmVhXCI6XCIyMC8xNC8yXCIsXCJwcmljZVN0YXJ0XCI6XCIyMTk5XCIsXCJwcmljZUN1cnJlbnRcIjoyMTk5LFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1NzA2NVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDItMjQgMTU6NTc6MDcuNjc3OTEyXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTI1IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yNiAxNDowNjowNS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzU1NDAwMDMyMlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JvQtdC/0L7QutGD0YDQvtCy0L4g0KbQtdC90YLRgNCw0LvRjNC90LDRjyAyOVwiLFwidmlld2VkQXJlYVwiOlwiMTAyLzYwLzEyXCIsXCJwcmljZVN0YXJ0XCI6XCI0ODBcIixcInByaWNlQ3VycmVudFwiOlwiNDgwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NTIyMzk5MFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjA0NjRcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTE3IDE3OjQ1OjAxLjk3ODA5NVwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzU1NDAwMDMyNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQnNC40YDQsCA3M1wiLFwidmlld2VkQXJlYVwiOlwiNDAvMjAvNVwiLFwicHJpY2VTdGFydFwiOlwiMTAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjA5MTVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTIxIDE4OjIyOjEzLjUwMDA4N1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNi0yMSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMjcgMDg6MDQ6MzkuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM1NTQwMDAzMjdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J/QtdGC0YDQvtCy0YHQutC+0LPQviA3XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzOS8xOC84XCIsXCJwcmljZVN0YXJ0XCI6XCIyODAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI4MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2MjExMVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMjggMTY6MzY6NTMuNDI2NDY0XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTI4IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMSAxNzoyNDo0NC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzU1NDAwMDMyOFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodGC0LDQu9C40L3Qs9GA0LDQtNGB0LrQvtC5INCR0LjRgtCy0YsgMTVcIixcInZpZXdlZEFyZWFcIjpcIjI3MS8xNTAvNDBcIixcInByaWNlU3RhcnRcIjpcIjU1MDBcIixcInByaWNlQ3VycmVudFwiOjU1MDAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NDUzMjY2NlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjI1MzdcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTMwIDE2OjMxOjE1Ljk0NjYxNFwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzU1NDAwMDMyOVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQkdC10YLQvtC90L3QsNGPIDEzXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1NS8zNC83XCIsXCJwcmljZVN0YXJ0XCI6XCI0MDUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQwNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2NDg2NFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMTUgMTQ6Mjg6NTAuNTY1ODAzXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTEwIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0xNSAxNzoxNzoyMi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzNTU0MDAwMzMwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQodCy0LXRgtC70YvQuSDQodCd0KIg0J7QvdC10LPQsCAxMVwiLFwidmlld2VkQXJlYVwiOlwiMTIuMDBcIixcInByaWNlU3RhcnRcIjpcIjI5MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyOTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczNjcwMjQxOTE4NTA1NTRcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjc0MTI0MjMwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2NjM1M1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMjYgMTM6Mjk6MDkuOTAxMjUwXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTI2IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yOCAxMTowMDowOC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzU1NDAwMDMzMVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMjMyLzNcIixcInZpZXdlZEFyZWFcIjpcIjI2LzE3LzNcIixcInByaWNlU3RhcnRcIjpcIjM2MDBcIixcInByaWNlQ3VycmVudFwiOlwiMzYwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzM2NzAyNDE5MTg1MDU1NVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNDYyMVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjYzNjZcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA0LTI2IDEzOjU3OjM0LjcxMTUwMFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNy0yNiAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjggMTU6NTM6MzYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM1NTQwMDAzMzFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQuNGC0L7QstCwIDIzMi8zXCIsXCJ2aWV3ZWRBcmVhXCI6XCIyNi8xNy8zXCIsXCJwcmljZVN0YXJ0XCI6XCIzNjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM2MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczNjcwMjQxOTE4NTA1NTVcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQxMjQ2MjFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY2Mzk5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE4NSxcImZ1bGxOYW1lXCI6XCLQmtGA0LjQttCw0L3QvtCy0YHQutCw0Y8g0KLQsNGC0YzRj9C90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNC0yNiAxNTozNToyMi42NTE1MTZcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDctMjYgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA0LTI4IDE2OjM2OjU0LjAwMDAwMFwifSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzNTU0MDAwMzMyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LjRgtC+0LLQsCA4MlwiLFwidmlld2VkQXJlYVwiOlwiODMvNTIvMTRcIixcInByaWNlU3RhcnRcIjpcIjgyMDBcIixcInByaWNlQ3VycmVudFwiOlwiODIwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzM2NzAyNDE5MTg1MDU1NlwiLFwic3RhdHVzXCI6XCLQntGI0LjQsdC60LBcIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNDYzNFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjc5NzVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTExIDEzOjAxOjUwLjA5NzA3OVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0xMSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMTIgMTM6NTc6MTQuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM1NTQwMDAzMzRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J/Qu9Cw0YXQvtGC0L3QvtCz0L4gNzJcIixcInZpZXdlZEFyZWFcIjpcIjMyLzE3LzdcIixcInByaWNlU3RhcnRcIjpcIjMzMDBcIixcInByaWNlQ3VycmVudFwiOjMzMDAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTI1NDgxXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2Nzk3NVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDUtMTEgMTM6MDE6NTAuMDk3MDc5XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTExIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0xMiAxMzo1NzoxNC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzU1NDAwMDMzNFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQn9C70LDRhdC+0YLQvdC+0LPQviA3MlwiLFwidmlld2VkQXJlYVwiOlwiMzIvMTcvN1wiLFwicHJpY2VTdGFydFwiOlwiMzMwMFwiLFwicHJpY2VDdXJyZW50XCI6MzMwMCxcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQ2OTg4NTlcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY4MDI5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE4NSxcImZ1bGxOYW1lXCI6XCLQmtGA0LjQttCw0L3QvtCy0YHQutCw0Y8g0KLQsNGC0YzRj9C90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xMSAxNDo1NzoxNS42NzAyOTdcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMTEgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTExIDE1OjIwOjI5LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzNTU0MDAwMzM1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCk0LDRgdCw0LTQvdCw0Y8gMjFcIixcInZpZXdlZEFyZWFcIjpcIjQ0LzMyLzZcIixcInByaWNlU3RhcnRcIjpcIjM1MDBcIixcInByaWNlQ3VycmVudFwiOjM1MDAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0Mzk1MzgyXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0J/QtdGA0LXRg9GB0YLRg9C/0LrQsCDQlNCU0KNcIixcInR5cGVOYW1lXCI6XCIo0J3QvtCyLilcIixcInJlcU51bWJlclwiOlwiNTYxMDYwMDAwNTlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0LDQvNC10L3QutCwINCe0LvQuNC80L/QuNC50YHQutC+0Lkg0KHQu9Cw0LLRiyDQvNC40LrRgNC+0YDQsNC50L7QvSAxNtCxXCIsXCJ2aWV3ZWRBcmVhXCI6XCIyMC8xMC8zXCIsXCJwcmljZVN0YXJ0XCI6XCIxMjgwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjEyODBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTg1LFwiZnVsbE5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JfQtdC80LXQu9GM0L3Ri9C5INGD0YfQsNGB0YLQvtC6XCIsXCJ0eXBlTmFtZVwiOlwiKNCj0YcuKVwiLFwicmVxTnVtYmVyXCI6XCI1NjEwNjAwMDExN1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0JzQsNGA0YPRgdC40L3QviDQotGA0L7Qv9C40L3QuNC90LAgMlwiLFwidmlld2VkQXJlYVwiOlwiOS4wMFwiLFwicHJpY2VTdGFydFwiOlwiMTU1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIxNTUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE4NSxcImZ1bGxOYW1lXCI6XCLQmtGA0LjQttCw0L3QvtCy0YHQutCw0Y8g0KLQsNGC0YzRj9C90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU2MTk1MDAwMjYwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LjRgtC+0LLQsCAyNTMvNVwiLFwidmlld2VkQXJlYVwiOlwiNDIvMTgvMTJcIixcInByaWNlU3RhcnRcIjpcIjI4NjBcIixcInByaWNlQ3VycmVudFwiOlwiMjg2MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NjcwMDAwMTgyNlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQk9C+0YDRgdC60LjQuSA2N1wiLFwidmlld2VkQXJlYVwiOlwiODQvNDcvMTBcIixcInByaWNlU3RhcnRcIjpcIjY2MDBcIixcInByaWNlQ3VycmVudFwiOlwiNjYwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxODUsXCJmdWxsTmFtZVwiOlwi0JrRgNC40LbQsNC90L7QstGB0LrQsNGPINCi0LDRgtGM0Y/QvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkzNjAwMDE5M1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMjU3XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMy8yMC85XCIsXCJwcmljZVN0YXJ0XCI6XCIyODcwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI4NzBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1NzYzNVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTI4IDEzOjUwOjI3LjE4MDcwOVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0yNCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjQgMTI6NTg6MTYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTM1NTQwMDAzMjNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQuNGC0L7QstCwIDI1Ny8yXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMy8xNy85XCIsXCJwcmljZVN0YXJ0XCI6XCIzNTUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM1NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczNjcwMjQxOTE4NTA1MjZcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzA3MTY5MjRcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NTU5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE2NTgsXCJmdWxsTmFtZVwiOlwi0JDQvdC00YDRg9GF0L7QstCwINCV0LLQs9C10L3QuNGPINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTY6MTk6NDcuNjk2NTIxXCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MTcyMDAwMDIyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCu0YDQs9C40L3RgdC60LDRjyAxLdGPIDI3XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3Ni8wLzE1XCIsXCJwcmljZVN0YXJ0XCI6XCIzNjUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM2NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCIzNDA3NVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTI4IDEwOjIzOjIwLjkwNzM2M1wiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDE3MjAwMDIzMFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQoNC40L7QvdGB0LrQsNGPIDI3XCIsXCJ2aWV3ZWRBcmVhXCI6XCI4Ni82MS8xMVwiLFwicHJpY2VTdGFydFwiOlwiNjMwMFwiLFwicHJpY2VDdXJyZW50XCI6NjMwMCxcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCIzNDA3OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTI4IDEwOjI0OjAwLjg0NzI5N1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNS0xNyAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjQgMTM6MDc6NTIuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyMzVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCb0LXQvdC40L3RgdC60L7QtSDQkNC90LTRgNC10LXQstCwIDgyXCIsXCJ2aWV3ZWRBcmVhXCI6XCIyMDAvMTUwLzIwXCIsXCJwcmljZVN0YXJ0XCI6XCIzNzgwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM3ODBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTY1OCxcImZ1bGxOYW1lXCI6XCLQkNC90LTRgNGD0YXQvtCy0LAg0JXQstCz0LXQvdC40Y8g0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MTcyMDAwMjM4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCe0LvQtdC60LzQuNC90YHQutCw0Y8gMTBcIixcInZpZXdlZEFyZWFcIjpcIjYyLzM1LzdcIixcInByaWNlU3RhcnRcIjpcIjU0OTBcIixcInByaWNlQ3VycmVudFwiOlwiNTQ5MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNDNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0YPQtNGA0Y/RiNC+0LLRgdC60LjQuSDRgdC10LvRjNGB0L7QstC10YIg0K/Qs9C+0LTQvdCw0Y8gMjdcIixcInZpZXdlZEFyZWFcIjpcIjQ1LzIwLzlcIixcInByaWNlU3RhcnRcIjpcIjcwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI3MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTY1OCxcImZ1bGxOYW1lXCI6XCLQkNC90LTRgNGD0YXQvtCy0LAg0JXQstCz0LXQvdC40Y8g0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MTcyMDAwMjQ0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstC60LAg0JfQtdC70LXQvdCw0Y8gMTZcIixcInZpZXdlZEFyZWFcIjpcIjY3LzI4LzExXCIsXCJwcmljZVN0YXJ0XCI6XCIyNDcwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI0NzBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODU3MVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE2OjMxOjQwLjQ5MzIzM1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0wMyAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjIgMTY6NDg6NTMuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNDhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCg0YvQsdCw0YfQuNC5INGD0LvQuNGG0LAgOCA0MDJcIixcInZpZXdlZEFyZWFcIjpcIjgyLzUwLzZcIixcInByaWNlU3RhcnRcIjpcIjMwMDBcIixcInByaWNlQ3VycmVudFwiOlwiMzAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzM5MDEwNTUwMDA4MTM5OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzA2ODcyNDFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NTc4XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE2NTgsXCJmdWxsTmFtZVwiOlwi0JDQvdC00YDRg9GF0L7QstCwINCV0LLQs9C10L3QuNGPINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTY6Mzc6NTguMDcxMjA0XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTI1IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yNiAxMjozMzoyMi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDE3MjAwMDI1NVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQl9Cw0YDQtdGH0L3QsNGPIDQxXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0MS8xNS8xM1wiLFwicHJpY2VTdGFydFwiOlwiNDIwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0MjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzkwMTA1NTAwMDgxNDI3XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcwNjg3NzI1XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODYwMFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE2OjUxOjU1LjA0NTYyMlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNi0xNCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMTYgMDc6NTc6MDcuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JfQtdC80LXQu9GM0L3Ri9C5INGD0YfQsNGB0YLQvtC6XCIsXCJ0eXBlTmFtZVwiOlwiKNCj0YcuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDE3MjAwMDI1OVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrQu9C10LLQtdGAINCQ0LvRhNC10YDQvtCy0LAgODhcIixcInZpZXdlZEFyZWFcIjpcIjYuNzVcIixcInByaWNlU3RhcnRcIjpcIjU4MFwiLFwicHJpY2VDdXJyZW50XCI6XCI1ODBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1MDEyNFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE5IDExOjI5OjEyLjM3NTcyM1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNC0xOSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjAgMDg6Mzc6MzguMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNjFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQsNC90LrQuNGB0YLQvtCyIDExXCIsXCJ2aWV3ZWRBcmVhXCI6XCI2Mi80NC83XCIsXCJwcmljZVN0YXJ0XCI6XCI0NDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQ0MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1Mjg3OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTI4IDE2OjU4OjEzLjcxMTcyNFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNC0yOCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjAgMDg6Mzk6MjYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNjJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0K/QvdGC0LDRgNC90LDRjyAzOFwiLFwidmlld2VkQXJlYVwiOlwiMTM3LzQ1LzIwXCIsXCJwcmljZVN0YXJ0XCI6XCI1NTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjU1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTY1OCxcImZ1bGxOYW1lXCI6XCLQkNC90LTRgNGD0YXQvtCy0LAg0JXQstCz0LXQvdC40Y8g0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MTcyMDAwMjYzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCb0LXQvdC40L3QsCAzMC8xXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1Ni80My81XCIsXCJwcmljZVN0YXJ0XCI6XCI2OTk5XCIsXCJwcmljZUN1cnJlbnRcIjpcIjY5OTlcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzM5MDEwNTUwMDA4MTQ1NlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3MDY4ODc4OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTYxOTFcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTY1OCxcImZ1bGxOYW1lXCI6XCLQkNC90LTRgNGD0YXQvtCy0LAg0JXQstCz0LXQvdC40Y8g0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMi0xNyAxODo0MzoyNy4xMTEzODFcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDktMDMgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTAzIDEzOjU2OjQ3LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MTcyMDAwMjY0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCQ0LzRg9GA0YHQutCw0Y8gNjUvMVwiLFwidmlld2VkQXJlYVwiOlwiNDIvMjYvN1wiLFwicHJpY2VTdGFydFwiOlwiMzMwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMzAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzkwMTA1NTAwMDgxNDU3XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcwNjg5MTYxXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1OTc5NlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTE0IDE0OjE0OjE5LjQ4OTczNFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0xNSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMTUgMTc6MTI6MjcuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNjdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0K7QttC90LDRjyA0MC8zXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMS8xNy82XCIsXCJwcmljZVN0YXJ0XCI6XCIyODAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI4MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczOTAxMDU1MDAwODE0NjBcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzEyNzk0MTVcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjYyMzU0XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE2NTgsXCJmdWxsTmFtZVwiOlwi0JDQvdC00YDRg9GF0L7QstCwINCV0LLQs9C10L3QuNGPINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDMtMjkgMTY6MTg6NTQuOTg1OTgxXCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNjlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCv0YDQutC+0LLRgdC60LjQuSDRgdC10LvRjNGB0L7QstC10YIg0KDRj9Cx0LjQvdC+0LLQsNGPIDE0XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMC4wMFwiLFwicHJpY2VTdGFydFwiOlwiMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjYyNDc4XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE2NTgsXCJmdWxsTmFtZVwiOlwi0JDQvdC00YDRg9GF0L7QstCwINCV0LLQs9C10L3QuNGPINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMzAgMTQ6MDE6MTEuMTY0NDE2XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTEyIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0xMiAxNToyOToxNi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MTcyMDAwMjcwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQnNC+0YDRgdC60L7QuSDRgdC10LvRjNGB0L7QstC10YIg0JzQtdGC0LDQu9C70YPRgNCzIDkwXCIsXCJ2aWV3ZWRBcmVhXCI6XCI2LjAwXCIsXCJwcmljZVN0YXJ0XCI6XCI0MDBcIixcInByaWNlQ3VycmVudFwiOlwiNDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzkwMTA1NTAwMDgxNDg0XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NDEyNDExN1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjQ1NDZcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTY1OCxcImZ1bGxOYW1lXCI6XCLQkNC90LTRgNGD0YXQvtCy0LAg0JXQstCz0LXQvdC40Y8g0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wNC0xMyAxMzozNjo1MS44MDIzMTVcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNzFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHRgtC10L/QvdCw0Y8gNDFcIixcInZpZXdlZEFyZWFcIjpcIjQ1LzI4LzZcIixcInByaWNlU3RhcnRcIjpcIjQxMDBcIixcInByaWNlQ3VycmVudFwiOlwiNDEwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzkwMTA1NTAwMDgxNDg1XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTI0MTI1XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2NTE1OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA0LTE4IDE2OjM1OjA1LjE2MzQzM1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0xOSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjAgMTA6MDY6MDAuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNzJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCj0LvRi9Cx0LjQvdC+INCR0YDQsNGC0YzQtdCyINCS0LXRgdC90LjQvdGL0YUgNVwiLFwidmlld2VkQXJlYVwiOlwiMzAvMjAvOFwiLFwicHJpY2VTdGFydFwiOlwiNzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjcwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY2MzI3XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE2NTgsXCJmdWxsTmFtZVwiOlwi0JDQvdC00YDRg9GF0L7QstCwINCV0LLQs9C10L3QuNGPINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMjYgMTI6NDc6MzYuMjI5NDI4XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTI2IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yOSAwOTo1NDo0OC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDE3MjAwMDI3M1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodC/0L7RgNGC0LjQstC90LDRjyAxN1wiLFwidmlld2VkQXJlYVwiOlwiMzcvMTYvMTBcIixcInByaWNlU3RhcnRcIjpcIjM4MDBcIixcInByaWNlQ3VycmVudFwiOlwiMzgwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzM5MDEwNTUwMDA4MTQ4N1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNDcwMlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjgwMjNcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTY1OCxcImZ1bGxOYW1lXCI6XCLQkNC90LTRgNGD0YXQvtCy0LAg0JXQstCz0LXQvdC40Y8g0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xMSAxNDozNjozOS4xMjQ2NzJcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMTMgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTEzIDE3OjE3OjQzLjAwMDAwMFwifSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MTcyMDAwMjc1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCX0LDQsdCw0LvRg9C10LLQsCA4NC84XCIsXCJ2aWV3ZWRBcmVhXCI6XCIyNy8xNS81XCIsXCJwcmljZVN0YXJ0XCI6XCIzMDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczOTAxMDU1MDAwODE0ODlcIixcInN0YXR1c1wiOlwi0J7RiNC40LHQutCwXCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjkxMzhcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTY1OCxcImZ1bGxOYW1lXCI6XCLQkNC90LTRgNGD0YXQvtCy0LAg0JXQstCz0LXQvdC40Y8g0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xOSAwOTo0NjowMi4wMzQyNTJcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMTkgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTE5IDEyOjI2OjM2LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MTcyMDAwMjc2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCb0LXQvdC40L3Qs9GA0LDQtNGB0LrQsNGPIDE0M1wiLFwidmlld2VkQXJlYVwiOlwiNjAvNDAvNlwiLFwicHJpY2VTdGFydFwiOlwiNTEwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI1MTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzkwMTA1NTAwMDgxNDkwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTI1ODM3XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3MTI3NFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTAzIDE0OjA0OjE4LjU4NzM3OFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0wMyAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMDMgMTQ6NDk6MzcuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNzdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J3QuNC60L7Qu9Cw0Y8g0JPRgNC40YbRjtC60LAgMS80XCIsXCJ2aWV3ZWRBcmVhXCI6XCIyMS8xOC81XCIsXCJwcmljZVN0YXJ0XCI6XCIxODAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE4MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTczOTAxMDU1MDAwODE0OTFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQzMDMxMjFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjcyNjM5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE2NTgsXCJmdWxsTmFtZVwiOlwi0JDQvdC00YDRg9GF0L7QstCwINCV0LLQs9C10L3QuNGPINCS0LjQutGC0L7RgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDYtMTQgMTE6MDQ6NTcuOTMwMjc4XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTE0IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0xNCAxMjoxMjo0NS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDE3MjAwMDI3OFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodGC0LXQv9C90LDRjyA2M1wiLFwidmlld2VkQXJlYVwiOlwiNjAvNDAvN1wiLFwicHJpY2VTdGFydFwiOlwiNDYwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0NjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3MzkwMTA1NTAwMDgxNDkyXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0NzczOTc2XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3MjY2NlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNjU4LFwiZnVsbE5hbWVcIjpcItCQ0L3QtNGA0YPRhdC+0LLQsCDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTE0IDExOjQ2OjU2LjQxMzM1MFwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6XCLQntGC0LrQu9C+0L3QtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTE2IDE2OjUzOjU4LjAwMDAwMFwifSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTQxNzIwMDAyNzlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0L7Qu9GL0LLQsNC90Ywg0KHQtdCy0LXRgNC90YvQuSDQvtCx0YrQtdC30LQgLSDQodCd0KIgIDMzN1wiLFwidmlld2VkQXJlYVwiOlwiMTIuMDBcIixcInByaWNlU3RhcnRcIjpcIjMwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTY1OCxcImZ1bGxOYW1lXCI6XCLQkNC90LTRgNGD0YXQvtCy0LAg0JXQstCz0LXQvdC40Y8g0JLQuNC60YLQvtGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU2MzMwMDAxMDc2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LDRgdC90L7QvtCx0YHQuiA2LdC5INC80LjQutGA0L7RgNCw0LnQvtC9IDUxXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMjkvMS8xXCIsXCJwcmljZVN0YXJ0XCI6XCI4MDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjgwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0NDA0OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozMzc5LFwiZnVsbE5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDEyOjU1OjU4LjcwNDkwNFwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODUxNDAwMDAwMVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0KHQndCiINCu0LHQuNC70LXQuSDQrtC20L3QsNGPIDM0NFwiLFwidmlld2VkQXJlYVwiOlwiMjAvMTUvM1wiLFwicHJpY2VTdGFydFwiOlwiNTUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjU1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ2NDYyXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjMzNzksXCJmdWxsTmFtZVwiOlwi0KjQtdC50L0g0K/QvdCwINCu0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTI6NTI6NDMuNzQ1MDc3XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA1LTE0IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0xMyAxNToyNjoyNC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtC+0LzQvdCw0YLQsFwiLFwidHlwZU5hbWVcIjpcIijQmtC+0LwuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODUxNDAwMDAwN1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQn9C10YLRgNC+0L/QsNCy0LvQvtCy0YHQutCw0Y8gMVwiLFwidmlld2VkQXJlYVwiOlwiMjMvMjIvMFwiLFwicHJpY2VTdGFydFwiOlwiMTUwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxNTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDY0NjlcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MzM3OSxcImZ1bGxOYW1lXCI6XCLQqNC10LnQvSDQr9C90LAg0K7RgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNzowNzoyNi4wOTI1MDVcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMDlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCU0YDRg9C20L3Ri9C5INCe0LfQtdGA0L3QsNGPIDExXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzOS8zMC82XCIsXCJwcmljZVN0YXJ0XCI6XCI1NTBcIixcInByaWNlQ3VycmVudFwiOlwiNTUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTE2NzhcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MzM3OSxcImZ1bGxOYW1lXCI6XCLQqNC10LnQvSDQr9C90LAg0K7RgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0yNSAxNDoxMTozNC4yMTM0MDNcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMTBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQuNGC0L7QstCwIDExXCIsXCJ2aWV3ZWRBcmVhXCI6XCIyOS8xOC82XCIsXCJwcmljZVN0YXJ0XCI6XCIzMTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMxMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0NDcyOVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozMzc5LFwiZnVsbE5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE3OjA4OjMwLjU4MzMyM1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMS0yNiAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMjAgMTE6Mzg6MDYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMTNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHQtdGA0LDRhNC40LzQvtCy0LjRh9CwIDNcIixcInZpZXdlZEFyZWFcIjpcIjM2LzE2LzZcIixcInByaWNlU3RhcnRcIjpcIjI1MDBcIixcInByaWNlQ3VycmVudFwiOlwiMjUwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ5OTExMjI1MjE5NDUyM1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3MDY4Nzc0MFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDYxNTRcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MzM3OSxcImZ1bGxOYW1lXCI6XCLQqNC10LnQvSDQr9C90LAg0K7RgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNzowOToyMy4xODI2NjhcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTItMzEgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTA3IDE2OjEzOjI1LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NTE0MDAwMDE0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCv0LrRg9GI0LXQstCwIDM5XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMi8yMS81XCIsXCJwcmljZVN0YXJ0XCI6XCIzNzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM3MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTkxMTIyNTIxOTQ1MjRcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzA2ODc3NDFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4MzMxXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjMzNzksXCJmdWxsTmFtZVwiOlwi0KjQtdC50L0g0K/QvdCwINCu0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTM6NDM6MjIuODY3NDY4XCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NTE0MDAwMDE3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQotC+0LvQvNCw0YfQtdCy0YHQutC40Lkg0YHQtdC70YzRgdC+0LLQtdGCINCX0LXQu9GR0L3QsNGPIDE5NlwiLFwidmlld2VkQXJlYVwiOlwiNTAvNDAvOVwiLFwicHJpY2VTdGFydFwiOlwiNTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjUwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NjAxXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjMzNzksXCJmdWxsTmFtZVwiOlwi0KjQtdC50L0g0K/QvdCwINCu0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQoNC10LrQu9Cw0LzQvdGL0LlcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTY6NTI6MTYuNjE2NTMxXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA3LTI4IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yOCAxNzo1MzowMC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODUxNDAwMDAxOFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQoNC40LzRgdC60L7Qs9C+LdCa0L7RgNGB0LDQutC+0LLQsCAxLdC5IDNcIixcInZpZXdlZEFyZWFcIjpcIjMwLzIwLzZcIixcInByaWNlU3RhcnRcIjpcIjQ4MDBcIixcInByaWNlQ3VycmVudFwiOlwiNDgwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ5OTExMjI1MjE5NDUyOFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyMzM4MVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDgyNTBcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MzM3OSxcImZ1bGxOYW1lXCI6XCLQqNC10LnQvSDQr9C90LAg0K7RgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxMjozMjo1Ni40MjU1OTlcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMTlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0K/QutGD0YjQtdCy0LAgMzlcIixcInZpZXdlZEFyZWFcIjpcIjMzLzI0LzVcIixcInByaWNlU3RhcnRcIjpcIjQwMDBcIixcInByaWNlQ3VycmVudFwiOlwiNDAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NjE4XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjMzNzksXCJmdWxsTmFtZVwiOlwi0KjQtdC50L0g0K/QvdCwINCu0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQoNC10LrQu9Cw0LzQvdGL0LlcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTc6MDE6MzIuMTY4NzYzXCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMjggMTE6MzE6NDYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMjBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JrQvtGB0YLRi9GH0LXQstCwIDM4XCIsXCJ2aWV3ZWRBcmVhXCI6XCIyOS8yMC81XCIsXCJwcmljZVN0YXJ0XCI6XCIzNTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODYyOVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozMzc5LFwiZnVsbE5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE3OjExOjQ5LjIwODIwOVwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODUxNDAwMDAyMlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodC10YDQsNGE0LjQvNC+0LLQuNGH0LAgMTNcIixcInZpZXdlZEFyZWFcIjpcIjUyLzQxLzZcIixcInByaWNlU3RhcnRcIjpcIjMzMDBcIixcInByaWNlQ3VycmVudFwiOjMzMDAsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg2NDVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MzM3OSxcImZ1bGxOYW1lXCI6XCLQqNC10LnQvSDQr9C90LAg0K7RgNGM0LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNzoxODoxMS4wNzAzMTNcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMjRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCh0J3QoiDQrtCx0LjQu9C10Lkg0K7QttC90LDRjyA3MjFcIixcInZpZXdlZEFyZWFcIjpcIjY1LzQzLzlcIixcInByaWNlU3RhcnRcIjpcIjI3MDBcIixcInByaWNlQ3VycmVudFwiOlwiMjcwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ0NzI2XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjMzNzksXCJmdWxsTmFtZVwiOlwi0KjQtdC50L0g0K/QvdCwINCu0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMDMgMTM6NTY6MzAuMTA3NDYwXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA2LTIzIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0yOCAxMjo0ODowNS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODUxNDAwMDAyNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodC10YDQsNGE0LjQvNC+0LLQuNGH0LAgM1wiLFwidmlld2VkQXJlYVwiOlwiNTEvMzYvN1wiLFwicHJpY2VTdGFydFwiOlwiMzY1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIzNjUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk5MTEyMjUyMTk0NTU2XCIsXCJzdGF0dXNcIjpcItCe0YjQuNCx0LrQsFwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcwNjg4MDU4XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODY1M1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozMzc5LFwiZnVsbE5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0KDQtdC60LvQsNC80L3Ri9C5XCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE3OjI2OjE0LjM2MDc5NVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNy0yOCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjggMTc6NDI6MzMuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMjZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JrQvtGC0L7QstGB0LrQvtCz0L4gNDhcIixcInZpZXdlZEFyZWFcIjpcIjMxLzE3LzVcIixcInByaWNlU3RhcnRcIjpcIjQyMDBcIixcInByaWNlQ3VycmVudFwiOlwiNDIwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4Mzg1XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjMzNzksXCJmdWxsTmFtZVwiOlwi0KjQtdC50L0g0K/QvdCwINCu0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTQ6MjA6NTYuNTA0ODg0XCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4NTE0MDAwMDI3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCh0LXRgNCw0YTQuNC80L7QstC40YfQsCA4XCIsXCJ2aWV3ZWRBcmVhXCI6XCI1OC80NS83XCIsXCJwcmljZVN0YXJ0XCI6XCI4NTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjg1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODY1OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozMzc5LFwiZnVsbE5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0KDQtdC60LvQsNC80L3Ri9C5XCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE3OjMxOjMxLjgzNTYzNFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNC0yMiAxNjo1NjoxMS4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMDUgMTQ6MzE6NTUuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMjhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JrQvtGC0L7QstGB0LrQvtCz0L4gNDhcIixcInZpZXdlZEFyZWFcIjpcIjYyLzQzLzZcIixcInByaWNlU3RhcnRcIjpcIjUzMDBcIixcInByaWNlQ3VycmVudFwiOlwiNTMwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk5MTEyMjUyMTk0NTU5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcwNjg4MDg4XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1Mjk0N1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozMzc5LFwiZnVsbE5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTI5IDExOjQ0OjI4Ljc5OTg1MlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNy0yOSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMjggMDk6Mzk6MzguMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMzNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHQvtC70LjQtNCw0YDQvdC+0YHRgtC4IDk50LBcIixcInZpZXdlZEFyZWFcIjpcIjU5LzM5LzdcIixcInByaWNlU3RhcnRcIjpcIjM4MDBcIixcInByaWNlQ3VycmVudFwiOlwiMzgwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk5MTEyMjUyMTk0NTg1XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcwNjg4NzU2XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1OTg2M1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozMzc5LFwiZnVsbE5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTE0IDE2OjQyOjAxLjc2NTk1OVwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODUxNDAwMDAzNFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0KLQvtC70LzQsNGH0LXQstGB0LrQuNC5INGB0LXQu9GM0YHQvtCy0LXRgiDQm9GD0LPQvtCy0LDRjyA2MzdcIixcInZpZXdlZEFyZWFcIjpcIjQ4LzM2LzZcIixcInByaWNlU3RhcnRcIjpcIjc1MDAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI3NTAwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2MDU2OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozMzc5LFwiZnVsbE5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAzLTE4IDE0OjQxOjQ1Ljk2ODU0NVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0wMSAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjEgMTU6NDQ6NTMuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMzVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JLQuNGC0LDQu9C40Y8g0J/QvtGC0YvQu9C40YbRi9C90LAgMTNcIixcInZpZXdlZEFyZWFcIjpcIjQxLzIwLzExXCIsXCJwcmljZVN0YXJ0XCI6XCIzNTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM1MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTkxMTIyNTIxOTQ1ODdcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQxMjM1MDNcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjYyMDQxXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjMzNzksXCJmdWxsTmFtZVwiOlwi0KjQtdC50L0g0K/QvdCwINCu0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDMtMjggMTM6NDc6MzcuODcwNjUzXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA5LTAxIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMSAxNzoxOTo1Ny4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODUxNDAwMDAzNlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0KLQvtC70LzQsNGH0LXQstGB0LrQuNC5INGB0LXQu9GM0YHQvtCy0LXRgiDQodCy0LXRgtC70LDRjyA0OTZcIixcInZpZXdlZEFyZWFcIjpcIjUwLzQwLzlcIixcInByaWNlU3RhcnRcIjpcIjE0NTBcIixcInByaWNlQ3VycmVudFwiOlwiMTQ1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ5OTExMjI1MjE5NDU4OFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzQxMjM2NjFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY2NzcwXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjMzNzksXCJmdWxsTmFtZVwiOlwi0KjQtdC50L0g0K/QvdCwINCu0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMjggMTQ6MTU6NDguMzc4ODUzXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEwLTI4IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yOCAxNzoyNjo1OS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODUxNDAwMDAzN1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQn9C+0LrQsNGC0L3QsNGPIDU1XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzNi8xNS85XCIsXCJwcmljZVN0YXJ0XCI6XCI0NzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQ3MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTkxMTIyNTIxOTQ1ODlcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQxMjQ2NDVcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY2ODE4XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjMzNzksXCJmdWxsTmFtZVwiOlwi0KjQtdC50L0g0K/QvdCwINCu0YDRjNC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMjggMTY6MjM6NDYuNDkzMDgxXCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjggMTY6NDM6NTYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMzhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J3QtdC80LjRgNC+0LLQuNGH0LAt0JTQsNC90YfQtdC90LrQviA0XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0NS8yNi82XCIsXCJwcmljZVN0YXJ0XCI6XCI0MDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3MjIyMlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjozMzc5LFwiZnVsbE5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTA5IDEwOjI4OjA4LjUzNDUwN1wiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0wOSAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMDkgMTQ6MjY6MTIuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTg1MTQwMDAwMzlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCi0L7Qu9C80LDRh9C10LLRgdC60LjQuSDRgdC10LvRjNGB0L7QstC10YIg0KHQstC10YLQu9Cw0Y8gNDE0XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Mi8zNS82XCIsXCJwcmljZVN0YXJ0XCI6XCIxMzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjEzMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTkxMTIyNTIxOTQ1OTFcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjc0NTMyNjgzXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NSxcImZ1bGxOYW1lXCI6XCLQodC+0YDQvtC60LjQvdCwINCY0YDQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MDY2NzAwMDEzNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLQutCwINCc0LjQutGA0L7RgNCw0LnQvtC9IDEwXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0NC8zMC81XCIsXCJwcmljZVN0YXJ0XCI6XCIxNjUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE2NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODE5NVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk1LFwiZnVsbE5hbWVcIjpcItCh0L7RgNC+0LrQuNC90LAg0JjRgNC40L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxMDo1MDo0NC44Mzc3MThcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMTQgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA0LTIxIDE2OjMzOjM2LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUwNjY3MDAwMTU3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCn0LXQvNGB0LrQsNGPIDEyXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1OS80MC83XCIsXCJwcmljZVN0YXJ0XCI6XCI0MDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzUwMTE2MzNcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk1LFwiZnVsbE5hbWVcIjpcItCh0L7RgNC+0LrQuNC90LAg0JjRgNC40L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUwNjY3MDAwMTYwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstC60LAg0JzQuNC60YDQvtGA0LDQudC+0L0gONCxXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxOS8xMC8xXCIsXCJwcmljZVN0YXJ0XCI6XCI4NTBcIixcInByaWNlQ3VycmVudFwiOlwiODUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTcxMzRcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NSxcImZ1bGxOYW1lXCI6XCLQodC+0YDQvtC60LjQvdCwINCY0YDQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDItMjQgMTc6MjE6MjMuNzgwNjQ5XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEyLTI1IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yNSAxNDozNzozNC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MDY2NzAwMDE5MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodC/0L7RgNGC0LjQstC90LDRjyAyM1wiLFwidmlld2VkQXJlYVwiOlwiMzcvMTgvOFwiLFwicHJpY2VTdGFydFwiOlwiMzUwMFwiLFwicHJpY2VDdXJyZW50XCI6MzUwMCxcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQ3NzI1NThcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk1LFwiZnVsbE5hbWVcIjpcItCh0L7RgNC+0LrQuNC90LAg0JjRgNC40L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTA2NjcwMDAxOTJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KHQndCiINCf0LXRh9Cw0YLQvdC40LogMTA40LBcIixcInZpZXdlZEFyZWFcIjpcIjg0Ni4wMFwiLFwicHJpY2VTdGFydFwiOlwiMzQwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM0MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4MTk3XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTUsXCJmdWxsTmFtZVwiOlwi0KHQvtGA0L7QutC40L3QsCDQmNGA0LjQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTEzIDEwOjA2OjA1LjgwMDI2NVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wNC0xNCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCe0YLQutC70L7QvdC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjAgMDg6Mjg6MDYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTA2NjcwMDAxOTRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCe0LHRjCDQntC60YLRj9Cx0YDRjNGB0LrQsNGPIDIvMlwiLFwidmlld2VkQXJlYVwiOlwiMjQxLzE1MC8yNVwiLFwicHJpY2VTdGFydFwiOlwiMTEyMDBcIixcInByaWNlQ3VycmVudFwiOlwiMTEyMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCIzNDA5M1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk1LFwiZnVsbE5hbWVcIjpcItCh0L7RgNC+0LrQuNC90LAg0JjRgNC40L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMi0yOCAxMDoyNzo0OC4yMTgwMjhcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDUtMTcgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQntGC0LrQu9C+0L3QtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTIwIDA4OjI5OjIwLjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUwNjY3MDAwMTk5XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstC60LAg0JfQtdC70LXQvdCw0Y8gMTZcIixcInZpZXdlZEFyZWFcIjpcIjg0LzQ3LzEzXCIsXCJwcmljZVN0YXJ0XCI6XCIzMjAwXCIsXCJwcmljZUN1cnJlbnRcIjozMjUwLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjM0MDk2XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTUsXCJmdWxsTmFtZVwiOlwi0KHQvtGA0L7QutC40L3QsCDQmNGA0LjQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTI4IDEwOjI4OjI5LjA3Mzc0NVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMy0wNi0wNiAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMDYgMTc6NTA6MzAuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTA2NjcwMDAyMDNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JHQvtC70YzQvdC40YfQvdGL0LkgMTTQsFwiLFwidmlld2VkQXJlYVwiOlwiNDcvMzAvNlwiLFwicHJpY2VTdGFydFwiOlwiMjM4MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMzgwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3Mjg4NTg4MzkxNTMwMDg1XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NDc3MjU1OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDgxOThcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NSxcImZ1bGxOYW1lXCI6XCLQodC+0YDQvtC60LjQvdCwINCY0YDQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDItMTMgMTA6MDk6MDUuOTEwNzAxXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA2LTA3IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0wNiAxNjozNDozNi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1MDY2NzAwMDIwM1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQkdC+0LvRjNC90LjRh9C90YvQuSAxNNCwXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Ny8zMC82XCIsXCJwcmljZVN0YXJ0XCI6XCIyMzgwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzODBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzI4ODU4ODM5MTUzMDA4NVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzQ3NzI1NTlcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk1LFwiZnVsbE5hbWVcIjpcItCh0L7RgNC+0LrQuNC90LAg0JjRgNC40L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjUwNjY3MDAwMjEzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQotGD0LvQuNC90YHQutC40Lkg0KHQsNC00L7QstCw0Y8gMTLQsFwiLFwidmlld2VkQXJlYVwiOlwiMzYvMTYvNFwiLFwicHJpY2VTdGFydFwiOlwiNTUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjU1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4MTgyXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTUsXCJmdWxsTmFtZVwiOlwi0KHQvtGA0L7QutC40L3QsCDQmNGA0LjQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTEzIDA5OjQ0OjIwLjU5NDQ4NVwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MDY2NzAwMDIyNlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JHQtdGA0LTRgdC6INCR0LXRgNC00YHQutC40Lkg0YHQsNC90LDRgtC+0YDQuNC5IDQ4XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Ny8yMi8xMlwiLFwicHJpY2VTdGFydFwiOlwiNDg0MFwiLFwicHJpY2VDdXJyZW50XCI6XCI0ODQwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTMzNTFcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NSxcImZ1bGxOYW1lXCI6XCLQodC+0YDQvtC60LjQvdCwINCY0YDQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMzEgMTE6MzY6MDAuNzM2Njg5XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEyLTMwIDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yMCAxMToxNTowNi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MDY2NzAwMDIyOVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQktC70LDQtNC40LzQuNGA0L7QstGB0LrQsNGPIDE0XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0NS8zMy82XCIsXCJwcmljZVN0YXJ0XCI6XCIzOTMwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM5MzBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1NDcxOVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk1LFwiZnVsbE5hbWVcIjpcItCh0L7RgNC+0LrQuNC90LAg0JjRgNC40L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMi0wNyAxMzowMDoyMi4wOTY4MzRcIixcImV4cGlyYXRpb25cIjpcIjIwMjMtMDItMDcgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA0LTI2IDEwOjU5OjU3LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUwNjY3MDAwMjMwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCX0L7RgNCz0LUgMjY3XCIsXCJ2aWV3ZWRBcmVhXCI6XCI2MS8yMy83XCIsXCJwcmljZVN0YXJ0XCI6XCI0NDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQ0MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTcyODg1ODgzOTE1MzAxNzVcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQ3NzI1NjRcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjU2NDkzXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTUsXCJmdWxsTmFtZVwiOlwi0KHQvtGA0L7QutC40L3QsCDQmNGA0LjQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTI0IDExOjM4OjQyLjc1MDczMVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0yNCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjYgMTM6MTU6MzQuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTA2NjcwMDAyMzFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J/QtdGC0YPRhdC+0LLQsCAxMDTQkFwiLFwidmlld2VkQXJlYVwiOlwiNzMvMzAvMjVcIixcInByaWNlU3RhcnRcIjpcIjkwMDBcIixcInByaWNlQ3VycmVudFwiOlwiOTAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzI4ODU4ODM5MTUzMDE3NlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDc3MjU2NlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTcxMTJcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NSxcImZ1bGxOYW1lXCI6XCLQodC+0YDQvtC60LjQvdCwINCY0YDQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDItMjQgMTY6Mzk6MDkuMjI0MzE0XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIzLTAyLTI0IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yNiAxMzo0NTowNi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjUwNjY3MDAwMjMyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQrdC60L4t0LPQvtGA0L7QtNC+0Log0KbQtdC90YLRgNCw0LvRjNC90LDRjyA1OVwiLFwidmlld2VkQXJlYVwiOlwiMTEuMDBcIixcInByaWNlU3RhcnRcIjpcIjE3MFwiLFwicHJpY2VDdXJyZW50XCI6XCIxNzBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTcyODg1ODgzOTE1MzAxNzdcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjc0NzcyNTY3XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2Nzk5OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk1LFwiZnVsbE5hbWVcIjpcItCh0L7RgNC+0LrQuNC90LAg0JjRgNC40L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xMSAxMzo0MDoyMi41ODU1NjVcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMTEgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTExIDE0OjI3OjU0LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUwNjY3MDAwMjM0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCa0L7Qu9GF0LjQtNGB0LrQsNGPIDZcIixcInZpZXdlZEFyZWFcIjpcIjM2LzEyLzE3XCIsXCJwcmljZVN0YXJ0XCI6XCIzODAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM4MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQ3NzI2MTVcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjcwMjE4XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTUsXCJmdWxsTmFtZVwiOlwi0KHQvtGA0L7QutC40L3QsCDQmNGA0LjQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTI3IDEyOjU3OjAyLjU4MTUxNVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMy0wNS0yNyAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMjcgMTQ6NTY6NDQuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTA2NjcwMDAyMzVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0YDQsNGB0L3Ri9C5INCv0YAg0JrRgNCw0YHQvdGL0Lkg0K/RgCAyM1wiLFwidmlld2VkQXJlYVwiOlwiNDUvMzIvNlwiLFwicHJpY2VTdGFydFwiOlwiMjI1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMjUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3Mjg4NTg4MzkxNTMwMTgwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0NzcyNjIyXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI3MzMxMlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoxNTk1LFwiZnVsbE5hbWVcIjpcItCh0L7RgNC+0LrQuNC90LAg0JjRgNC40L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNi0xNyAxMTozNzoyMi43ODI2MjdcIixcImV4cGlyYXRpb25cIjpcIjIwMjMtMDYtMTcgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA2LTE3IDEyOjQyOjA3LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjUwNjY3MDAwMjM3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCc0LjRh9GD0YDQuNC90LAgMzfQsFwiLFwidmlld2VkQXJlYVwiOlwiNDQvMzEvNlwiLFwicHJpY2VTdGFydFwiOlwiNTAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI1MDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3Mjg4NTg4MzkxNTMwMTgyXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc1MDExNjI3XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MTU5NSxcImZ1bGxOYW1lXCI6XCLQodC+0YDQvtC60LjQvdCwINCY0YDQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzY4MDAwMDExOFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQn9C10YLRg9GF0L7QstCwIDE1MFwiLFwidmlld2VkQXJlYVwiOlwiNDMvMTgvMTNcIixcInByaWNlU3RhcnRcIjpcIjI2NTBcIixcInByaWNlQ3VycmVudFwiOlwiMjY1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjY2ODkzXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjE1OTUsXCJmdWxsTmFtZVwiOlwi0KHQvtGA0L7QutC40L3QsCDQmNGA0LjQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA0LTI5IDExOjEyOjI1Ljg2NDAwOFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0xNiAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMTYgMTc6MjU6MjAuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JfQtdC80LXQu9GM0L3Ri9C5INGD0YfQsNGB0YLQvtC6XCIsXCJ0eXBlTmFtZVwiOlwiKNCj0YcuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkyNjAwMDA4OVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiAxOS3RjyAzMjlcIixcInZpZXdlZEFyZWFcIjpcIjQzLzMwLzZcIixcInByaWNlU3RhcnRcIjpcIjE1MDBcIixcInByaWNlQ3VycmVudFwiOlwiMTUwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ3NjExMzQ4MTgwNTMxMlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzQ3NzI2MThcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyMDE1LFwiZnVsbE5hbWVcIjpcItCi0LDQtNC10LLQvtGB0Y/QvSDQk9Cw0LnQuiDQkNC90LTRgNCw0L3QuNC60L7QstC40YdcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU3NDEyMDAwMDE1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCU0LDRh9C90LDRjyA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCI2MS8zOC8xXCIsXCJwcmljZVN0YXJ0XCI6XCI1MDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjUwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjAxNSxcImZ1bGxOYW1lXCI6XCLQotCw0LTQtdCy0L7RgdGP0L0g0JPQsNC50Log0JDQvdC00YDQsNC90LjQutC+0LLQuNGHXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzQxMjAwMDAxNlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQlNCw0YfQvdCw0Y8gNVwiLFwidmlld2VkQXJlYVwiOlwiNjgvMzgvMVwiLFwicHJpY2VTdGFydFwiOlwiNTYwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI1NjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjIwMTUsXCJmdWxsTmFtZVwiOlwi0KLQsNC00LXQstC+0YHRj9C9INCT0LDQudC6INCQ0L3QtNGA0LDQvdC40LrQvtCy0LjRh1wifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JPQsNGA0LDQtlwiLFwidHlwZU5hbWVcIjpcIijQky4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MjU0MDAwMDEyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCU0LDRh9C90LDRjyA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNC8wLzBcIixcInByaWNlU3RhcnRcIjpcIjY1MDA1MFwiLFwicHJpY2VDdXJyZW50XCI6XCI2NTAwNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjAxNSxcImZ1bGxOYW1lXCI6XCLQotCw0LTQtdCy0L7RgdGP0L0g0JPQsNC50Log0JDQvdC00YDQsNC90LjQutC+0LLQuNGHXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQk9Cw0YDQsNC2XCIsXCJ0eXBlTmFtZVwiOlwiKNCTLilcIixcInJlcU51bWJlclwiOlwiNTgyNTQwMDAwMTZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JTQsNGH0L3QsNGPIDVcIixcInZpZXdlZEFyZWFcIjpcIjE0LzAvMFwiLFwicHJpY2VTdGFydFwiOlwiNjUwMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjY1MDM1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyMDE1LFwiZnVsbE5hbWVcIjpcItCi0LDQtNC10LLQvtGB0Y/QvSDQk9Cw0LnQuiDQkNC90LTRgNCw0L3QuNC60L7QstC40YdcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCT0LDRgNCw0LZcIixcInR5cGVOYW1lXCI6XCIo0JMuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODI1NDAwMDAyMVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQlNCw0YfQvdCw0Y8gNVwiLFwidmlld2VkQXJlYVwiOlwiMTQvMC8wXCIsXCJwcmljZVN0YXJ0XCI6XCI2MTg1MDBcIixcInByaWNlQ3VycmVudFwiOlwiNjE4NTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjIwMTUsXCJmdWxsTmFtZVwiOlwi0KLQsNC00LXQstC+0YHRj9C9INCT0LDQudC6INCQ0L3QtNGA0LDQvdC40LrQvtCy0LjRh1wifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JPQsNGA0LDQtlwiLFwidHlwZU5hbWVcIjpcIijQky4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MjU0MDAwMDI0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCU0LDRh9C90LDRjyA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNy8wLzBcIixcInByaWNlU3RhcnRcIjpcIjcwMDAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI3MDAwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjAxNSxcImZ1bGxOYW1lXCI6XCLQotCw0LTQtdCy0L7RgdGP0L0g0JPQsNC50Log0JDQvdC00YDQsNC90LjQutC+0LLQuNGHXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQk9Cw0YDQsNC2XCIsXCJ0eXBlTmFtZVwiOlwiKNCTLilcIixcInJlcU51bWJlclwiOlwiNTgyNTQwMDAwMzhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JTQsNGH0L3QsNGPIDVcIixcInZpZXdlZEFyZWFcIjpcIjI3LzAvMFwiLFwicHJpY2VTdGFydFwiOlwiNzQwNjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjc0MDYwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyMDE1LFwiZnVsbE5hbWVcIjpcItCi0LDQtNC10LLQvtGB0Y/QvSDQk9Cw0LnQuiDQkNC90LTRgNCw0L3QuNC60L7QstC40YdcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCT0LDRgNCw0LZcIixcInR5cGVOYW1lXCI6XCIo0JMuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODI1NDAwMDA0MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQlNCw0YfQvdCw0Y8gNVwiLFwidmlld2VkQXJlYVwiOlwiMTMvMC8wXCIsXCJwcmljZVN0YXJ0XCI6XCI3NzdcIixcInByaWNlQ3VycmVudFwiOlwiNzc3XCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjIwMTUsXCJmdWxsTmFtZVwiOlwi0KLQsNC00LXQstC+0YHRj9C9INCT0LDQudC6INCQ0L3QtNGA0LDQvdC40LrQvtCy0LjRh1wifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JPQsNGA0LDQtlwiLFwidHlwZU5hbWVcIjpcIijQky4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MjU0MDAwMDQ3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCU0LDRh9C90LDRjyA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNC8wLzBcIixcInByaWNlU3RhcnRcIjpcIjY2NlwiLFwicHJpY2VDdXJyZW50XCI6XCI2NjZcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjAxNSxcImZ1bGxOYW1lXCI6XCLQotCw0LTQtdCy0L7RgdGP0L0g0JPQsNC50Log0JDQvdC00YDQsNC90LjQutC+0LLQuNGHXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQk9Cw0YDQsNC2XCIsXCJ0eXBlTmFtZVwiOlwiKNCTLilcIixcInJlcU51bWJlclwiOlwiNTgyNTQwMDAwNTRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JTQsNGH0L3QsNGPIDVcIixcInZpZXdlZEFyZWFcIjpcIjI3LzAvMFwiLFwicHJpY2VTdGFydFwiOlwiNzgwMDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjc4MDAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyMDE1LFwiZnVsbE5hbWVcIjpcItCi0LDQtNC10LLQvtGB0Y/QvSDQk9Cw0LnQuiDQkNC90LTRgNCw0L3QuNC60L7QstC40YdcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MjU0MDAwMDY2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCU0LDRh9C90LDRjyA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzNS8xOS83XCIsXCJwcmljZVN0YXJ0XCI6XCIzNDUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM0NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6NTQsXCJmdWxsTmFtZVwiOlwi0JLQuNC90L3QuNC6INCd0LDRgtCw0LvRjNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCIyNjQwMDAwNzhcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JfQvtGA0LPQtSA5OFwiLFwidmlld2VkQXJlYVwiOlwiMzcvMjAvMVwiLFwicHJpY2VTdGFydFwiOlwiMzAwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjU0LFwiZnVsbE5hbWVcIjpcItCS0LjQvdC90LjQuiDQndCw0YLQsNC70YzRjyDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0J/QtdGA0LXRg9GB0YLRg9C/0LrQsCDQlNCU0KNcIixcInR5cGVOYW1lXCI6XCIo0J3QvtCyLilcIixcInJlcU51bWJlclwiOlwiNTY3MDAwMDIzNzFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQuNGC0L7QstCwIDI1My83XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0My8xNy85XCIsXCJwcmljZVN0YXJ0XCI6XCIyMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6NTQsXCJmdWxsTmFtZVwiOlwi0JLQuNC90L3QuNC6INCd0LDRgtCw0LvRjNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQn9C10YDQtdGD0YHRgtGD0L/QutCwINCU0JTQo1wiLFwidHlwZU5hbWVcIjpcIijQndC+0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1Nzg0NzAwMDA3N1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMjUzXCIsXCJ2aWV3ZWRBcmVhXCI6XCIyNC8yMC8xXCIsXCJwcmljZVN0YXJ0XCI6XCIxMzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjEzMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6NTQsXCJmdWxsTmFtZVwiOlwi0JLQuNC90L3QuNC6INCd0LDRgtCw0LvRjNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQn9C10YDQtdGD0YHRgtGD0L/QutCwINCU0JTQo1wiLFwidHlwZU5hbWVcIjpcIijQndC+0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NzkzNjAwMDI1NFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMjUzXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzOC8xNS8xMFwiLFwicHJpY2VTdGFydFwiOlwiMTkzMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxOTMwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiOTUyNDkyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQntC60YLRj9Cx0YDRjNGB0LrQuNC5INCU0LDRh9C90LDRjyAqXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNTcvMTE1LzE1XCIsXCJwcmljZVN0YXJ0XCI6XCIzNjAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM2MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCIzNDEyNlwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNC0xOSAxNjozMjoxMC4zMTI2NDRcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTItMzAgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA0LTIwIDE1OjI2OjA0LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjkwMTQwMjJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0YPQtNGA0Y/RiNC+0LLRgdC60LjQuSDQntC60YLRj9Cx0YDRjNGB0LrQsNGPIDEyXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1OC8zOS83XCIsXCJwcmljZVN0YXJ0XCI6XCIzNzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM3MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiMTQ0MDAwMTU1MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLQutCwINCX0LXQu9C10L3QsNGPIDE2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI3MC8zNS8xMVwiLFwicHJpY2VTdGFydFwiOlwiMjQwNVwiLFwicHJpY2VDdXJyZW50XCI6XCIyNDA1XCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiMTQ5NjAwMDI3OFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQktC40YjQvdC10LLQsNGPIDhcIixcInZpZXdlZEFyZWFcIjpcIjQwMC8yMDAvMThcIixcInByaWNlU3RhcnRcIjpcIjIxOTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIxOTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTA2NjcwMDAyMTBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0YDQuNCy0L7QtNCw0L3QvtCy0LrQsCDQl9C10LvQtdC90LDRjyAxNlwiLFwidmlld2VkQXJlYVwiOlwiNjIvMjgvOVwiLFwicHJpY2VTdGFydFwiOlwiMjUwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIyNTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0J/QtdGA0LXRg9GB0YLRg9C/0LrQsCDQlNCU0KNcIixcInR5cGVOYW1lXCI6XCIo0J3QvtCyLilcIixcInJlcU51bWJlclwiOlwiNTE4MDMwMDEyMzlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0YDQuNCy0L7QtNCw0L3QvtCy0LrQsCDQl9C10LvQtdC90LDRjyAyMTRcIixcInZpZXdlZEFyZWFcIjpcIjQ2LzE1LzE1XCIsXCJwcmljZVN0YXJ0XCI6XCIxNDY2XCIsXCJwcmljZUN1cnJlbnRcIjpcIjE0NjZcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1MTgwMzAwMzYyNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRg9C50LHRi9GI0LXQsiA4LdC5IDlcIixcInZpZXdlZEFyZWFcIjpcIjQzLzM0LzZcIixcInByaWNlU3RhcnRcIjpcIjE0MDBcIixcInByaWNlQ3VycmVudFwiOlwiMTQwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjUyNTAwMDAzMTMxXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQp9C10YDQvdCw0LrQvtCy0L4g0J/RgNC40LzQvtGA0YHQutCw0Y8gNVwiLFwidmlld2VkQXJlYVwiOlwiNzUvMC8wXCIsXCJwcmljZVN0YXJ0XCI6XCIyMDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1Mjg5MDAwMDI0MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JzQsNGA0YPRgdC40L3QviDQn9C10YDQstC+0LzQsNC50YHQutC40LkgNFwiLFwidmlld2VkQXJlYVwiOlwiNDIvMjIvN1wiLFwicHJpY2VTdGFydFwiOlwiMjUwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIyNTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTMzODgwMDI0ODJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCg0YvQsdCw0YfQuNC5INCS0LXRgtC10YDQsNC90L7QsiAxXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0MC8wLzBcIixcInByaWNlU3RhcnRcIjpcIjcwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI3MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjUzMzg4MDAyNjk3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQoNGL0LHQsNGH0LjQuSDQktC10YLQtdGA0LDQvdC+0LIgMVwiLFwidmlld2VkQXJlYVwiOlwiOS4wMFwiLFwicHJpY2VTdGFydFwiOlwiMzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTMzODgwMDI4NTRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCc0L7RiNC60L7QstC+INCR0LXRgNC10LfQvtCy0LDRjyAxXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMC4wMFwiLFwicHJpY2VTdGFydFwiOlwiNzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjc1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTM0NDYwMDUxNDVcIixcInZpZXdlZEFkZHJlc3NcIjpcItCe0YDQtNGL0L3RgdC60L7QtSDQptC10L3RgtGA0LDQu9GM0L3QsNGPICpcIixcInZpZXdlZEFyZWFcIjpcIjcuMDBcIixcInByaWNlU3RhcnRcIjpcIjQzMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0MzBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1MzQ0NjAwNTcwN1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotGD0LvRjNGB0LrQsNGPICpcIixcInZpZXdlZEFyZWFcIjpcIjIwLzAvMFwiLFwicHJpY2VTdGFydFwiOlwiOTUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjk1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0MjU5MDA1OTgyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LDRgdC90L7QvtCx0YHQuiAyLdC5IDFcIixcInZpZXdlZEFyZWFcIjpcIjI0MC8wLzBcIixcInByaWNlU3RhcnRcIjpcIjYwMDBcIixcInByaWNlQ3VycmVudFwiOlwiNjAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0NzM3MDAwMTEzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCh0LjQsdC40YDRj9C60L7Qsi3Qk9Cy0LDRgNC00LXQudGG0LXQsiA0NC83XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0My8xNi8xMFwiLFwicHJpY2VTdGFydFwiOlwiMzE1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMTUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg2MzdcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTc6MTQ6MjEuNjcwMjM4XCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0NzM3MDAwMTM4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstC60LAg0JfQtdC70LXQvdCw0Y8gMTZcIixcInZpZXdlZEFyZWFcIjpcIjU5LzI4LzEwXCIsXCJwcmljZVN0YXJ0XCI6XCIyNDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI0MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDg4OTAwMDAzNlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrQvtC70YvQstCw0L3RjCDQn9GA0LjRhdC+0LTRgdC60LDRjyA3OFwiLFwidmlld2VkQXJlYVwiOlwiNDIvMjUvOVwiLFwicHJpY2VTdGFydFwiOlwiNTUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjU1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0ODg5MDAwMDQ4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCh0LjRgNC10L3QtdCy0LDRjyAxOVwiLFwidmlld2VkQXJlYVwiOlwiMzAvMTUvNlwiLFwicHJpY2VTdGFydFwiOlwiMzgwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM4MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0ODg5MDAwMDUwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCR0LDQu9C70LDRgdGC0L3Ri9C5IDEt0LkgMVwiLFwidmlld2VkQXJlYVwiOlwiNjEvMzAvOVwiLFwicHJpY2VTdGFydFwiOlwiMzczMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzNzMwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQ4ODkwMDAwNTJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCf0YDQvtC70LXRgtCw0YDRgdC60LjQuSDQqNC40YDRj9C10LLQsCAxM1wiLFwidmlld2VkQXJlYVwiOlwiNDMvMjUvOFwiLFwicHJpY2VTdGFydFwiOlwiNDUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQ1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0ODg5MDAwMDcxXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0YPQu9C40L3RgdC60L7QtSDQt9Cw0YDQtdGH0YzQtSAxMjdcIixcInZpZXdlZEFyZWFcIjpcIjE1MC85MC8xMFwiLFwicHJpY2VTdGFydFwiOlwiMzkwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzOTAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTQ4ODkwMDAwNzJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCe0YDQtNGL0L3RgdC60L7QtSDQoNC10LLQvtC70Y7RhtC40LggNzRcIixcInZpZXdlZEFyZWFcIjpcIjYzLzUwLzdcIixcInByaWNlU3RhcnRcIjpcIjE5OTBcIixcInByaWNlQ3VycmVudFwiOlwiMTk5MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0ODg5MDAwMDc2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0YPQu9C40L3RgdC60L7QtSDQt9Cw0YDQtdGH0YzQtSAxMjdcIixcInZpZXdlZEFyZWFcIjpcIjk0LzY1LzEyXCIsXCJwcmljZVN0YXJ0XCI6XCIyMzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1NDg4OTAwMDA4NFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0YvQuSDQqNCw0YDQsNC/INCT0L7QstC+0YDRg9GF0LjQvdCwIDI3XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNzAvNjAvMTJcIixcInByaWNlU3RhcnRcIjpcIjM4MDBcIixcInByaWNlQ3VycmVudFwiOlwiMzgwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0ODg5MDAwMDg3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCv0LPQvtC00LjQvdGB0LrQsNGPIDQ2LzFcIixcInZpZXdlZEFyZWFcIjpcIjQ1LzMwLzhcIixcInByaWNlU3RhcnRcIjpcIjIyMDBcIixcInByaWNlQ3VycmVudFwiOlwiMjIwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCU0L7QvFwiLFwidHlwZU5hbWVcIjpcIijQlC4pXCIsXCJyZXFOdW1iZXJcIjpcIjU0ODg5MDAwMTAwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQnNCw0YDRg9GB0LjQvdC+INCh0LvQsNCy0Y/QvdGB0LrQsNGPIDdcIixcInZpZXdlZEFyZWFcIjpcIjEwNS85OS8xMlwiLFwicHJpY2VTdGFydFwiOlwiMzMwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMzAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTQ4ODkwMDAxMDJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCh0J3QoiDQodC+0YHQvdCwINCh0J3QoiDQodC+0YHQvdCwIDEwNFwiLFwidmlld2VkQXJlYVwiOlwiOTAvODAvMTJcIixcInByaWNlU3RhcnRcIjpcIjM2NjBcIixcInByaWNlQ3VycmVudFwiOlwiMzY2MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTQ5MzIwMDA3NjBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCv0YDQutC+0LLQviDQkdC10YDQtdCz0L7QstCw0Y8gMVwiLFwidmlld2VkQXJlYVwiOlwiMTAuMDBcIixcInByaWNlU3RhcnRcIjpcIjIzNVwiLFwicHJpY2VDdXJyZW50XCI6XCIyMzVcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NTA5NjAwMDI2MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodCy0Y/Qt9C40YHRgtC+0LIgMTU0XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0MC8yMC8xMFwiLFwicHJpY2VTdGFydFwiOlwiMzMwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMzAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTUzNDEwMDAwMDNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCg0YvQsdCw0YfQuNC5INCS0LXRgtC10YDQsNC90L7QsiA0XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzNS8wLzBcIixcInByaWNlU3RhcnRcIjpcIjY1MFwiLFwicHJpY2VDdXJyZW50XCI6XCI2NTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1NTM0MTAwMDA5OVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0KfQsNC90Ysg0JvQvtC80L7QvdC+0YHQvtCy0LAgM1wiLFwidmlld2VkQXJlYVwiOlwiNTAvMzYvOVwiLFwicHJpY2VTdGFydFwiOlwiNDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU1MzQxMDAwMTIzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LjRgtC+0LLQsCAzOVwiLFwidmlld2VkQXJlYVwiOlwiNDQvMzEvNVwiLFwicHJpY2VTdGFydFwiOlwiMjU2MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyNTYwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiMzQwODhcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTM6MTg6NTEuNjYyOTEwXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEyLTI3IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0yNyAxMDo1NzoxNi4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjU1MzQxMDAwMTY0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCS0LXRgtC10YDQsNC9LTEgMjhcIixcInZpZXdlZEFyZWFcIjpcIjcuMTNcIixcInByaWNlU3RhcnRcIjpcIjMwMFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0MTgxNjc0Nzg5NzAwMzVcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjcwNjg2OTM2XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjU1MzQxMDAwMTY2XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQnNCw0LnRgdC60LjQuSDQnNCw0LnRgdC60LjQuSA3NTVcIixcInZpZXdlZEFyZWFcIjpcIjYzNjAuMDBcIixcInByaWNlU3RhcnRcIjpcIjc0MFwiLFwicHJpY2VDdXJyZW50XCI6XCI3NDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQxODE2NzQ3ODk3MDAzN1wiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzA2ODczOTZcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU1NTk5MDAyOTc4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LjRgtC+0LLQsCAyNTMvM1wiLFwidmlld2VkQXJlYVwiOlwiNDIvMS8xXCIsXCJwcmljZVN0YXJ0XCI6XCIzNDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjM0MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtC+0LzQvdCw0YLQsFwiLFwidHlwZU5hbWVcIjpcIijQmtC+0LwuKVwiLFwicmVxTnVtYmVyXCI6XCI1NjcwMDAwMjEzMlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQl9Cw0LHQsNC70YPQtdCy0LAgNzRcIixcInZpZXdlZEFyZWFcIjpcIjIwLzEvMVwiLFwicHJpY2VTdGFydFwiOlwiODUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjg1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU2NzAwMDAyMzEzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LjRgtC+0LLQsCAyNTIvMlwiLFwidmlld2VkQXJlYVwiOlwiNDMvMTcvMTRcIixcInByaWNlU3RhcnRcIjpcIjMzMDBcIixcInByaWNlQ3VycmVudFwiOlwiMzMwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU3MDM2MDAxMzQwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LjRgtC+0LLQsCAyMzYvMlwiLFwidmlld2VkQXJlYVwiOlwiNTUvMzEvOVwiLFwicHJpY2VTdGFydFwiOlwiNDcwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0NzAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDgyNzVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQoNC10LrQu9Cw0LzQvdGL0LlcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTM6MDQ6NDAuNDk2MTczXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA2LTI3IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMiAxNTo1MTowMC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDAwM1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQktC10YDRgtC60L7QstGB0LrQsNGPIDQwXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1NS8yOS8xMFwiLFwicHJpY2VTdGFydFwiOlwiNDQwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI0NDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk0OTI5NDQ3MzQ1OTM5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTIzMjcxXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCIzNDExN1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0yMCAxMDo0NzoxMy4wMjE2NDdcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQvtC80L3QsNGC0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQvtC8LilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAwMDRcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KLQuNGC0L7QstCwIDM0XCIsXCJ2aWV3ZWRBcmVhXCI6XCI4Mi8xMC80XCIsXCJwcmljZVN0YXJ0XCI6XCI4NTBcIixcInByaWNlQ3VycmVudFwiOlwiODUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAwMDlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KDQuNC80YHQutC+0LPQvi3QmtC+0YDRgdCw0LrQvtCy0LAgNDZcIixcInZpZXdlZEFyZWFcIjpcIjI4NC8xMDQvMTlcIixcInByaWNlU3RhcnRcIjpcIjE4MDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjE4MDAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDgzMzhcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTM6NDY6MDYuNzEyODg3XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTExLTE4IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0xNiAxNjoyNDo0OS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDE4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQn9C40YfRg9Cz0L7QstC+INC80L7RgNC1INCu0LbQvdGL0Lkg0LHRgNC40LcgOFwiLFwidmlld2VkQXJlYVwiOlwiMTUuMDBcIixcInByaWNlU3RhcnRcIjpcIjk2MFwiLFwicHJpY2VDdXJyZW50XCI6XCI5NjBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTQ5Mjk0NDczNDU5NzVcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjcwNjg2Njk4XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDAyNFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JzQvtGI0LrQvtCy0L4g0JfQsNC/0LDQtNC90LDRjyAxNVwiLFwidmlld2VkQXJlYVwiOlwiNTgvMzkvOFwiLFwicHJpY2VTdGFydFwiOlwiMTIyMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxMjIwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAwMjdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J3QtdC80LjRgNC+0LLQuNGH0LAt0JTQsNC90YfQtdC90LrQviAyNC8zXCIsXCJ2aWV3ZWRBcmVhXCI6XCI0NS8zMS82XCIsXCJwcmljZVN0YXJ0XCI6XCIyOTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI5MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDAyOVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J7RgNC00YvQvdGB0LrQvtC1INCS0LjRiNC90LXQstCw0Y8gNzBcIixcInZpZXdlZEFyZWFcIjpcIjEzMC85MC8yMFwiLFwicHJpY2VTdGFydFwiOlwiMjE4MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMTgwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiMzQxMjVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDYtMDkgMTA6MzA6MjguNTEwNjAwXCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDMxXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQktC10YDRhS3QotGD0LvQsCDQltC40LvQvNCw0YHRgdC40LIgMTJcIixcInZpZXdlZEFyZWFcIjpcIjY0LzM5LzEyXCIsXCJwcmljZVN0YXJ0XCI6XCIzMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDA0MFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLQutCwINCX0LXQu9C10L3QsNGPIDE2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0MS8xNC8xMlwiLFwicHJpY2VTdGFydFwiOlwiMTcxMFwiLFwicHJpY2VDdXJyZW50XCI6XCIxNzEwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg1NDlcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTY6MTY6MDUuODAwODA1XCIsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDUwXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCS0LXRgNGC0LrQvtCy0YHQutCw0Y8gMzdcIixcInZpZXdlZEFyZWFcIjpcIjM5LzE3LzZcIixcInByaWNlU3RhcnRcIjpcIjI5NTBcIixcInByaWNlQ3VycmVudFwiOlwiMjk1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDU1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQkdCw0YDQsNCx0LjQvdGB0Log0JDRjdGA0L7Qv9C+0YDRgiA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMy8yMi8xMFwiLFwicHJpY2VTdGFydFwiOlwiODUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjg1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NjQ0XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE3OjE3OjU1LjE5NTI5MFwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDA1N1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLQutCwINCX0LXQu9C10L3QsNGPIDE2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI2MS8zMC8xMlwiLFwicHJpY2VTdGFydFwiOlwiMjE3MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMTcwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JfQtdC80LXQu9GM0L3Ri9C5INGD0YfQsNGB0YLQvtC6XCIsXCJ0eXBlTmFtZVwiOlwiKNCj0YcuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDA1OFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JvQtdC90LjQvdGB0LrQvtC1INCc0L7RgNGB0LrQvtC1IDcwXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMC4wMFwiLFwicHJpY2VTdGFydFwiOlwiMjE4MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMTgwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg1NzBcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTY6MzE6MzguNjgwNjAwXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIzLTA0LTI0IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yMiAxNzo0MDo0NS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDU5XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQm9C10L3QuNC90YHQutC+0LUg0KHQndCiINCc0L7RgNGB0LrQvtC1IDcwXCIsXCJ2aWV3ZWRBcmVhXCI6XCIxMC4wMFwiLFwicHJpY2VTdGFydFwiOlwiMzI3MFwiLFwicHJpY2VDdXJyZW50XCI6XCIzMjcwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk0OTI5NDQ3MzQ2MTAwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3NDEyMzM0NlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JTQvtC8XCIsXCJ0eXBlTmFtZVwiOlwiKNCULilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAwNjBcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0LogMi3RjyDQk9GN0YHRgdGC0YDQvtC10LLRgdC60LDRjyA4XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNDUvMC8wXCIsXCJwcmljZVN0YXJ0XCI6XCI0NzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjQ3MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDA2M1wiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQkNC80YPRgNGB0LrQuNC5IDEt0LkgMjFcIixcInZpZXdlZEFyZWFcIjpcIjg5LzAvMFwiLFwicHJpY2VTdGFydFwiOlwiNTgwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI1ODAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAwNjdcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J/QsNGA0YXQvtC80LXQvdC60L4gMTTQkFwiLFwidmlld2VkQXJlYVwiOlwiOTUvNjcvOVwiLFwicHJpY2VTdGFydFwiOlwiNTIwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI1MjAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg1MjFcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTU6NTk6MzEuNjQxNjU1XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTExLTE2IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0xNiAxMzozMjo0NS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDA2OFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQkdC40LnRgdC60LDRjyA0NFwiLFwidmlld2VkQXJlYVwiOlwiMTE4LzEwMC8xMlwiLFwicHJpY2VTdGFydFwiOlwiODUyMFwiLFwicHJpY2VDdXJyZW50XCI6XCI4NTIwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk0OTI5NDQ3MzQ2MTMwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL3N1YnVyYmFuLzI3MDY4NzY3OVwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAwNzFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0J3QtdC80LjRgNC+0LLQuNGH0LAt0JTQsNC90YfQtdC90LrQviAzMC8xXCIsXCJ2aWV3ZWRBcmVhXCI6XCIzMy8xNi82XCIsXCJwcmljZVN0YXJ0XCI6XCIyOTkwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjI5OTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODY0OFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxNzoyMToxMy40MDIyNThcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDgtMzEgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTMwIDE2OjA3OjU5LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDc1XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstC60LAg0JfQtdC70LXQvdCw0Y8gMTZcIixcInZpZXdlZEFyZWFcIjpcIjg0LzQ2LzEzXCIsXCJwcmljZVN0YXJ0XCI6XCIzMTAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjMxMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTQ5Mjk0NDczNDYxNThcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzA2ODc3MzJcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjQ4NTI5XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTAxLTE0IDE2OjA0OjE1Ljc3MzY5OVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOC0xNiAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMTYgMTI6MDA6NDcuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAwNzZcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KTQuNC70LDRgtC+0LLQsCAxMlwiLFwidmlld2VkQXJlYVwiOlwiNjIvNDgvN1wiLFwicHJpY2VTdGFydFwiOlwiMzk5MFwiLFwicHJpY2VDdXJyZW50XCI6XCIzOTkwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk0OTI5NDQ3MzQ2MTU5XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjcwNjg3OTY0XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1MzkyMFwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMi0wMSAxNzo0ODozMy40NDIxNjBcIixcImV4cGlyYXRpb25cIjpcIjIwMjMtMDEtMzEgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA0LTI2IDEwOjQ1OjEyLjAwMDAwMFwifSxcInR5cGVcIjpcItCX0LXQvNC10LvRjNC90YvQuSDRg9GH0LDRgdGC0L7QulwiLFwidHlwZU5hbWVcIjpcIijQo9GHLilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAwODFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCh0J3QoiDQmtC70LXQstC10YAg0JvQsNC90LTQsNGDIDE5MzVcIixcInZpZXdlZEFyZWFcIjpcIjguMzBcIixcInByaWNlU3RhcnRcIjpcIjIwMDBcIixcInByaWNlQ3VycmVudFwiOlwiMjAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ5NDkyOTQ0NzM0NjE4NVwiLFwic3RhdHVzXCI6XCLQntGI0LjQsdC60LBcIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9zdWJ1cmJhbi8yNzA2ODg4MjRcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjU0Njk3XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTAyLTA3IDExOjU1OjA2LjMzNjA4NVwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDA4MlwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLQutCwINCX0LXQu9GR0L3QsNGPIDE2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Mi8xNS8xNVwiLFwicHJpY2VTdGFydFwiOlwiMTg1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIxODUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNTUxNzdcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDItMTAgMTA6MTE6MjEuOTcwNzIxXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA4LTEwIDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yNiAxMToyNzo1NS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQl9C10LzQtdC70YzQvdGL0Lkg0YPRh9Cw0YHRgtC+0LpcIixcInR5cGVOYW1lXCI6XCIo0KPRhy4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDgzXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtC70LXQstC10YAg0JvQsNC90LTQsNGDIDFcIixcInZpZXdlZEFyZWFcIjpcIjguMzRcIixcInByaWNlU3RhcnRcIjpcIjY3MFwiLFwicHJpY2VDdXJyZW50XCI6XCI2NzBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTQ5Mjk0NDczNDYxODdcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvc3VidXJiYW4vMjcwNjg4OTQxXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI1OTIyOVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMy0xMCAxNToyNjoyMi4zNzM2OTdcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMDQtMTUgMTI6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQntGC0LrQu9C+0L3QtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTA1IDE0OjUyOjI0LjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDg4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQmtGA0LjQstC+0LTQsNC90L7QstC60LAg0JfQtdC70ZHQvdCw0Y8gMTZcIixcInZpZXdlZEFyZWFcIjpcIjY2LzM0LzExXCIsXCJwcmljZVN0YXJ0XCI6XCIyMzkwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzOTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDA4OVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRg9C00YDRj9GI0L7QstGB0LrQuNC5INCe0LrRgtGP0LHRgNGM0YHQutCw0Y8gMTJcIixcInZpZXdlZEFyZWFcIjpcIjU4LzM5LzdcIixcInByaWNlU3RhcnRcIjpcIjM3MDBcIixcInByaWNlQ3VycmVudFwiOlwiMzcwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjYzNDM0XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA0LTA1IDE1OjA5OjE3Ljk3NjU2NVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMy0wNC0wNCAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjIgMDk6MzI6MzUuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JPQsNGA0LDQtlwiLFwidHlwZU5hbWVcIjpcIijQky4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDkyXCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCU0LDRh9C90LDRjyA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNC8wLzBcIixcInByaWNlU3RhcnRcIjpcIjY3MFwiLFwicHJpY2VDdXJyZW50XCI6XCI2NzBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTQ5Mjk0NDczNDYyMTdcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvY29tbWVyY2lhbC8yNzQxMjM5MjNcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjYzNTA3XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA0LTA2IDA5OjMzOjI4LjE2OTE2MVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMy0wNC0wNyAxMjowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDQtMjIgMTA6MTI6MDYuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JPQsNGA0LDQtlwiLFwidHlwZU5hbWVcIjpcIijQky4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMDk0XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCU0LDRh9C90LDRjyA1XCIsXCJ2aWV3ZWRBcmVhXCI6XCIxNi8wLzBcIixcInByaWNlU3RhcnRcIjpcIjcwMFwiLFwicHJpY2VDdXJyZW50XCI6XCI3MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ5NDkyOTQ0NzM0NjIxOVwiLFwic3RhdHVzXCI6XCLQntGI0LjQsdC60LBcIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9jb21tZXJjaWFsLzI3NTExMjY1OFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNjUzMzlcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDQtMTkgMTQ6MTk6MDUuOTQ4NzU4XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEwLTI1IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNC0yNSAxMjo0NDoyMy4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDA5NVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLQutCwINCX0LXQu9GR0L3QsNGPIDE2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI0Mi8xNS8xNlwiLFwicHJpY2VTdGFydFwiOlwiMjE1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyMTUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk0OTI5NDQ3MzQ2MjIwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTI0NDU3XCIsXCJzdGF0dXNcIjpcItCe0YjQuNCx0LrQsFwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2NTczMVwiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNC0yMSAxNToyMjo0MC45NzMzODZcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTAtMjEgMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA0LTIyIDA1OjQwOjUzLjAwMDAwMFwifSxcInR5cGVcIjpcItCa0LLQsNGA0YLQuNGA0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMTA3XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCf0LDRgNGF0L7QvNC10L3QutC+IDEyNFwiLFwidmlld2VkQXJlYVwiOlwiNTkvMzkvOFwiLFwicHJpY2VTdGFydFwiOlwiNDQ1MFwiLFwicHJpY2VDdXJyZW50XCI6XCI0NDUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0MTI0NDE2XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI2ODk5N1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCt0LrRgdC60LvRjtC30LjQslwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wNS0xOCAxMzoyNToxOC42Mjg0ODdcIixcImV4cGlyYXRpb25cIjpcIjIwMjItMTEtMTggMDA6MDA6MDAuMDAwMDAwXCIsXCJtb2RlcmF0aW9uXCI6XCLQn9C+0LTRgtCy0LXRgNC20LTQtdC90L5cIixcIm1vZGVyYXRpb25EYXRlXCI6XCIyMDIyLTA1LTE4IDE0OjU3OjU0LjAwMDAwMFwifSxcInR5cGVcIjpcItCf0LXRgNC10YPRgdGC0YPQv9C60LAg0JTQlNCjXCIsXCJ0eXBlTmFtZVwiOlwiKNCd0L7Qsi4pXCIsXCJyZXFOdW1iZXJcIjpcIjU4MDQzMDAwMTA4XCIsXCJ2aWV3ZWRBZGRyZXNzXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC6INCi0LjRgtC+0LLQsCA4MlwiLFwidmlld2VkQXJlYVwiOlwiMjkvMTYvNlwiLFwicHJpY2VTdGFydFwiOlwiMzY5MFwiLFwicHJpY2VDdXJyZW50XCI6XCIzNjkwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk0OTI5NDQ3MzQ2OTA1XCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjcwMDgwXCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA1LTI2IDE0OjAxOjA2LjA5ODM2OVwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMS0zMCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDUtMzEgMTE6MDg6MTkuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAxMDlcIixcInZpZXdlZEFkZHJlc3NcIjpcItCa0YDQuNCy0L7QtNCw0L3QvtCy0LrQsCDQl9C10LvRkdC90LDRjyAxNlwiLFwidmlld2VkQXJlYVwiOlwiNjYvMzQvMTFcIixcInByaWNlU3RhcnRcIjpcIjI2MDBcIixcInByaWNlQ3VycmVudFwiOlwiMjYwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCaINGA0LDQt9C80LXRidC10L3QuNGOXCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6XCJodHRwczovL3JlYWx0eS55YW5kZXgucnUvb2ZmZXIvNjAxNzQ5NDkyOTQ0NzM0NjkwNlwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmNpYW4ucnUvc2FsZS9mbGF0LzI3NDEyNjMzMFwiLFwic3RhdHVzXCI6XCLQntC/0YPQsdC70LjQutC+0LLQsNC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNzE4NTVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDYtMDcgMTQ6NTc6NDEuNzQxNTkzXCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTEyLTA2IDAwOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J/QvtC00YLQstC10YDQttC00LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNi0wNyAxNTozODowOC4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQlNC+0LxcIixcInR5cGVOYW1lXCI6XCIo0JQuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA0MzAwMDExMFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodGC0LXQv9C90LDRjyAyMTVcIixcInZpZXdlZEFyZWFcIjpcIjM3My8zNTAvMjJcIixcInByaWNlU3RhcnRcIjpcIjcwMDBcIixcInByaWNlQ3VycmVudFwiOlwiNzAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjcyNzc1XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTE0IDE1OjMxOjExLjE3Njg0OFwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0xMi0xNCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMTQgMTc6NTI6MjcuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAxMTFcIixcInZpZXdlZEFkZHJlc3NcIjpcItCi0L7Qu9C80LDRh9GR0LLQviDQutCy0LDRgNGC0LDQuyDQpNC+0YDQtNCwIDNcIixcInZpZXdlZEFyZWFcIjpcIjg0LzUyLzEyXCIsXCJwcmljZVN0YXJ0XCI6XCI2ODAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjY4MDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQmiDRgNCw0LfQvNC10YnQtdC90LjRjlwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOlwiaHR0cHM6Ly9yZWFsdHkueWFuZGV4LnJ1L29mZmVyLzYwMTc0OTQ5Mjk0NDczNDY5MjlcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6XCJodHRwczovL3d3dy5jaWFuLnJ1L3NhbGUvZmxhdC8yNzQ3NDQ4NjRcIixcInN0YXR1c1wiOlwi0J7Qv9GD0LHQu9C40LrQvtCy0LDQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjczNDY2XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOlwi0K3QutGB0LrQu9GO0LfQuNCyXCIsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTE4IDEyOjQ3OjU3LjQ3Mzc4MlwiLFwiZXhwaXJhdGlvblwiOlwiMjAyMi0wOS0xOCAwMDowMDowMC4wMDAwMDBcIixcIm1vZGVyYXRpb25cIjpcItCf0L7QtNGC0LLQtdGA0LbQtNC10L3QvlwiLFwibW9kZXJhdGlvbkRhdGVcIjpcIjIwMjItMDYtMTkgMTg6NDk6MDIuMDAwMDAwXCJ9LFwidHlwZVwiOlwi0JrQstCw0YDRgtC40YDQsFwiLFwidHlwZU5hbWVcIjpcIijQmtCyLilcIixcInJlcU51bWJlclwiOlwiNTgwNDMwMDAxMTJcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0KTQuNC70LDRgtC+0LLQsCAxMVwiLFwidmlld2VkQXJlYVwiOlwiMzIvMTcvN1wiLFwicHJpY2VTdGFydFwiOlwiMjk1MFwiLFwicHJpY2VDdXJyZW50XCI6XCIyOTUwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0Jog0YDQsNC30LzQtdGJ0LXQvdC40Y5cIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpcImh0dHBzOi8vcmVhbHR5LnlhbmRleC5ydS9vZmZlci82MDE3NDk0OTI5NDQ3MzQ2OTMwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOlwiaHR0cHM6Ly93d3cuY2lhbi5ydS9zYWxlL2ZsYXQvMjc0OTg2MDcwXCIsXCJzdGF0dXNcIjpcItCe0L/Rg9Cx0LvQuNC60L7QstCw0L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6XCI0ODI5N1wiLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpcItCg0LXQutC70LDQvNC90YvQuVwiLFwiY3JlYXRlZFwiOlwiMjAyMi0wMS0xNCAxMzoyNDozMi4yNTczNjJcIixcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0J/QtdGA0LXRg9GB0YLRg9C/0LrQsCDQlNCU0KNcIixcInR5cGVOYW1lXCI6XCIo0J3QvtCyLilcIixcInJlcU51bWJlclwiOlwiNTgwODQwMDAwMDNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JDQu9C10LrRgdCw0L3QtNGA0LAg0KfQuNGB0YLRj9C60L7QstCwIDIyXCIsXCJ2aWV3ZWRBcmVhXCI6XCIyOS8xMS85XCIsXCJwcmljZVN0YXJ0XCI6XCIyMzAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA4NDAwMDAxMFwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrQvtC70YvQstCw0L3RjCDQmtC40YDQvtCy0LAgNDJcIixcInZpZXdlZEFyZWFcIjpcIjUzLzM2LzZcIixcInByaWNlU3RhcnRcIjpcIjMwMDBcIixcInByaWNlQ3VycmVudFwiOlwiMzAwMFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpudWxsLFwiYXNzaWduZWRfYnlcIjp7XCJVSURcIjoyNTgzLFwiZnVsbE5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIn0sXCJjb250cmFjdFwiOntcInR5cGVcIjpudWxsLFwiY3JlYXRlZFwiOm51bGwsXCJleHBpcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvbkRhdGVcIjpudWxsfSxcInR5cGVcIjpcItCT0LDRgNCw0LZcIixcInR5cGVOYW1lXCI6XCIo0JMuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODA4NDAwMDAxNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQmtGA0L7Qv9C+0YLQutC40L3QsCAxOTcg0LrQvtGA0L8gMlwiLFwidmlld2VkQXJlYVwiOlwiMzUvMC8wXCIsXCJwcmljZVN0YXJ0XCI6XCI4MDBcIixcInByaWNlQ3VycmVudFwiOlwiODAwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOm51bGwsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6bnVsbCxcImV4cGlyYXRpb25cIjpudWxsLFwibW9kZXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uRGF0ZVwiOm51bGx9LFwidHlwZVwiOlwi0JrQvtC80L3QsNGC0LBcIixcInR5cGVOYW1lXCI6XCIo0JrQvtC8LilcIixcInJlcU51bWJlclwiOlwiNTgxNjcwMDAwMjNcIixcInZpZXdlZEFkZHJlc3NcIjpcItCd0L7QstC+0YHQuNCx0LjRgNGB0Log0JfQsNCx0LDQu9GD0LXQstCwIDM5XCIsXCJ2aWV3ZWRBcmVhXCI6XCIyMy8xNS8yXCIsXCJwcmljZVN0YXJ0XCI6XCIxMDAwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjEwMDBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX0se1wiZGVhbElkXCI6bnVsbCxcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6bnVsbCxcImNyZWF0ZWRcIjpudWxsLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODE5ODAwMDA4NVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQotC40YLQvtCy0LAgMTk4LzFcIixcInZpZXdlZEFyZWFcIjpcIjYwLzQyLzlcIixcInByaWNlU3RhcnRcIjpcIjU5NTBcIixcInByaWNlQ3VycmVudFwiOlwiNTk1MFwiLFwicHJpY2VUcmVuZFwiOjAsXCJhZHZTdGF0dXNcIjpcItCd0LUg0LIg0YDQtdC60LvQsNC80LVcIixcInBsYXRmb3JtU3RhdHNcIjpbe1wibmFtZVwiOlwiWWFuZGV4XCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9LHtcIm5hbWVcIjpcIkNpYW5cIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH1dfSx7XCJkZWFsSWRcIjpcIjM0MTI4XCIsXCJhc3NpZ25lZF9ieVwiOntcIlVJRFwiOjI1ODMsXCJmdWxsTmFtZVwiOlwi0K/QtNGA0YvRiNC90LjQutC+0LLQsCDQntC70YzQs9CwINCh0LXRgNCz0LXQtdCy0L3QsFwifSxcImNvbnRyYWN0XCI6e1widHlwZVwiOm51bGwsXCJjcmVhdGVkXCI6XCIyMDIyLTA2LTE2IDExOjAzOjAxLjE2NTQwNVwiLFwiZXhwaXJhdGlvblwiOm51bGwsXCJtb2RlcmF0aW9uXCI6bnVsbCxcIm1vZGVyYXRpb25EYXRlXCI6bnVsbH0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODE5ODAwMDMwNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0J3QvtCy0L7RgdC40LHQuNGA0YHQuiDQodC/0L7RgNGC0LjQstC90LDRjyAxMS8xXCIsXCJ2aWV3ZWRBcmVhXCI6XCI1Ni8zMS8xMFwiLFwicHJpY2VTdGFydFwiOlwiNDA5MFwiLFwicHJpY2VDdXJyZW50XCI6XCI0MDkwXCIsXCJwcmljZVRyZW5kXCI6MCxcImFkdlN0YXR1c1wiOlwi0J3QtSDQsiDRgNC10LrQu9Cw0LzQtVwiLFwicGxhdGZvcm1TdGF0c1wiOlt7XCJuYW1lXCI6XCJZYW5kZXhcIixcInVybFwiOm51bGwsXCJzdGF0dXNcIjpcItCd0LUg0YDQsNC30LzQtdGJ0LXQvdC+XCIsXCJjb3ZlcmFnZVwiOjAsXCJzZWFyY2hlc1wiOjAsXCJzaG93c1wiOjAsXCJzaG93c1RyYW5kXCI6MH0se1wibmFtZVwiOlwiQ2lhblwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfV19LHtcImRlYWxJZFwiOlwiNDg2MTVcIixcImFzc2lnbmVkX2J5XCI6e1wiVUlEXCI6MjU4MyxcImZ1bGxOYW1lXCI6XCLQr9C00YDRi9GI0L3QuNC60L7QstCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCJ9LFwiY29udHJhY3RcIjp7XCJ0eXBlXCI6XCLQrdC60YHQutC70Y7Qt9C40LJcIixcImNyZWF0ZWRcIjpcIjIwMjItMDEtMTQgMTY6NTk6NTAuMjg4OTI4XCIsXCJleHBpcmF0aW9uXCI6XCIyMDIyLTA1LTE2IDEyOjAwOjAwLjAwMDAwMFwiLFwibW9kZXJhdGlvblwiOlwi0J7RgtC60LvQvtC90LXQvdC+XCIsXCJtb2RlcmF0aW9uRGF0ZVwiOlwiMjAyMi0wNS0yMCAwODozNDo1OS4wMDAwMDBcIn0sXCJ0eXBlXCI6XCLQmtCy0LDRgNGC0LjRgNCwXCIsXCJ0eXBlTmFtZVwiOlwiKNCa0LIuKVwiLFwicmVxTnVtYmVyXCI6XCI1ODQ5NDAwMDAwNVwiLFwidmlld2VkQWRkcmVzc1wiOlwi0JrRgNC40LLQvtC00LDQvdC+0LLQutCwINCX0LXQu9C10L3QsNGPIDE2XCIsXCJ2aWV3ZWRBcmVhXCI6XCI2MC80MS85XCIsXCJwcmljZVN0YXJ0XCI6XCIyMzUwXCIsXCJwcmljZUN1cnJlbnRcIjpcIjIzNTBcIixcInByaWNlVHJlbmRcIjowLFwiYWR2U3RhdHVzXCI6XCLQndC1INCyINGA0LXQutC70LDQvNC1XCIsXCJwbGF0Zm9ybVN0YXRzXCI6W3tcIm5hbWVcIjpcIllhbmRleFwiLFwidXJsXCI6bnVsbCxcInN0YXR1c1wiOlwi0J3QtSDRgNCw0LfQvNC10YnQtdC90L5cIixcImNvdmVyYWdlXCI6MCxcInNlYXJjaGVzXCI6MCxcInNob3dzXCI6MCxcInNob3dzVHJhbmRcIjowfSx7XCJuYW1lXCI6XCJDaWFuXCIsXCJ1cmxcIjpudWxsLFwic3RhdHVzXCI6XCLQndC1INGA0LDQt9C80LXRidC10L3QvlwiLFwiY292ZXJhZ2VcIjowLFwic2VhcmNoZXNcIjowLFwic2hvd3NcIjowLFwic2hvd3NUcmFuZFwiOjB9XX1dLFwicmlnaHRzXCI6XCJjaGllZlwiLFwic3Vib3JkaW5hdGVkXCI6W3tcIm5hbWVcIjpcItCa0YDQsNC70YzQutC+INCh0LLQtdGC0LvQsNC90LAg0JPRgNC40LPQvtGA0YzQtdCy0L3QsFwiLFwiaWRcIjozODQ5LFwib2ZmaWNlXCI6NTYsXCJsb2dpblwiOlwia3JhbGtvXCJ9LHtcIm5hbWVcIjpcItCc0LXRiNC10YfQutC+INCg0L7QtNC40L7QvSDQmNCz0L7RgNC10LLQuNGHXCIsXCJpZFwiOjM4NDIsXCJvZmZpY2VcIjo1NixcImxvZ2luXCI6XCJtZXNoZWNoa29yaVwifSx7XCJuYW1lXCI6XCLQkNC90YLQvtC90L7QstCwINCd0LDRgtCw0LvRjNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCIsXCJpZFwiOjM2MTcsXCJvZmZpY2VcIjo1NixcImxvZ2luXCI6XCJhbnRvbm92YW5hXCJ9LHtcIm5hbWVcIjpcItCo0LXQudC9INCv0L3QsCDQrtGA0YzQtdCy0L3QsFwiLFwiaWRcIjozMzc5LFwib2ZmaWNlXCI6NTYsXCJsb2dpblwiOlwic2hleW55YXl1XCJ9LHtcIm5hbWVcIjpcItCv0LTRgNGL0YjQvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIixcImlkXCI6MjU4MyxcIm9mZmljZVwiOjU2LFwibG9naW5cIjpcInlhZHJ5aXNobmlrb3Zhb3NcIn0se1wibmFtZVwiOlwi0JTQtdCz0YLRj9GA0ZHQstCwINCV0LvQtdC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6MjU1MSxcIm9mZmljZVwiOjU2LFwibG9naW5cIjpcImRlZ3R5YXJldmFlblwifSx7XCJuYW1lXCI6XCLQotCw0LTQtdCy0L7RgdGP0L0g0JPQsNC50Log0JDQvdC00YDQsNC90LjQutC+0LLQuNGHXCIsXCJpZFwiOjIwMTUsXCJvZmZpY2VcIjo1NixcImxvZ2luXCI6XCJ0YWRldm9zeWFuZ2FcIn0se1wibmFtZVwiOlwi0JDQvdC00YDRg9GF0L7QstCwINCV0LLQs9C10L3QuNGPINCS0LjQutGC0L7RgNC+0LLQvdCwXCIsXCJpZFwiOjE2NTgsXCJvZmZpY2VcIjo1NixcImxvZ2luXCI6XCJrdXN0b3ZhZXZcIn0se1wibmFtZVwiOlwi0JHRgNC40LvRjCDQndCw0YLQsNC70YzRjyDQkdC+0YDQuNGB0L7QstC90LBcIixcImlkXCI6MTU5OSxcIm9mZmljZVwiOjU2LFwibG9naW5cIjpcImJyaWxuYlwifSx7XCJuYW1lXCI6XCLQodC+0YDQvtC60LjQvdCwINCY0YDQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjE1OTUsXCJvZmZpY2VcIjo1NixcImxvZ2luXCI6XCJzb3Jva2luYS5pXCJ9LHtcIm5hbWVcIjpcItCU0LXRgNCz0YPQvdC+0LLQsCDQndCw0YLQsNC70YzRjyDQktCw0LvQtdGA0YzQtdCy0L3QsFwiLFwiaWRcIjoxNTk0LFwib2ZmaWNlXCI6NTYsXCJsb2dpblwiOlwiZGVyZ3Vub3ZhXCJ9LHtcIm5hbWVcIjpcItCn0LDQv9GB0LrQsNGPINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjE1OTMsXCJvZmZpY2VcIjo1NixcImxvZ2luXCI6XCJjaGFwc2theWFcIn0se1wibmFtZVwiOlwi0JDQu9GM0YfQuNC60L7QstCwINCe0LrRgdCw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCIsXCJpZFwiOjE1ODMsXCJvZmZpY2VcIjo1NixcImxvZ2luXCI6XCJhbGNoaWtvdmFvZ1wifSx7XCJuYW1lXCI6XCLQkdC10LfRg9Cz0LvQvtCyINCQ0LvQtdC60YHQsNC90LTRgCDQktC40LrRgtC+0YDQvtCy0LjRh1wiLFwiaWRcIjoxNTA2LFwib2ZmaWNlXCI6NTYsXCJsb2dpblwiOlwiYmV6dWdsb3ZhdlwifSx7XCJuYW1lXCI6XCLQptGL0L3QutC10YAg0JvRjtCx0L7QstGMINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCIsXCJpZFwiOjE1MDMsXCJvZmZpY2VcIjo1NixcImxvZ2luXCI6XCJjeWlua2VyXCJ9LHtcIm5hbWVcIjpcItCa0YDQuNC20LDQvdC+0LLRgdC60LDRjyDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjoxODUsXCJvZmZpY2VcIjo1NixcImxvZ2luXCI6XCJrcml6aGFub3Zza2F5YXR2XCJ9LHtcIm5hbWVcIjpcItCS0LjQvdC90LjQuiDQndCw0YLQsNC70YzRjyDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwiLFwiaWRcIjo1NCxcIm9mZmljZVwiOjU2LFwibG9naW5cIjpcInZpbm5pa1wifSx7XCJuYW1lXCI6XCLQoNC+0LfQvtCy0LAg0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIixcImlkXCI6MzU0OSxcIm9mZmljZVwiOjYzLFwibG9naW5cIjpcInJvem92YWV2XCJ9LHtcIm5hbWVcIjpcItCh0LDQvNC/0LXRgtC+0LLQsCDQldC70LXQvdCwINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCIsXCJpZFwiOjI1MDQsXCJvZmZpY2VcIjo2MyxcImxvZ2luXCI6XCJzYW1wZXRvdmFlYVwifSx7XCJuYW1lXCI6XCLQnNGD0LzQsdC10YAg0JXQstCz0LXQvdC40Lkg0JvQtdC+0L3QuNC00L7QstC40YdcIixcImlkXCI6MjAzNCxcIm9mZmljZVwiOjYzLFwibG9naW5cIjpcIm11bWJlcmVsXCJ9LHtcIm5hbWVcIjpcItCR0L7QvdC00LDRgNGMINCd0LDRgtCw0LvRjNGPINCV0LLQs9C10L3RjNC10LLQvdCwXCIsXCJpZFwiOjE4OTMsXCJvZmZpY2VcIjo2MyxcImxvZ2luXCI6XCJib25kYXJuZVwifSx7XCJuYW1lXCI6XCLQkNC40LHRj9C9INCb0LXQudC70Lgg0JzQsNC00LbQuNGC0L7QstC90LBcIixcImlkXCI6MTc2MixcIm9mZmljZVwiOjYzLFwibG9naW5cIjpcImFpYnlhbmxtXCJ9LHtcIm5hbWVcIjpcItCu0LTQuNC9INCU0LzQuNGC0YDQuNC5INCf0LDQstC70L7QstC40YdcIixcImlkXCI6MTc0NSxcIm9mZmljZVwiOjYzLFwibG9naW5cIjpcInl1ZGluZHBcIn0se1wibmFtZVwiOlwi0JDQvdC00YDQtdC10LLQsCDQrtC70LjRjyDQktCw0LvQtdGA0YzQtdCy0L3QsFwiLFwiaWRcIjoxNjQzLFwib2ZmaWNlXCI6NjMsXCJsb2dpblwiOlwibGViZWRldmF5dXZcIn0se1wibmFtZVwiOlwi0JrQvtC70L7RgtGL0LPQuNC90LAg0JDQu9C10LrRgdCw0L3QtNGA0LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6OTkyLFwib2ZmaWNlXCI6NjMsXCJsb2dpblwiOlwia29sb3R5aWdpbmFhblwifSx7XCJuYW1lXCI6XCLQnNC10LTQstC10LTQtdCy0LAg0KLQsNGC0YzRj9C90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6NTE4LFwib2ZmaWNlXCI6NjMsXCJsb2dpblwiOlwibWVkdmVkZXZhdG5cIn0se1wibmFtZVwiOlwi0JPRgNGD0LTQtdCyINCS0Y/Rh9C10YHQu9Cw0LIg0JLQuNC60YLQvtGA0L7QstC40YdcIixcImlkXCI6Mzg4LFwib2ZmaWNlXCI6NjMsXCJsb2dpblwiOlwiZ3J1ZGV2dnZcIn0se1wibmFtZVwiOlwi0JvQvtCx0YvQvdGG0LXQsiDQnNC40YXQsNC40Lsg0JzQuNGF0LDQudC70L7QstC40YdcIixcImlkXCI6MjU2LFwib2ZmaWNlXCI6NjMsXCJsb2dpblwiOlwibG9ieWluY2V2bW1cIn0se1wibmFtZVwiOlwi0KDQsNCz0YPQu9C40L3QsCDQotCw0YLRjNGP0L3QsCDQrtGA0YzQtdCy0L3QsFwiLFwiaWRcIjo1NSxcIm9mZmljZVwiOjYzLFwibG9naW5cIjpcInJhZ3VsaW5hXCJ9LHtcIm5hbWVcIjpcItCa0LjRgdC70Y/QutC+0LLQsCDQl9C40L3QsNC40LTQsCDQodC10YDQs9C10LXQstC90LBcIixcImlkXCI6Mzg3NixcIm9mZmljZVwiOjY2LFwibG9naW5cIjpcImtpc2x5YWtvdmF6c1wifSx7XCJuYW1lXCI6XCLQmtC+0YDQvtCx0LrQuNC90LAg0JDQvdCw0YHRgtCw0YHQuNGPINCQ0L3QtNGA0LXQtdCy0L3QsFwiLFwiaWRcIjoyOTMxLFwib2ZmaWNlXCI6NjYsXCJsb2dpblwiOlwia29yb2JraW5hYWFcIn0se1wibmFtZVwiOlwi0JTQsNCy0YvQtNC10L3QutC+INCV0LvQtdC90LAg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6MjkyMixcIm9mZmljZVwiOjY2LFwibG9naW5cIjpcImRhdnlpZGVua29lYVwifSx7XCJuYW1lXCI6XCLQlNC+0LvQs9C+0LLQsCDQmNGA0LjQvdCwINCf0LXRgtGA0L7QstC90LBcIixcImlkXCI6MTk5OCxcIm9mZmljZVwiOjY2LFwibG9naW5cIjpcImRvbGdvdmFpcFwifSx7XCJuYW1lXCI6XCLQmtGA0LXRgdGC0YzRj9C90L7QstCwINCb0Y7QtNC80LjQu9CwINCS0LjQutGC0L7RgNC+0LLQvdCwXCIsXCJpZFwiOjE5NjcsXCJvZmZpY2VcIjo2NixcImxvZ2luXCI6XCJrcmVzdHlhbm92YWx2XCJ9LHtcIm5hbWVcIjpcItCc0LDRgtCy0LXQudC60LjQvdCwINCQ0L3QsNGB0YLQsNGB0LjRjyDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwiLFwiaWRcIjoxNjM2LFwib2ZmaWNlXCI6NjYsXCJsb2dpblwiOlwibWF0dmV5a2luYVwifSx7XCJuYW1lXCI6XCLQodCy0LXRgtC70Y/QutC+0LIg0JLQsNGB0LjQu9C40Lkg0J3QuNC60L7Qu9Cw0LXQstC40YdcIixcImlkXCI6Mzg4NSxcIm9mZmljZVwiOjY3LFwibG9naW5cIjpcInN2ZXRseWFrb3Z2blwifSx7XCJuYW1lXCI6XCLQkdC10LHQsNC80YPRgNCw0YLQvtCyINCU0LDQvdC40Lsg0JfQsNGF0LDRgNC+0LLQuNGHXCIsXCJpZFwiOjM4NDYsXCJvZmZpY2VcIjo2NyxcImxvZ2luXCI6XCJiZWJhbXVyYXRvdmR6XCJ9LHtcIm5hbWVcIjpcItCk0LjQu9GM0YfQtdC90LrQviDQodGC0LDQvdC40YHQu9Cw0LIg0JXQstCz0LXQvdGM0LXQstC40YdcIixcImlkXCI6Mzg0MCxcIm9mZmljZVwiOjY3LFwibG9naW5cIjpcImZpbGNoZW5rb3NlMVwifSx7XCJuYW1lXCI6XCLQkdC+0LPQuNC00LDQtdCy0LAg0JjRgNC40L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwiLFwiaWRcIjozNzU5LFwib2ZmaWNlXCI6NjcsXCJsb2dpblwiOlwiYm9naWRhZXZhaW5cIn0se1wibmFtZVwiOlwi0JHQtdC70LDRjyDQkNC70LXQvdCwINCT0LDRgNGM0LXQstC90LBcIixcImlkXCI6MzQzMyxcIm9mZmljZVwiOjY3LFwibG9naW5cIjpcImJlbGF5YWFnXCJ9LHtcIm5hbWVcIjpcItCf0LDQstC70Y7Rh9C10L3QutC+INCU0LzQuNGC0YDQuNC5INCQ0LvQtdC60YHQsNC90LTRgNC+0LLQuNGHXCIsXCJpZFwiOjMyMDEsXCJvZmZpY2VcIjo2NyxcImxvZ2luXCI6XCJwYXZseXVjaGVua29kYVwifSx7XCJuYW1lXCI6XCLQp9GD0YXQuNC70Ywg0KDRg9GB0LvQsNC9INCS0LjQutGC0L7RgNC+0LLQuNGHXCIsXCJpZFwiOjI2MjAsXCJvZmZpY2VcIjo2NyxcImxvZ2luXCI6XCJjaHVraGlscnZcIn0se1wibmFtZVwiOlwi0JfRg9Cx0L7QstCwINCY0L3Qs9CwINCQ0L3QsNGC0L7Qu9GM0LXQstC90LBcIixcImlkXCI6MjAyMixcIm9mZmljZVwiOjY3LFwibG9naW5cIjpcInp1Ym92YWlhXCJ9LHtcIm5hbWVcIjpcItCn0LjRh9C60LDQvdC+0LLQsCDQkNC90L3QsCDQldCy0LPQtdC90YzQtdCy0L3QsFwiLFwiaWRcIjoxOTI1LFwib2ZmaWNlXCI6NjcsXCJsb2dpblwiOlwiY2hpY2hrYW5vdmFhZVwifSx7XCJuYW1lXCI6XCLQkNC90LTRgNC10LnRh9C10L3QutC+INCe0LvRjNCz0LAg0JLRj9GH0LXRgdC70LDQstC+0LLQvdCwXCIsXCJpZFwiOjMxMjEsXCJvZmZpY2VcIjo2OCxcImxvZ2luXCI6XCJhbmRyZXljaGVua29vdlwifSx7XCJuYW1lXCI6XCLQn9Cw0YHRjtC6INCe0LrRgdCw0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjo4NzQsXCJvZmZpY2VcIjo2OCxcImxvZ2luXCI6XCJwYXN5dWtvdlwifSx7XCJuYW1lXCI6XCLQpNC10LTRg9C70L7QstCwINCc0LDRgNC40L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCIsXCJpZFwiOjM3MTQsXCJvZmZpY2VcIjo2OSxcImxvZ2luXCI6XCJmZWR1bG92YW1nXCJ9LHtcIm5hbWVcIjpcItCR0L7RgNC80LDRgtC+0LLQsCDQkNC90LDRgdGC0LDRgdC40Y8g0JXQstCz0LXQvdGM0LXQstC90LBcIixcImlkXCI6MzY4MixcIm9mZmljZVwiOjY5LFwibG9naW5cIjpcImJvcm1hdG92YWFlXCJ9LHtcIm5hbWVcIjpcItCa0LDRgtGA0LXQvdC60L4g0JPQsNC70LjQvdCwINCS0LDQu9C10L3RgtC40L3QvtCy0L3QsFwiLFwiaWRcIjozMjA3LFwib2ZmaWNlXCI6NjksXCJsb2dpblwiOlwia2F0cmVua29ndlwifSx7XCJuYW1lXCI6XCLQm9C40YLQstC40L3QvtCy0LAg0J7Qu9GM0LPQsCDQn9Cw0LLQu9C+0LLQvdCwXCIsXCJpZFwiOjMwODMsXCJvZmZpY2VcIjo2OSxcImxvZ2luXCI6XCJsaXR2aW5vdmFvcFwifSx7XCJuYW1lXCI6XCLQn9C+0LvRg9GF0LjQvdCwINCV0LvQtdC90LAg0K7RgNGM0LXQstC90LBcIixcImlkXCI6MzA0OCxcIm9mZmljZVwiOjY5LFwibG9naW5cIjpcInBvbHVraGluYWV5dVwifSx7XCJuYW1lXCI6XCLQk9C+0YDQsdCw0YLQutC+0LLQsCDQldC70LXQvdCwINCh0LXRgNCz0LXQtdCy0L3QsFwiLFwiaWRcIjoyOTQ5LFwib2ZmaWNlXCI6NjksXCJsb2dpblwiOlwiZ29yYmF0a292YWVzXCJ9LHtcIm5hbWVcIjpcItCc0LDRgtCy0LjQtdC90LrQviDQldC60LDRgtC10YDQuNC90LAg0KHQtdGA0LPQtdC10LLQvdCwXCIsXCJpZFwiOjIyNDIsXCJvZmZpY2VcIjo2OSxcImxvZ2luXCI6XCJtYXR2aWVua29lc1wifSx7XCJuYW1lXCI6XCLQm9Cw0LLRgNC+0LLQsCDQldC70LXQvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCIsXCJpZFwiOjE3NzksXCJvZmZpY2VcIjo2OSxcImxvZ2luXCI6XCJsYXZyb3ZhZXZcIn0se1wibmFtZVwiOlwi0JPQvtC70LTQuNC9INCV0LLQs9C10L3QuNC5INCQ0LvQtdC60YHQsNC90LTRgNC+0LLQuNGHXCIsXCJpZFwiOjE3MjksXCJvZmZpY2VcIjo2OSxcImxvZ2luXCI6XCJnb2xkaW5lYVwifSx7XCJuYW1lXCI6XCLQodC+0LrQvtC70L7QstCwINCu0LvQuNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCIsXCJpZFwiOjE2NTYsXCJvZmZpY2VcIjo2OSxcImxvZ2luXCI6XCJzb2tvbG92YXl1YVwifSx7XCJuYW1lXCI6XCLQqNC70YvQutC+0LLQsCDQrtC70LjRjyDQrtGA0YzQtdCy0L3QsFwiLFwiaWRcIjoxNTg0LFwib2ZmaWNlXCI6NjksXCJsb2dpblwiOlwic2hsaWtvdmFcIn0se1wibmFtZVwiOlwi0JrRgNCw0LLRhtC+0LLQsCDQndCw0YLQsNC70YzRjyDQnNC40YXQsNC50LvQvtCy0L3QsFwiLFwiaWRcIjoxNTE5LFwib2ZmaWNlXCI6NjksXCJsb2dpblwiOlwia3JhdnRzb3ZhXCJ9LHtcIm5hbWVcIjpcItCm0LjQs9C70LXRgCDQmtGB0LXQvdC40Y8g0JLQsNGB0LjQu9GM0LXQstC90LBcIixcImlkXCI6MjU5NCxcIm9mZmljZVwiOjcwLFwibG9naW5cIjpcImNpZ2xlcmt2XCJ9LHtcIm5hbWVcIjpcItCT0LDQsdC00YDQsNGF0LzQsNC90L7QstCwINCe0LvRjNCz0LAg0J7Qu9C10LPQvtCy0L3QsFwiLFwiaWRcIjoxOTA3LFwib2ZmaWNlXCI6NzAsXCJsb2dpblwiOlwiZ2FiZHJha2htYW5vdmFvb1wifSx7XCJuYW1lXCI6XCLQmtC+0YDRgdCw0Log0JLQsNC70LXRgNC40Y8g0JzQsNGA0LDRgtC+0LLQvdCwXCIsXCJpZFwiOjE3OTYsXCJvZmZpY2VcIjo3MCxcImxvZ2luXCI6XCJrb3JzYWt2bVwifSx7XCJuYW1lXCI6XCLQldCy0LTQvtC60LjQvNC+0LLQsCDQktC40LrRgtC+0YDQuNGPINCQ0L3QtNGA0LXQtdCy0L3QsFwiLFwiaWRcIjo2MTAsXCJvZmZpY2VcIjo3MCxcImxvZ2luXCI6XCJldmRva2ltb3ZhdmFcIn0se1wibmFtZVwiOlwi0JvQvtC00Y/RgdC+0LLQsCDQkNC90L3QsCDQldCy0LPQtdC90YzQtdCy0L3QsFwiLFwiaWRcIjo2MDksXCJvZmZpY2VcIjo3MCxcImxvZ2luXCI6XCJsb2R5YXNvdmFhZVwifSx7XCJuYW1lXCI6XCLQn9Cw0LLQu9C+0LLQtdGGINCa0YHQtdC90LjRjyDQrtGA0YzQtdCy0L3QsFwiLFwiaWRcIjoyMjIsXCJvZmZpY2VcIjo3MCxcImxvZ2luXCI6XCJwYXZsb3ZlY2t5dVwifSx7XCJuYW1lXCI6XCLQnNC40LvQsNGF0LjQvSDQoNGD0YHQu9Cw0L0g0J7Qu9C10LPQvtCy0LjRh1wiLFwiaWRcIjozOTM2LFwib2ZmaWNlXCI6NzIsXCJsb2dpblwiOlwibWlsYWtoaW5yb1wifSx7XCJuYW1lXCI6XCLQn9C+0L/QvtCyINCa0LjRgNC40LvQuyDQlNC10L3QuNGB0L7QstC40YdcIixcImlkXCI6MzkwMSxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcInBvcG92a2RcIn0se1wibmFtZVwiOlwi0KHQutC+0L/QuNGHINCU0LDRgNGM0Y8g0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6Mzc2OCxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcInNrb3BpY2hkYVwifSx7XCJuYW1lXCI6XCLQn9Cw0YDRhNC10L3QvtCyINCU0LXQvdC40YEg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC40YdcIixcImlkXCI6MzcxMSxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcInBhcmZlbm92ZGFcIn0se1wibmFtZVwiOlwi0J/QvtC70L7QstC40L3QutC40L3QsCDQntC70YzQs9CwINCR0L7RgNC40YHQvtCy0L3QsFwiLFwiaWRcIjozNjkzLFwib2ZmaWNlXCI6NzIsXCJsb2dpblwiOlwicG9sb3ZpbmtpbmFvYlwifSx7XCJuYW1lXCI6XCLQp9C10LLQtdC70ZHQstCwINCe0LvQtdGB0Y8g0JzQuNGF0LDQudC70L7QstC90LBcIixcImlkXCI6MzMxNSxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcImNoZXZlbGV2YW9tXCJ9LHtcIm5hbWVcIjpcItCR0LDQttCw0L3QvtCy0LAg0JPQsNC70LjQvdCwINCk0LjQu9C40L/Qv9C+0LLQvdCwXCIsXCJpZFwiOjMwMDAsXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJiYXpoYW5vdmFcIn0se1wibmFtZVwiOlwi0JrQvtGA0YfQsNCz0LjQvdCwINCQ0LvQuNC90LAg0JjQstCw0L3QvtCy0L3QsFwiLFwiaWRcIjoxOTkyLFwib2ZmaWNlXCI6NzIsXCJsb2dpblwiOlwia29yY2hhZ2luYWFpXCJ9LHtcIm5hbWVcIjpcItCS0LjQvdC+0LPRgNCw0LTQvtCy0LAg0JvQsNGA0LjRgdCwINCQ0L3QsNGC0L7Qu9GM0LXQstC90LBcIixcImlkXCI6MTgyMyxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcInZpbm9ncmFkb3ZhbGFcIn0se1wibmFtZVwiOlwi0JzQuNGA0L7QvdC10L3QutC+INCg0L7QvNCw0L0g0JDQvdC00YDQtdC10LLQuNGHXCIsXCJpZFwiOjE3OTMsXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJtaXJvbmVua29yYVwifSx7XCJuYW1lXCI6XCLQp9C40YfQutC40L3QsCDQnNCw0YDQuNC90LAg0JvQtdC+0L3QuNC00L7QstC90LBcIixcImlkXCI6MTc0NixcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcImNoaWNoa2luYW1sXCJ9LHtcIm5hbWVcIjpcItCb0LDQtNGH0LXQvdC60L4g0KLQsNGC0YzRj9C90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIixcImlkXCI6MTcyNyxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcImxhZGNoZW5rb3R2XCJ9LHtcIm5hbWVcIjpcItCi0YvRgNGL0YjQutC40L3QsCDQotCw0YLRjNGP0L3QsCDQn9Cw0LLQu9C+0LLQvdCwXCIsXCJpZFwiOjE2OTksXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJ0aXJpc2hraW5hXCJ9LHtcIm5hbWVcIjpcItCa0YDQsNCy0YfQtdC90LrQviDQotCw0YLRjNGP0L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwiLFwiaWRcIjoxNjMwLFwib2ZmaWNlXCI6NzIsXCJsb2dpblwiOlwia3JhdmNoZW5rb3RcIn0se1wibmFtZVwiOlwi0JXRgNGI0L7QstCwINCS0LjQutGC0L7RgNC40Y8g0JLQsNC70LXRgNGM0LXQstC90LBcIixcImlkXCI6MTYyOCxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcImVyc2hvdmF2dlwifSx7XCJuYW1lXCI6XCLQk9GD0YHQtdCyINCc0LDQutGB0LjQvCDQktGP0YfQtdGB0LvQsNCy0L7QstC40YdcIixcImlkXCI6MTYyMyxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcImd1c2V2bXZcIn0se1wibmFtZVwiOlwi0JrQvtCy0LjQvdGM0LrQviDQmNGA0LjQvdCwINCV0LLQs9C10L3RjNC10LLQvdCwXCIsXCJpZFwiOjE2MTksXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJrb3ZpbmtvXCJ9LHtcIm5hbWVcIjpcItCh0LDQu9C+0YHRgtC40Lkg0KLQsNGC0YzRj9C90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjE2MTUsXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJzYWxvc3RpeVwifSx7XCJuYW1lXCI6XCLQltC40LPQsNGHINCh0LLQtdGC0LvQsNC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6MTYwNCxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcInpoaWdhY2hzblwifSx7XCJuYW1lXCI6XCLQnNCw0LrRgdC40LzQvtCy0LAg0J7Qu9GM0LPQsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCIsXCJpZFwiOjE2MDMsXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJtYWtzaW1vdmFvZ1wifSx7XCJuYW1lXCI6XCLQqNC70YvQutC+0LLQsCDQntC70YzQs9CwINCc0LjRhdCw0LnQu9C+0LLQvdCwXCIsXCJpZFwiOjE2MDIsXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJzaGx5aWtvdmFvXCJ9LHtcIm5hbWVcIjpcItCk0LXQtNC+0YDQvtCy0LAg0KHQstC10YLQu9Cw0L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCIsXCJpZFwiOjE2MDEsXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJmZWRvcm92YVwifSx7XCJuYW1lXCI6XCLQnNCw0YDQutC+0LLQsCDQnNCw0YDQuNGPINCc0LjRhdCw0LnQu9C+0LLQvdCwXCIsXCJpZFwiOjE1NzIsXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJtYXJrb3ZhbW1cIn0se1wibmFtZVwiOlwi0J3QvtCy0LjQutC+0LLQsCDQldCy0LPQtdC90LjRjyDQnNC40YXQsNC50LvQvtCy0L3QsFwiLFwiaWRcIjoxNTcxLFwib2ZmaWNlXCI6NzIsXCJsb2dpblwiOlwiZS5ub3Zpa292YVwifSx7XCJuYW1lXCI6XCLQmtCw0YjQuNC90LAg0J7QutGB0LDQvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCIsXCJpZFwiOjE1NjEsXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJrYXNoaW5hXCJ9LHtcIm5hbWVcIjpcItCS0LDQs9Cw0LnRhtC10LLQsCDQrtC70LjRjyDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwiLFwiaWRcIjoxNTYwLFwib2ZmaWNlXCI6NzIsXCJsb2dpblwiOlwidmFnYXljZXZheXVhXCJ9LHtcIm5hbWVcIjpcItCf0L7Qs9GA0L7QvNGB0LrQsNGPINCV0LvQtdC90LAg0JjQstCw0L3QvtCy0L3QsFwiLFwiaWRcIjoxNTU2LFwib2ZmaWNlXCI6NzIsXCJsb2dpblwiOlwicG90dXJlbXNrYXlhZWlcIn0se1wibmFtZVwiOlwi0JzQsNC60YHQuNC80L7QsiDQkNC70LXQutGB0LDQvdC00YAg0K7RgNGM0LXQstC40YdcIixcImlkXCI6MTE2MSxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcIm1ha3NpbW92YXl1XCJ9LHtcIm5hbWVcIjpcItCS0L7Qu9C+0YHRg9GF0LjQvdCwINCQ0L3QttC10LvQuNC60LAg0JLQuNC60YLQvtGA0L7QstC90LBcIixcImlkXCI6MTAyMSxcIm9mZmljZVwiOjcyLFwibG9naW5cIjpcInZvbG9zdWtoaW5hYXZcIn0se1wibmFtZVwiOlwi0KHQu9GR0LfQutC40L0g0JTQvNC40YLRgNC40Lkg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC40YdcIixcImlkXCI6NDcyLFwib2ZmaWNlXCI6NzIsXCJsb2dpblwiOlwic2xlemtpbmRhXCJ9LHtcIm5hbWVcIjpcItCR0YPRgNC90LjQvdCwINCQ0L3QvdCwINCR0L7RgNC40YHQvtCy0L3QsFwiLFwiaWRcIjoyMTMsXCJvZmZpY2VcIjo3MixcImxvZ2luXCI6XCJidXJuaW5hXCJ9LHtcIm5hbWVcIjpcItCQ0LPQtdC10LLQsCDQndCw0LTQtdC20LTQsCDQodC10YDQs9C10LXQstC90LBcIixcImlkXCI6MzkwNyxcIm9mZmljZVwiOjczLFwibG9naW5cIjpcImFnZWV2YW5zXCJ9LHtcIm5hbWVcIjpcItCg0LDQtNC20LDQsdC+0LLQsCDQndCw0LTQuNGPINCc0LDQu9C40LrQvtCy0L3QsFwiLFwiaWRcIjozODk4LFwib2ZmaWNlXCI6NzMsXCJsb2dpblwiOlwicmFkemhhYm92YW5tXCJ9LHtcIm5hbWVcIjpcItCT0L7RgNCx0YPQvdC+0LLQsCDQlNCw0YDRjNGPINCQ0L3QtNGA0LXQtdCy0L3QsFwiLFwiaWRcIjozODkzLFwib2ZmaWNlXCI6NzMsXCJsb2dpblwiOlwiZ29yYnVub3ZhZGFcIn0se1wibmFtZVwiOlwi0JrQvtC30LvQvtCyINCU0LzQuNGC0YDQuNC5INCh0LXRgNCz0LXQtdCy0LjRh1wiLFwiaWRcIjozODM0LFwib2ZmaWNlXCI6NzMsXCJsb2dpblwiOlwia296bG92ZHNcIn0se1wibmFtZVwiOlwi0JrQuNGB0LjQu9C10LIg0JDQu9C10LrRgdCw0L3QtNGAINCh0LXRgNCz0LXQtdCy0LjRh1wiLFwiaWRcIjozODE5LFwib2ZmaWNlXCI6NzMsXCJsb2dpblwiOlwia2lzaWxldmFzXCJ9LHtcIm5hbWVcIjpcItCQ0LvQtdC60YHQtdC10LIg0JTQtdC90LjRgSDQktC40LrRgtC+0YDQvtCy0LjRh1wiLFwiaWRcIjozODE0LFwib2ZmaWNlXCI6NzMsXCJsb2dpblwiOlwiYWxla3NlZXZkdlwifSx7XCJuYW1lXCI6XCLQnNC40YXQsNC50LvRjtC60L7QsiDQkNGA0YLRkdC8INCY0LLQsNC90L7QstC40YdcIixcImlkXCI6MzgwNyxcIm9mZmljZVwiOjczLFwibG9naW5cIjpcIm1pa2hheWx5dWtvdmFpXCJ9LHtcIm5hbWVcIjpcItCa0L7RiNC80LjQtNGM0LrQviDQntC70LXRgdGPINCd0LjQutC+0LvQsNC10LLQvdCwXCIsXCJpZFwiOjMwNjUsXCJvZmZpY2VcIjo3MyxcImxvZ2luXCI6XCJrb3NobWlka29vblwifSx7XCJuYW1lXCI6XCLQm9C+0L/QsNGC0LjQvdCwINCQ0L3QvdCwINCS0LDQtNC40LzQvtCy0L3QsFwiLFwiaWRcIjoyNzA4LFwib2ZmaWNlXCI6NzMsXCJsb2dpblwiOlwibG9wYXRpbmFhdlwifSx7XCJuYW1lXCI6XCLQmNCy0LDQvdC+0LIg0J7Qu9C10LMg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC40YdcIixcImlkXCI6MjA1MSxcIm9mZmljZVwiOjczLFwibG9naW5cIjpcIml2YW5vdm9hXCJ9LHtcIm5hbWVcIjpcItCQ0YXRgNC10LzQtdC90LrQviDQr9GA0L7RgdC70LDQsiDQrtGA0YzQtdCy0LjRh1wiLFwiaWRcIjoxOTM5LFwib2ZmaWNlXCI6NzMsXCJsb2dpblwiOlwiYWtocmVtZW5rb3lheXVcIn0se1wibmFtZVwiOlwi0JDRgdCw0L3QvtCyINCV0LLQs9C10L3QuNC5INCS0LXQvdC40LDQvNC40L3QvtCy0LjRh1wiLFwiaWRcIjoxODY4LFwib2ZmaWNlXCI6NzMsXCJsb2dpblwiOlwiYXNhbm92ZXZcIn0se1wibmFtZVwiOlwi0KLQvtC70YHRgtC+0LLQsCDQrtC70LjRjyDQmNCy0LDQvdC+0LLQvdCwXCIsXCJpZFwiOjE4NjYsXCJvZmZpY2VcIjo3MyxcImxvZ2luXCI6XCJ0b2xzdG92YXl1aVwifSx7XCJuYW1lXCI6XCLQmNGB0YLQuNGE0LXQtdCyINCd0LjQutC+0LvQsNC5INCd0LjQutC+0LvQsNC10LLQuNGHXCIsXCJpZFwiOjE4MTksXCJvZmZpY2VcIjo3MyxcImxvZ2luXCI6XCJpc3RpZmVldm5uXCJ9LHtcIm5hbWVcIjpcItCe0YHRgtCw0L3QuNC90LAg0JXQu9C10L3QsCDQltC+0YDQttC10LLQvdCwXCIsXCJpZFwiOjE3OTUsXCJvZmZpY2VcIjo3MyxcImxvZ2luXCI6XCJvc3RhbmluYWV6aFwifSx7XCJuYW1lXCI6XCLQktC10YLRgNC+0LLQsCDQntC60YHQsNC90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIixcImlkXCI6MTU5MCxcIm9mZmljZVwiOjczLFwibG9naW5cIjpcInZldHJvdmFcIn0se1wibmFtZVwiOlwi0JDRhdGA0LXQvNC10L3QutC+INCS0LvQsNC00LjQvNC40YAg0K7RgNGM0LXQstC40YdcIixcImlkXCI6MTc1LFwib2ZmaWNlXCI6NzMsXCJsb2dpblwiOlwiYWtocmVtZW5rb3Z5dVwifSx7XCJuYW1lXCI6XCLQlNC10YDQs9C40LvQtdCy0LAg0JDQvdCw0YHRgtCw0YHQuNGPINCQ0L3QtNGA0LXQtdCy0L3QsFwiLFwiaWRcIjoxNzEzLFwib2ZmaWNlXCI6ODMsXCJsb2dpblwiOlwiZGVyZ2lsZXZhXCJ9LHtcIm5hbWVcIjpcItCU0Y/Qs9C40LvQtdCyINCd0LjQutC40YLQsCDQodC10YDQs9C10LXQstC40YdcIixcImlkXCI6Mzg3OSxcIm9mZmljZVwiOjg1LFwibG9naW5cIjpcImR5YWdpbGV2bnNcIn0se1wibmFtZVwiOlwi0JDQu9GMLdCg0LDQsdC10LAg0JjRgNC40L3QsCDQntC70LXQs9C+0LLQvdCwXCIsXCJpZFwiOjM4MjAsXCJvZmZpY2VcIjo4NSxcImxvZ2luXCI6XCJhbHJhYmVhaW9cIn0se1wibmFtZVwiOlwi0JzQsNC60LDRgNC+0LLQsCDQotCw0YLRjNGP0L3QsCDQlNC80LjRgtGA0LjQtdCy0L3QsFwiLFwiaWRcIjozNDIyLFwib2ZmaWNlXCI6ODUsXCJsb2dpblwiOlwibWFrYXJvdmF0ZFwifSx7XCJuYW1lXCI6XCLQnNC+0LfQs9C+0LLQvtC5INCQ0L3QtNGA0LXQuSDQktC40LrRgtC+0YDQvtCy0LjRh1wiLFwiaWRcIjozMTY3LFwib2ZmaWNlXCI6ODUsXCJsb2dpblwiOlwibW96Z292b3lhdlwifSx7XCJuYW1lXCI6XCLQodC80L7Qu9GP0L3QuNC90L7QstCwINCh0YLQtdC70LvQsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIixcImlkXCI6MzEzNCxcIm9mZmljZVwiOjg1LFwibG9naW5cIjpcInNtb2x5YW5pbm92YXN2XCJ9LHtcIm5hbWVcIjpcItCn0LXRgNC10L/Rj9C90LrQviDQndC40L3QsCDQktCw0LvQtdGA0YzQtdCy0L3QsFwiLFwiaWRcIjozMTIwLFwib2ZmaWNlXCI6ODUsXCJsb2dpblwiOlwiY2hlcmVweWFua29udlwifSx7XCJuYW1lXCI6XCLQoNC+0LbQsNC10LLQsCDQmNGA0LjQvdCwINCu0YDRjNC10LLQvdCwXCIsXCJpZFwiOjMwNTYsXCJvZmZpY2VcIjo4NSxcImxvZ2luXCI6XCJyb3poYWV2YWl5dVwifSx7XCJuYW1lXCI6XCLQqNC40YDQvtC60LjRhSDQntC70YzQs9CwINCu0YDRjNC10LLQvdCwXCIsXCJpZFwiOjMwNTUsXCJvZmZpY2VcIjo4NSxcImxvZ2luXCI6XCJzaGlyb2tpa2hveXVcIn0se1wibmFtZVwiOlwi0JzQsNGB0LvRj9C90LrQviDQktC40YLQsNC70LjQuSDQktC40YLQsNC70YzQtdCy0LjRh1wiLFwiaWRcIjozMDU0LFwib2ZmaWNlXCI6ODUsXCJsb2dpblwiOlwibWFzbHlhbmtvdnZcIn0se1wibmFtZVwiOlwi0KDRi9Cx0LjQvdCwINCQ0L3QvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCIsXCJpZFwiOjI1NzgsXCJvZmZpY2VcIjo4NSxcImxvZ2luXCI6XCJyeWliaW5hYW5cIn0se1wibmFtZVwiOlwi0JzQsNC60LDRgNC+0LIg0JDQu9C10LrRgdCw0L3QtNGAINCS0LjQutGC0L7RgNC+0LLQuNGHXCIsXCJpZFwiOjE3ODYsXCJvZmZpY2VcIjo4NSxcImxvZ2luXCI6XCJtYWthcm92YXZcIn0se1wibmFtZVwiOlwi0JDQs9C10LXQstCwINCV0LvQtdC90LAg0JDQvdCw0YLQvtC70YzQtdCy0L3QsFwiLFwiaWRcIjoxNTc0LFwib2ZmaWNlXCI6ODUsXCJsb2dpblwiOlwiYWdlZXZhXCJ9LHtcIm5hbWVcIjpcItCd0L7QstC40YbQutCw0Y8g0JXQu9C10L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwiLFwiaWRcIjoxNTczLFwib2ZmaWNlXCI6ODUsXCJsb2dpblwiOlwibm92aWNrYXlhXCJ9LHtcIm5hbWVcIjpcItCU0YPQsdC+0LLQuNGG0LrQsNGPINCQ0LvRjNCx0LjQvdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIixcImlkXCI6MTU3MCxcIm9mZmljZVwiOjg1LFwibG9naW5cIjpcImR1Ym92aXRza2F5YVwifSx7XCJuYW1lXCI6XCLQn9GA0L7QvdGM0LrQuNC90LAg0K7Qu9C40Y8g0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6MTU2OSxcIm9mZmljZVwiOjg1LFwibG9naW5cIjpcInByb25raW5hXCJ9LHtcIm5hbWVcIjpcItCi0LjRgNGB0LrQuNGFINCe0LrRgdCw0L3QsCDQkNC90LDRgtC+0LvRjNC10LLQvdCwXCIsXCJpZFwiOjE1NjgsXCJvZmZpY2VcIjo4NSxcImxvZ2luXCI6XCJ0aXJza2lraFwifSx7XCJuYW1lXCI6XCLQkdC+0LPQvtC80L7Qu9C+0LLQsCDQnNCw0YDQuNC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6MTU2NyxcIm9mZmljZVwiOjg1LFwibG9naW5cIjpcImJvZ29tb2xvdmFcIn0se1wibmFtZVwiOlwi0J/QuNC70LXRhtC60LDRjyDQodCy0LXRgtC70LDQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCIsXCJpZFwiOjE1NjYsXCJvZmZpY2VcIjo4NSxcImxvZ2luXCI6XCJwaWxlY2theWFcIn0se1wibmFtZVwiOlwi0JrQvtGC0L7QstCwINCu0LvQuNGPINCh0LXRgNCz0LXQtdCy0L3QsFwiLFwiaWRcIjoxNTY1LFwib2ZmaWNlXCI6ODUsXCJsb2dpblwiOlwia290b3ZhXCJ9LHtcIm5hbWVcIjpcItCh0YPRidC10L3QutC+INCh0LLQtdGC0LvQsNC90LAg0JzQsNGA0LDRgtC+0LLQvdCwXCIsXCJpZFwiOjE1NjQsXCJvZmZpY2VcIjo4NSxcImxvZ2luXCI6XCJzdXNoZW5rb1wifSx7XCJuYW1lXCI6XCLQk9C+0LvQvtC80LjQtNC+0LLQsCDQkNC90L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIixcImlkXCI6MTUxMyxcIm9mZmljZVwiOjg1LFwibG9naW5cIjpcImdvbG9taWRvdmFcIn0se1wibmFtZVwiOlwi0KHQuNC00L7RgNC+0LLQsCDQndCw0YLQsNC70YzRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjoxNDkzLFwib2ZmaWNlXCI6ODUsXCJsb2dpblwiOlwic2lkb3JvdmFudlwifSx7XCJuYW1lXCI6XCLQn9C10YLRgNC+0LLQsCDQndCw0YLQsNC70YzRjyDQkNC90LDRgtC+0LvRjNC10LLQvdCwXCIsXCJpZFwiOjM4NTAsXCJvZmZpY2VcIjo4NixcImxvZ2luXCI6XCJwZXRyb3ZhbmFcIn0se1wibmFtZVwiOlwi0JvQtdC90YYg0J3QsNGC0LDQu9GM0Y8g0KHRgtCw0L3QuNGB0LvQsNCy0L7QstC90LBcIixcImlkXCI6Mzc0OSxcIm9mZmljZVwiOjg2LFwibG9naW5cIjpcImxlbmNuc1wifSx7XCJuYW1lXCI6XCLQodC10LLQutC+INCd0LDRgtCw0LvRjNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCIsXCJpZFwiOjE4MTIsXCJvZmZpY2VcIjo4NixcImxvZ2luXCI6XCJzZXZrb25hXCJ9LHtcIm5hbWVcIjpcItCa0YPQt9GM0LzQtdC90LrQviDQldCy0LPQtdC90LjRjyDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjoxODA2LFwib2ZmaWNlXCI6ODYsXCJsb2dpblwiOlwia3V6bWVua29ldlwifSx7XCJuYW1lXCI6XCLQqNC40YDRj9C10LLQsCDQrtC70LjRjyDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIixcImlkXCI6MTc2MCxcIm9mZmljZVwiOjg2LFwibG9naW5cIjpcInNoaXJ5YWV2YXl1dlwifSx7XCJuYW1lXCI6XCLQn9Cw0LLQu9C+0LIg0JDQvdCw0YLQvtC70LjQuSDQodC10YDQs9C10LXQstC40YdcIixcImlkXCI6MTcyMixcIm9mZmljZVwiOjg2LFwibG9naW5cIjpcInBhdmxvdmFzXCJ9LHtcIm5hbWVcIjpcItCh0YLQtdC/0LDQvdGO0Log0JvRjtCx0L7QstGMINCd0LjQutC+0LvQsNC10LLQvdCwXCIsXCJpZFwiOjE3MjEsXCJvZmZpY2VcIjo4NixcImxvZ2luXCI6XCJzdGVwYW55dWtsblwifSx7XCJuYW1lXCI6XCLQmtCw0YDQvdCw0YPRhSDQlNCw0YDRjNGPINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwLdCh0YLQvtC70LXRgtC+0LLQsFwiLFwiaWRcIjoxNzA1LFwib2ZmaWNlXCI6ODYsXCJsb2dpblwiOlwia2FycGljaGtvZGFcIn0se1wibmFtZVwiOlwi0J/QtdGA0LXQtNC10YDQuNC90LAg0JvQsNGA0LjRgdCwINCT0LXQvdC90LDQtNGM0LXQstC90LBcIixcImlkXCI6MTgyMSxcIm9mZmljZVwiOjg4LFwibG9naW5cIjpcInBlcmVkZXJpbmFsZ1wifSx7XCJuYW1lXCI6XCLQmtGD0YHRgtC+0LLQsCDQndCw0LTQtdC20LTQsCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwiLFwiaWRcIjoxNzA3LFwib2ZmaWNlXCI6ODgsXCJsb2dpblwiOlwia3VzdG92YW5cIn0se1wibmFtZVwiOlwi0JPRgNC40LPQvtGA0YzQtdCy0LAg0KHQstC10YLQu9Cw0L3QsCDQmtCw0YDQuNC80L7QstC90LBcIixcImlkXCI6MTY5MyxcIm9mZmljZVwiOjg4LFwibG9naW5cIjpcImdyaWdvcmV2YXNrXCJ9LHtcIm5hbWVcIjpcItCn0LDRg9GB0L7QstGB0LrQsNGPINCc0LDRgNCz0LDRgNC40YLQsCDQndC40LrQvtC70LDQtdCy0L3QsFwiLFwiaWRcIjoxNjYxLFwib2ZmaWNlXCI6ODgsXCJsb2dpblwiOlwiY2hhdXNvdnNrYXlhbVwifSx7XCJuYW1lXCI6XCLQotC40LzQvtGI0LXQvdC60L4g0JzQsNGA0LjQvdCwINCc0LXRgNGD0LbQsNC90L7QstC90LBcIixcImlkXCI6MTY0MixcIm9mZmljZVwiOjg4LFwibG9naW5cIjpcInRpbW9zaGVua29tXCJ9LHtcIm5hbWVcIjpcItCf0LXRgdGC0YDQuNC60L7QstCwINCS0LjQutGC0L7RgNC40Y8g0JLQuNC60YLQvtGA0L7QstC90LBcIixcImlkXCI6MTUxNyxcIm9mZmljZVwiOjg4LFwibG9naW5cIjpcInBlc3RyaWtvdmFcIn0se1wibmFtZVwiOlwi0JvQsNGA0LjQvSDQmNCy0LDQvSDQrtGA0YzQtdCy0LjRh1wiLFwiaWRcIjozOTQ1LFwib2ZmaWNlXCI6ODksXCJsb2dpblwiOlwibGFyaW5peXVcIn0se1wibmFtZVwiOlwi0KHQuNGC0L3QtdGAINCV0LvQtdC90LAg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6MzAxNixcIm9mZmljZVwiOjg5LFwibG9naW5cIjpcInNpdG5lcmVhXCJ9LHtcIm5hbWVcIjpcItCv0LrQvtCy0LvQtdCy0LAg0KHQvtGE0LjRjyDQrtGA0YzQtdCy0L3QsFwiLFwiaWRcIjoyMzIyLFwib2ZmaWNlXCI6ODksXCJsb2dpblwiOlwieWFrb3ZsZXZhc3l1XCJ9LHtcIm5hbWVcIjpcItCf0LDQstC70LXRhtC+0LLQsCDQkNC70LjQvdCwINCQ0L3QtNGA0LXQtdCy0L3QsFwiLFwiaWRcIjoxNjY0LFwib2ZmaWNlXCI6ODksXCJsb2dpblwiOlwicGF2bGVjb3ZhYWFcIn0se1wibmFtZVwiOlwi0JLQsNGA0LDQutGB0LjQvdCwINCY0YDQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjE2NTQsXCJvZmZpY2VcIjo4OSxcImxvZ2luXCI6XCJ2YXJha3NpbmFcIn0se1wibmFtZVwiOlwi0KTQuNC70LjQv9C/0LXQvdC60L4g0KLQsNGC0YzRj9C90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6MTYzOCxcIm9mZmljZVwiOjg5LFwibG9naW5cIjpcImZpbGlwcGVua29cIn0se1wibmFtZVwiOlwi0JrQsNGA0L/QsNGH0LXQstCwINCV0LrQsNGC0LXRgNC40L3QsCDQrtGA0YzQtdCy0L3QsFwiLFwiaWRcIjoxNjM1LFwib2ZmaWNlXCI6ODksXCJsb2dpblwiOlwia2FycGFjaGV2YWV5dVwifSx7XCJuYW1lXCI6XCLQoNGD0LHQsNGF0LjQvdCwINCd0LDRgtCw0LvRjNGPINCd0LjQutC+0LvQsNC10LLQvdCwXCIsXCJpZFwiOjE2MzMsXCJvZmZpY2VcIjo4OSxcImxvZ2luXCI6XCJydWJha2hpbmFublwifSx7XCJuYW1lXCI6XCLQmtC70LXQudC9INCQ0L3QttC10LvQuNC60LAg0KHQtdGA0LPQtdC10LLQvdCwXCIsXCJpZFwiOjE1OTEsXCJvZmZpY2VcIjo4OSxcImxvZ2luXCI6XCJzb3NuaW5hYXNcIn0se1wibmFtZVwiOlwi0JrRgNC+0YXQsNC70LXQstCwINCY0YDQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjE1MTgsXCJvZmZpY2VcIjo4OSxcImxvZ2luXCI6XCJrcm9raGFsZXZhXCJ9LHtcIm5hbWVcIjpcItCi0L7Qv9C+0YDQutC+0LLQsCDQntC70YzQs9CwINCQ0LvQtdC60YHQtdC10LLQvdCwXCIsXCJpZFwiOjE0OTgsXCJvZmZpY2VcIjo4OSxcImxvZ2luXCI6XCJ0b3BvcmtvdmFvYVwifSx7XCJuYW1lXCI6XCLQmtC+0LnQvdC+0LLQsCDQntC60YHQsNC90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIixcImlkXCI6MTQ5NCxcIm9mZmljZVwiOjg5LFwibG9naW5cIjpcImtvaW5vdmFcIn0se1wibmFtZVwiOlwi0JHQsNC60LXQvdC+0LLQsCDQkNC70LjQvdCwXCIsXCJpZFwiOjEyMDgsXCJvZmZpY2VcIjo4OSxcImxvZ2luXCI6XCJiYWtlbm92YWFrXCJ9LHtcIm5hbWVcIjpcItCU0LXRgNCz0LjQu9C10LLQsCDQkNC90LDRgdGC0LDRgdC40Y8g0JDQvdC00YDQtdC10LLQvdCwXCIsXCJpZFwiOjM5NDgsXCJvZmZpY2VcIjo5NixcImxvZ2luXCI6XCJkZXJnaWxldmExXCJ9LHtcIm5hbWVcIjpcItCg0LXQutC6INCe0LvRjNCz0LAg0JrQvtC90YHRgtCw0L3RgtC40L3QvtCy0L3QsFwiLFwiaWRcIjozODg4LFwib2ZmaWNlXCI6OTYsXCJsb2dpblwiOlwicmVra29rXCJ9LHtcIm5hbWVcIjpcItCf0LDQvdC+0LLQuNGG0YvQvSDQlNCw0L3QuNC70LAg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC40YdcIixcImlkXCI6Mzg4NyxcIm9mZmljZVwiOjk2LFwibG9naW5cIjpcInBhbm92aWN5aW5kYVwifSx7XCJuYW1lXCI6XCLQmtGD0LfQvdC10YbQvtCy0LAg0JvRjtC00LzQuNC70LAg0JzQuNGF0LDQudC70L7QstC90LBcIixcImlkXCI6MTcwNixcIm9mZmljZVwiOjk2LFwibG9naW5cIjpcImt1em5ldHNvdmFsXCJ9LHtcIm5hbWVcIjpcItCU0LzQuNGC0YDQuNC10LLQsCDQmNGA0LjQvdCwINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCIsXCJpZFwiOjE2OTgsXCJvZmZpY2VcIjo5NixcImxvZ2luXCI6XCJkbWl0cmlldmFcIn0se1wibmFtZVwiOlwi0JXRgNC10LzQuNC90LAg0JvRjtC00LzQuNC70LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6MTY3MSxcIm9mZmljZVwiOjk2LFwibG9naW5cIjpcImVyZW1pbmFsblwifSx7XCJuYW1lXCI6XCLQldC70YzRh9C10L3QutC+INCT0YDQuNCz0L7RgNC40Lkg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC40YdcIixcImlkXCI6Mzg4MSxcIm9mZmljZVwiOjk3LFwibG9naW5cIjpcImVsY2hlbmtvZ2FcIn0se1wibmFtZVwiOlwi0JzQsNGA0LrQvtCy0LAg0KLQsNGC0YzRj9C90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwiLFwiaWRcIjozODIyLFwib2ZmaWNlXCI6OTcsXCJsb2dpblwiOlwibWFya292YXRnXCJ9LHtcIm5hbWVcIjpcItCo0YPRiNC70Y/QutC+0LIg0JPRgNC40LPQvtGA0LjQuSDQktC70LDQtNC40LzQuNGA0L7QstC40YdcIixcImlkXCI6MzgxMSxcIm9mZmljZVwiOjk3LFwibG9naW5cIjpcInNodXNobHlha292Z3ZcIn0se1wibmFtZVwiOlwi0KHQtdC70LjQvNGF0LDQvdC+0LIg0KDRg9GB0LvQsNC9INCh0LXQu9C40LzRhdCw0L3QvtCy0LjRh1wiLFwiaWRcIjoxOTU4LFwib2ZmaWNlXCI6OTcsXCJsb2dpblwiOlwic2VsaW1raGFub3Zyc1wifSx7XCJuYW1lXCI6XCLQk9GA0LjQs9C+0YDRjNC10LLQsCDQldC70LXQvdCwINCV0LLQs9C10L3RjNC10LLQvdCwXCIsXCJpZFwiOjE4OTYsXCJvZmZpY2VcIjo5NyxcImxvZ2luXCI6XCJncmlnb3JldmFlZVwifSx7XCJuYW1lXCI6XCLQmtC+0LLQsNC70LXQstCwINCS0LDQu9C10L3RgtC40L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIixcImlkXCI6MTc5MixcIm9mZmljZVwiOjk3LFwibG9naW5cIjpcImtvdmFsZXZhdnZcIn0se1wibmFtZVwiOlwi0J/Rg9Cz0LDRh9C10LLQsCDQntC70YzQs9CwINCT0LXQvtGA0LPQuNC10LLQvdCwXCIsXCJpZFwiOjE3NzQsXCJvZmZpY2VcIjo5NyxcImxvZ2luXCI6XCJncmlzaGluYW9nXCJ9LHtcIm5hbWVcIjpcItCQ0LLQuNC70L7QstCwINCe0LrRgdCw0L3QsCDQodC10YDQs9C10LXQstC90LBcIixcImlkXCI6MTU3NyxcIm9mZmljZVwiOjk3LFwibG9naW5cIjpcImF2aWxvdmFvc1wifSx7XCJuYW1lXCI6XCLQlNGD0LHRgNC+0LLQuNC9INCQ0L3QtNGA0LXQuSDQmNCz0L7RgNC10LLQuNGHXCIsXCJpZFwiOjE1NzYsXCJvZmZpY2VcIjo5NyxcImxvZ2luXCI6XCJkdWJyb3ZpbmFpXCJ9LHtcIm5hbWVcIjpcItCk0LXQtNC+0YDQuNGJ0LXQsiDQkNC90YLQvtC9INCQ0LvQtdC60YHQtdC10LLQuNGHXCIsXCJpZFwiOjE1MzAsXCJvZmZpY2VcIjo5NyxcImxvZ2luXCI6XCJmZWRvcmlzY2hldmFhXCJ9LHtcIm5hbWVcIjpcItCi0YDRg9GF0LDRh9C10LLQsCDQndCw0YLQsNC70YzRjyDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIixcImlkXCI6Mzk0MixcIm9mZmljZVwiOjk4LFwibG9naW5cIjpcInRydWtoYWNoZXZhbnZcIn0se1wibmFtZVwiOlwi0JrQvtC90L7QvdC10L3QutC+INCT0YDQuNCz0L7RgNC40Lkg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC40YdcIixcImlkXCI6MzkyOCxcIm9mZmljZVwiOjk4LFwibG9naW5cIjpcImtvbm9uZW5rb2dhXCJ9LHtcIm5hbWVcIjpcItCd0LXQvNC40YDQvtCy0YHQutC40Lkg0JTQvNC40YLRgNC40Lkg0JjQs9C+0YDQtdCy0LjRh1wiLFwiaWRcIjozODY0LFwib2ZmaWNlXCI6OTgsXCJsb2dpblwiOlwibmVtaXJvdnNraXlkaVwifSx7XCJuYW1lXCI6XCLQltGD0YDQsNCy0LvQtdCy0LAg0JXQu9C10L3QsCDQk9C10L7RgNCz0LjQtdCy0L3QsFwiLFwiaWRcIjozNDM2LFwib2ZmaWNlXCI6OTgsXCJsb2dpblwiOlwiemh1cmF2bGV2YWVnXCJ9LHtcIm5hbWVcIjpcItCk0LXQtNC+0YDQvtCy0LAg0JvQsNGA0LjRgdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCIsXCJpZFwiOjI2NDgsXCJvZmZpY2VcIjo5OCxcImxvZ2luXCI6XCJmZWRvcm92YWxuXCJ9LHtcIm5hbWVcIjpcItCU0LDQstC70LDRgtC+0LLQsCDQndC+0LTQuNGA0LAg0JDRhdC80LXQtNC+0LLQvdCwXCIsXCJpZFwiOjI2NDIsXCJvZmZpY2VcIjo5OCxcImxvZ2luXCI6XCJkYXZsYXRvdmFuYVwifSx7XCJuYW1lXCI6XCLQlNC10LzQtdC90YLRjNC10LLQsCDQldC70LXQvdCwINCu0YDRjNC10LLQvdCwXCIsXCJpZFwiOjE3MDMsXCJvZmZpY2VcIjo5OCxcImxvZ2luXCI6XCJkZW1lbnRldmFleXVcIn0se1wibmFtZVwiOlwi0JzQsNC60YHQsNCz0LjQvdCwINCi0LDQvNCw0YDQsCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwiLFwiaWRcIjoxNjY4LFwib2ZmaWNlXCI6OTgsXCJsb2dpblwiOlwibWFrc2FnaW5hdGFcIn0se1wibmFtZVwiOlwi0JbRg9C60L7QstCwINCb0Y7QtNC80LjQu9CwINCd0LjQutC+0LvQsNC10LLQvdCwXCIsXCJpZFwiOjE2NTIsXCJvZmZpY2VcIjo5OCxcImxvZ2luXCI6XCJ6aHVrb3ZhbG5cIn0se1wibmFtZVwiOlwi0JTQsNC00L7Rj9C9INCa0L3QsNGA0LjQuiDQoNCw0YTQuNC60L7QstC90LBcIixcImlkXCI6MTU5NixcIm9mZmljZVwiOjk4LFwibG9naW5cIjpcImRhZG95YW5cIn0se1wibmFtZVwiOlwi0JLQuNC30LjQs9C40L3QsCDQotCw0YLRjNGP0L3QsCDQkNC70LXQutGB0LXQtdCy0L3QsFwiLFwiaWRcIjoxNTc4LFwib2ZmaWNlXCI6OTgsXCJsb2dpblwiOlwidml6aWdpbmFcIn0se1wibmFtZVwiOlwi0KLQuNC80L7RiNC10L3QutC+INCT0LDQu9C40L3QsCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwiLFwiaWRcIjozNzEwLFwib2ZmaWNlXCI6MTAwLFwibG9naW5cIjpcInRpbW9zaGVua29nYVwifSx7XCJuYW1lXCI6XCLQndC10LrRgNCw0YHQvtCy0LAg0JDQvdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjMwMDQsXCJvZmZpY2VcIjoxMDAsXCJsb2dpblwiOlwibmVrcmFzb3ZhYXZcIn0se1wibmFtZVwiOlwi0J/QuNGA0L7QttC60L7QsiDQlNC80LjRgtGA0LjQuSDQodC10YDQs9C10LXQstC40YdcIixcImlkXCI6Mjk4NyxcIm9mZmljZVwiOjEwMCxcImxvZ2luXCI6XCJwaXJvemhrb3Zkc1wifSx7XCJuYW1lXCI6XCLQp9Cw0L3QvtCyINCS0Y/Rh9C10YHQu9Cw0LIg0JPRgNC40LPQvtGA0YzQtdCy0LjRh1wiLFwiaWRcIjoxOTY0LFwib2ZmaWNlXCI6MTAwLFwibG9naW5cIjpcImNoYW5vdnZnXCJ9LHtcIm5hbWVcIjpcItCa0LDQtNC10YDQutCw0LXQsiDQkNC70YzQsdC10YDRgiDQkNC70LXQutGB0LDQvdC00YDQvtCy0LjRh1wiLFwiaWRcIjoxOTQ3LFwib2ZmaWNlXCI6MTAwLFwibG9naW5cIjpcImthZGVya2FldlwifSx7XCJuYW1lXCI6XCLQodGD0LLQvtGA0L7QstCwINCc0LDRgNC40Y8g0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6MTg0MixcIm9mZmljZVwiOjEwMCxcImxvZ2luXCI6XCJzdXZvcm92YW1hXCJ9LHtcIm5hbWVcIjpcItCb0LXQstGH0YPQuiDQndCw0LTQtdC20LTQsCDQkNC70LXQutGB0LXQtdCy0L3QsFwiLFwiaWRcIjoxNzUwLFwib2ZmaWNlXCI6MTAwLFwibG9naW5cIjpcImxldmNodWtuYVwifSx7XCJuYW1lXCI6XCLQmtGA0LjQttC10LLQuNGHINCd0LDRgtCw0LvRjNGPINCT0LXQvdC90LDQtNGM0LXQstC90LBcIixcImlkXCI6MTU4NSxcIm9mZmljZVwiOjEwMCxcImxvZ2luXCI6XCJrcml6aGV2aWNobmdcIn0se1wibmFtZVwiOlwi0JHQvtC70LzQvtGB0L7QstCwINCb0LDRgNC40YHQsCDQkNC90LDRgtC+0LvRjNC10LLQvdCwXCIsXCJpZFwiOjE1ODAsXCJvZmZpY2VcIjoxMDAsXCJsb2dpblwiOlwiYm9sbW9zb3ZhXCJ9LHtcIm5hbWVcIjpcItCc0LXQt9C10L3RhtC10LLQsCDQodCy0LXRgtC70LDQvdCwINCS0Y/Rh9C10YHQu9Cw0LLQvtCy0L3QsFwiLFwiaWRcIjoxNTM4LFwib2ZmaWNlXCI6MTAwLFwibG9naW5cIjpcIm1lemVuY2V2YXN2XCJ9LHtcIm5hbWVcIjpcItCh0LDQvNCx0YPRgCDQmNGA0LjQvdCwINCb0LXQvtC90LjQtNC+0LLQvdCwXCIsXCJpZFwiOjE1MzcsXCJvZmZpY2VcIjoxMDAsXCJsb2dpblwiOlwic2FtYnVyXCJ9LHtcIm5hbWVcIjpcItCc0L7RgNC+0LfQvtCy0LAg0JXQu9C10L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCIsXCJpZFwiOjQxMCxcIm9mZmljZVwiOjEwMCxcImxvZ2luXCI6XCJzaGlzaG1hcmV2YWVnXCJ9LHtcIm5hbWVcIjpcItCk0LXQtNC+0YDRh9C10L3QutC+INCU0LzQuNGC0YDQuNC5INCh0LXRgNCz0LXQtdCy0LjRh1wiLFwiaWRcIjozODQ3LFwib2ZmaWNlXCI6MTAyLFwibG9naW5cIjpcImZlZG9yY2hlbmtvZHNcIn0se1wibmFtZVwiOlwi0JHQsNCx0L7RgNGL0LrQuNC9INCS0LjRgtCw0LvQuNC5INCS0LDQu9C10YDRjNC10LLQuNGHXCIsXCJpZFwiOjY0MixcIm9mZmljZVwiOjEwMixcImxvZ2luXCI6XCJiYWJvcnlpa2ludnZcIn0se1wibmFtZVwiOlwi0JrQsNC/0YbQvtCy0LAg0J7Qu9GM0LPQsCDQnNC40YXQsNC50LvQvtCy0L3QsFwiLFwiaWRcIjozOTAsXCJvZmZpY2VcIjoxMDIsXCJsb2dpblwiOlwia2FwY292YW9tXCJ9LHtcIm5hbWVcIjpcItCT0L7RgNCx0YPQvdC+0LLQsCDQmNGA0LjQvdCwINCQ0L3QtNGA0LXQtdCy0L3QsFwiLFwiaWRcIjozODksXCJvZmZpY2VcIjoxMDIsXCJsb2dpblwiOlwiZ29yYnVub3ZhaWFcIn0se1wibmFtZVwiOlwi0JrQsNC/0YbQvtCyINCc0LjRhdCw0LjQuyDQntC70LXQs9C+0LLQuNGHXCIsXCJpZFwiOjEwOCxcIm9mZmljZVwiOjEwMixcImxvZ2luXCI6XCJrYXBjb3Ztb1wifSx7XCJuYW1lXCI6XCLQr9C90LHRg9C70LDRgtC+0LLQsCDQlNC40LvRj9GA0LAg0KDQsNCy0LjQu9GM0LXQstC90LBcIixcImlkXCI6MTA3LFwib2ZmaWNlXCI6MTAyLFwibG9naW5cIjpcInlhbmJ1bGF0b3ZhZHJcIn0se1wibmFtZVwiOlwi0KHQtdC80LXQvdC40YXQuNC90LAg0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIixcImlkXCI6MTA2LFwib2ZmaWNlXCI6MTAyLFwibG9naW5cIjpcInNlbWVuaWhpbmFcIn0se1wibmFtZVwiOlwi0KTQuNC70YzRh9C10L3QutC+INCh0YLQsNC90LjRgdC70LDQsiDQldCy0LPQtdC90YzQtdCy0LjRhy3Qm9C10L3QuNC90LBcIixcImlkXCI6MTU4OCxcIm9mZmljZVwiOjEwNyxcImxvZ2luXCI6XCJmaWxjaGVua29zZVwifSx7XCJuYW1lXCI6XCLQmNGH0LDQu9C+0LLRgdC60LDRjyDQmNC90L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjozOTAzLFwib2ZmaWNlXCI6MTEwLFwibG9naW5cIjpcImljaGFsb3Zza2F5YWl2XCJ9LHtcIm5hbWVcIjpcItCa0LDRgNC90LDRg9GFINCU0LDRgNGM0Y8g0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6MzgzNixcIm9mZmljZVwiOjExMCxcImxvZ2luXCI6XCJrYXJuYXVraGRhXCJ9LHtcIm5hbWVcIjpcItCe0YDQu9C+0LIg0JDQvdC00YDQtdC5INCt0LTRg9Cw0YDQtNC+0LLQuNGHXCIsXCJpZFwiOjM3MzMsXCJvZmZpY2VcIjoxMTAsXCJsb2dpblwiOlwib3Jsb3ZheWVcIn0se1wibmFtZVwiOlwi0KHQvtC70L7QstGM0LXQstCwINCe0LvQtdGB0Y8g0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjM2OTYsXCJvZmZpY2VcIjoxMTAsXCJsb2dpblwiOlwic29sb3ZldmFvdlwifSx7XCJuYW1lXCI6XCLQktC+0YDQvtC90L7QuSDQktGP0YfQtdGB0LvQsNCyINCT0LXQvdC90LDQtNGM0LXQstC40YdcIixcImlkXCI6Mjk2NCxcIm9mZmljZVwiOjExMCxcImxvZ2luXCI6XCJ2b3Jvbm95dmdcIn0se1wibmFtZVwiOlwi0JHQsNGA0LDQvdC+0LLRgdC60LjQuSDQlNCw0L3QuNC7INCU0LXQvdC40YHQvtCy0LjRh1wiLFwiaWRcIjoyNTkxLFwib2ZmaWNlXCI6MTEwLFwibG9naW5cIjpcImJhcmFub3Zza2l5ZGRcIn0se1wibmFtZVwiOlwi0JzQsNC60LDRgNC10L3QutC+INCu0LvQuNGPINCY0LLQsNC90L7QstC90LBcIixcImlkXCI6MjEwMixcIm9mZmljZVwiOjExMCxcImxvZ2luXCI6XCJtYWthcmVua295dWlcIn0se1wibmFtZVwiOlwi0JrRgNCw0LLRh9C10L3QutC+INCv0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjoxOTA5LFwib2ZmaWNlXCI6MTEwLFwibG9naW5cIjpcImtyYXZjaGVua295YXZcIn0se1wibmFtZVwiOlwi0JLQu9Cw0YHQvtCy0LAg0J3QsNGC0LDQu9GM0Y8g0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6MTg5MSxcIm9mZmljZVwiOjExMCxcImxvZ2luXCI6XCJ2bGFzb3Zhbm5cIn0se1wibmFtZVwiOlwi0JTQvtCx0YDRi9C90LjQvdCwINCV0LvQuNC30LDQstC10YLQsCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwiLFwiaWRcIjoxODg3LFwib2ZmaWNlXCI6MTEwLFwibG9naW5cIjpcImRvYnJ5aW5pbmFlYVwifSx7XCJuYW1lXCI6XCLQnNC10YDQutGD0LvQvtCy0LAg0JvRjtCx0L7QstGMINCQ0L3QsNGC0L7Qu9GM0LXQstC90LBcIixcImlkXCI6MTg3NCxcIm9mZmljZVwiOjExMCxcImxvZ2luXCI6XCJtZXJrdWxvdmFsYVwifSx7XCJuYW1lXCI6XCLQotC+0YDQs9Cw0YjQvtCy0LAg0JvRjtCx0L7QstGMINCY0LLQsNC90L7QstC90LBcIixcImlkXCI6MTg3MCxcIm9mZmljZVwiOjExMCxcImxvZ2luXCI6XCJ0b3JnYXNob3ZhbGlcIn0se1wibmFtZVwiOlwi0KTQuNC70LjQv9C/0L7QstCwINCQ0L3QvdCwINCQ0L3QsNGC0L7Qu9GM0LXQstC90LBcIixcImlkXCI6MTgyOSxcIm9mZmljZVwiOjExMCxcImxvZ2luXCI6XCJmaWxpcHBvdmFhYVwifSx7XCJuYW1lXCI6XCLQmtCw0L3QtdCy0LAg0KDQtdC90LDRgtCwINCu0YDRjNC10LLQvdCwXCIsXCJpZFwiOjM1OTcsXCJvZmZpY2VcIjoxMTEsXCJsb2dpblwiOlwia2FuZXZhcnl1XCJ9LHtcIm5hbWVcIjpcItCY0LLQsNGI0LrQviDQrtC70LjRjyDQpNCw0YDQuNC00L7QstC90LBcIixcImlkXCI6MjMzMyxcIm9mZmljZVwiOjExMSxcImxvZ2luXCI6XCJpdmFzaGtveXVmXCJ9LHtcIm5hbWVcIjpcItCg0LDRh9C40L3RgdC60LDRjyDQrtC70LjRjyDQndC40LrQvtC70LDQtdCy0L3QsFwiLFwiaWRcIjoxNzgyLFwib2ZmaWNlXCI6MTExLFwibG9naW5cIjpcInJhY2hpbnNrYXlheXVuXCJ9LHtcIm5hbWVcIjpcItCh0LrQsNC60YPQvdC+0LLQsCDQmNGA0LjQvdCwINCu0YDRjNC10LLQvdCwXCIsXCJpZFwiOjE3MTYsXCJvZmZpY2VcIjoxMTEsXCJsb2dpblwiOlwic2tha3Vub3ZhXCJ9LHtcIm5hbWVcIjpcItCc0LDQtNC40YHRgdC+0L0g0JXQu9C10L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIixcImlkXCI6MTcxNSxcIm9mZmljZVwiOjExMSxcImxvZ2luXCI6XCJtYWRpc3NvbmV2XCJ9LHtcIm5hbWVcIjpcItCR0YPRgtGM0Y/QvdC+0LLQsCDQkNC70LvQsCDQnNC40YXQsNC50LvQvtCy0L3QsFwiLFwiaWRcIjoxNjg2LFwib2ZmaWNlXCI6MTExLFwibG9naW5cIjpcImJ1dHlhbm92YVwifSx7XCJuYW1lXCI6XCLQoNGP0LHRh9C10L3QutC+INCe0LvRjNCz0LAg0JXQstCz0LXQvdGM0LXQstC90LBcIixcImlkXCI6MTU5MixcIm9mZmljZVwiOjExMSxcImxvZ2luXCI6XCJyeWFiY2hlbmtvb2VcIn0se1wibmFtZVwiOlwi0JDRgNGF0LDQvdCz0LXQu9GM0YHQutC40Lkg0JjQs9C+0YDRjCDQntC70LXQs9C+0LLQuNGHXCIsXCJpZFwiOjMxNjYsXCJvZmZpY2VcIjoxMTQsXCJsb2dpblwiOlwiYXJraGFuZ2Vsc2tpeWlvXCJ9LHtcIm5hbWVcIjpcItCn0LDQutC10L3QvtCy0LAg0KLQsNGC0YzRj9C90LAg0JLQsNGB0LjQu9GM0LXQstC90LBcIixcImlkXCI6MTk3OCxcIm9mZmljZVwiOjExNCxcImxvZ2luXCI6XCJjaGFrZW5vdmF0dlwifSx7XCJuYW1lXCI6XCLQk9GA0Y/Qt9C90L7QsiDQodGC0LDQvdC40YHQu9Cw0LIg0JrQvtC90YHRgtCw0L3RgtC40L3QvtCy0LjRh1wiLFwiaWRcIjoxODI2LFwib2ZmaWNlXCI6MTE0LFwibG9naW5cIjpcImdyeWF6bm92c2tcIn0se1wibmFtZVwiOlwi0J3QuNC60YPQu9C40L3QsCDQotCw0YLRjNGP0L3QsCDQkdC+0YDQuNGB0L7QstC90LBcIixcImlkXCI6MTgxMyxcIm9mZmljZVwiOjExNCxcImxvZ2luXCI6XCJuaWt1bGluYXRiXCJ9LHtcIm5hbWVcIjpcItCh0LLQuNGA0LjQvSDQldCy0LPQtdC90LjQuSDQktCw0LvQtdGA0YzQtdCy0LjRh1wiLFwiaWRcIjoxODAyLFwib2ZmaWNlXCI6MTE0LFwibG9naW5cIjpcInN2aXJpbmV2XCJ9LHtcIm5hbWVcIjpcItCc0LjRhdCw0LnQu9C+0LLQsCDQmNGA0LjQvdCwINCc0LjRhdCw0LnQu9C+0LLQvdCwXCIsXCJpZFwiOjE3NjYsXCJvZmZpY2VcIjoxMTQsXCJsb2dpblwiOlwidm95bm92YWltXCJ9LHtcIm5hbWVcIjpcItCh0LLQuNGA0LjQvdCwINCY0L3QvdCwINCh0LXRgNCz0LXQtdCy0L3QsFwiLFwiaWRcIjoxNzM4LFwib2ZmaWNlXCI6MTE0LFwibG9naW5cIjpcImxhcmlvbm92YXNcIn0se1wibmFtZVwiOlwi0KPQs9GA0L7QstCw0YLQsNGPINCb0LDRgNC40YHQsCDQkdC+0YDQuNGB0L7QstC90LBcIixcImlkXCI6MTY5MixcIm9mZmljZVwiOjExNCxcImxvZ2luXCI6XCJ1Z3JvdmF0YXlhXCJ9LHtcIm5hbWVcIjpcItCl0LDQtNCw0LrQvtCy0YHQutCw0Y8g0K3Qu9GM0LLQuNGA0LAg0JLQuNC60YLQvtGA0L7QstC90LBcIixcImlkXCI6MTY3OSxcIm9mZmljZVwiOjExNCxcImxvZ2luXCI6XCJoYWRha292c2theWFcIn0se1wibmFtZVwiOlwi0KLQtdGA0LXQvdGC0YzQtdCy0LAg0JXQu9C10L3QsCDQodC10YDQs9C10LXQstC90LBcIixcImlkXCI6MTY0OCxcIm9mZmljZVwiOjExNCxcImxvZ2luXCI6XCJ0ZXJlbnRldmFlc1wifSx7XCJuYW1lXCI6XCLQnNCw0L3QsNC60L7QsiDQntC70LXQsyDQmtC40YDQuNC70LvQvtCy0LjRh1wiLFwiaWRcIjozMzk4LFwib2ZmaWNlXCI6MTE2LFwibG9naW5cIjpcIm1hbmFrb3Zva1wifSx7XCJuYW1lXCI6XCLQk9Cw0LnQutC+0LLQsCDQktCw0LvQtdC90YLQuNC90LAg0KHQtdGA0LPQtdC10LLQvdCwXCIsXCJpZFwiOjMyNTYsXCJvZmZpY2VcIjoxMTYsXCJsb2dpblwiOlwiZ2F5a292YXZzXCJ9LHtcIm5hbWVcIjpcItCo0YPQu9GM0LPQsCDQktCw0LvQtdC90YLQuNC90LAg0JjQstCw0L3QvtCy0L3QsFwiLFwiaWRcIjozMDgyLFwib2ZmaWNlXCI6MTE2LFwibG9naW5cIjpcInNodWxnYXZpXCJ9LHtcIm5hbWVcIjpcItCb0LXRgtC10YbQutCw0Y8g0J3QsNGC0LDQu9GM0Y8g0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6MzA4MCxcIm9mZmljZVwiOjExNixcImxvZ2luXCI6XCJsZXRlY2theWFuYVwifSx7XCJuYW1lXCI6XCLQktC40L3QvdC40LrQvtCy0LAg0J7Qu9GM0LPQsCDQkNC70LXQutGB0LDQvdC00YDQvtCy0L3QsFwiLFwiaWRcIjoyNjUzLFwib2ZmaWNlXCI6MTE2LFwibG9naW5cIjpcInZpbm5pa292YW9hXCJ9LHtcIm5hbWVcIjpcItCg0LDRiNC40YLQvtCy0LAg0JzQsNGA0LjQvdCwINCS0LDQu9C10YDRjNC10LLQvdCwXCIsXCJpZFwiOjE4MjcsXCJvZmZpY2VcIjoxMTYsXCJsb2dpblwiOlwicmFzaGl0b3ZhbXZcIn0se1wibmFtZVwiOlwi0J/Rg9C/0YvRiNC10LLQsCDQmNC90L3QsCDQktCw0YHQuNC70YzQtdCy0L3QsFwiLFwiaWRcIjoxNzU4LFwib2ZmaWNlXCI6MTE2LFwibG9naW5cIjpcInB1cHlpc2hldmFpdlwifSx7XCJuYW1lXCI6XCLQkdCw0LfQtdCy0LAg0J7Qu9GM0LPQsCDQndC40LrQvtC70LDQtdCy0L3QsFwiLFwiaWRcIjoxNzU0LFwib2ZmaWNlXCI6MTE2LFwibG9naW5cIjpcImJhemV2YW9uXCJ9LHtcIm5hbWVcIjpcItCh0L7QutC+0LvQvtCyINCQ0LvQtdC60YHQsNC90LTRgCDQktC70LDQtNC40LzQuNGA0L7QstC40YdcIixcImlkXCI6MTcyNixcIm9mZmljZVwiOjExNixcImxvZ2luXCI6XCJzb2tvbG92YXZcIn0se1wibmFtZVwiOlwi0JzQsNC90LDQutC+0LLQsCDQotCw0YLRjNGP0L3QsCDQkNC90LDRgtC+0LvRjNC10LLQvdCwXCIsXCJpZFwiOjE2ODcsXCJvZmZpY2VcIjoxMTYsXCJsb2dpblwiOlwibWFuYWtvdmF0YVwifSx7XCJuYW1lXCI6XCLQkNGA0YLRjtGF0LjQvdCwINCY0YDQuNC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwiLFwiaWRcIjoxNjcwLFwib2ZmaWNlXCI6MTE2LFwibG9naW5cIjpcImFydHl1a2hpbmFpZ1wifSx7XCJuYW1lXCI6XCLQn9C10YLRgNC+0LLQsCDQodCy0LXRgtC70LDQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCIsXCJpZFwiOjE2NTUsXCJvZmZpY2VcIjoxMTYsXCJsb2dpblwiOlwicy5wZXRyb3ZhXCJ9LHtcIm5hbWVcIjpcItCc0LjRgNC+0L3QtdC90LrQviDQn9Cw0LLQtdC7INCQ0L3QtNGA0LXQtdCy0LjRh1wiLFwiaWRcIjoxNTI3LFwib2ZmaWNlXCI6MTE2LFwibG9naW5cIjpcIm1pcm9uZW5rb3BhXCJ9LHtcIm5hbWVcIjpcItCh0LjQvdC40YbRi9C90LAg0JvRjtCx0L7QstGMINCV0LLQs9C10L3RjNC10LLQvdCwXCIsXCJpZFwiOjM3NjcsXCJvZmZpY2VcIjoxMTcsXCJsb2dpblwiOlwic2luaWN5aW5hbGVcIn0se1wibmFtZVwiOlwi0JzQtdC20LXQvdC40L0g0JTQtdC90LjRgSDQkNC90LDRgtC+0LvRjNC10LLQuNGHXCIsXCJpZFwiOjMwOTMsXCJvZmZpY2VcIjoxMTcsXCJsb2dpblwiOlwibWV6aGVuaW5kYVwifSx7XCJuYW1lXCI6XCLQodC10YDQs9C10LXQsiDQldCz0L7RgCDQkNC70LXQutGB0LDQvdC00YDQvtCy0LjRh1wiLFwiaWRcIjoyOTI1LFwib2ZmaWNlXCI6MTE3LFwibG9naW5cIjpcInNlcmdlZXZlYVwifSx7XCJuYW1lXCI6XCLQmtC+0L3QvtCy0LDQu9C+0LLQsCDQndCw0LTQtdC20LTQsCDQktCw0LvQtdC90YLQuNC90L7QstC90LBcIixcImlkXCI6MTgyOCxcIm9mZmljZVwiOjExNyxcImxvZ2luXCI6XCJrb25vdmFsb3ZhbnZcIn0se1wibmFtZVwiOlwi0JPQvtC90YfQsNGA0L7QstCwINCd0LDRgtCw0LvRjNGPINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwiLFwiaWRcIjoxNzMyLFwib2ZmaWNlXCI6MTE3LFwibG9naW5cIjpcImdvbmNoYXJvdmFudlwifSx7XCJuYW1lXCI6XCLQl9Cw0LLQvtGA0LjQvdCwINCe0LvRjNCz0LAg0KHQtdGA0LPQtdC10LLQvdCwXCIsXCJpZFwiOjE3MzEsXCJvZmZpY2VcIjoxMTcsXCJsb2dpblwiOlwic2thY2hpbG92YVwifSx7XCJuYW1lXCI6XCLQlNCw0L3QuNC70L7QstCwINCY0YDQuNC90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIixcImlkXCI6MTY4MCxcIm9mZmljZVwiOjExNyxcImxvZ2luXCI6XCJkYW5pbG92YWl2XCJ9LHtcIm5hbWVcIjpcItCf0LXRgNGE0LjQu9GM0LXQstCwINCV0LvQtdC90LAg0JHQvtGA0LjRgdC+0LLQvdCwXCIsXCJpZFwiOjE1NjIsXCJvZmZpY2VcIjoxMTcsXCJsb2dpblwiOlwicGVyZmlsZXZhXCJ9LHtcIm5hbWVcIjpcItCU0YPQvdCw0LXQstCwINCu0LvQuNGPINCS0LjQutGC0L7RgNC+0LLQvdCwXCIsXCJpZFwiOjE1MjAsXCJvZmZpY2VcIjoxMTcsXCJsb2dpblwiOlwiZHVuYWV2YVwifSx7XCJuYW1lXCI6XCLQn9C10YLRgNC+0LLQsCDQndCw0YLQsNC70YzRjyDQkNC90LDRgtC+0LvRjNC10LLQvdCwLdCR0L7Qs9C00LDQvdCwINGF0LzQtdC70YzQvdC40YZcIixcImlkXCI6MTcxNCxcIm9mZmljZVwiOjEyMixcImxvZ2luXCI6XCJwZXRyb3ZhblwifSx7XCJuYW1lXCI6XCLQn9Cw0LTRh9C10YDQvtCyINCU0LXQvdC40YEg0JDQvdCw0YLQvtC70YzQtdCy0LjRhy3QotGA0YPQtNC+0LLQsNGPXCIsXCJpZFwiOjMxNjQsXCJvZmZpY2VcIjoxMjcsXCJsb2dpblwiOlwicGFkY2hlcm92XCJ9LHtcIm5hbWVcIjpcItCl0YDRg9GJINCS0LvQsNC00LjQvNC40YAg0JLQtdC90LjQsNC80LjQvdC+0LLQuNGHXCIsXCJpZFwiOjE5NTcsXCJvZmZpY2VcIjoxMjcsXCJsb2dpblwiOlwia2hydXNjaHZ2XCJ9LHtcIm5hbWVcIjpcItCe0LvRjNGF0L7QstGB0LrQuNC5INCQ0LvQtdC60YHQtdC5INCQ0LvQtdC60YHQsNC90LTRgNC+0LLQuNGHXCIsXCJpZFwiOjM4OTIsXCJvZmZpY2VcIjoxMjksXCJsb2dpblwiOlwib2xraG92c2tpeWFhXCJ9LHtcIm5hbWVcIjpcItCl0LDRgNC40YLQvtC90LrQuNC90LAg0KLQsNGC0YzRj9C90LAg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6Mzc3MSxcIm9mZmljZVwiOjEyOSxcImxvZ2luXCI6XCJraGFyaXRvbmtpbmF0YVwifSx7XCJuYW1lXCI6XCLQnNC+0LvQvtC00YbQvtCy0LAg0J7Qu9GM0LPQsCDQndC40LrQvtC70LDQtdCy0L3QsFwiLFwiaWRcIjozNjYyLFwib2ZmaWNlXCI6MTI5LFwibG9naW5cIjpcIm1vbG9kY292YW9uXCJ9LHtcIm5hbWVcIjpcItCi0YDQvtGG0LXQvdC60L4g0JrQuNGA0LjQu9C7INCe0LvQtdCz0L7QstC40YdcIixcImlkXCI6MzU0OCxcIm9mZmljZVwiOjEyOSxcImxvZ2luXCI6XCJ0cm9jZW5rb2tvXCJ9LHtcIm5hbWVcIjpcItCc0LjRhdC10LXRh9C60LjQvdCwINCe0LvRjNCz0LAg0JTQvNC40YLRgNC40LXQstC90LBcIixcImlkXCI6MjI4OCxcIm9mZmljZVwiOjEyOSxcImxvZ2luXCI6XCJtaWtoZWVjaGtpbmFvZFwifSx7XCJuYW1lXCI6XCLQmtCw0LvQsNCx0LjQvSDQm9C10L7QvdC40LQg0K7RgNGM0LXQstC40YdcIixcImlkXCI6MjI1NyxcIm9mZmljZVwiOjEyOSxcImxvZ2luXCI6XCJrYWxhYmlubHl1XCJ9LHtcIm5hbWVcIjpcItCf0LXRgtC10YDQuNC80L7QsiDQodC10YDQs9C10Lkg0JDQvdCw0YLQvtC70YzQtdCy0LjRh1wiLFwiaWRcIjoyMTkzLFwib2ZmaWNlXCI6MTI5LFwibG9naW5cIjpcInBldGVyaW1vdnNhXCJ9LHtcIm5hbWVcIjpcItCR0YPQutGA0LXQtdCy0LAg0KHQvdC10LbQsNC90LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6MTgwMSxcIm9mZmljZVwiOjEyOSxcImxvZ2luXCI6XCJidWtyZWV2YXNuXCJ9LHtcIm5hbWVcIjpcItCc0LjQvdCw0LrQvtCy0LAg0JrRgNC40YHRgtC40L3QsCDQkNC90LTRgNC10LXQstC90LBcIixcImlkXCI6MTk0MixcIm9mZmljZVwiOjEzMyxcImxvZ2luXCI6XCJtaW5ha292YWthXCJ9LHtcIm5hbWVcIjpcItCX0LDQtNCw0YDQsCDQkNC70LXQutGB0LDQvdC00YAg0KHQtdGA0LPQtdC10LLQuNGHXCIsXCJpZFwiOjEwODEsXCJvZmZpY2VcIjoxMzMsXCJsb2dpblwiOlwiemFkYXJhYXNcIn0se1wibmFtZVwiOlwi0JLQsNGB0LjQu9GM0YfQtdC90LrQviDQntC70YzQs9CwINCu0YDRjNC10LLQvdCwXCIsXCJpZFwiOjUyOSxcIm9mZmljZVwiOjEzMyxcImxvZ2luXCI6XCJ2YXNpbGNoZW5rb295dVwifSx7XCJuYW1lXCI6XCLQodC60L7RgNC+0LHQvtCz0LDRgtC+0LLQsCDQldC70LXQvdCwINCQ0L3QsNGC0L7Qu9GM0LXQstC90LBcIixcImlkXCI6MzIyNixcIm9mZmljZVwiOjE2NixcImxvZ2luXCI6XCJza29yb2JvZ2F0b3ZhZWFcIn0se1wibmFtZVwiOlwi0JHQtdGA0LTRi9GI0LXQsiDQldCy0LPQtdC90LjQuSDQktC70LDQtNC40YHQu9Cw0LLQvtCy0LjRh1wiLFwiaWRcIjozMTg1LFwib2ZmaWNlXCI6MTY2LFwibG9naW5cIjpcImJlcmR5aXNoZXZldlwifSx7XCJuYW1lXCI6XCLQmtC70LjQstC10YAg0JXQu9C10L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjozMTgzLFwib2ZmaWNlXCI6MTY2LFwibG9naW5cIjpcImtsaXZlcmV2XCJ9LHtcIm5hbWVcIjpcItCY0LLQsNC90L7QstCwINCV0LrQsNGC0LXRgNC40L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwiLFwiaWRcIjozMDM2LFwib2ZmaWNlXCI6MTY2LFwibG9naW5cIjpcIml2YW5vdmFlblwifSx7XCJuYW1lXCI6XCLQl9C10YDQvdC+0LLQsCDQmNGA0LjQvdCwINCh0YLQsNC90LjRgdC70LDQstC+0LLQvdCwXCIsXCJpZFwiOjE5MzQsXCJvZmZpY2VcIjoxNjYsXCJsb2dpblwiOlwiemVybm92YWlzXCJ9LHtcIm5hbWVcIjpcItCR0LDRhdCw0YDQtdCyINCh0LXRgNCz0LXQuSDQodC10YDQs9C10LXQstC40YdcIixcImlkXCI6MTcyMCxcIm9mZmljZVwiOjE2NixcImxvZ2luXCI6XCJiYWtoYXJldnNzXCJ9LHtcIm5hbWVcIjpcItCa0L7RgNC+0LvQtdCy0LAg0JzQsNGA0LjQvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCIsXCJpZFwiOjkwMSxcIm9mZmljZVwiOjE2NixcImxvZ2luXCI6XCJrb3JvbGV2YW12XCJ9LHtcIm5hbWVcIjpcItCa0YPQt9C90LXRhtC+0LLQsCDQkNC70ZHQvdCwINCd0LjQutC+0LvQsNC10LLQvdCwXCIsXCJpZFwiOjM2OSxcIm9mZmljZVwiOjE2NixcImxvZ2luXCI6XCJrdXpuZWNvdmFhblwifSx7XCJuYW1lXCI6XCLQkdC10YDQtNGL0YjQtdCy0LAg0JDQvdC90LAg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6MjM3LFwib2ZmaWNlXCI6MTY2LFwibG9naW5cIjpcImJlcmR5aXNoZXZhYWFcIn0se1wibmFtZVwiOlwi0KDRj9Cx0LrQvtCy0LAg0KHQstC10YLQu9Cw0L3QsCDQktC70LDQtNC40LzQuNGA0L7QstC90LBcIixcImlkXCI6MzI1OCxcIm9mZmljZVwiOjE2OCxcImxvZ2luXCI6XCJyeWFia292YXN2XCJ9LHtcIm5hbWVcIjpcItCo0LXQstC10LvQtdCy0LAg0JDQvdC90LAg0K7RgNGM0LXQstC90LBcIixcImlkXCI6MzAxNyxcIm9mZmljZVwiOjE2OCxcImxvZ2luXCI6XCJzaGV2ZWxldmFcIn0se1wibmFtZVwiOlwi0J/QsNCy0LvRjtGC0LjQvdCwINCa0YDQuNGB0YLQuNC90LAg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6MTg0MyxcIm9mZmljZVwiOjE2OCxcImxvZ2luXCI6XCJwYXZseXV0aW5ha2FcIn0se1wibmFtZVwiOlwi0JjQu9GM0LjRh9C10LLQsCDQodCy0LXRgtC70LDQvdCwINCU0LzQuNGC0YDQuNC10LLQvdCwXCIsXCJpZFwiOjE3MDksXCJvZmZpY2VcIjoxNjgsXCJsb2dpblwiOlwiaWxpY2hldmFzZFwifSx7XCJuYW1lXCI6XCLQl9C10LvQtdC90YHQutCw0Y8g0JzQsNGA0LjQvdCwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsFwiLFwiaWRcIjoxNzA4LFwib2ZmaWNlXCI6MTY4LFwibG9naW5cIjpcInplbGVuc2theWFcIn0se1wibmFtZVwiOlwi0JHRg9C00LDQvdC+0LLQsCDQk9Cw0LvQuNC90LAg0JzQuNGF0LDQudC70L7QstC90LBcIixcImlkXCI6MTY2OSxcIm9mZmljZVwiOjE2OCxcImxvZ2luXCI6XCJidWRhbm92YVwifSx7XCJuYW1lXCI6XCLQn9Cw0LTRh9C10YDQvtCyINCU0LXQvdC40YEg0JDQvdCw0YLQvtC70YzQtdCy0LjRh1wiLFwiaWRcIjozOTIzLFwib2ZmaWNlXCI6MTgxLFwibG9naW5cIjpcInBhZGNoZXJvdmRhXCJ9LHtcIm5hbWVcIjpcItCi0LXRgNC10LHQtdGG0LrQuNC5INCv0LrQvtCyINCS0LDQu9C10YDRjNC10LLQuNGHXCIsXCJpZFwiOjM5MDUsXCJvZmZpY2VcIjoxODEsXCJsb2dpblwiOlwidGVyZWJlY2tpeXlhdlwifSx7XCJuYW1lXCI6XCLQodC40LHQuNGA0Y/QutC+0LLQsCDQltCw0L3QvdCwINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQvdCwXCIsXCJpZFwiOjM3MTIsXCJvZmZpY2VcIjoxODEsXCJsb2dpblwiOlwic2liaXJ5YWtvdmF6aGFcIn0se1wibmFtZVwiOlwi0JLQvtC70YXQuNC9INCc0LjRhdCw0LjQuyDQkNC70LXQutGB0LDQvdC00YDQvtCy0LjRh1wiLFwiaWRcIjozNTY5LFwib2ZmaWNlXCI6MTgxLFwibG9naW5cIjpcInZvbGtoaW5tYVwifSx7XCJuYW1lXCI6XCLQlNC10LzQuNC00L7QsiDQoNC+0LzQsNC9INCQ0LvQtdC60YHQtdC10LLQuNGHXCIsXCJpZFwiOjI5NDIsXCJvZmZpY2VcIjoxODEsXCJsb2dpblwiOlwiZGVtaWRvdnJhXCJ9LHtcIm5hbWVcIjpcItCl0L7RhdC70Y/QstC40L3QsCDQk9Cw0LvQuNC90LAg0JDQu9C10LrRgdCw0L3QtNGA0L7QstC90LBcIixcImlkXCI6MjAxOCxcIm9mZmljZVwiOjE4MSxcImxvZ2luXCI6XCJraG9raGx5YXZpbmFnYVwifSx7XCJuYW1lXCI6XCLQpdC+0YXQu9GP0LLQuNC9INCa0L7QvdGB0YLQsNC90YLQuNC9INCQ0LvQtdC60YHQsNC90LTRgNC+0LLQuNGHXCIsXCJpZFwiOjE0OTcsXCJvZmZpY2VcIjoxODEsXCJsb2dpblwiOlwia2hva2hseWF2aW5rYVwifSx7XCJuYW1lXCI6XCLQkdCw0LbQtdC90L7QsiDQntC70LXQsyDQldCy0LPQtdC90YzQtdCy0LjRh1wiLFwiaWRcIjozODk2LFwib2ZmaWNlXCI6MTkxLFwibG9naW5cIjpcImJhemhlbm92b2VcIn0se1wibmFtZVwiOlwi0KHQsNC80L7Rh9C10YDQvdC+0LLQsCDQldCy0LPQtdC90LjRjyDQpNC10LTQvtGA0L7QstC90LBcIixcImlkXCI6Mzg0MSxcIm9mZmljZVwiOjE5MSxcImxvZ2luXCI6XCJzYW1vY2hlcm5vdmFlZlwifSx7XCJuYW1lXCI6XCLQodGD0LvQuNC8INCV0LLQs9C10L3QuNGPINCg0LDQtNC+0LzQuNGA0L7QstC90LBcIixcImlkXCI6MjY4OSxcIm9mZmljZVwiOjE5MSxcImxvZ2luXCI6XCJzdWxpbWVyXCJ9LHtcIm5hbWVcIjpcItCi0YPRgNC40YnQtdCy0LAg0J7Qu9GM0LPQsCDQodC10YDQs9C10LXQstC90LBcIixcImlkXCI6MjI0MSxcIm9mZmljZVwiOjE5MSxcImxvZ2luXCI6XCJ0dXJpc2NoZXZhb3NcIn0se1wibmFtZVwiOlwi0J3QtdC60YDQsNGB0L7QstCwINCV0LvQtdC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjIyMzgsXCJvZmZpY2VcIjoxOTEsXCJsb2dpblwiOlwibmVrcmFzb3ZhZXZcIn0se1wibmFtZVwiOlwi0J/QtdGC0YDQvtCy0LAg0JDQu9GR0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjoyOTY5LFwib2ZmaWNlXCI6MTk0LFwibG9naW5cIjpcInBldHJlbmtvYVwifSx7XCJuYW1lXCI6XCLQodGD0LLQvtGA0L7QstCwINCb0Y7QtNC80LjQu9CwINCQ0LvQtdC60YHQtdC10LLQvdCwXCIsXCJpZFwiOjE4MDUsXCJvZmZpY2VcIjoxOTQsXCJsb2dpblwiOlwic3V2b3JvdmFsYVwifSx7XCJuYW1lXCI6XCLQktC10LTQtdGA0L3QuNC60L7QsiDQmNC70YzRjyDQndC40LrQvtC70LDQtdCy0LjRh1wiLFwiaWRcIjoxNzg0LFwib2ZmaWNlXCI6MTk0LFwibG9naW5cIjpcInZlZGVybmlrb3ZpblwifSx7XCJuYW1lXCI6XCLQotC40YXQvtC90L7QstCwINCW0LDQvdC90LAg0JLQuNC60YLQvtGA0L7QstC90LBcIixcImlkXCI6MTcwNCxcIm9mZmljZVwiOjE5NCxcImxvZ2luXCI6XCJ0aWtob25vdmF6aFwifSx7XCJuYW1lXCI6XCLQmtCw0L/Rh9C40Log0JzQsNGA0LjRjyDQn9Cw0LLQu9C+0LLQvdCwXCIsXCJpZFwiOjE2OTcsXCJvZmZpY2VcIjoxOTQsXCJsb2dpblwiOlwia2FwY2hpa1wifSx7XCJuYW1lXCI6XCLQnNGD0YHQsNGC0L7QstCwINCT0LDQu9C40L3QsCDQktCw0LvQtdC90YLQuNC90L7QstC90LBcIixcImlkXCI6MTY3MyxcIm9mZmljZVwiOjE5NCxcImxvZ2luXCI6XCJtdXNhdG92YWd2XCJ9LHtcIm5hbWVcIjpcItCb0LXQvdGH0LXQvdC60L4g0J3QsNC00LXQttC00LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6MTY1OSxcIm9mZmljZVwiOjE5NCxcImxvZ2luXCI6XCJsZW5jaGVua29cIn0se1wibmFtZVwiOlwi0JvQsNGC0L7QvdC+0LLQsCDQotCw0YLRjNGP0L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjoxNjM3LFwib2ZmaWNlXCI6MTk0LFwibG9naW5cIjpcImxhdG9ub3ZhXCJ9LHtcIm5hbWVcIjpcItCd0LjQutC40YLQuNC9INCQ0L3QsNGC0L7Qu9C40Lkg0J/QtdGC0YDQvtCy0LjRh1wiLFwiaWRcIjoxNjMxLFwib2ZmaWNlXCI6MTk0LFwibG9naW5cIjpcIm5pa2l0aW5hcFwifSx7XCJuYW1lXCI6XCLQl9Cw0YXQsNGA0L7QstCwINCi0LDRgtGM0Y/QvdCwINCu0YDRjNC10LLQvdCwXCIsXCJpZFwiOjE1NzUsXCJvZmZpY2VcIjoxOTQsXCJsb2dpblwiOlwiemFoYXJvdmFcIn0se1wibmFtZVwiOlwi0JvRj9GH0LjQvdCwINCe0LvRjNCz0LAg0JLQuNC60YLQvtGA0L7QstC90LBcIixcImlkXCI6MzgxMyxcIm9mZmljZVwiOjE5NSxcImxvZ2luXCI6XCJseWFjaGluYW92XCJ9LHtcIm5hbWVcIjpcItCi0L7RgNC+0LLQuNC9INCe0LvQtdCzINCS0LvQsNC00LjQvNC40YDQvtCy0LjRh1wiLFwiaWRcIjozMDQwLFwib2ZmaWNlXCI6MTk1LFwibG9naW5cIjpcInRvcm92aW5vdlwifSx7XCJuYW1lXCI6XCLQotC40YLQvtCy0LAg0J3QsNGC0LDQu9GM0Y8g0JjQstCw0L3QvtCy0L3QsFwiLFwiaWRcIjozMDE1LFwib2ZmaWNlXCI6MTk1LFwibG9naW5cIjpcInRpdG92YW5pXCJ9LHtcIm5hbWVcIjpcItCn0LXQv9C40LfRg9Cx0L7QsiDQlNC80LjRgtGA0LjQuSDQktC40LrRgtC+0YDQvtCy0LjRh1wiLFwiaWRcIjozMDAzLFwib2ZmaWNlXCI6MTk1LFwibG9naW5cIjpcImNoZXBpenVib3ZkdlwifSx7XCJuYW1lXCI6XCLQqNGD0LPQsNC10LLQsCDQk9Cw0LvQuNC90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjI5MzgsXCJvZmZpY2VcIjoxOTUsXCJsb2dpblwiOlwic2h1Z2FldmFndlwifSx7XCJuYW1lXCI6XCLQn9GD0LbQsNC6INCb0LjQu9C40Y8g0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjI1OTMsXCJvZmZpY2VcIjoxOTUsXCJsb2dpblwiOlwicHV6aGFrbHZcIn0se1wibmFtZVwiOlwi0KLQsNGG0LXQvdC60L4g0JDQvdC90LAg0JPQtdC90L3QsNC00YzQtdCy0L3QsFwiLFwiaWRcIjoyMzM4LFwib2ZmaWNlXCI6MTk1LFwibG9naW5cIjpcInRhY2Vua29hZ1wifSx7XCJuYW1lXCI6XCLQn9C+0LzQtdGA0L7QstCwINCc0LDRgNC40Y8g0JPQtdC+0YDQs9C40LXQstC90LBcIixcImlkXCI6MjMzNyxcIm9mZmljZVwiOjE5NSxcImxvZ2luXCI6XCJwb21lcm92YW1nXCJ9LHtcIm5hbWVcIjpcItCh0LjQtNC+0YDQvtCy0LAg0K7Qu9C40Y8g0JDQvdCw0YLQvtC70YzQtdCy0L3QsFwiLFwiaWRcIjoxOTE3LFwib2ZmaWNlXCI6MTk1LFwibG9naW5cIjpcInNpZG9yb3ZheXVhXCJ9LHtcIm5hbWVcIjpcItCU0LjQt9C10L3QtNC+0YDRhCDQkNC90L3QsCDQndC40LrQvtC70LDQtdCy0L3QsFwiLFwiaWRcIjoxODk3LFwib2ZmaWNlXCI6MTk1LFwibG9naW5cIjpcImRpemVuZG9yZmFuXCJ9LHtcIm5hbWVcIjpcItCf0LjQvNC+0L3QvtCy0LAg0J7QutGB0LDQvdCwINCS0LDRgdC40LvRjNC10LLQvdCwXCIsXCJpZFwiOjE1NTEsXCJvZmZpY2VcIjoxOTUsXCJsb2dpblwiOlwicGltb25vdmFvdlwifSx7XCJuYW1lXCI6XCLQkdCw0YDRi9GI0LXQstCwINCe0LrRgdCw0L3QsCDQrtGA0YzQtdCy0L3QsFwiLFwiaWRcIjoxNTQ2LFwib2ZmaWNlXCI6MTk1LFwibG9naW5cIjpcImJhcnlzaGV2YW9cIn0se1wibmFtZVwiOlwi0KbQstC10YLQutC+0LLQsCDQntC60YHQsNC90LAg0JDQvdCw0YLQvtC70YzQtdCy0L3QsFwiLFwiaWRcIjoxNTQ1LFwib2ZmaWNlXCI6MTk1LFwibG9naW5cIjpcInlhbmNoZW5rb29hXCJ9LHtcIm5hbWVcIjpcItCf0LDQu9Cw0YLQvtCy0YHQutCw0Y8g0JzQsNGA0LjQvdCwINCQ0LvQuNC60L7QstC90LBcIixcImlkXCI6MTU0NCxcIm9mZmljZVwiOjE5NSxcImxvZ2luXCI6XCJwYWxhdG92c2theWFtYVwifSx7XCJuYW1lXCI6XCLQndC10YfQuNC/0L7RgNGD0Log0JzQsNGA0LjQvdCwINCS0LjQutGC0L7RgNC+0LLQvdCwXCIsXCJpZFwiOjE1NDIsXCJvZmZpY2VcIjoxOTUsXCJsb2dpblwiOlwibmVjaGlwb3J1a1wifSx7XCJuYW1lXCI6XCLQqNC80LXQu9GM0YbQu9C1INCi0LDRgtGM0Y/QvdCwINCS0LDQu9C10YDRjNC10LLQvdCwXCIsXCJpZFwiOjE1MTUsXCJvZmZpY2VcIjoxOTUsXCJsb2dpblwiOlwic2htZWxcIn0se1wibmFtZVwiOlwi0JrRg9C30L3QtdGG0L7QstCwINCS0LDQu9C10YDQuNGPINCh0LXRgNCz0LXQtdCy0L3QsFwiLFwiaWRcIjozNzkwLFwib2ZmaWNlXCI6MjA3LFwibG9naW5cIjpcImt1em5lY292YXZzXCJ9LHtcIm5hbWVcIjpcItCS0L7Qu9C+0LHRg9C10LIg0JjQstCw0L0g0JXQstCz0LXQvdGM0LXQstC40YdcIixcImlkXCI6Mzc1NyxcIm9mZmljZVwiOjIwNyxcImxvZ2luXCI6XCJ2b2xvYnVldmllXCJ9LHtcIm5hbWVcIjpcItCg0L7RgdGCINCQ0LvQtdC60YHQsNC90LTRgCDQrtGA0YzQtdCy0LjRh1wiLFwiaWRcIjozNzM3LFwib2ZmaWNlXCI6MjA3LFwibG9naW5cIjpcInJvc3RheXVcIn0se1wibmFtZVwiOlwi0JDQu9GB0L/QsNC10LIg0JTQsNC90LjRj9GAINCh0LDQs9GL0L3QtNGL0LrQvtCy0LjRh1wiLFwiaWRcIjozNDY2LFwib2ZmaWNlXCI6MjA3LFwibG9naW5cIjpcImFsc3BhZXZkc1wifSx7XCJuYW1lXCI6XCLQltC10LvRgtC+0LIg0JvQtdC+0L3QuNC0INCY0LPQvtGA0LXQstC40YdcIixcImlkXCI6MzM1NSxcIm9mZmljZVwiOjIwNyxcImxvZ2luXCI6XCJ6aGVsdG92bGlcIn0se1wibmFtZVwiOlwi0JrQsNGA0L/QtdC90LrQviDQntC60YHQsNC90LAg0KHQtdGA0LPQtdC10LLQvdCwXCIsXCJpZFwiOjM4NjUsXCJvZmZpY2VcIjoyMzIsXCJsb2dpblwiOlwia2FycGVua29vc1wifSx7XCJuYW1lXCI6XCLQodC+0YDQvtC60LjQvdCwINCe0LvRjNCz0LAg0J3QuNC60L7Qu9Cw0LXQstC90LBcIixcImlkXCI6Mzg0OCxcIm9mZmljZVwiOjIzMixcImxvZ2luXCI6XCJzb3Jva2luYW9uXCJ9LHtcIm5hbWVcIjpcItCa0YPQt9C40LrQvtCy0LAg0KLQsNGC0YzRj9C90LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjE4OTUsXCJvZmZpY2VcIjoyMzIsXCJsb2dpblwiOlwia3V6aWtvdmF0dlwifSx7XCJuYW1lXCI6XCLQn9C40YHRgtGD0L3QvtCy0LAg0JDQvdC20LXQu9C40LrQsCDQrtGA0YzQtdCy0L3QsFwiLFwiaWRcIjoxNzY3LFwib2ZmaWNlXCI6MjMyLFwibG9naW5cIjpcInBpc3R1bm92YWF5dVwifSx7XCJuYW1lXCI6XCLQo9GI0LDQutC+0LLQsCDQndCw0YLQsNC70YzRjyDQnNC40YXQsNC50LvQvtCy0L3QsFwiLFwiaWRcIjoxNTM2LFwib2ZmaWNlXCI6MjMyLFwibG9naW5cIjpcInVzaGFrb3ZhXCJ9LHtcIm5hbWVcIjpcItCV0YDQvNC+0LvQuNC90LAg0JXQu9C10L3QsCDQk9C10L3QvdCw0LTRjNC10LLQvdCwXCIsXCJpZFwiOjE1MzUsXCJvZmZpY2VcIjoyMzIsXCJsb2dpblwiOlwiZXJtb2xpbmFcIn0se1wibmFtZVwiOlwi0KDRj9Cx0YbQtdCyINCY0LLQsNC9INCY0LvRjNC40YdcIixcImlkXCI6Mzk1NixcIm9mZmljZVwiOjI4MyxcImxvZ2luXCI6XCJyeWFiY2V2aWlcIn0se1wibmFtZVwiOlwi0JTRg9Cx0YDQvtCy0LjQvSDQktC70LDQtNC40LzQuNGAINCQ0LvQtdC60YHQsNC90LTRgNC+0LLQuNGHXCIsXCJpZFwiOjM5NTUsXCJvZmZpY2VcIjoyODMsXCJsb2dpblwiOlwiZHVicm92aW52YVwifSx7XCJuYW1lXCI6XCLQktC00L7QstGG0L7QsiDQodC10YDQs9C10Lkg0JLQu9Cw0LTQuNC80LjRgNC+0LLQuNGHXCIsXCJpZFwiOjM5NTQsXCJvZmZpY2VcIjoyODMsXCJsb2dpblwiOlwidmRvdmNvdnN2XCJ9LHtcIm5hbWVcIjpcItCS0LjRgtGD0YjQutC40L3QsCDQrtC70LjRjyDQktGP0YfQtdGB0LvQsNCy0L7QstC90LBcIixcImlkXCI6Mzk1MyxcIm9mZmljZVwiOjI4MyxcImxvZ2luXCI6XCJ2aXR1c2hraW5heXV2XCJ9LHtcIm5hbWVcIjpcItCS0YvRhdC+0LTRhtC10LLQsCDQldC60LDRgtC10YDQuNC90LAg0JDQvdC00YDQtdC10LLQvdCwXCIsXCJpZFwiOjM5NTIsXCJvZmZpY2VcIjoyODMsXCJsb2dpblwiOlwidnlpa2hvZGNldmFlYVwifSx7XCJuYW1lXCI6XCLQltC10LvRgtC+0YPRgdC+0LLQsCDQkNGA0LjQvdCwINCh0LXRgNCz0LXQtdCy0L3QsFwiLFwiaWRcIjozOTUxLFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcInpoZWx0b3Vzb3ZhYXNcIn0se1wibmFtZVwiOlwi0JjQstCw0L3QuNC70L7QsiDQmNCy0LDQvSDQktCw0LvQtdGA0YzQtdCy0LjRh1wiLFwiaWRcIjozOTUwLFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcIml2YW5pbG92aXZcIn0se1wibmFtZVwiOlwi0JrQvtC80LHQsNGA0L7QsiDQodC10YDQs9C10Lkg0JDQu9C10LrRgdC10LXQstC40YdcIixcImlkXCI6Mzk0NCxcIm9mZmljZVwiOjI4MyxcImxvZ2luXCI6XCJrb21iYXJvdnNhXCJ9LHtcIm5hbWVcIjpcItCl0YDQsNC/0L7QsiDQldCy0LPQtdC90LjQuSDQldCy0LPQtdC90YzQtdCy0LjRh1wiLFwiaWRcIjozOTM4LFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcImtocmFwb3ZlZVwifSx7XCJuYW1lXCI6XCLQm9Cw0LHRg9GC0LjQvSDQkNC70LXQutGB0LDQvdC00YAg0JDQu9C10LrRgdC10LXQstC40YdcIixcImlkXCI6MzkzNyxcIm9mZmljZVwiOjI4MyxcImxvZ2luXCI6XCJsYWJ1dGluYWFcIn0se1wibmFtZVwiOlwi0JDQu9C40LXQsiDQnNGD0YDQsNC0INCc0LDRhdCw0YDQsNGCINC+0LPQu9GLXCIsXCJpZFwiOjM5MTEsXCJvZmZpY2VcIjoyODMsXCJsb2dpblwiOlwiYWxpZXZtbVwifSx7XCJuYW1lXCI6XCLQmtGA0LDQv9C40LLQuNC90LAg0J3QsNGC0LDQu9GM0Y8g0JDQu9C10LrRgdC10LXQstC90LBcIixcImlkXCI6MzkwNixcIm9mZmljZVwiOjI4MyxcImxvZ2luXCI6XCJrcmFwaXZpbmFuYVwifSx7XCJuYW1lXCI6XCLQn9C+0LTQutC+0LvQt9C40L0g0JLQu9Cw0LTQuNGB0LvQsNCyINCS0LvQsNC00LjQvNC40YDQvtCy0LjRh1wiLFwiaWRcIjozOTAwLFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcInBvZGtvbHppbnZ2XCJ9LHtcIm5hbWVcIjpcItCU0LjQu9GMINCb0LjQtNC40Y8g0JDQvdC00YDQtdC10LLQvdCwXCIsXCJpZFwiOjM4OTcsXCJvZmZpY2VcIjoyODMsXCJsb2dpblwiOlwiZGlsbGFcIn0se1wibmFtZVwiOlwi0KHQuNC70YzQvdGP0LPQuNC90LAg0JXQstCz0LXQvdC40Y8g0KHQtdGA0LPQtdC10LLQvdCwXCIsXCJpZFwiOjM4NzcsXCJvZmZpY2VcIjoyODMsXCJsb2dpblwiOlwic2lsbnlhZ2luYWVzXCJ9LHtcIm5hbWVcIjpcItCQ0L3QtNGA0LjRj9C90L7QstCwINCQ0LvQtdC60YHQsNC90LTRgNCwINCh0LXRgNCz0LXQtdCy0L3QsFwiLFwiaWRcIjozODczLFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcImFuZHJpeWFub3ZhYXNcIn0se1wibmFtZVwiOlwi0KHQsNCy0YfQtdC90LrQviDQndC40LrQvtC70LDQuSDQndC40LrQvtC70LDQtdCy0LjRh1wiLFwiaWRcIjozODU3LFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcInNhdmNoZW5rb25uXCJ9LHtcIm5hbWVcIjpcItCa0LDRgNCx0L7QstGB0LrQuNC5INCg0L7QtNC40L7QvSDQodC10YDQs9C10LXQstC40YdcIixcImlkXCI6Mzg1NixcIm9mZmljZVwiOjI4MyxcImxvZ2luXCI6XCJrYXJib3Zza2l5cnNcIn0se1wibmFtZVwiOlwi0KHQuNGC0L3QuNC60L7QsiDQkNC70LDQvSDQm9GO0LTQstC40LPQvtCy0LjRh1wiLFwiaWRcIjozODQ1LFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcInNpdG5pa292YWxcIn0se1wibmFtZVwiOlwi0JbRg9GH0LrQvtCyINCS0LvQsNC00LjQvNC40YAg0KHQtdGA0LPQtdC10LLQuNGHXCIsXCJpZFwiOjM4NDQsXCJvZmZpY2VcIjoyODMsXCJsb2dpblwiOlwiemh1Y2hrb3Z2c1wifSx7XCJuYW1lXCI6XCLQpNC10LTQvtGA0L7QsiDQrtGA0LjQuSDQktC40YLQsNC70YzQtdCy0LjRh1wiLFwiaWRcIjozODMzLFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcImZlZG9yb3Z5dXZcIn0se1wibmFtZVwiOlwi0KbRi9GA0LXQvdC00L7RgNC20YvQtdCyINCX0L7RgNC40LPRgtC+INCR0LDRgtC+0YDQvtCy0LjRh1wiLFwiaWRcIjozODE3LFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcImN5aXJlbmRvcnpoeWlldnpiXCJ9LHtcIm5hbWVcIjpcItCb0L7Qs9Cy0LjQvdC10L3QutC+INCQ0LvQtdC60YHQsNC90LTRgCDQndC40LrQvtC70LDQtdCy0LjRh1wiLFwiaWRcIjozNzYwLFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcImxvZ3ZpbmVua29hblwifSx7XCJuYW1lXCI6XCLQotC+0LrQsNGA0LXQsiDQlNC40LzQuNGC0YDQuNC5INCQ0LvQtdC60YHQsNC90LTRgNC+0LLQuNGHXCIsXCJpZFwiOjM3MTYsXCJvZmZpY2VcIjoyODMsXCJsb2dpblwiOlwidG9rYXJldmRhXCJ9LHtcIm5hbWVcIjpcItCg0YPQtNC10L3QutC+INCe0LvRjNCz0LAg0JLQu9Cw0LTQuNC80LjRgNC+0LLQvdCwXCIsXCJpZFwiOjM2OTcsXCJvZmZpY2VcIjoyODMsXCJsb2dpblwiOlwicnVkZW5rb292XCJ9LHtcIm5hbWVcIjpcItCn0LDRidC40L3QsCDQndC40L3QsCDQktC40LrRgtC+0YDQvtCy0L3QsFwiLFwiaWRcIjoyNDkyLFwib2ZmaWNlXCI6MjgzLFwibG9naW5cIjpcImNoYXNjaGluYW52XCJ9LHtcIm5hbWVcIjpcItCc0LjRidC10L3QutC+INCY0LLQsNC9INCS0LvQsNC00LjQvNC40YDQvtCy0LjRh1wiLFwiaWRcIjoyMTk4LFwib2ZmaWNlXCI6MjYyLFwibG9naW5cIjpcIm1pc2NoZW5rb2l2XCJ9XSxcIm9mZmljZVwiOlt7XCJuYW1lXCI6XCLQpNCw0YHQsNC00L3QsNGPXCIsXCJpZFwiOjU2fSx7XCJuYW1lXCI6XCLQl9C+0YDQs9C1LCAxXCIsXCJpZFwiOjYzfSx7XCJuYW1lXCI6XCLQkNCy0LjQsNGB0YLRgNC+0LjRgtC10LvQtdC5LCAxM1wiLFwiaWRcIjo2Nn0se1wibmFtZVwiOlwi0JEu0KXQvNC10LvRjNC90LjRhtC60L7Qs9C+IDVcIixcImlkXCI6Njd9LHtcIm5hbWVcIjpcItCe0YLQtNC10Lsg0LDRgNC10L3QtNGLXCIsXCJpZFwiOjY4fSx7XCJuYW1lXCI6XCLQodGC0LDQvdC40YHQu9Cw0LLRgdC60L7Qs9C+LCAyMFwiLFwiaWRcIjo2OX0se1wibmFtZVwiOlwi0KHQu9GD0LbQsdCwINC60LvQuNC10L3RgtGB0LrQvtCz0L4g0YHQtdGA0LLQuNGB0LBcIixcImlkXCI6NzB9LHtcIm5hbWVcIjpcItCa0YDQsNGB0L3Ri9C5INC/0YDQvtGB0L/QtdC60YIsIDUxXCIsXCJpZFwiOjcyfSx7XCJuYW1lXCI6XCLQlC7QmtC+0LLQsNC70YzRh9GD0LpcIixcImlkXCI6NzN9LHtcIm5hbWVcIjpcItCR0LXRgNC00YHQuiAyLdC+0Lkg0L7RgtC00LXQuyDQv9GA0L7QtNCw0LZcIixcImlkXCI6Nzh9LHtcIm5hbWVcIjpcItCh0YLQsNC90LjRgdC70LDQstGB0LrQvtCz0L4sIDJcIixcImlkXCI6ODN9LHtcIm5hbWVcIjpcItCa0YDQsNGB0L3Ri9C5INC/0YDQvtGB0L/QtdC60YIsIDUxLzIgMdCe0J9cIixcImlkXCI6ODR9LHtcIm5hbWVcIjpcItCT0L7Qs9C+0LvRjyAzOVwiLFwiaWRcIjo4NX0se1wibmFtZVwiOlwi0KHRgtC+0LvQtdGC0L7QstCwXCIsXCJpZFwiOjg2fSx7XCJuYW1lXCI6XCLQndC+0LLQvtGB0LjQsdC40YDRgdC60LDRjywgMjRcIixcImlkXCI6ODh9LHtcIm5hbWVcIjpcItCRLtCR0L7Qs9Cw0YLQutC+0LLQsFwiLFwiaWRcIjo4OX0se1wibmFtZVwiOlwi0JvQsNC30YPRgNC90LDRjywgNFwiLFwiaWRcIjo5NH0se1wibmFtZVwiOlwi0JLQsNGC0YPRgtC40L3QsCAzM1wiLFwiaWRcIjo5Nn0se1wibmFtZVwiOlwi0JzQvtGA0YHQutC+0Lkg0J/RgNC+0YHQv9C10LrRgiAzOFwiLFwiaWRcIjo5N30se1wibmFtZVwiOlwi0JHQu9GO0YXQtdGA0LAgMjhcIixcImlkXCI6OTh9LHtcIm5hbWVcIjpcIjkg0JPQstCw0YDQtNC10LnRgdC60L7QuSDQtNC40LLQuNC30LjQuFwiLFwiaWRcIjoxMDB9LHtcIm5hbWVcIjpcItCe0YLQtNC10Lsg0LrQvtC80LzQtdGA0YfQtdGB0LrQvtC5INC90LXQtNCy0LjQttC40LzQvtGB0YLQuFwiLFwiaWRcIjoxMDJ9LHtcIm5hbWVcIjpcItCb0LXQvdC40L3QsCA3M1wiLFwiaWRcIjoxMDd9LHtcIm5hbWVcIjpcItCa0YDQsNGB0L3Ri9C5INC/0YDQvtGB0L/QtdC60YIsIDgxXCIsXCJpZFwiOjEwOH0se1wibmFtZVwiOlwi0KDQsNGB0YHQstC10YLQvdCw0Y8gOFwiLFwiaWRcIjoxMTB9LHtcIm5hbWVcIjpcItCj0YfQuNGC0LXQu9GM0YHQutCw0Y8gMTlcIixcImlkXCI6MTExfSx7XCJuYW1lXCI6XCLQl9C+0YDQs9C1LCA3M1wiLFwiaWRcIjoxMTR9LHtcIm5hbWVcIjpcItCh0YLQsNC90LjRgdC70LDQstGB0LrQvtCz0L4sIDMxXCIsXCJpZFwiOjExNX0se1wibmFtZVwiOlwi0JrQvtC80YHQvtC80L7Qu9GM0YHQutCw0Y8sIDNcIixcImlkXCI6MTE2fSx7XCJuYW1lXCI6XCLQlNC30LXRgNC20LjQvdGB0LrQvtCz0L4sIDMwXCIsXCJpZFwiOjExN30se1wibmFtZVwiOlwi0JEu0KXQvNC10LvRjNC90LjRhtC60L7Qs9C+IDY4XCIsXCJpZFwiOjEyMn0se1wibmFtZVwiOlwi0KLRgNGD0LTQvtCy0LDRjywgMyAyLdC5INC+0YLQtNC10Lsg0L/RgNC+0LTQsNC2XCIsXCJpZFwiOjEyN30se1wibmFtZVwiOlwi0JzQsNGP0LrQvtCy0YHQutC+0LPQviwxN1wiLFwiaWRcIjoxMjl9LHtcIm5hbWVcIjpcItCe0YLQtNC10Lsg0L/RgNC+0LTQsNC2INC90L7QstC+0YHRgtGA0L7QtdC6XCIsXCJpZFwiOjEzM30se1wibmFtZVwiOlwi0JHQu9GO0YXQtdGA0LAgMTNcIixcImlkXCI6MTY2fSx7XCJuYW1lXCI6XCLQktGL0LHQvtGA0L3QsNGPXCIsXCJpZFwiOjE2OH0se1wibmFtZVwiOlwi0JrRgNCw0YHQvdGL0Lkg0L/RgNC+0YHQv9C10LrRgiwgMTg0IDHQntCfXCIsXCJpZFwiOjE4MX0se1wibmFtZVwiOlwi0JHQtdGA0LTRgdC6XCIsXCJpZFwiOjE5MX0se1wibmFtZVwiOlwi0JLQvtGB0YXQvtC0IDExXCIsXCJpZFwiOjE5NH0se1wibmFtZVwiOlwi0JPRgNC10LHQtdC90YnQuNC60L7QstCwIDkgMSDQntCfXCIsXCJpZFwiOjE5NX0se1wibmFtZVwiOlwi0JrRgNCw0YHQvdGL0Lkg0L/RgNC+0YHQv9C10LrRgiwgMTg0IDLQuSDQntCfXCIsXCJpZFwiOjIwN30se1wibmFtZVwiOlwi0JrRgNCw0YHQvdGL0Lkg0L/RgNC+0YHQv9C10LrRgiwgMTg0IDPQuSDQntCfXCIsXCJpZFwiOjIzMX0se1wibmFtZVwiOlwi0JrRgNCw0YHQvdGL0Lkg0L/RgNC+0YHQv9C10LrRgiwgMTg0IDTQuSDQntCfXCIsXCJpZFwiOjIzMn0se1wibmFtZVwiOlwi0JrRgNCw0YHQvdGL0Lkg0L/RgNC+0YHQv9C10LrRgiAxODRcIixcImlkXCI6MjgzfV0sXCJ2aWV3ZWRPZmZpY2VJZFwiOjU2fSk7fSxbXSk7dXNlRWZmZWN0KGZ1bmN0aW9uKCl7c2V0TG9hZGluZyhmYWxzZSk7fSxbZGF0YV0pO3JldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LG51bGwsIWxvYWRpbmcmJi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LG51bGwsLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoSGVhZGVyLHtvZmZpY2VMaXN0OmRhdGEhPT1udWxsJiZkYXRhIT09dm9pZCAwJiZkYXRhLm9mZmljZT9kYXRhPT09bnVsbHx8ZGF0YT09PXZvaWQgMD92b2lkIDA6ZGF0YS5vZmZpY2U6W10sY3VycmVudE9mZmljZUlkOmRhdGEudmlld2VkT2ZmaWNlSWQscmlnaHRzOmRhdGEhPT1udWxsJiZkYXRhIT09dm9pZCAwJiZkYXRhLnJpZ2h0cz9kYXRhPT09bnVsbHx8ZGF0YT09PXZvaWQgMD92b2lkIDA6ZGF0YS5yaWdodHM6Jyd9KSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZUxpc3Qse2xpc3Q6ZGF0YSE9PW51bGwmJmRhdGEhPT12b2lkIDAmJmRhdGEub2JqZWN0c0RhdGE/ZGF0YT09PW51bGx8fGRhdGE9PT12b2lkIDA/dm9pZCAwOmRhdGEub2JqZWN0c0RhdGE6W10sc3Vib3JkaW5hdGVkOmRhdGEhPT1udWxsJiZkYXRhIT09dm9pZCAwJiZkYXRhLnN1Ym9yZGluYXRlZD9kYXRhPT09bnVsbHx8ZGF0YT09PXZvaWQgMD92b2lkIDA6ZGF0YS5zdWJvcmRpbmF0ZWQ6W10scmlnaHRzOmRhdGEhPT1udWxsJiZkYXRhIT09dm9pZCAwJiZkYXRhLnJpZ2h0cz9kYXRhPT09bnVsbHx8ZGF0YT09PXZvaWQgMD92b2lkIDA6ZGF0YS5yaWdodHM6Jyd9KSkpO30iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSAncmVhY3QtZG9tL2NsaWVudCc7XG5pbXBvcnQgeyBBcHAgfSBmcm9tICcuL0FwcCc7XG52YXIgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKTtcbnZhciByb290ID0gY3JlYXRlUm9vdChjb250YWluZXIpO1xucm9vdC5yZW5kZXIoIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEFwcCwgbnVsbCkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///804\n')},679:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nvar reactIs = __webpack_require__(296);\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjc5LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanM/ZGE2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciByZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBtaXhpbnM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWVcbn07XG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICBjb21wYXJlOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5NZW1vXSA9IE1FTU9fU1RBVElDUztcblxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcbiAgLy8gUmVhY3QgdjE2LjExIGFuZCBiZWxvd1xuICBpZiAocmVhY3RJcy5pc01lbW8oY29tcG9uZW50KSkge1xuICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XG4gIH0gLy8gUmVhY3QgdjE2LjEyIGFuZCBhYm92ZVxuXG5cbiAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG4gICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgIH1cblxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///679\n")},103:(__unused_webpack_module,exports)=>{eval('/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?\nSymbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;\nfunction z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanM/MGE4YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///103\n')},296:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nif (true) {\n  module.exports = __webpack_require__(103);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk2LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/YWY3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///296\n")},448:(__unused_webpack_module,exports,__webpack_require__)=>{eval('/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(294),ca=__webpack_require__(840);function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+"Capture",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||"undefined"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n["checked","multiple","muted","selected"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy");Symbol.for("react.scope");Symbol.for("react.debug_trace_mode");\nvar Ia=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden");Symbol.for("react.cache");Symbol.for("react.tracing_marker");var Ja=Symbol.iterator;function Ka(a){if(null===a||"object"!==typeof a)return null;a=Ja&&a[Ja]||a["@@iterator"];return"function"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||""}return"\\n"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return"";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&"string"===typeof l.stack){for(var e=l.stack.split("\\n"),\nf=d.stack.split("\\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k="\\n"+e[g].replace(" at new "," at ");a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Ma(a):""}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return""}}\nfunction Qa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||"Context")+".Consumer";case Ba:return(a._context.displayName||"Context")+".Provider";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||"",a=""!==a?"ForwardRef("+a+")":"ForwardRef");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||"Memo";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return"Cache";case 9:return(b.displayName||"Context")+".Consumer";case 10:return(b._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=b.render,a=a.displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return b;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(b);case 8:return b===za?"StrictMode":"Mode";case 22:return"Offscreen";\ncase 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof b)return b.displayName||b.name||null;if("string"===typeof b)return b}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "string":case "undefined":return a;case "object":return a;default:return""}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}\nfunction Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,"checked",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?cb(a,b.type,c):b.hasOwnProperty("defaultValue")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}\nfunction cb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}\nfunction lb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?kb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}\nvar mb,nb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if("http://www.w3.org/2000/svg"!==a.namespaceURI||"innerHTML"in a)a.innerHTML=b;else{mb=mb||document.createElement("div");mb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(""+b).trim():b+"px"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=rb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if("object"!==typeof b.dangerouslySetInnerHTML||!("__html"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}});window.addEventListener("test",Mb,Mb);window.removeEventListener("test",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&"function"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");\nfunction Sc(a,b){switch(a){case "focusin":case "focusout":Lc=null;break;case "dragenter":case "dragleave":Mc=null;break;case "mouseover":case "mouseout":Nc=null;break;case "pointerover":case "pointerout":Oc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case "focusin":return Lc=Tc(Lc,a,b,c,d,e),!0;case "dragenter":return Mc=Tc(Mc,a,b,c,d,e),!0;case "mouseover":return Nc=Tc(Nc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case "cancel":case "click":case "close":case "contextmenu":case "copy":case "cut":case "auxclick":case "dblclick":case "dragend":case "dragstart":case "drop":case "focusin":case "focusout":case "input":case "invalid":case "keydown":case "keypress":case "keyup":case "mousedown":case "mouseup":case "paste":case "pause":case "play":case "pointercancel":case "pointerdown":case "pointerup":case "ratechange":case "reset":case "resize":case "seeked":case "submit":case "touchcancel":case "touchend":case "touchstart":case "volumechange":case "change":case "selectionchange":case "textInput":case "compositionstart":case "compositionend":case "compositionupdate":case "beforeblur":case "afterblur":case "beforeinput":case "blur":case "fullscreenchange":case "focus":case "hashchange":case "popstate":case "select":case "selectstart":return 1;case "drag":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "mousemove":case "mouseout":case "mouseover":case "pointermove":case "pointerout":case "pointerover":case "scroll":case "toggle":case "touchmove":case "wheel":case "mouseenter":case "mouseleave":case "pointerenter":case "pointerleave":return 4;\ncase "message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in\na)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",\nSpacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",\n119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===\na.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if("change"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};\nia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);\nha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));\nfa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));\nfunction nf(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+"__bubble";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){"selectionchange"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf("selectionchange",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":n="focus";k=Fd;break;case "focusout":n="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=\nDd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var t=0!==(b&4),J=!t&&"scroll"===a,x=t?null!==h?h+"Capture":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F="onMouseLeave";x="onMouseEnter";w="mouse";if("pointerout"===a||"pointerover"===a)t=Td,F="onPointerLeave",x="onPointerEnter",w="pointer";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+"leave",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+"enter",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);"focusout"===a&&(xa=h._wrapperState)&&\nxa.controlled&&"number"===h.type&&cb(h,"number",h.value)}xa=d?ue(d):window;switch(a){case "focusin":if(me(xa)||"true"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case "compositionstart":var ba="onCompositionStart";break b;case "compositionend":ba="onCompositionEnd";\nbreak b;case "compositionupdate":ba="onCompositionUpdate";break b}ba=void 0}else ie?ge(a,c)&&(ba="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(ba="onCompositionStart");ba&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==ba?"onCompositionEnd"===ba&&ie&&($a=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),\n0<d.length&&(e=new Ld("onBeforeInput","beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return("string"===typeof a?a:""+a).replace(xf,"\\n").replace(yf,"")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return"textarea"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff="function"===typeof setTimeout?setTimeout:void 0,Gf="function"===typeof clearTimeout?clearTimeout:void 0,Hf="function"===typeof Promise?Promise:void 0,Jf="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,"/$"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else"$"!==c&&"$?"!==c&&"$!"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if("$"===b||"$!"===b||"$?"===b)break;if("/$"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||"Unknown",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType="DELETED";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b="head"!==b&&"body"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if("function"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r="function"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;"object"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||(b=e.state,\n"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if("string"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,"[object Object]"===a?"object with keys {"+Object.keys(b).join(", ")+"}":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||"object"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if("string"===typeof b&&""!==b||"number"===typeof b)return b=xh(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c&&""!==c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if("string"===typeof d&&""!==d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if("function"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){"object"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if("object"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||"object"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return"string"===typeof f&&""!==f||"number"===typeof f?(f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return"function"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=":"+b+"R"+c;c=Uh++;0<c&&(b+="H"+c.toString(32));b+=":"}else c=Vh++,b=":"+b+"r"+c.toString(32)+":";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c="",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e="\\nError generating stack: "+f.message+"\\n"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni="function"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);"function"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if("function"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;q||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?("function"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.flags|=4194308)):\n("function"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m="function"===typeof y||"function"===typeof g.getSnapshotBeforeUpdate)||\n"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?("function"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),"function"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:"$!"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:"hidden",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:"hidden",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:"visible",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:"visible",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:"visible",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if("$!"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if("$?"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case "together":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "select":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ea.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&D("scroll",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case "dialog":D("cancel",d);D("close",d);break;case "iframe":case "object":case "embed":D("load",d);break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],d);break;case "source":D("error",d);break;case "img":case "image":case "link":D("error",\nd);D("load",d);break;case "details":D("toggle",d);break;case "input":Za(d,f);D("invalid",d);break;case "select":d._wrapperState={wasMultiple:!!f.multiple};D("invalid",d);break;case "textarea":hb(d,f),D("invalid",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=["children",""+h]):ea.hasOwnProperty(g)&&null!=h&&"onScroll"===g&&D("scroll",d)}switch(c){case "input":Va(d);db(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;"http://www.w3.org/1999/xhtml"===a&&(a=kb(c));"http://www.w3.org/1999/xhtml"===a?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\\x3c/script>",a=a.removeChild(a.firstChild)):\n"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case "dialog":D("cancel",a);D("close",a);e=d;break;case "iframe":case "object":case "embed":D("load",a);e=d;break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case "source":D("error",a);e=d;break;case "img":case "image":case "link":D("error",\na);D("load",a);e=d;break;case "details":D("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);D("invalid",a);break;case "option":e=d;break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D("invalid",a);break;case "textarea":hb(a,d);e=gb(a,d);D("invalid",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?sb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):"children"===f?"string"===typeof k?("textarea"!==\nc||""!==k)&&ob(a,k):"number"===typeof k&&ob(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ea.hasOwnProperty(f)?null!=k&&"onScroll"===f&&D("scroll",a):null!=k&&ta(a,f,k,g))}switch(c){case "input":Va(a);db(a,d,!1);break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:"function"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case "button":case "input":case "select":case "textarea":d=!!d.autoFocus;break a;case "img":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&"hidden"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj="function"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if("function"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if("selectionStart"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent="":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}"function"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&"function"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,"function"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,"")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{"input"===h&&"radio"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];"style"===m?sb(e,q):"dangerouslySetInnerHTML"===m?nb(e,q):"children"===m?ob(e,q):ta(e,m,q,l)}switch(h){case "input":bb(e,f);break;case "textarea":ib(e,f);break;case "select":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:"",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if("function"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty("display")?k.display:null,h.style.display=\nrb("display",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?"":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,""),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case "button":case "input":case "select":case "textarea":k.autoFocus&&c.focus();break;case "img":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if("function"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&("function"===typeof w.getDerivedStateFromError||null!==u&&"function"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&"function"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if("function"===typeof b.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;"object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if("function"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bj(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,""));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll="function"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if("function"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,"",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if("function"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,"",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if("function"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case "input":bb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+\'][type="radio"]\');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d="",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(",");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f="",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version="18.2.0-next-9e3b772b8-20220608";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///448\n')},745:(__unused_webpack_module,exports,__webpack_require__)=>{eval("var __webpack_unused_export__;\n\n\nvar m = __webpack_require__(935);\nif (true) {\n  exports.s = m.createRoot;\n  __webpack_unused_export__ = m.hydrateRoot;\n} else { var i; }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQ1LmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9jbGllbnQuanM/MTFiMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBtID0gcmVxdWlyZSgncmVhY3QtZG9tJyk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBleHBvcnRzLmNyZWF0ZVJvb3QgPSBtLmNyZWF0ZVJvb3Q7XG4gIGV4cG9ydHMuaHlkcmF0ZVJvb3QgPSBtLmh5ZHJhdGVSb290O1xufSBlbHNlIHtcbiAgdmFyIGkgPSBtLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1xuICBleHBvcnRzLmNyZWF0ZVJvb3QgPSBmdW5jdGlvbihjLCBvKSB7XG4gICAgaS51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSB0cnVlO1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gbS5jcmVhdGVSb290KGMsIG8pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IGZhbHNlO1xuICAgIH1cbiAgfTtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIGgsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmh5ZHJhdGVSb290KGMsIGgsIG8pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IGZhbHNlO1xuICAgIH1cbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///745\n")},935:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {}\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(448);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTM1LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215b2JqZWN0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcz84YmM4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///935\n")},921:(__unused_webpack_module,exports)=>{eval('var __webpack_unused_export__;\n/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\nif("function"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x("react.element");c=x("react.portal");d=x("react.fragment");e=x("react.strict_mode");f=x("react.profiler");g=x("react.provider");h=x("react.context");k=x("react.forward_ref");l=x("react.suspense");m=x("react.suspense_list");n=x("react.memo");p=x("react.lazy");q=x("react.block");r=x("react.server.block");u=x("react.fundamental");v=x("react.debug_trace_mode");w=x("react.legacy_hidden")}\nfunction y(a){if("object"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;__webpack_unused_export__=h;__webpack_unused_export__=z;__webpack_unused_export__=A;__webpack_unused_export__=B;__webpack_unused_export__=C;__webpack_unused_export__=D;__webpack_unused_export__=E;__webpack_unused_export__=F;__webpack_unused_export__=G;__webpack_unused_export__=H;\n__webpack_unused_export__=I;__webpack_unused_export__=function(){return!1};__webpack_unused_export__=function(){return!1};__webpack_unused_export__=function(a){return y(a)===h};__webpack_unused_export__=function(a){return y(a)===g};__webpack_unused_export__=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===b};__webpack_unused_export__=function(a){return y(a)===k};__webpack_unused_export__=function(a){return y(a)===d};__webpack_unused_export__=function(a){return y(a)===p};__webpack_unused_export__=function(a){return y(a)===n};\n__webpack_unused_export__=function(a){return y(a)===c};__webpack_unused_export__=function(a){return y(a)===f};__webpack_unused_export__=function(a){return y(a)===e};__webpack_unused_export__=function(a){return y(a)===l};__webpack_unused_export__=function(a){return"string"===typeof a||"function"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||"object"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\n__webpack_unused_export__=y;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIxLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzP2E5M2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjJcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYj02MDEwMyxjPTYwMTA2LGQ9NjAxMDcsZT02MDEwOCxmPTYwMTE0LGc9NjAxMDksaD02MDExMCxrPTYwMTEyLGw9NjAxMTMsbT02MDEyMCxuPTYwMTE1LHA9NjAxMTYscT02MDEyMSxyPTYwMTIyLHU9NjAxMTcsdj02MDEyOSx3PTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIHg9U3ltYm9sLmZvcjtiPXgoXCJyZWFjdC5lbGVtZW50XCIpO2M9eChcInJlYWN0LnBvcnRhbFwiKTtkPXgoXCJyZWFjdC5mcmFnbWVudFwiKTtlPXgoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTtmPXgoXCJyZWFjdC5wcm9maWxlclwiKTtnPXgoXCJyZWFjdC5wcm92aWRlclwiKTtoPXgoXCJyZWFjdC5jb250ZXh0XCIpO2s9eChcInJlYWN0LmZvcndhcmRfcmVmXCIpO2w9eChcInJlYWN0LnN1c3BlbnNlXCIpO209eChcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik7bj14KFwicmVhY3QubWVtb1wiKTtwPXgoXCJyZWFjdC5sYXp5XCIpO3E9eChcInJlYWN0LmJsb2NrXCIpO3I9eChcInJlYWN0LnNlcnZlci5ibG9ja1wiKTt1PXgoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTt2PXgoXCJyZWFjdC5kZWJ1Z190cmFjZV9tb2RlXCIpO3c9eChcInJlYWN0LmxlZ2FjeV9oaWRkZW5cIil9XG5mdW5jdGlvbiB5KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB0PWEuJCR0eXBlb2Y7c3dpdGNoKHQpe2Nhc2UgYjpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBkOmNhc2UgZjpjYXNlIGU6Y2FzZSBsOmNhc2UgbTpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBoOmNhc2UgazpjYXNlIHA6Y2FzZSBuOmNhc2UgZzpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB0fX1jYXNlIGM6cmV0dXJuIHR9fX12YXIgej1nLEE9YixCPWssQz1kLEQ9cCxFPW4sRj1jLEc9ZixIPWUsST1sO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWg7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9ejtleHBvcnRzLkVsZW1lbnQ9QTtleHBvcnRzLkZvcndhcmRSZWY9QjtleHBvcnRzLkZyYWdtZW50PUM7ZXhwb3J0cy5MYXp5PUQ7ZXhwb3J0cy5NZW1vPUU7ZXhwb3J0cy5Qb3J0YWw9RjtleHBvcnRzLlByb2ZpbGVyPUc7ZXhwb3J0cy5TdHJpY3RNb2RlPUg7XG5leHBvcnRzLlN1c3BlbnNlPUk7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbigpe3JldHVybiExfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9ZnVuY3Rpb24oKXtyZXR1cm4hMX07ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWh9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1nfTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Yn07ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1rfTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1kfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PXB9O2V4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09bn07XG5leHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09Y307ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09Zn07ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1lfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1sfTtleHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZHx8YT09PWZ8fGE9PT12fHxhPT09ZXx8YT09PWx8fGE9PT1tfHxhPT09d3x8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT1wfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PWd8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PXV8fGEuJCR0eXBlb2Y9PT1xfHxhWzBdPT09cik/ITA6ITF9O1xuZXhwb3J0cy50eXBlT2Y9eTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///921\n')},864:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nif (true) {\n  /* unused reexport */ __webpack_require__(921);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODY0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcz80Y2VjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///864\n")},251:(__unused_webpack_module,exports,__webpack_require__)=>{eval('var __webpack_unused_export__;\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar f=__webpack_require__(294),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=""+g);void 0!==a.key&&(e=""+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}__webpack_unused_export__=l;exports.jsx=q;exports.jsxs=q;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUxLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXlvYmplY3QvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LWpzeC1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzP2QzMWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBmPXJlcXVpcmUoXCJyZWFjdFwiKSxrPVN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpLGw9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLG09T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxuPWYuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQuUmVhY3RDdXJyZW50T3duZXIscD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gcShjLGEsZyl7dmFyIGIsZD17fSxlPW51bGwsaD1udWxsO3ZvaWQgMCE9PWcmJihlPVwiXCIrZyk7dm9pZCAwIT09YS5rZXkmJihlPVwiXCIrYS5rZXkpO3ZvaWQgMCE9PWEucmVmJiYoaD1hLnJlZik7Zm9yKGIgaW4gYSltLmNhbGwoYSxiKSYmIXAuaGFzT3duUHJvcGVydHkoYikmJihkW2JdPWFbYl0pO2lmKGMmJmMuZGVmYXVsdFByb3BzKWZvcihiIGluIGE9Yy5kZWZhdWx0UHJvcHMsYSl2b2lkIDA9PT1kW2JdJiYoZFtiXT1hW2JdKTtyZXR1cm57JCR0eXBlb2Y6ayx0eXBlOmMsa2V5OmUscmVmOmgscHJvcHM6ZCxfb3duZXI6bi5jdXJyZW50fX1leHBvcnRzLkZyYWdtZW50PWw7ZXhwb3J0cy5qc3g9cTtleHBvcnRzLmpzeHM9cTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///251\n')},408:(__unused_webpack_module,exports)=>{eval('/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;function A(a){if(null===a||"object"!==typeof a)return null;a=z&&a[z]||a["@@iterator"];return"function"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,"","",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version="18.2.0";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///408\n')},294:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nif (true) {\n  module.exports = __webpack_require__(408);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcz9hYjViIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///294\n")},893:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nif (true) {\n  module.exports = __webpack_require__(251);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODkzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtcnVudGltZS5qcz85Y2E1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtcnVudGltZS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///893\n")},53:(__unused_webpack_module,exports)=>{eval('/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"===typeof setTimeout?setTimeout:null,E="function"===typeof clearTimeout?clearTimeout:null,F="undefined"!==typeof setImmediate?setImmediate:null;\n"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if("function"===typeof F)S=function(){F(R)};else if("undefined"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcz9mYjA3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7ZnVuY3Rpb24gZihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7MDxjOyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYoMDxnKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBoKGEpe3JldHVybiAwPT09YS5sZW5ndGg/bnVsbDphWzBdfWZ1bmN0aW9uIGsoYSl7aWYoMD09PWEubGVuZ3RoKXJldHVybiBudWxsO3ZhciBiPWFbMF0sYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoLHc9ZT4+PjE7ZDx3Oyl7dmFyIG09MiooZCsxKS0xLEM9YVttXSxuPW0rMSx4PWFbbl07aWYoMD5nKEMsYykpbjxlJiYwPmcoeCxDKT8oYVtkXT14LGFbbl09YyxkPW4pOihhW2RdPUMsYVttXT1jLGQ9bSk7ZWxzZSBpZihuPGUmJjA+Zyh4LGMpKWFbZF09eCxhW25dPWMsZD1uO2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9XG5mdW5jdGlvbiBnKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfWlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX12YXIgcj1bXSx0PVtdLHU9MSx2PW51bGwseT0zLHo9ITEsQT0hMSxCPSExLEQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDpudWxsLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6bnVsbCxGPVwidW5kZWZpbmVkXCIhPT10eXBlb2Ygc2V0SW1tZWRpYXRlP3NldEltbWVkaWF0ZTpudWxsO1xuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBuYXZpZ2F0b3ImJnZvaWQgMCE9PW5hdmlnYXRvci5zY2hlZHVsaW5nJiZ2b2lkIDAhPT1uYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZyYmbmF2aWdhdG9yLnNjaGVkdWxpbmcuaXNJbnB1dFBlbmRpbmcuYmluZChuYXZpZ2F0b3Iuc2NoZWR1bGluZyk7ZnVuY3Rpb24gRyhhKXtmb3IodmFyIGI9aCh0KTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKWsodCk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlrKHQpLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsZihyLGIpO2Vsc2UgYnJlYWs7Yj1oKHQpfX1mdW5jdGlvbiBIKGEpe0I9ITE7RyhhKTtpZighQSlpZihudWxsIT09aChyKSlBPSEwLEkoSik7ZWxzZXt2YXIgYj1oKHQpO251bGwhPT1iJiZLKEgsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gSihhLGIpe0E9ITE7QiYmKEI9ITEsRShMKSxMPS0xKTt6PSEwO3ZhciBjPXk7dHJ5e0coYik7Zm9yKHY9aChyKTtudWxsIT09diYmKCEodi5leHBpcmF0aW9uVGltZT5iKXx8YSYmIU0oKSk7KXt2YXIgZD12LmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2LmNhbGxiYWNrPW51bGw7eT12LnByaW9yaXR5TGV2ZWw7dmFyIGU9ZCh2LmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/di5jYWxsYmFjaz1lOnY9PT1oKHIpJiZrKHIpO0coYil9ZWxzZSBrKHIpO3Y9aChyKX1pZihudWxsIT09dil2YXIgdz0hMDtlbHNle3ZhciBtPWgodCk7bnVsbCE9PW0mJksoSCxtLnN0YXJ0VGltZS1iKTt3PSExfXJldHVybiB3fWZpbmFsbHl7dj1udWxsLHk9Yyx6PSExfX12YXIgTj0hMSxPPW51bGwsTD0tMSxQPTUsUT0tMTtcbmZ1bmN0aW9uIE0oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKS1RPFA/ITE6ITB9ZnVuY3Rpb24gUigpe2lmKG51bGwhPT1PKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1E9YTt2YXIgYj0hMDt0cnl7Yj1PKCEwLGEpfWZpbmFsbHl7Yj9TKCk6KE49ITEsTz1udWxsKX19ZWxzZSBOPSExfXZhciBTO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBGKVM9ZnVuY3Rpb24oKXtGKFIpfTtlbHNlIGlmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9UjtTPWZ1bmN0aW9uKCl7VS5wb3N0TWVzc2FnZShudWxsKX19ZWxzZSBTPWZ1bmN0aW9uKCl7RChSLDApfTtmdW5jdGlvbiBJKGEpe089YTtOfHwoTj0hMCxTKCkpfWZ1bmN0aW9uIEsoYSxiKXtMPUQoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX1cbmV4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtBfHx6fHwoQT0hMCxJKEopKX07XG5leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpQPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIHl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gaChyKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaCh5KXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj15fXZhciBjPXk7eT1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7eT1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307XG5leHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz15O3k9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e3k9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDp1KyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxmKHQsYSksbnVsbD09PWgocikmJmE9PT1oKHQpJiYoQj8oRShMKSxMPS0xKTpCPSEwLEsoSCxjLWQpKSk6KGEuc29ydEluZGV4PWUsZihyLGEpLEF8fHp8fChBPSEwLEkoSikpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPU07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9eTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz15O3k9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7eT1jfX19O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///53\n')},840:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nif (true) {\n  module.exports = __webpack_require__(53);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teW9iamVjdC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanM/NDAyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///840\n")}},__webpack_module_cache__={},leafPrototypes,getProto;function __webpack_require__(c){var l=__webpack_module_cache__[c];if(void 0!==l)return l.exports;var n=__webpack_module_cache__[c]={exports:{}};return __webpack_modules__[c](n,n.exports,__webpack_require__),n.exports}getProto=Object.getPrototypeOf?c=>Object.getPrototypeOf(c):c=>c.__proto__,__webpack_require__.t=function(c,l){if(1&l&&(c=this(c)),8&l)return c;if("object"==typeof c&&c){if(4&l&&c.__esModule)return c;if(16&l&&"function"==typeof c.then)return c}var n=Object.create(null);__webpack_require__.r(n);var e={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var t=2&l&&c;"object"==typeof t&&!~leafPrototypes.indexOf(t);t=getProto(t))Object.getOwnPropertyNames(t).forEach((l=>e[l]=()=>c[l]));return e.default=()=>c,__webpack_require__.d(n,e),n},__webpack_require__.d=(c,l)=>{for(var n in l)__webpack_require__.o(l,n)&&!__webpack_require__.o(c,n)&&Object.defineProperty(c,n,{enumerable:!0,get:l[n]})},__webpack_require__.o=(c,l)=>Object.prototype.hasOwnProperty.call(c,l),__webpack_require__.r=c=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(804)})();